<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libsoup-soup-ssl">
<refmeta>
<refentrytitle>soup-ssl</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBSOUP Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>soup-ssl</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



enum        <link linkend="SoupSSLType">SoupSSLType</link>;
<link linkend="gpointer">gpointer</link>    <link linkend="soup-ssl-get-client-credentials">soup_ssl_get_client_credentials</link> (const <link linkend="char">char</link> *ca_file);
<link linkend="void">void</link>        <link linkend="soup-ssl-free-client-credentials">soup_ssl_free_client_credentials</link>
                                            (<link linkend="gpointer">gpointer</link> creds);
<link linkend="gpointer">gpointer</link>    <link linkend="soup-ssl-get-server-credentials">soup_ssl_get_server_credentials</link> (const <link linkend="char">char</link> *cert_file,
                                             const <link linkend="char">char</link> *key_file);
<link linkend="void">void</link>        <link linkend="soup-ssl-free-server-credentials">soup_ssl_free_server_credentials</link>
                                            (<link linkend="gpointer">gpointer</link> creds);
<link linkend="GIOChannel">GIOChannel</link>* <link linkend="soup-ssl-wrap-iochannel">soup_ssl_wrap_iochannel</link>         (<link linkend="GIOChannel">GIOChannel</link> *sock,
                                             <link linkend="SoupSSLType">SoupSSLType</link> type,
                                             const <link linkend="char">char</link> *remote_host,
                                             <link linkend="gpointer">gpointer</link> credentials);
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="SoupSSLType"/>enum SoupSSLType</title>
<indexterm><primary>SoupSSLType</primary></indexterm><programlisting>typedef enum {
	SOUP_SSL_TYPE_CLIENT = 0,
	SOUP_SSL_TYPE_SERVER
} SoupSSLType;
</programlisting>
<para>
What kind of SSL connection this is.
</para><variablelist role="enum">
<varlistentry>
<term><literal>SOUP_SSL_TYPE_CLIENT</literal></term>
<listitem><simpara>the client side of an SSL connection
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>SOUP_SSL_TYPE_SERVER</literal></term>
<listitem><simpara>the server side of an SSL connection

</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-ssl-get-client-credentials"/>soup_ssl_get_client_credentials ()</title>
<indexterm><primary>soup_ssl_get_client_credentials</primary></indexterm><programlisting><link linkend="gpointer">gpointer</link>    soup_ssl_get_client_credentials (const <link linkend="char">char</link> *ca_file);</programlisting>
<para>
Creates an opaque client credentials object which can later be
passed to <link linkend="soup-ssl-wrap-iochannel"><function>soup_ssl_wrap_iochannel()</function></link>.
</para>
<para>
If <parameter>ca_file</parameter> is non-<literal>NULL</literal>, any certificate received from a server
must be signed by one of the CAs in the file, or an error will
be returned.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ca_file</parameter>&nbsp;:</term>
<listitem><simpara> path to a file containing X509-encoded Certificate
Authority certificates.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the client credentials, which must be freed with
<link linkend="soup-ssl-free-client-credentials"><function>soup_ssl_free_client_credentials()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-ssl-free-client-credentials"/>soup_ssl_free_client_credentials ()</title>
<indexterm><primary>soup_ssl_free_client_credentials</primary></indexterm><programlisting><link linkend="void">void</link>        soup_ssl_free_client_credentials
                                            (<link linkend="gpointer">gpointer</link> creds);</programlisting>
<para>
Frees <parameter>client_creds</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>creds</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-ssl-get-server-credentials"/>soup_ssl_get_server_credentials ()</title>
<indexterm><primary>soup_ssl_get_server_credentials</primary></indexterm><programlisting><link linkend="gpointer">gpointer</link>    soup_ssl_get_server_credentials (const <link linkend="char">char</link> *cert_file,
                                             const <link linkend="char">char</link> *key_file);</programlisting>
<para>
Creates an opaque server credentials object which can later be
passed to <link linkend="soup-ssl-wrap-iochannel"><function>soup_ssl_wrap_iochannel()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cert_file</parameter>&nbsp;:</term>
<listitem><simpara> path to a file containing an X509-encoded server
certificate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key_file</parameter>&nbsp;:</term>
<listitem><simpara> path to a file containing an X509-encoded key for
<parameter>cert_file</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the server credentials, which must be freed with
<link linkend="soup-ssl-free-server-credentials"><function>soup_ssl_free_server_credentials()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-ssl-free-server-credentials"/>soup_ssl_free_server_credentials ()</title>
<indexterm><primary>soup_ssl_free_server_credentials</primary></indexterm><programlisting><link linkend="void">void</link>        soup_ssl_free_server_credentials
                                            (<link linkend="gpointer">gpointer</link> creds);</programlisting>
<para>
Frees <parameter>server_creds</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>creds</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="soup-ssl-wrap-iochannel"/>soup_ssl_wrap_iochannel ()</title>
<indexterm><primary>soup_ssl_wrap_iochannel</primary></indexterm><programlisting><link linkend="GIOChannel">GIOChannel</link>* soup_ssl_wrap_iochannel         (<link linkend="GIOChannel">GIOChannel</link> *sock,
                                             <link linkend="SoupSSLType">SoupSSLType</link> type,
                                             const <link linkend="char">char</link> *remote_host,
                                             <link linkend="gpointer">gpointer</link> credentials);</programlisting>
<para>
This attempts to wrap a new <link linkend="GIOChannel"><type>GIOChannel</type></link> around <parameter>sock</parameter> that
will SSL-encrypt/decrypt all traffic through it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sock</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GIOChannel"><type>GIOChannel</type></link> wrapping a TCP socket.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> whether this is a client or server socket
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>remote_host</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>credentials</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> an SSL-encrypting <link linkend="GIOChannel"><type>GIOChannel</type></link>, or <literal>NULL</literal> on
failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
