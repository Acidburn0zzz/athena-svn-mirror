.TH "dexec.h" 3 "7 Apr 2004" "Version 0.6" "libdaemon" \" -*- nroff -*-
.ad l
.nh
.SH NAME
dexec.h \- Contains a robust API for running sub processes with STDOUT and STDERR redirected to syslog.  

.SH SYNOPSIS
.br
.PP
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBDAEMON_EXEC_AVAILABLE\fP   1"
.br
.RI "\fIIf this variable is defined to 1 iff \fBdaemon_pid_file_kill_wait()\fP is supported. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBdaemon_exec\fP (const char *dir, int *ret, const char *prog,...)"
.br
.RI "\fIRun the specified executable with the specified arguments in the specified directory and return the return value of the program in the specified pointer. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Contains a robust API for running sub processes with STDOUT and STDERR redirected to syslog. 


.PP
Definition in file \fBdexec.h\fP.
.SH "Define Documentation"
.PP 
.SS "#define DAEMON_EXEC_AVAILABLE   1"
.PP
If this variable is defined to 1 iff \fBdaemon_pid_file_kill_wait()\fP is supported. Definition at line 31 of file dexec.h.
.SH "Function Documentation"
.PP 
.SS "int daemon_exec (const char * dir, int * ret, const char * prog,  ...)"
.PP
Run the specified executable with the specified arguments in the specified directory and return the return value of the program in the specified pointer. The calling process is blocked until the child finishes and all child output (either STDOUT or STDIN) has been written to syslog.
.PP
\fBParameters:\fP
.RS 4
\fIdir\fP Working directory for the process. 
.br
\fIret\fP A pointer to an integer to write the return value of the program to. 
.br
\fIprog\fP The path to the executable 
.br
\fI...\fP The arguments to be passed to the program, followed by a (char *) NULL 
.RE
.PP
\fBReturns:\fP
.RS 4
Nonzero on failure, zero on success 
.RE
.PP

.PP
\fBExamples: \fP
.in +1c
\fBtestd.c\fP.
.SH "Author"
.PP 
Generated automatically by Doxygen for libdaemon from the source code.
