<refentry id="bonobo-activation-Utilities">
<refmeta>
<refentrytitle>Utilities</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>BONOBO-ACTIVATION Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Utilities</refname><refpurpose>Random misc utilities to manipulate Bonobo_ServerInfo structures.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>

#include &lt;bonobo-activation/bonobo-activation.h&gt;


enum        <link linkend="Bonobo-ActivationPropertyType">Bonobo_ActivationPropertyType</link>;
<link linkend="Bonobo-ActivationProperty">Bonobo_ActivationProperty</link>* <link linkend="bonobo-server-info-prop-find">bonobo_server_info_prop_find</link>
                                            (<link linkend="Bonobo-ServerInfo">Bonobo_ServerInfo</link> *server,
                                             const char *prop_name);
<link linkend="Bonobo-ActivationID">Bonobo_ActivationID</link> <link linkend="bonobo-activation-info-stringify">bonobo_activation_info_stringify</link>
                                            (const <link linkend="BonoboActivationInfo">BonoboActivationInfo</link> *actinfo);
<link linkend="BonoboActivationInfo">BonoboActivationInfo</link>* <link linkend="bonobo-activation-servinfo-to-actinfo">bonobo_activation_servinfo_to_actinfo</link>
                                            (const <link linkend="Bonobo-ServerInfo">Bonobo_ServerInfo</link> *servinfo);
<link linkend="BonoboActivationInfo">BonoboActivationInfo</link>* <link linkend="bonobo-activation-id-parse">bonobo_activation_id_parse</link>
                                            (const <link linkend="CORBA-char">CORBA_char</link> *actid);
<link linkend="BonoboActivationInfo">BonoboActivationInfo</link>* <link linkend="bonobo-activation-info-new">bonobo_activation_info_new</link>
                                            (void);
void        <link linkend="bonobo-activation-info-free">bonobo_activation_info_free</link>     (<link linkend="BonoboActivationInfo">BonoboActivationInfo</link> *actinfo);
<link linkend="Bonobo-ServerInfo">Bonobo_ServerInfo</link>* <link linkend="Bonobo-ServerInfo-duplicate">Bonobo_ServerInfo_duplicate</link>
                                            (const <link linkend="Bonobo-ServerInfo">Bonobo_ServerInfo</link> *original);
</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="Bonobo-ActivationPropertyType">enum Bonobo_ActivationPropertyType</title>
<programlisting>   typedef enum
   {
      Bonobo_ACTIVATION_P_STRING,
      Bonobo_ACTIVATION_P_NUMBER,
      Bonobo_ACTIVATION_P_BOOLEAN,
      Bonobo_ACTIVATION_P_STRINGV
   }
   Bonobo_ActivationPropertyType;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="bonobo-server-info-prop-find">bonobo_server_info_prop_find ()</title>
<programlisting><link linkend="Bonobo-ActivationProperty">Bonobo_ActivationProperty</link>* bonobo_server_info_prop_find
                                            (<link linkend="Bonobo-ServerInfo">Bonobo_ServerInfo</link> *server,
                                             const char *prop_name);</programlisting>
<para>
Tries to find a server with the given property. Returns
NULL if not found.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>server</parameter>&nbsp;:</entry>
<entry> the server where to seek the data.
</entry></row>
<row><entry align="right"><parameter>prop_name</parameter>&nbsp;:</entry>
<entry> the data to seek in the server.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> a pointer to the <literal>Bonobo_ActivationProperty</literal> structure.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-activation-info-stringify">bonobo_activation_info_stringify ()</title>
<programlisting><link linkend="Bonobo-ActivationID">Bonobo_ActivationID</link> bonobo_activation_info_stringify
                                            (const <link linkend="BonoboActivationInfo">BonoboActivationInfo</link> *actinfo);</programlisting>
<para>
Serializes <parameter>actinfo</parameter> into a char *. Should be freed with <link linkend="g-free">g_free</link>().</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>actinfo</parameter>&nbsp;:</entry>
<entry> the <literal>BonoboActivationInfo</literal> to flatten.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the serialized version of <parameter>actinfo</parameter>.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-activation-servinfo-to-actinfo">bonobo_activation_servinfo_to_actinfo ()</title>
<programlisting><link linkend="BonoboActivationInfo">BonoboActivationInfo</link>* bonobo_activation_servinfo_to_actinfo
                                            (const <link linkend="Bonobo-ServerInfo">Bonobo_ServerInfo</link> *servinfo);</programlisting>
<para>
This function converts a <literal>Bonobo_ServerInfo</literal> structure to a
<literal>BonoboActivationInfo</literal> structure. The returned structure should
be freed with bonobo_activation_info_free.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>servinfo</parameter>&nbsp;:</entry>
<entry> An array of <literal>Bonobo_ServerInfo</literal> structures.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> a newly allocated initialized <literal>BonoboActivationInfo</literal> structure.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-activation-id-parse">bonobo_activation_id_parse ()</title>
<programlisting><link linkend="BonoboActivationInfo">BonoboActivationInfo</link>* bonobo_activation_id_parse
                                            (const <link linkend="CORBA-char">CORBA_char</link> *actid);</programlisting>
<para>
Returns a pointer to a newly allocated <literal>BonoboActivationInfo</literal>
structure (to be freed with bonobo_activation_info_free) initialized 
with the data of <parameter>actid</parameter>.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>actid</parameter>&nbsp;:</entry>
<entry> the activation id structure.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the <literal>BonoboActivationInfo</literal> corresponding to <parameter>actid</parameter>.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-activation-info-new">bonobo_activation_info_new ()</title>
<programlisting><link linkend="BonoboActivationInfo">BonoboActivationInfo</link>* bonobo_activation_info_new
                                            (void);</programlisting>
<para>
This function allocates a <literal>BonoboActicationInfo</literal> structure and returns it.
Should NOT be called from outside of this code.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> a newly allocated non-initialized <literal>BonoboActicationInfo</literal> structure.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-activation-info-free">bonobo_activation_info_free ()</title>
<programlisting>void        bonobo_activation_info_free     (<link linkend="BonoboActivationInfo">BonoboActivationInfo</link> *actinfo);</programlisting>
<para>
Frees <parameter>actinfo</parameter>.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>actinfo</parameter>&nbsp;:</entry>
<entry> the <literal>BonoboActivationInfo</literal> structure to free.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="Bonobo-ServerInfo-duplicate">Bonobo_ServerInfo_duplicate ()</title>
<programlisting><link linkend="Bonobo-ServerInfo">Bonobo_ServerInfo</link>* Bonobo_ServerInfo_duplicate
                                            (const <link linkend="Bonobo-ServerInfo">Bonobo_ServerInfo</link> *original);</programlisting>
<para>
The return value should befreed with <link linkend="CORBA-free">CORBA_free</link>().</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>original</parameter>&nbsp;:</entry>
<entry> <literal>ServerInfo</literal> to copy.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> a newly allocated copy of <parameter>original</parameter>.
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
