# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AWK = @AWK@
BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CPP = @CPP@
DATADIRNAME = @DATADIRNAME@
DEPDIR = @DEPDIR@
GENCAT = @GENCAT@
GLIBC21 = @GLIBC21@
GMSGFMT = @GMSGFMT@
HAVE_LIB = @HAVE_LIB@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLBISON = @INTLBISON@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIB = @LIB@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LOCALEDIR = @LOCALEDIR@
LTLIB = @LTLIB@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
MKINSTALLDIRS = @MKINSTALLDIRS@
PACKAGE = @PACKAGE@
POSUB = @POSUB@
RANLIB = @RANLIB@
STRIP = @STRIP@
USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@
USE_NLS = @USE_NLS@
VERSION = 1
YACC = @YACC@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
DEFS = -D_GNU_SOURCE -DHAVE_CONFIG_H -Wall
AM_CFLAGS = -Wall -Werror -DOBJDIR=\"$(shell pwd)\"

LINT = splint

INCLUDES = -I$(srcdir) -I$(top_srcdir)/libelf -I$(top_srcdir)/lib -I..
PACKAGE_VERSION = @PACKAGE_VERSION@

#lib_LIBRARIES = libebl.a
modules = i386 sh mips x86_64 ia64 alpha arm sparc
noinst_LIBRARIES = libebl.a libebl_pic.a \
		   libebl_i386_pic.a libebl_sh_pic.a libebl_mips_pic.a \
		   libebl_x86_64_pic.a libebl_ia64_pic.a libebl_alpha_pic.a \
		   libebl_arm_pic.a libebl_sparc_pic.a

noinst_PROGRAMS = $(noinst_LIBRARIES:_pic.a=.so)


#euincludedir = $(includedir)/elfutils
#euinclude_HEADERS = libebl.h elf-knowledge.h
gen_SOURCES = eblopenbackend.c eblclosebackend.c eblstrtab.c \
	      eblreloctypename.c eblsegmenttypename.c \
	      eblsectiontypename.c eblmachineflagname.c \
	      eblsymboltypename.c ebldynamictagname.c eblsectionname.c \
	      eblobjecttypename.c eblsymbolbindingname.c \
	      eblbackendname.c eblshflagscombine.c eblwstrtab.c \
	      eblgstrtab.c eblosabiname.c eblmachineflagcheck.c \
	      eblreloctypecheck.c ebldynamictagcheck.c \
	      eblcorenotetypename.c eblobjnotetypename.c \
	      eblcorenote.c eblobjnote.c ebldebugscnp.c


libebl_a_SOURCES = $(gen_SOURCES)

libebl_pic_a_SOURCES = 
am_libebl_pic_a_OBJECTS = $(gen_SOURCES:.c=.os)

#
# XXX Use --enable-new-dtags as soon as ld.so handles DT_RUNPATH when
# using dlopen correctly.
#	      -Wl,--rpath,\$$ORIGIN/elfutils \
#
libebl_so_SOURCES = 

i386_SRCS = i386_init.c i386_destr.c i386_symbol.c i386_corenote.c
libebl_i386_pic_a_SOURCES = 
am_libebl_i386_pic_a_OBJECTS = $(i386_SRCS:.c=.os)

libebl_i386_so_SOURCES = 

sh_SRCS = sh_init.c sh_destr.c sh_symbol.c
libebl_sh_pic_a_SOURCES = 
am_libebl_sh_pic_a_OBJECTS = $(sh_SRCS:.c=.os)

libebl_sh_so_SOURCES = 

mips_SRCS = mips_init.c mips_destr.c mips_symbol.c
libebl_mips_pic_a_SOURCES = 
am_libebl_mips_pic_a_OBJECTS = $(mips_SRCS:.c=.os)

libebl_mips_so_SOURCES = 

x86_64_SRCS = x86_64_init.c x86_64_destr.c x86_64_symbol.c
libebl_x86_64_pic_a_SOURCES = 
am_libebl_x86_64_pic_a_OBJECTS = $(x86_64_SRCS:.c=.os)

libebl_x86_64_so_SOURCES = 

ia64_SRCS = ia64_init.c ia64_destr.c ia64_symbol.c
libebl_ia64_pic_a_SOURCES = 
am_libebl_ia64_pic_a_OBJECTS = $(ia64_SRCS:.c=.os)

libebl_ia64_so_SOURCES = 

alpha_SRCS = alpha_init.c alpha_destr.c alpha_symbol.c
libebl_alpha_pic_a_SOURCES = 
am_libebl_alpha_pic_a_OBJECTS = $(alpha_SRCS:.c=.os)

libebl_alpha_so_SOURCES = 

arm_SRCS = arm_init.c arm_destr.c arm_symbol.c
libebl_arm_pic_a_SOURCES = 
am_libebl_arm_pic_a_OBJECTS = $(arm_SRCS:.c=.os)

libebl_arm_so_SOURCES = 

sparc_SRCS = sparc_init.c sparc_destr.c sparc_symbol.c
libebl_sparc_pic_a_SOURCES = 
am_libebl_sparc_pic_a_OBJECTS = $(sparc_SRCS:.c=.os)

libebl_sparc_so_SOURCES = 

#	rm -f $(DESTDIR)$(libdir)/libebl-$(PACKAGE_VERSION).so
#	rm -f $(DESTDIR)$(libdir)/libebl.so.$(VERSION)
#	rm -f $(DESTDIR)$(libdir)/libebl.so
#	for m in $(modules); do \
#	  rm -f $(DESTDIR)$(libdir)/elfutils/libebl_$${m}-$(PACKAGE_VERSION).so; \
#	  rm -f $(DESTDIR)$(libdir)/elfutils/libebl_$${m}.so; \
#	done
#	rmdir --ignore-fail-on-non-empty $(DESTDIR)$(libdir)/elfutils
#	rmdir --ignore-fail-on-non-empty $(DESTDIR)$(includedir)/elfutils
noinst_HEADERS = libeblP.h $(noinst_LIBRARIES:%_pic.a=%.h) \
	libebl.h elf-knowledge.h


EXTRA_DIST = libebl.map $(noinst_LIBRARIES:%_pic.a=%.map) \
	     $(foreach m,$(modules),$($(m)_SRCS))


CLEANFILES = $(am_libebl_pic_a_OBJECTS) \
	     $(foreach m,$(modules),$(am_libebl_$(m)_pic_a_OBJECTS))

subdir = libebl
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libebl_a_AR = $(AR) cru
libebl_a_LIBADD =
am__objects_1 = eblopenbackend.$(OBJEXT) eblclosebackend.$(OBJEXT) \
	eblstrtab.$(OBJEXT) eblreloctypename.$(OBJEXT) \
	eblsegmenttypename.$(OBJEXT) eblsectiontypename.$(OBJEXT) \
	eblmachineflagname.$(OBJEXT) eblsymboltypename.$(OBJEXT) \
	ebldynamictagname.$(OBJEXT) eblsectionname.$(OBJEXT) \
	eblobjecttypename.$(OBJEXT) eblsymbolbindingname.$(OBJEXT) \
	eblbackendname.$(OBJEXT) eblshflagscombine.$(OBJEXT) \
	eblwstrtab.$(OBJEXT) eblgstrtab.$(OBJEXT) \
	eblosabiname.$(OBJEXT) eblmachineflagcheck.$(OBJEXT) \
	eblreloctypecheck.$(OBJEXT) ebldynamictagcheck.$(OBJEXT) \
	eblcorenotetypename.$(OBJEXT) eblobjnotetypename.$(OBJEXT) \
	eblcorenote.$(OBJEXT) eblobjnote.$(OBJEXT) \
	ebldebugscnp.$(OBJEXT)
am_libebl_a_OBJECTS = $(am__objects_1)
libebl_a_OBJECTS = $(am_libebl_a_OBJECTS)
libebl_alpha_pic_a_AR = $(AR) cru
libebl_alpha_pic_a_LIBADD =
libebl_alpha_pic_a_OBJECTS = $(am_libebl_alpha_pic_a_OBJECTS)
libebl_arm_pic_a_AR = $(AR) cru
libebl_arm_pic_a_LIBADD =
libebl_arm_pic_a_OBJECTS = $(am_libebl_arm_pic_a_OBJECTS)
libebl_i386_pic_a_AR = $(AR) cru
libebl_i386_pic_a_LIBADD =
libebl_i386_pic_a_OBJECTS = $(am_libebl_i386_pic_a_OBJECTS)
libebl_ia64_pic_a_AR = $(AR) cru
libebl_ia64_pic_a_LIBADD =
libebl_ia64_pic_a_OBJECTS = $(am_libebl_ia64_pic_a_OBJECTS)
libebl_mips_pic_a_AR = $(AR) cru
libebl_mips_pic_a_LIBADD =
libebl_mips_pic_a_OBJECTS = $(am_libebl_mips_pic_a_OBJECTS)
libebl_pic_a_AR = $(AR) cru
libebl_pic_a_LIBADD =
libebl_pic_a_OBJECTS = $(am_libebl_pic_a_OBJECTS)
libebl_sh_pic_a_AR = $(AR) cru
libebl_sh_pic_a_LIBADD =
libebl_sh_pic_a_OBJECTS = $(am_libebl_sh_pic_a_OBJECTS)
libebl_sparc_pic_a_AR = $(AR) cru
libebl_sparc_pic_a_LIBADD =
libebl_sparc_pic_a_OBJECTS = $(am_libebl_sparc_pic_a_OBJECTS)
libebl_x86_64_pic_a_AR = $(AR) cru
libebl_x86_64_pic_a_LIBADD =
libebl_x86_64_pic_a_OBJECTS = $(am_libebl_x86_64_pic_a_OBJECTS)
noinst_PROGRAMS = libebl.a$(EXEEXT) libebl.so$(EXEEXT) \
	libebl_i386.so$(EXEEXT) libebl_sh.so$(EXEEXT) \
	libebl_mips.so$(EXEEXT) libebl_x86_64.so$(EXEEXT) \
	libebl_ia64.so$(EXEEXT) libebl_alpha.so$(EXEEXT) \
	libebl_arm.so$(EXEEXT) libebl_sparc.so$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

libebl_a_LDADD = $(LDADD)
libebl_a_DEPENDENCIES =
libebl_a_LDFLAGS =
am_libebl_so_OBJECTS =
libebl_so_OBJECTS = $(am_libebl_so_OBJECTS)
libebl_so_LDADD = $(LDADD)
libebl_so_DEPENDENCIES =
libebl_so_LDFLAGS =
am_libebl_alpha_so_OBJECTS =
libebl_alpha_so_OBJECTS = $(am_libebl_alpha_so_OBJECTS)
libebl_alpha_so_LDADD = $(LDADD)
libebl_alpha_so_DEPENDENCIES =
libebl_alpha_so_LDFLAGS =
am_libebl_arm_so_OBJECTS =
libebl_arm_so_OBJECTS = $(am_libebl_arm_so_OBJECTS)
libebl_arm_so_LDADD = $(LDADD)
libebl_arm_so_DEPENDENCIES =
libebl_arm_so_LDFLAGS =
am_libebl_i386_so_OBJECTS =
libebl_i386_so_OBJECTS = $(am_libebl_i386_so_OBJECTS)
libebl_i386_so_LDADD = $(LDADD)
libebl_i386_so_DEPENDENCIES =
libebl_i386_so_LDFLAGS =
am_libebl_ia64_so_OBJECTS =
libebl_ia64_so_OBJECTS = $(am_libebl_ia64_so_OBJECTS)
libebl_ia64_so_LDADD = $(LDADD)
libebl_ia64_so_DEPENDENCIES =
libebl_ia64_so_LDFLAGS =
am_libebl_mips_so_OBJECTS =
libebl_mips_so_OBJECTS = $(am_libebl_mips_so_OBJECTS)
libebl_mips_so_LDADD = $(LDADD)
libebl_mips_so_DEPENDENCIES =
libebl_mips_so_LDFLAGS =
am_libebl_sh_so_OBJECTS =
libebl_sh_so_OBJECTS = $(am_libebl_sh_so_OBJECTS)
libebl_sh_so_LDADD = $(LDADD)
libebl_sh_so_DEPENDENCIES =
libebl_sh_so_LDFLAGS =
am_libebl_sparc_so_OBJECTS =
libebl_sparc_so_OBJECTS = $(am_libebl_sparc_so_OBJECTS)
libebl_sparc_so_LDADD = $(LDADD)
libebl_sparc_so_DEPENDENCIES =
libebl_sparc_so_LDFLAGS =
am_libebl_x86_64_so_OBJECTS =
libebl_x86_64_so_OBJECTS = $(am_libebl_x86_64_so_OBJECTS)
libebl_x86_64_so_LDADD = $(LDADD)
libebl_x86_64_so_DEPENDENCIES =
libebl_x86_64_so_LDFLAGS =
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/eblbackendname.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblclosebackend.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblcorenote.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblcorenotetypename.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ebldebugscnp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ebldynamictagcheck.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ebldynamictagname.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblgstrtab.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblmachineflagcheck.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblmachineflagname.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblobjecttypename.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblobjnote.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblobjnotetypename.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblopenbackend.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblosabiname.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblreloctypecheck.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblreloctypename.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblsectionname.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblsectiontypename.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblsegmenttypename.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblshflagscombine.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblstrtab.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblsymbolbindingname.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblsymboltypename.Po \
@AMDEP_TRUE@	./$(DEPDIR)/eblwstrtab.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
DIST_SOURCES = $(libebl_a_SOURCES) $(libebl_alpha_pic_a_SOURCES) \
	$(libebl_arm_pic_a_SOURCES) $(libebl_i386_pic_a_SOURCES) \
	$(libebl_ia64_pic_a_SOURCES) $(libebl_mips_pic_a_SOURCES) \
	$(libebl_pic_a_SOURCES) $(libebl_sh_pic_a_SOURCES) \
	$(libebl_sparc_pic_a_SOURCES) $(libebl_x86_64_pic_a_SOURCES) \
	$(libebl_so_SOURCES) $(libebl_alpha_so_SOURCES) \
	$(libebl_arm_so_SOURCES) $(libebl_i386_so_SOURCES) \
	$(libebl_ia64_so_SOURCES) $(libebl_mips_so_SOURCES) \
	$(libebl_sh_so_SOURCES) $(libebl_sparc_so_SOURCES) \
	$(libebl_x86_64_so_SOURCES)
HEADERS = $(noinst_HEADERS)

DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in
SOURCES = $(libebl_a_SOURCES) $(libebl_alpha_pic_a_SOURCES) $(libebl_arm_pic_a_SOURCES) $(libebl_i386_pic_a_SOURCES) $(libebl_ia64_pic_a_SOURCES) $(libebl_mips_pic_a_SOURCES) $(libebl_pic_a_SOURCES) $(libebl_sh_pic_a_SOURCES) $(libebl_sparc_pic_a_SOURCES) $(libebl_x86_64_pic_a_SOURCES) $(libebl_so_SOURCES) $(libebl_alpha_so_SOURCES) $(libebl_arm_so_SOURCES) $(libebl_i386_so_SOURCES) $(libebl_ia64_so_SOURCES) $(libebl_mips_so_SOURCES) $(libebl_sh_so_SOURCES) $(libebl_sparc_so_SOURCES) $(libebl_x86_64_so_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnits  libebl/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libebl.a: $(libebl_a_OBJECTS) $(libebl_a_DEPENDENCIES) 
	-rm -f libebl.a
	$(libebl_a_AR) libebl.a $(libebl_a_OBJECTS) $(libebl_a_LIBADD)
	$(RANLIB) libebl.a
libebl_alpha_pic.a: $(libebl_alpha_pic_a_OBJECTS) $(libebl_alpha_pic_a_DEPENDENCIES) 
	-rm -f libebl_alpha_pic.a
	$(libebl_alpha_pic_a_AR) libebl_alpha_pic.a $(libebl_alpha_pic_a_OBJECTS) $(libebl_alpha_pic_a_LIBADD)
	$(RANLIB) libebl_alpha_pic.a
libebl_arm_pic.a: $(libebl_arm_pic_a_OBJECTS) $(libebl_arm_pic_a_DEPENDENCIES) 
	-rm -f libebl_arm_pic.a
	$(libebl_arm_pic_a_AR) libebl_arm_pic.a $(libebl_arm_pic_a_OBJECTS) $(libebl_arm_pic_a_LIBADD)
	$(RANLIB) libebl_arm_pic.a
libebl_i386_pic.a: $(libebl_i386_pic_a_OBJECTS) $(libebl_i386_pic_a_DEPENDENCIES) 
	-rm -f libebl_i386_pic.a
	$(libebl_i386_pic_a_AR) libebl_i386_pic.a $(libebl_i386_pic_a_OBJECTS) $(libebl_i386_pic_a_LIBADD)
	$(RANLIB) libebl_i386_pic.a
libebl_ia64_pic.a: $(libebl_ia64_pic_a_OBJECTS) $(libebl_ia64_pic_a_DEPENDENCIES) 
	-rm -f libebl_ia64_pic.a
	$(libebl_ia64_pic_a_AR) libebl_ia64_pic.a $(libebl_ia64_pic_a_OBJECTS) $(libebl_ia64_pic_a_LIBADD)
	$(RANLIB) libebl_ia64_pic.a
libebl_mips_pic.a: $(libebl_mips_pic_a_OBJECTS) $(libebl_mips_pic_a_DEPENDENCIES) 
	-rm -f libebl_mips_pic.a
	$(libebl_mips_pic_a_AR) libebl_mips_pic.a $(libebl_mips_pic_a_OBJECTS) $(libebl_mips_pic_a_LIBADD)
	$(RANLIB) libebl_mips_pic.a
libebl_pic.a: $(libebl_pic_a_OBJECTS) $(libebl_pic_a_DEPENDENCIES) 
	-rm -f libebl_pic.a
	$(libebl_pic_a_AR) libebl_pic.a $(libebl_pic_a_OBJECTS) $(libebl_pic_a_LIBADD)
	$(RANLIB) libebl_pic.a
libebl_sh_pic.a: $(libebl_sh_pic_a_OBJECTS) $(libebl_sh_pic_a_DEPENDENCIES) 
	-rm -f libebl_sh_pic.a
	$(libebl_sh_pic_a_AR) libebl_sh_pic.a $(libebl_sh_pic_a_OBJECTS) $(libebl_sh_pic_a_LIBADD)
	$(RANLIB) libebl_sh_pic.a
libebl_sparc_pic.a: $(libebl_sparc_pic_a_OBJECTS) $(libebl_sparc_pic_a_DEPENDENCIES) 
	-rm -f libebl_sparc_pic.a
	$(libebl_sparc_pic_a_AR) libebl_sparc_pic.a $(libebl_sparc_pic_a_OBJECTS) $(libebl_sparc_pic_a_LIBADD)
	$(RANLIB) libebl_sparc_pic.a
libebl_x86_64_pic.a: $(libebl_x86_64_pic_a_OBJECTS) $(libebl_x86_64_pic_a_DEPENDENCIES) 
	-rm -f libebl_x86_64_pic.a
	$(libebl_x86_64_pic_a_AR) libebl_x86_64_pic.a $(libebl_x86_64_pic_a_OBJECTS) $(libebl_x86_64_pic_a_LIBADD)
	$(RANLIB) libebl_x86_64_pic.a

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblbackendname.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblclosebackend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblcorenote.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblcorenotetypename.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ebldebugscnp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ebldynamictagcheck.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ebldynamictagname.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblgstrtab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblmachineflagcheck.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblmachineflagname.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblobjecttypename.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblobjnote.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblobjnotetypename.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblopenbackend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblosabiname.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblreloctypecheck.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblreloctypename.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblsectionname.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblsectiontypename.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblsegmenttypename.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblshflagscombine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblstrtab.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblsymbolbindingname.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblsymboltypename.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eblwstrtab.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`
CCDEPMODE = @CCDEPMODE@
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)

installdirs:
install-exec: install-exec-am
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES clean-noinstPROGRAMS distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic tags uninstall \
	uninstall-am uninstall-info-am

libebl.so: libebl_pic.a libebl.map
	$(CC) -shared -o $@ -Wl,--whole-archive,$<,--no-whole-archive \
	      -Wl,--version-script,$(srcdir)/libebl.map,--no-undefined \
	      -Wl,--soname,$@.$(VERSION) \
	      ../libelf/libelf.so -ldl
	ln -fs $@ $@.$(VERSION)
libebl_i386.so: libebl_i386_pic.a libebl_i386.map
	$(CC) -shared -o $@ -Wl,--whole-archive,$<,--no-whole-archive \
	      -Wl,--version-script,$(srcdir)/libebl_i386.map,--no-undefined
libebl_sh.so: libebl_sh_pic.a libebl_sh.map
	$(CC) -shared -o $@ -Wl,--whole-archive,$<,--no-whole-archive \
	      -Wl,--version-script,$(srcdir)/libebl_sh.map,--no-undefined
libebl_mips.so: libebl_mips_pic.a libebl_mips.map
	$(CC) -shared -o $@ -Wl,--whole-archive,$<,--no-whole-archive \
	      -Wl,--version-script,$(srcdir)/libebl_mips.map,--no-undefined
libebl_x86_64.so: libebl_x86_64_pic.a libebl_x86_64.map
	$(CC) -shared -o $@ -Wl,--whole-archive,$<,--no-whole-archive \
	      -Wl,--version-script,$(srcdir)/libebl_x86_64.map,--no-undefined
libebl_ia64.so: libebl_ia64_pic.a libebl_ia64.map
	$(CC) -shared -o $@ -Wl,--whole-archive,$<,--no-whole-archive \
	      -Wl,--version-script,$(srcdir)/libebl_ia64.map,--no-undefined
libebl_alpha.so: libebl_alpha_pic.a libebl_alpha.map
	$(CC) -shared -o $@ -Wl,--whole-archive,$<,--no-whole-archive \
	      -Wl,--version-script,$(srcdir)/libebl_alpha.map,--no-undefined
libebl_arm.so: libebl_arm_pic.a libebl_arm.map
	$(CC) -shared -o $@ -Wl,--whole-archive,$<,--no-whole-archive \
	      -Wl,--version-script,$(srcdir)/libebl_arm.map,--no-undefined
libebl_sparc.so: libebl_sparc_pic.a libebl_sparc.map
	$(CC) -shared -o $@ -Wl,--whole-archive,$<,--no-whole-archive \
	      -Wl,--version-script,$(srcdir)/libebl_sparc.map,--no-undefined

%.os: %.c %.o
	if $(COMPILE) -c -o $@ -fpic -DPIC -DSHARED -MT $@ -MD -MP \
	  -MF "$(DEPDIR)/$*.Tpo" `test -f '$<' || echo '$(srcdir)/'`$<; \
	then cat "$(DEPDIR)/$*.Tpo" >> "$(DEPDIR)/$*.Po"; \
	     rm -f "$(DEPDIR)/$*.Tpo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi

install: install-am libebl.so
#	$(mkinstalldirs) $(DESTDIR)$(libdir)
#	$(INSTALL_PROGRAM) libebl.so $(DESTDIR)$(libdir)/libebl-$(PACKAGE_VERSION).so
#	ln -fs libebl-$(PACKAGE_VERSION).so $(DESTDIR)$(libdir)/libebl.so.$(VERSION)
#	ln -fs libebl.so.$(VERSION) $(DESTDIR)$(libdir)/libebl.so
#	$(mkinstalldirs) $(DESTDIR)$(libdir)/elfutils
#	for m in $(modules); do \
#	  $(INSTALL_PROGRAM) libebl_$${m}.so $(DESTDIR)$(libdir)/elfutils/libebl_$${m}-$(PACKAGE_VERSION).so; \
#	  ln -fs libebl_$${m}-$(PACKAGE_VERSION).so $(DESTDIR)$(libdir)/elfutils/libebl_$${m}.so; \
#	done

uninstall: uninstall-am

.PSEUDO: lint
lint:
	$(LINT) $(DEFS) $(INCLUDES) $(GCC_INCLUDE) \
		$(addprefix $(srcdir)/,$(libebl_a_SOURCES))
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
