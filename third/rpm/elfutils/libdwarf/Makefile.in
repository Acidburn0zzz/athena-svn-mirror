# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AWK = @AWK@
BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CPP = @CPP@
DATADIRNAME = @DATADIRNAME@
DEPDIR = @DEPDIR@
GENCAT = @GENCAT@
GLIBC21 = @GLIBC21@
GMSGFMT = @GMSGFMT@
HAVE_LIB = @HAVE_LIB@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLBISON = @INTLBISON@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIB = @LIB@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LOCALEDIR = @LOCALEDIR@
LTLIB = @LTLIB@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
MKINSTALLDIRS = @MKINSTALLDIRS@
PACKAGE = @PACKAGE@
POSUB = @POSUB@
RANLIB = @RANLIB@
STRIP = @STRIP@
USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@
USE_NLS = @USE_NLS@
VERSION = 1
YACC = @YACC@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
DEFS = -D_GNU_SOURCE -DHAVE_CONFIG_H -DDWARF_DEBUG
AM_CFLAGS = -Wall -Werror
INCLUDES = -I. -I$(srcdir) -I$(srcdir)/../libelf -I.. -I$(srcdir)/../lib

LINT = splint

#lib_LIBRARIES = libdwarf.a
noinst_LIBRARIES = libdwarf.a libdwarf_pic.a
noinst_PROGRAMS = $(noinst_LIBRARIES:_pic.a=.so)

#include_HEADERS = dwarf.h
#euincludedir = ${includedir}/elfutils
#euinclude_HEADERS = libdwarf.h
libdwarf_a_SOURCES = dwarf_init.c dwarf_elf_init.c dwarf_get_elf.c \
		     dwarf_finish.c \
		     dwarf_next_cu_header.c dwarf_siblingof.c dwarf_child.c \
		     dwarf_offdie.c \
		     dwarf_tag.c dwarf_dieoffset.c dwarf_die_CU_offset.c \
		     dwarf_diename.c dwarf_attrlist.c dwarf_hasattr.c \
		     dwarf_attr.c dwarf_lowpc.c dwarf_highpc.c \
		     dwarf_getconstant.c \
		     dwarf_bytesize.c dwarf_bitsize.c dwarf_bitoffset.c \
		     dwarf_srclang.c dwarf_whatattr.c dwarf_arrayorder.c \
		     dwarf_hasform.c dwarf_whatform.c dwarf_formref.c \
		     dwarf_global_formref.c dwarf_formaddr.c \
		     dwarf_formstring.c dwarf_loclist.c \
		     dwarf_formflag.c dwarf_formudata.c dwarf_formsdata.c \
		     dwarf_formblock.c \
		     dwarf_srclines.c dwarf_srcfiles.c \
		     dwarf_linebeginstatement.c dwarf_lineendsequence.c \
		     dwarf_lineno.c dwarf_lineaddr.c dwarf_lineoff.c \
		     dwarf_linesrc.c dwarf_lineblock.c \
		     dwarf_lineprologueend.c dwarf_lineepiloguebegin.c \
		     dwarf_get_globals.c dwarf_globname.c \
		     dwarf_global_die_offset.c dwarf_global_cu_offset.c \
		     dwarf_global_name_offsets.c \
		     dwarf_error.c dwarf_errno.c dwarf_errmsg.c \
		     dwarf_abbrev_hash.c dwarf_getabbrev.c dwarf_form.c \
		     dwarf_find_macro_value_start.c dwarf_get_str.c \
		     dwarf_get_aranges.c dwarf_get_arange.c \
		     dwarf_get_cu_die_offset.c dwarf_get_arange_info.c \
		     dwarf_get_fde_list_eh.c dwarf_get_cie_of_fde.c \
		     dwarf_get_cie_info.c dwarf_get_fde_instr_bytes.c \
		     dwarf_get_fde_range.c dwarf_get_fde_n.c \
		     dwarf_get_fde_at_pc.c  \
		     dwarf_get_loclist_entry.c \
		     dwarf_get_abbrev.c dwarf_get_abbrev_tag.c \
		     dwarf_get_abbrev_code.c dwarf_get_abbrev_children_flag.c\
		     dwarf_get_abbrev_entry.c \
		     dwarf_get_address_size.c \
		     dwarf_seterrhand.c dwarf_seterrarg.c \
		     dwarf_dealloc.c


libdwarf_pic_a_SOURCES = 
am_libdwarf_pic_a_OBJECTS = $(libdwarf_a_SOURCES:.c=.os)

libdwarf_so_SOURCES = 

#	rm -f $(DESTDIR)$(libdir)/libdwarf-$(PACKAGE_VERSION).so
#	rm -f $(DESTDIR)$(libdir)/libdwarf.so.$(VERSION)
#	rm -f $(DESTDIR)$(libdir)/libdwarf.so
#	rmdir --ignore-fail-on-non-empty $(DESTDIR)$(includedir)/elfutils
noinst_HEADERS = libdwarfP.h memory-access.h dwarf_abbrev_hash.h \
		dwarf.h libdwarf.h


EXTRA_DIST = AVAILABLE libdwarf.map

CLEANFILES = $(am_libdwarf_pic_a_OBJECTS)
subdir = libdwarf
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libdwarf_a_AR = $(AR) cru
libdwarf_a_LIBADD =
am_libdwarf_a_OBJECTS = dwarf_init.$(OBJEXT) dwarf_elf_init.$(OBJEXT) \
	dwarf_get_elf.$(OBJEXT) dwarf_finish.$(OBJEXT) \
	dwarf_next_cu_header.$(OBJEXT) dwarf_siblingof.$(OBJEXT) \
	dwarf_child.$(OBJEXT) dwarf_offdie.$(OBJEXT) \
	dwarf_tag.$(OBJEXT) dwarf_dieoffset.$(OBJEXT) \
	dwarf_die_CU_offset.$(OBJEXT) dwarf_diename.$(OBJEXT) \
	dwarf_attrlist.$(OBJEXT) dwarf_hasattr.$(OBJEXT) \
	dwarf_attr.$(OBJEXT) dwarf_lowpc.$(OBJEXT) \
	dwarf_highpc.$(OBJEXT) dwarf_getconstant.$(OBJEXT) \
	dwarf_bytesize.$(OBJEXT) dwarf_bitsize.$(OBJEXT) \
	dwarf_bitoffset.$(OBJEXT) dwarf_srclang.$(OBJEXT) \
	dwarf_whatattr.$(OBJEXT) dwarf_arrayorder.$(OBJEXT) \
	dwarf_hasform.$(OBJEXT) dwarf_whatform.$(OBJEXT) \
	dwarf_formref.$(OBJEXT) dwarf_global_formref.$(OBJEXT) \
	dwarf_formaddr.$(OBJEXT) dwarf_formstring.$(OBJEXT) \
	dwarf_loclist.$(OBJEXT) dwarf_formflag.$(OBJEXT) \
	dwarf_formudata.$(OBJEXT) dwarf_formsdata.$(OBJEXT) \
	dwarf_formblock.$(OBJEXT) dwarf_srclines.$(OBJEXT) \
	dwarf_srcfiles.$(OBJEXT) dwarf_linebeginstatement.$(OBJEXT) \
	dwarf_lineendsequence.$(OBJEXT) dwarf_lineno.$(OBJEXT) \
	dwarf_lineaddr.$(OBJEXT) dwarf_lineoff.$(OBJEXT) \
	dwarf_linesrc.$(OBJEXT) dwarf_lineblock.$(OBJEXT) \
	dwarf_lineprologueend.$(OBJEXT) \
	dwarf_lineepiloguebegin.$(OBJEXT) dwarf_get_globals.$(OBJEXT) \
	dwarf_globname.$(OBJEXT) dwarf_global_die_offset.$(OBJEXT) \
	dwarf_global_cu_offset.$(OBJEXT) \
	dwarf_global_name_offsets.$(OBJEXT) dwarf_error.$(OBJEXT) \
	dwarf_errno.$(OBJEXT) dwarf_errmsg.$(OBJEXT) \
	dwarf_abbrev_hash.$(OBJEXT) dwarf_getabbrev.$(OBJEXT) \
	dwarf_form.$(OBJEXT) dwarf_find_macro_value_start.$(OBJEXT) \
	dwarf_get_str.$(OBJEXT) dwarf_get_aranges.$(OBJEXT) \
	dwarf_get_arange.$(OBJEXT) dwarf_get_cu_die_offset.$(OBJEXT) \
	dwarf_get_arange_info.$(OBJEXT) dwarf_get_fde_list_eh.$(OBJEXT) \
	dwarf_get_cie_of_fde.$(OBJEXT) dwarf_get_cie_info.$(OBJEXT) \
	dwarf_get_fde_instr_bytes.$(OBJEXT) \
	dwarf_get_fde_range.$(OBJEXT) dwarf_get_fde_n.$(OBJEXT) \
	dwarf_get_fde_at_pc.$(OBJEXT) dwarf_get_loclist_entry.$(OBJEXT) \
	dwarf_get_abbrev.$(OBJEXT) dwarf_get_abbrev_tag.$(OBJEXT) \
	dwarf_get_abbrev_code.$(OBJEXT) \
	dwarf_get_abbrev_children_flag.$(OBJEXT) \
	dwarf_get_abbrev_entry.$(OBJEXT) \
	dwarf_get_address_size.$(OBJEXT) dwarf_seterrhand.$(OBJEXT) \
	dwarf_seterrarg.$(OBJEXT) dwarf_dealloc.$(OBJEXT)
libdwarf_a_OBJECTS = $(am_libdwarf_a_OBJECTS)
libdwarf_pic_a_AR = $(AR) cru
libdwarf_pic_a_LIBADD =
libdwarf_pic_a_OBJECTS = $(am_libdwarf_pic_a_OBJECTS)
noinst_PROGRAMS = libdwarf.a$(EXEEXT) libdwarf.so$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

libdwarf_a_LDADD = $(LDADD)
libdwarf_a_DEPENDENCIES =
libdwarf_a_LDFLAGS =
am_libdwarf_so_OBJECTS =
libdwarf_so_OBJECTS = $(am_libdwarf_so_OBJECTS)
libdwarf_so_LDADD = $(LDADD)
libdwarf_so_DEPENDENCIES =
libdwarf_so_LDFLAGS =
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/dwarf_abbrev_hash.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_arrayorder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_attr.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_attrlist.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_bitoffset.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_bitsize.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_bytesize.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_child.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_dealloc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_die_CU_offset.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_diename.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_dieoffset.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_elf_init.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_errmsg.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_errno.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_error.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_find_macro_value_start.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_finish.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_form.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_formaddr.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_formblock.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_formflag.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_formref.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_formsdata.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_formstring.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_formudata.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_abbrev.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_abbrev_children_flag.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_abbrev_code.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_abbrev_entry.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_abbrev_tag.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_address_size.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_arange.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_arange_info.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_aranges.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_cie_info.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_cie_of_fde.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_cu_die_offset.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_elf.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_fde_at_pc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_fde_instr_bytes.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_fde_list_eh.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_fde_n.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_fde_range.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_globals.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_loclist_entry.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_get_str.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_getabbrev.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_getconstant.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_global_cu_offset.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_global_die_offset.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_global_formref.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_global_name_offsets.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_globname.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_hasattr.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_hasform.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_highpc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_init.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_lineaddr.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_linebeginstatement.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_lineblock.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_lineendsequence.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_lineepiloguebegin.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_lineno.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_lineoff.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_lineprologueend.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_linesrc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_loclist.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_lowpc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_next_cu_header.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_offdie.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_seterrarg.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_seterrhand.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_siblingof.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_srcfiles.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_srclang.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_srclines.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_tag.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_whatattr.Po \
@AMDEP_TRUE@	./$(DEPDIR)/dwarf_whatform.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
DIST_SOURCES = $(libdwarf_a_SOURCES) $(libdwarf_pic_a_SOURCES) \
	$(libdwarf_so_SOURCES)
HEADERS = $(noinst_HEADERS)

DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in
SOURCES = $(libdwarf_a_SOURCES) $(libdwarf_pic_a_SOURCES) $(libdwarf_so_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnits  libdwarf/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libdwarf.a: $(libdwarf_a_OBJECTS) $(libdwarf_a_DEPENDENCIES) 
	-rm -f libdwarf.a
	$(libdwarf_a_AR) libdwarf.a $(libdwarf_a_OBJECTS) $(libdwarf_a_LIBADD)
	$(RANLIB) libdwarf.a
libdwarf_pic.a: $(libdwarf_pic_a_OBJECTS) $(libdwarf_pic_a_DEPENDENCIES) 
	-rm -f libdwarf_pic.a
	$(libdwarf_pic_a_AR) libdwarf_pic.a $(libdwarf_pic_a_OBJECTS) $(libdwarf_pic_a_LIBADD)
	$(RANLIB) libdwarf_pic.a

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_abbrev_hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_arrayorder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_attr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_attrlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_bitoffset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_bitsize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_bytesize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_child.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_dealloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_die_CU_offset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_diename.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_dieoffset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_elf_init.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_errmsg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_errno.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_find_macro_value_start.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_finish.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_form.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_formaddr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_formblock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_formflag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_formref.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_formsdata.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_formstring.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_formudata.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_abbrev.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_abbrev_children_flag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_abbrev_code.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_abbrev_entry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_abbrev_tag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_address_size.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_arange.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_arange_info.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_aranges.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_cie_info.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_cie_of_fde.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_cu_die_offset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_elf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_fde_at_pc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_fde_instr_bytes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_fde_list_eh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_fde_n.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_fde_range.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_globals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_loclist_entry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_get_str.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getabbrev.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_getconstant.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_global_cu_offset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_global_die_offset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_global_formref.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_global_name_offsets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_globname.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_hasattr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_hasform.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_highpc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_init.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lineaddr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_linebeginstatement.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lineblock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lineendsequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lineepiloguebegin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lineno.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lineoff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lineprologueend.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_linesrc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_loclist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_lowpc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_next_cu_header.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_offdie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_seterrarg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_seterrhand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_siblingof.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_srcfiles.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_srclang.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_srclines.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_tag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_whatattr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf_whatform.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`
CCDEPMODE = @CCDEPMODE@
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)

installdirs:
install-exec: install-exec-am
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES clean-noinstPROGRAMS distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic tags uninstall \
	uninstall-am uninstall-info-am

libdwarf.so: libdwarf_pic.a libdwarf.map
	$(CC) -shared -o $@ -Wl,--whole-archive,$<,--no-whole-archive \
	      -Wl,--version-script,$(srcdir)/libdwarf.map,--no-undefined \
	      -Wl,--soname,$@.$(VERSION) \
	      ../libelf/libelf.so
	ln -fs $@ $@.$(VERSION)

%.os: %.c %.o
	if $(COMPILE) -c -o $@ -fpic -DPIC -DSHARED -MT $@ -MD -MP \
	  -MF "$(DEPDIR)/$*.Tpo" `test -f '$<' || echo '$(srcdir)/'`$<; \
	then cat "$(DEPDIR)/$*.Tpo" >> "$(DEPDIR)/$*.Po"; \
	     rm -f "$(DEPDIR)/$*.Tpo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi

install: install-am libdwarf.so
#	$(mkinstalldirs) $(DESTDIR)$(libdir)
#	$(INSTALL_PROGRAM) libdwarf.so $(DESTDIR)$(libdir)/libdwarf-$(PACKAGE_VERSION).so
#	ln -fs libdwarf-$(PACKAGE_VERSION).so $(DESTDIR)$(libdir)/libdwarf.so.$(VERSION)
#	ln -fs libdwarf.so.$(VERSION) $(DESTDIR)$(libdir)/libdwarf.so

uninstall: uninstall-am

.PSEUDO: lint
lint:
	$(LINT) $(DEFS) $(INCLUDES) $(GCC_INCLUDE) \
		$(addprefix $(srcdir)/,$(libdwarf_a_SOURCES))
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
