<refentry id="ETable">
<refmeta>
<refentrytitle>ETable</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GAL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>ETable</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



#define     <link linkend="E-TABLE-TYPE-CAPS">E_TABLE_TYPE</link>
typedef     <link linkend="ETable">ETable</link>;
struct      <link linkend="ETableDragSourceSite">ETableDragSourceSite</link>;
enum        <link linkend="ETableCursorLoc">ETableCursorLoc</link>;
<link linkend="ETable">ETable</link>*     <link linkend="e-table-construct">e_table_construct</link>               (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="ETableModel">ETableModel</link> *etm,
                                             <link linkend="ETableExtras">ETableExtras</link> *ete,
                                             const <link linkend="char">char</link> *spec,
                                             const <link linkend="char">char</link> *state);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="e-table-new">e_table_new</link>                     (<link linkend="ETableModel">ETableModel</link> *etm,
                                             <link linkend="ETableExtras">ETableExtras</link> *ete,
                                             const <link linkend="char">char</link> *spec,
                                             const <link linkend="char">char</link> *state);
<link linkend="ETable">ETable</link>*     <link linkend="e-table-construct-from-spec-file">e_table_construct_from_spec_file</link>
                                            (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="ETableModel">ETableModel</link> *etm,
                                             <link linkend="ETableExtras">ETableExtras</link> *ete,
                                             const <link linkend="char">char</link> *spec_fn,
                                             const <link linkend="char">char</link> *state_fn);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="e-table-new-from-spec-file">e_table_new_from_spec_file</link>      (<link linkend="ETableModel">ETableModel</link> *etm,
                                             <link linkend="ETableExtras">ETableExtras</link> *ete,
                                             const <link linkend="char">char</link> *spec_fn,
                                             const <link linkend="char">char</link> *state_fn);
<link linkend="gchar">gchar</link>*      <link linkend="e-table-get-state">e_table_get_state</link>               (<link linkend="ETable">ETable</link> *e_table);
<link linkend="void">void</link>        <link linkend="e-table-save-state">e_table_save_state</link>              (<link linkend="ETable">ETable</link> *e_table,
                                             const <link linkend="gchar">gchar</link> *filename);
<link linkend="ETableState">ETableState</link>* <link linkend="e-table-get-state-object">e_table_get_state_object</link>       (<link linkend="ETable">ETable</link> *e_table);
<link linkend="void">void</link>        <link linkend="e-table-set-state">e_table_set_state</link>               (<link linkend="ETable">ETable</link> *e_table,
                                             const <link linkend="gchar">gchar</link> *state);
<link linkend="void">void</link>        <link linkend="e-table-set-state-object">e_table_set_state_object</link>        (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="ETableState">ETableState</link> *state);
<link linkend="void">void</link>        <link linkend="e-table-load-state">e_table_load_state</link>              (<link linkend="ETable">ETable</link> *e_table,
                                             const <link linkend="gchar">gchar</link> *filename);
<link linkend="void">void</link>        <link linkend="e-table-set-cursor-row">e_table_set_cursor_row</link>          (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="int">int</link> row);
<link linkend="int">int</link>         <link linkend="e-table-get-cursor-row">e_table_get_cursor_row</link>          (<link linkend="ETable">ETable</link> *e_table);
<link linkend="void">void</link>        <link linkend="e-table-selected-row-foreach">e_table_selected_row_foreach</link>    (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="ETableForeachFunc">ETableForeachFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> closure);
<link linkend="gint">gint</link>        <link linkend="e-table-selected-count">e_table_selected_count</link>          (<link linkend="ETable">ETable</link> *e_table);
<link linkend="EPrintable">EPrintable</link>* <link linkend="e-table-get-printable">e_table_get_printable</link>           (<link linkend="ETable">ETable</link> *e_table);
<link linkend="gint">gint</link>        <link linkend="e-table-get-next-row">e_table_get_next_row</link>            (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="gint">gint</link> model_row);
<link linkend="gint">gint</link>        <link linkend="e-table-get-prev-row">e_table_get_prev_row</link>            (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="gint">gint</link> model_row);
<link linkend="gint">gint</link>        <link linkend="e-table-model-to-view-row">e_table_model_to_view_row</link>       (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="gint">gint</link> model_row);
<link linkend="gint">gint</link>        <link linkend="e-table-view-to-model-row">e_table_view_to_model_row</link>       (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="gint">gint</link> view_row);
<link linkend="void">void</link>        <link linkend="e-table-drag-get-data">e_table_drag_get_data</link>           (<link linkend="ETable">ETable</link> *table,
                                             <link linkend="int">int</link> row,
                                             <link linkend="int">int</link> col,
                                             <link linkend="GdkDragContext">GdkDragContext</link> *context,
                                             <link linkend="GdkAtom">GdkAtom</link> target,
                                             <link linkend="guint32">guint32</link> time);
<link linkend="void">void</link>        <link linkend="e-table-drag-highlight">e_table_drag_highlight</link>          (<link linkend="ETable">ETable</link> *table,
                                             <link linkend="int">int</link> row,
                                             <link linkend="int">int</link> col);
<link linkend="void">void</link>        <link linkend="e-table-drag-unhighlight">e_table_drag_unhighlight</link>        (<link linkend="ETable">ETable</link> *table);
<link linkend="void">void</link>        <link linkend="e-table-drag-dest-set">e_table_drag_dest_set</link>           (<link linkend="ETable">ETable</link> *table,
                                             <link linkend="GtkDestDefaults">GtkDestDefaults</link> flags,
                                             const <link linkend="GtkTargetEntry">GtkTargetEntry</link> *targets,
                                             <link linkend="gint">gint</link> n_targets,
                                             <link linkend="GdkDragAction">GdkDragAction</link> actions);
<link linkend="void">void</link>        <link linkend="e-table-drag-dest-set-proxy">e_table_drag_dest_set_proxy</link>     (<link linkend="ETable">ETable</link> *table,
                                             <link linkend="GdkWindow">GdkWindow</link> *proxy_window,
                                             <link linkend="GdkDragProtocol">GdkDragProtocol</link> protocol,
                                             <link linkend="gboolean">gboolean</link> use_coordinates);
<link linkend="void">void</link>        <link linkend="e-table-drag-dest-unset">e_table_drag_dest_unset</link>         (<link linkend="GtkWidget">GtkWidget</link> *widget);
<link linkend="void">void</link>        <link linkend="e-table-drag-source-set">e_table_drag_source_set</link>         (<link linkend="ETable">ETable</link> *table,
                                             <link linkend="GdkModifierType">GdkModifierType</link> start_button_mask,
                                             const <link linkend="GtkTargetEntry">GtkTargetEntry</link> *targets,
                                             <link linkend="gint">gint</link> n_targets,
                                             <link linkend="GdkDragAction">GdkDragAction</link> actions);
<link linkend="void">void</link>        <link linkend="e-table-drag-source-unset">e_table_drag_source_unset</link>       (<link linkend="ETable">ETable</link> *table);
<link linkend="GdkDragContext">GdkDragContext</link>* <link linkend="e-table-drag-begin">e_table_drag_begin</link>          (<link linkend="ETable">ETable</link> *table,
                                             <link linkend="int">int</link> row,
                                             <link linkend="int">int</link> col,
                                             <link linkend="GtkTargetList">GtkTargetList</link> *targets,
                                             <link linkend="GdkDragAction">GdkDragAction</link> actions,
                                             <link linkend="gint">gint</link> button,
                                             <link linkend="GdkEvent">GdkEvent</link> *event);
<link linkend="void">void</link>        <link linkend="e-table-select-all">e_table_select_all</link>              (<link linkend="ETable">ETable</link> *table);
<link linkend="void">void</link>        <link linkend="e-table-invert-selection">e_table_invert_selection</link>        (<link linkend="ETable">ETable</link> *table);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GtkObject">GtkObject</link>
   +----<link linkend="GtkWidget">GtkWidget</link>
         +----<link linkend="GtkContainer">GtkContainer</link>
               +----<link linkend="GtkTable">GtkTable</link>
                     +----ETable
</synopsis>

</refsect1>





<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="ETable--drawfocus">drawfocus</link>&quot;            <link linkend="gboolean">gboolean</link>             : Read / Write
  &quot;<link linkend="ETable--length-threshold">length-threshold</link>&quot;     <link linkend="gint">gint</link>                 : Write
</synopsis>
</refsect1>

<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="ETable-cursor-change">cursor-change</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETable-selection-change">selection-change</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETable-double-click">double-click</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETable-right-click">right-click</link>&quot;
            <link linkend="gint">gint</link>        user_function      (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETable-click">click</link>&quot;     <link linkend="gint">gint</link>        user_function      (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETable-key-press">key-press</link>&quot; <link linkend="gint">gint</link>        user_function      (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETable-table-drag-begin">table-drag-begin</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETable-table-drag-end">table-drag-end</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETable-table-drag-data-get">table-drag-data-get</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="GtkSelectionData">GtkSelectionData</link> *arg4,
                                            <link linkend="guint">guint</link> arg5,
                                            <link linkend="guint">guint</link> arg6,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETable-table-drag-data-delete">table-drag-data-delete</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETable-table-drag-leave">table-drag-leave</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="guint">guint</link> arg4,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETable-table-drag-motion">table-drag-motion</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="gint">gint</link> arg4,
                                            <link linkend="gint">gint</link> arg5,
                                            <link linkend="guint">guint</link> arg6,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETable-table-drag-drop">table-drag-drop</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="gint">gint</link> arg4,
                                            <link linkend="gint">gint</link> arg5,
                                            <link linkend="guint">guint</link> arg6,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETable-table-drag-data-received">table-drag-data-received</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="gint">gint</link> arg4,
                                            <link linkend="gint">gint</link> arg5,
                                            <link linkend="GtkSelectionData">GtkSelectionData</link> *arg6,
                                            <link linkend="guint">guint</link> arg7,
                                            <link linkend="guint">guint</link> arg8,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="E-TABLE-TYPE-CAPS">E_TABLE_TYPE</title>
<indexterm><primary>E_TABLE_TYPE</primary></indexterm><programlisting>#define E_TABLE_TYPE        (e_table_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ETable">ETable</title>
<indexterm><primary>ETable</primary></indexterm><programlisting>typedef struct {
	GtkTable parent;

	ETableModel *model;

	ETableHeader *full_header, *header;

	GnomeCanvasItem *canvas_vbox;
	ETableGroup  *group;

	ETableSortInfo *sort_info;
	ETableSorter   *sorter;

	ETableSelectionModel *selection;
	ETableCursorLoc cursor_loc;
	ETableSpecification *spec;

	int table_model_change_id;
	int table_row_change_id;
	int table_cell_change_id;
	int table_row_inserted_id;
	int table_row_deleted_id;

	int group_info_change_id;

	int reflow_idle_id;

	GnomeCanvas *header_canvas, *table_canvas;

	GnomeCanvasItem *header_item, *root;

	GnomeCanvasItem *white_item;

	gint length_threshold;

	gint rebuild_idle_id;
	guint need_rebuild:1;

	/*
	 * Configuration settings
	 */
	guint draw_grid : 1;
	guint draw_focus : 1;
	guint row_selection_active : 1;
	
	char *click_to_add_message;
	GnomeCanvasItem *click_to_add;
	gboolean use_click_to_add;

	ETableCursorMode cursor_mode;

	int drag_get_data_row;
	int drag_get_data_col;

	int drop_row;
	int drop_col;

	int drag_row;
	int drag_col;
	ETableDragSourceSite *site;
	
	int drag_source_button_press_event_id;
	int drag_source_motion_notify_event_id;
} ETable;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ETableDragSourceSite">struct ETableDragSourceSite</title>
<indexterm><primary>ETableDragSourceSite</primary></indexterm><programlisting>struct ETableDragSourceSite;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ETableCursorLoc">enum ETableCursorLoc</title>
<indexterm><primary>ETableCursorLoc</primary></indexterm><programlisting>typedef enum {
	E_TABLE_CURSOR_LOC_NONE = 0,
	E_TABLE_CURSOR_LOC_ETCTA = 1 &lt;&lt; 0,
	E_TABLE_CURSOR_LOC_TABLE = 1 &lt;&lt; 1,
} ETableCursorLoc;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="e-table-construct">e_table_construct ()</title>
<indexterm><primary>e_table_construct</primary></indexterm><programlisting><link linkend="ETable">ETable</link>*     e_table_construct               (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="ETableModel">ETableModel</link> *etm,
                                             <link linkend="ETableExtras">ETableExtras</link> *ete,
                                             const <link linkend="char">char</link> *spec,
                                             const <link linkend="char">char</link> *state);</programlisting>
<para>
This is the internal implementation of <link linkend="e-table-new"><function>e_table_new()</function></link> for use by
subclasses or language bindings.  See <link linkend="e-table-new"><function>e_table_new()</function></link> for details.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> The newly created <link linkend="ETable"><type>ETable</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etm</parameter>&nbsp;:</term>
<listitem><simpara> The model for this table.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ete</parameter>&nbsp;:</term>
<listitem><simpara> An optional <link linkend="ETableExtras"><type>ETableExtras</type></link>.  (<literal>NULL</literal> is valid.)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>spec</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 
The passed in value <parameter>e_table</parameter> or <literal>NULL</literal> if there's an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-new">e_table_new ()</title>
<indexterm><primary>e_table_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  e_table_new                     (<link linkend="ETableModel">ETableModel</link> *etm,
                                             <link linkend="ETableExtras">ETableExtras</link> *ete,
                                             const <link linkend="char">char</link> *spec,
                                             const <link linkend="char">char</link> *state);</programlisting>
<para>
This function creates an <link linkend="ETable"><type>ETable</type></link> from the given parameters.  The
<link linkend="ETableModel"><type>ETableModel</type></link> is a table model to be represented.  The <link linkend="ETableExtras"><type>ETableExtras</type></link>
is an optional set of pixbufs, cells, and sorting functions to be
used when interpreting the spec.  If you pass in <literal>NULL</literal> it uses the
default <link linkend="ETableExtras"><type>ETableExtras</type></link>.  (See <link linkend="e-table-extras-new"><function>e_table_extras_new()</function></link>).
</para>
<para>
<parameter>spec</parameter> is the specification of the set of viewable columns and the
default sorting state and such.  <parameter>state</parameter> is an optional string
specifying the current sorting state and such.  If <parameter>state</parameter> is NULL,
then the default state from the spec will be used.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etm</parameter>&nbsp;:</term>
<listitem><simpara> The model for this table.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ete</parameter>&nbsp;:</term>
<listitem><simpara> An optional <link linkend="ETableExtras"><type>ETableExtras</type></link>.  (<literal>NULL</literal> is valid.)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>spec</parameter>&nbsp;:</term>
<listitem><simpara> The spec.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state</parameter>&nbsp;:</term>
<listitem><simpara> An optional state.  (<literal>NULL</literal> is valid.)
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 
The newly created <link linkend="ETable"><type>ETable</type></link> or <literal>NULL</literal> if there's an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-construct-from-spec-file">e_table_construct_from_spec_file ()</title>
<indexterm><primary>e_table_construct_from_spec_file</primary></indexterm><programlisting><link linkend="ETable">ETable</link>*     e_table_construct_from_spec_file
                                            (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="ETableModel">ETableModel</link> *etm,
                                             <link linkend="ETableExtras">ETableExtras</link> *ete,
                                             const <link linkend="char">char</link> *spec_fn,
                                             const <link linkend="char">char</link> *state_fn);</programlisting>
<para>
This is the internal implementation of <link linkend="e-table-new-from-spec-file"><function>e_table_new_from_spec_file()</function></link>
for use by subclasses or language bindings.  See
<link linkend="e-table-new-from-spec-file"><function>e_table_new_from_spec_file()</function></link> for details.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> The newly created <link linkend="ETable"><type>ETable</type></link> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etm</parameter>&nbsp;:</term>
<listitem><simpara> The model for this table.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ete</parameter>&nbsp;:</term>
<listitem><simpara> An optional <link linkend="ETableExtras"><type>ETableExtras</type></link>.  (<literal>NULL</literal> is valid.)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>spec_fn</parameter>&nbsp;:</term>
<listitem><simpara> The filename of the spec.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_fn</parameter>&nbsp;:</term>
<listitem><simpara> An optional state file.  (<literal>NULL</literal> is valid.)
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 
The passed in value <parameter>e_table</parameter> or <literal>NULL</literal> if there's an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-new-from-spec-file">e_table_new_from_spec_file ()</title>
<indexterm><primary>e_table_new_from_spec_file</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  e_table_new_from_spec_file      (<link linkend="ETableModel">ETableModel</link> *etm,
                                             <link linkend="ETableExtras">ETableExtras</link> *ete,
                                             const <link linkend="char">char</link> *spec_fn,
                                             const <link linkend="char">char</link> *state_fn);</programlisting>
<para>
This is very similar to <link linkend="e-table-new"><function>e_table_new()</function></link>, except instead of passing in
strings you pass in the file names of the spec and state to load.
</para>
<para>
<parameter>spec_fn</parameter> is the filename of the spec to load.  If this file doesn't
exist, e_table_new_from_spec_file will return <literal>NULL</literal>.
</para>
<para>
<parameter>state_fn</parameter> is the filename of the initial state to load.  If this is
<literal>NULL</literal> or if the specified file doesn't exist, the default state
from the spec file is used.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etm</parameter>&nbsp;:</term>
<listitem><simpara> The model for this table.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ete</parameter>&nbsp;:</term>
<listitem><simpara> An optional <link linkend="ETableExtras"><type>ETableExtras</type></link>.  (<literal>NULL</literal> is valid.)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>spec_fn</parameter>&nbsp;:</term>
<listitem><simpara> The filename of the spec.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state_fn</parameter>&nbsp;:</term>
<listitem><simpara> An optional state file.  (<literal>NULL</literal> is valid.)
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 
The newly created <link linkend="ETable"><type>ETable</type></link> or <literal>NULL</literal> if there's an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-get-state">e_table_get_state ()</title>
<indexterm><primary>e_table_get_state</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      e_table_get_state               (<link linkend="ETable">ETable</link> *e_table);</programlisting>
<para>
Builds a state object based on the current state and returns the
string corresponding to that state.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to act on.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 
A string describing the current state of the <link linkend="ETable"><type>ETable</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-save-state">e_table_save_state ()</title>
<indexterm><primary>e_table_save_state</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_save_state              (<link linkend="ETable">ETable</link> *e_table,
                                             const <link linkend="gchar">gchar</link> *filename);</programlisting>
<para>
Saves the state of the <parameter>e_table</parameter> object into the file pointed by
<parameter>filename</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to act on
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> name of the file to save to
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-get-state-object">e_table_get_state_object ()</title>
<indexterm><primary>e_table_get_state_object</primary></indexterm><programlisting><link linkend="ETableState">ETableState</link>* e_table_get_state_object       (<link linkend="ETable">ETable</link> *e_table);</programlisting>
<para>
Builds an <link linkend="ETableState"><type>ETableState</type></link> corresponding to the current state of the
<link linkend="ETable"><type>ETable</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="ETable"><type>ETable</type></link> object to act on
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>
The <literal>ETableState</literal> object generated.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-set-state">e_table_set_state ()</title>
<indexterm><primary>e_table_set_state</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_set_state               (<link linkend="ETable">ETable</link> *e_table,
                                             const <link linkend="gchar">gchar</link> *state);</programlisting>
<para>
This routine sets the state of the <link linkend="ETable"><type>ETable</type></link> from a string.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> object to modify
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-set-state-object">e_table_set_state_object ()</title>
<indexterm><primary>e_table_set_state_object</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_set_state_object        (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="ETableState">ETableState</link> *state);</programlisting>
<para>
This routine sets the state of the <link linkend="ETable"><type>ETable</type></link> from the given
<link linkend="ETableState"><type>ETableState</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> object to modify
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>state</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETableState"><type>ETableState</type></link> to use
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-load-state">e_table_load_state ()</title>
<indexterm><primary>e_table_load_state</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_load_state              (<link linkend="ETable">ETable</link> *e_table,
                                             const <link linkend="gchar">gchar</link> *filename);</programlisting>
<para>
This routine sets the state of the <link linkend="ETable"><type>ETable</type></link> from a file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> object to modify
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> name of the file to use
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-set-cursor-row">e_table_set_cursor_row ()</title>
<indexterm><primary>e_table_set_cursor_row</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_set_cursor_row          (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="int">int</link> row);</programlisting>
<para>
Sets the cursor row and the selection to the given row number.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to set the cursor row of
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>row</parameter>&nbsp;:</term>
<listitem><simpara> The row number
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-get-cursor-row">e_table_get_cursor_row ()</title>
<indexterm><primary>e_table_get_cursor_row</primary></indexterm><programlisting><link linkend="int">int</link>         e_table_get_cursor_row          (<link linkend="ETable">ETable</link> *e_table);</programlisting>
<para>
Calculates the cursor row.  -1 means that we don't have a cursor.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to query
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 
Cursor row
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-selected-row-foreach">e_table_selected_row_foreach ()</title>
<indexterm><primary>e_table_selected_row_foreach</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_selected_row_foreach    (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="ETableForeachFunc">ETableForeachFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> closure);</programlisting>
<para>
Calls the given <parameter>callback</parameter> function once for every selected row.
</para>
<para>
If you change the selection or delete or add rows to the table
during these callbacks, problems can occur.  A standard thing to do
is to create a list of rows or objects the function is called upon
and then act upon that list. (In inverse order if it's rows.)</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to act on
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> The callback function to call
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>closure</parameter>&nbsp;:</term>
<listitem><simpara> The value passed to the callback's closure argument
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-selected-count">e_table_selected_count ()</title>
<indexterm><primary>e_table_selected_count</primary></indexterm><programlisting><link linkend="gint">gint</link>        e_table_selected_count          (<link linkend="ETable">ETable</link> *e_table);</programlisting>
<para>
Counts the number of selected rows.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to query
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 
The number of rows selected.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-get-printable">e_table_get_printable ()</title>
<indexterm><primary>e_table_get_printable</primary></indexterm><programlisting><link linkend="EPrintable">EPrintable</link>* e_table_get_printable           (<link linkend="ETable">ETable</link> *e_table);</programlisting>
<para>
Used for printing your <link linkend="ETable"><type>ETable</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="ETable"><type>ETable</type></link> to query
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 
The <link linkend="EPrintable"><type>EPrintable</type></link> to print.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-get-next-row">e_table_get_next_row ()</title>
<indexterm><primary>e_table_get_next_row</primary></indexterm><programlisting><link linkend="gint">gint</link>        e_table_get_next_row            (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="gint">gint</link> model_row);</programlisting>
<para>
This function is used when your table is sorted, but you're using
model row numbers.  It returns the next row in sorted order as a model row.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to query
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>model_row</parameter>&nbsp;:</term>
<listitem><simpara> The model row to go from
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 
The model row number.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-get-prev-row">e_table_get_prev_row ()</title>
<indexterm><primary>e_table_get_prev_row</primary></indexterm><programlisting><link linkend="gint">gint</link>        e_table_get_prev_row            (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="gint">gint</link> model_row);</programlisting>
<para>
This function is used when your table is sorted, but you're using
model row numbers.  It returns the previous row in sorted order as
a model row.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to query
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>model_row</parameter>&nbsp;:</term>
<listitem><simpara> The model row to go from
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 
The model row number.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-to-view-row">e_table_model_to_view_row ()</title>
<indexterm><primary>e_table_model_to_view_row</primary></indexterm><programlisting><link linkend="gint">gint</link>        e_table_model_to_view_row       (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="gint">gint</link> model_row);</programlisting>
<para>
Turns a model row into a view row.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to query
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>model_row</parameter>&nbsp;:</term>
<listitem><simpara> The model row number
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 
The view row number.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-view-to-model-row">e_table_view_to_model_row ()</title>
<indexterm><primary>e_table_view_to_model_row</primary></indexterm><programlisting><link linkend="gint">gint</link>        e_table_view_to_model_row       (<link linkend="ETable">ETable</link> *e_table,
                                             <link linkend="gint">gint</link> view_row);</programlisting>
<para>
Turns a view row into a model row.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to query
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>view_row</parameter>&nbsp;:</term>
<listitem><simpara> The view row number
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 
The model row number.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-drag-get-data">e_table_drag_get_data ()</title>
<indexterm><primary>e_table_drag_get_data</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_drag_get_data           (<link linkend="ETable">ETable</link> *table,
                                             <link linkend="int">int</link> row,
                                             <link linkend="int">int</link> col,
                                             <link linkend="GdkDragContext">GdkDragContext</link> *context,
                                             <link linkend="GdkAtom">GdkAtom</link> target,
                                             <link linkend="guint32">guint32</link> time);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>table</parameter>&nbsp;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>row</parameter>&nbsp;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>col</parameter>&nbsp;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>target</parameter>&nbsp;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>time</parameter>&nbsp;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-drag-highlight">e_table_drag_highlight ()</title>
<indexterm><primary>e_table_drag_highlight</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_drag_highlight          (<link linkend="ETable">ETable</link> *table,
                                             <link linkend="int">int</link> row,
                                             <link linkend="int">int</link> col);</programlisting>
<para>
Set col to -1 to highlight the entire row.  If row is -1, this is
identical to <link linkend="e-table-drag-unhighlight"><function>e_table_drag_unhighlight()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to highlight
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>row</parameter>&nbsp;:</term>
<listitem><simpara> The row number of the cell to highlight
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>col</parameter>&nbsp;:</term>
<listitem><simpara> The column number of the cell to highlight
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-drag-unhighlight">e_table_drag_unhighlight ()</title>
<indexterm><primary>e_table_drag_unhighlight</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_drag_unhighlight        (<link linkend="ETable">ETable</link> *table);</programlisting>
<para>
Removes the highlight from an <link linkend="ETable"><type>ETable</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to unhighlight
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-drag-dest-set">e_table_drag_dest_set ()</title>
<indexterm><primary>e_table_drag_dest_set</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_drag_dest_set           (<link linkend="ETable">ETable</link> *table,
                                             <link linkend="GtkDestDefaults">GtkDestDefaults</link> flags,
                                             const <link linkend="GtkTargetEntry">GtkTargetEntry</link> *targets,
                                             <link linkend="gint">gint</link> n_targets,
                                             <link linkend="GdkDragAction">GdkDragAction</link> actions);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>table</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>targets</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_targets</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>actions</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-drag-dest-set-proxy">e_table_drag_dest_set_proxy ()</title>
<indexterm><primary>e_table_drag_dest_set_proxy</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_drag_dest_set_proxy     (<link linkend="ETable">ETable</link> *table,
                                             <link linkend="GdkWindow">GdkWindow</link> *proxy_window,
                                             <link linkend="GdkDragProtocol">GdkDragProtocol</link> protocol,
                                             <link linkend="gboolean">gboolean</link> use_coordinates);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>table</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>proxy_window</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>protocol</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>use_coordinates</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-drag-dest-unset">e_table_drag_dest_unset ()</title>
<indexterm><primary>e_table_drag_dest_unset</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_drag_dest_unset         (<link linkend="GtkWidget">GtkWidget</link> *widget);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-drag-source-set">e_table_drag_source_set ()</title>
<indexterm><primary>e_table_drag_source_set</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_drag_source_set         (<link linkend="ETable">ETable</link> *table,
                                             <link linkend="GdkModifierType">GdkModifierType</link> start_button_mask,
                                             const <link linkend="GtkTargetEntry">GtkTargetEntry</link> *targets,
                                             <link linkend="gint">gint</link> n_targets,
                                             <link linkend="GdkDragAction">GdkDragAction</link> actions);</programlisting>
<para>
Registers this table as a drag site, and possibly adds default behaviors.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to set up as a drag site
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>start_button_mask</parameter>&nbsp;:</term>
<listitem><simpara> Mask of allowed buttons to start drag
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>targets</parameter>&nbsp;:</term>
<listitem><simpara> Table of targets for this source
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_targets</parameter>&nbsp;:</term>
<listitem><simpara> Number of targets in <parameter>targets</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>actions</parameter>&nbsp;:</term>
<listitem><simpara> Actions allowed for this source
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-drag-source-unset">e_table_drag_source_unset ()</title>
<indexterm><primary>e_table_drag_source_unset</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_drag_source_unset       (<link linkend="ETable">ETable</link> *table);</programlisting>
<para>
Unregisters this <link linkend="ETable"><type>ETable</type></link> as a drag site.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to un set up as a drag site
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-drag-begin">e_table_drag_begin ()</title>
<indexterm><primary>e_table_drag_begin</primary></indexterm><programlisting><link linkend="GdkDragContext">GdkDragContext</link>* e_table_drag_begin          (<link linkend="ETable">ETable</link> *table,
                                             <link linkend="int">int</link> row,
                                             <link linkend="int">int</link> col,
                                             <link linkend="GtkTargetList">GtkTargetList</link> *targets,
                                             <link linkend="GdkDragAction">GdkDragAction</link> actions,
                                             <link linkend="gint">gint</link> button,
                                             <link linkend="GdkEvent">GdkEvent</link> *event);</programlisting>
<para>
Start a drag from this cell.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to drag from
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>row</parameter>&nbsp;:</term>
<listitem><simpara> The row number of the cell
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>col</parameter>&nbsp;:</term>
<listitem><simpara> The col number of the cell
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>targets</parameter>&nbsp;:</term>
<listitem><simpara> The list of targets supported by the drag
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>actions</parameter>&nbsp;:</term>
<listitem><simpara> The available actions supported by the drag
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>button</parameter>&nbsp;:</term>
<listitem><simpara> The button held down for the drag
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> The event that initiated the drag
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 
The drag context.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-select-all">e_table_select_all ()</title>
<indexterm><primary>e_table_select_all</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_select_all              (<link linkend="ETable">ETable</link> *table);</programlisting>
<para>
Selects all the rows in <parameter>table</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to modify
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-invert-selection">e_table_invert_selection ()</title>
<indexterm><primary>e_table_invert_selection</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_invert_selection        (<link linkend="ETable">ETable</link> *table);</programlisting>
<para>
Inverts the selection in <parameter>table</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>table</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="ETable"><type>ETable</type></link> to modify
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<variablelist>
<varlistentry><term><anchor id="ETable--drawfocus">&quot;<literal>drawfocus</literal>&quot; (<link linkend="gboolean">gboolean</link> : Read / Write)</term>
<listitem>
<para></para>
</listitem></varlistentry>
<varlistentry><term><anchor id="ETable--length-threshold">&quot;<literal>length-threshold</literal>&quot; (<link linkend="gint">gint</link> : Write)</term>
<listitem>
<para></para>
</listitem></varlistentry>

</variablelist>
</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="ETable-cursor-change">The &quot;cursor-change&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etable</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETable-selection-change">The &quot;selection-change&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etable</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETable-double-click">The &quot;double-click&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etable</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETable-right-click">The &quot;right-click&quot; signal</title>
<programlisting><link linkend="gint">gint</link>        user_function                  (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etable</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETable-click">The &quot;click&quot; signal</title>
<programlisting><link linkend="gint">gint</link>        user_function                  (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etable</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETable-key-press">The &quot;key-press&quot; signal</title>
<programlisting><link linkend="gint">gint</link>        user_function                  (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etable</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETable-table-drag-begin">The &quot;table-drag-begin&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etable</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETable-table-drag-end">The &quot;table-drag-end&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etable</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETable-table-drag-data-get">The &quot;table-drag-data-get&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="GtkSelectionData">GtkSelectionData</link> *arg4,
                                            <link linkend="guint">guint</link> arg5,
                                            <link linkend="guint">guint</link> arg6,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etable</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg4</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg5</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg6</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETable-table-drag-data-delete">The &quot;table-drag-data-delete&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etable</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETable-table-drag-leave">The &quot;table-drag-leave&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="guint">guint</link> arg4,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etable</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg4</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETable-table-drag-motion">The &quot;table-drag-motion&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="gint">gint</link> arg4,
                                            <link linkend="gint">gint</link> arg5,
                                            <link linkend="guint">guint</link> arg6,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etable</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg4</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg5</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg6</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETable-table-drag-drop">The &quot;table-drag-drop&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="gint">gint</link> arg4,
                                            <link linkend="gint">gint</link> arg5,
                                            <link linkend="guint">guint</link> arg6,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etable</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg4</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg5</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg6</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETable-table-drag-data-received">The &quot;table-drag-data-received&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETable">ETable</link> *etable,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="GdkDragContext">GdkDragContext</link> *arg3,
                                            <link linkend="gint">gint</link> arg4,
                                            <link linkend="gint">gint</link> arg5,
                                            <link linkend="GtkSelectionData">GtkSelectionData</link> *arg6,
                                            <link linkend="guint">guint</link> arg7,
                                            <link linkend="guint">guint</link> arg8,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etable</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg3</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg4</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg5</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg6</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg7</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg8</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
