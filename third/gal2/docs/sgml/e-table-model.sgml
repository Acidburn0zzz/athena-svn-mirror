<refentry id="ETableModel">
<refmeta>
<refentrytitle>ETableModel</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GAL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>ETableModel</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



#define     <link linkend="E-TABLE-MODEL-TYPE-CAPS">E_TABLE_MODEL_TYPE</link>
typedef     <link linkend="ETableModel">ETableModel</link>;
<link linkend="int">int</link>         <link linkend="e-table-model-column-count">e_table_model_column_count</link>      (<link linkend="ETableModel">ETableModel</link> *e_table_model);
const <link linkend="char">char</link>* <link linkend="e-table-model-column-name">e_table_model_column_name</link>       (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col);
<link linkend="int">int</link>         <link linkend="e-table-model-row-count">e_table_model_row_count</link>         (<link linkend="ETableModel">ETableModel</link> *e_table_model);
<link linkend="void">void</link>*       <link linkend="e-table-model-value-at">e_table_model_value_at</link>          (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             <link linkend="int">int</link> row);
<link linkend="void">void</link>        <link linkend="e-table-model-set-value-at">e_table_model_set_value_at</link>      (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             <link linkend="int">int</link> row,
                                             const <link linkend="void">void</link> *value);
<link linkend="gboolean">gboolean</link>    <link linkend="e-table-model-is-cell-editable">e_table_model_is_cell_editable</link>  (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             <link linkend="int">int</link> row);
<link linkend="void">void</link>        <link linkend="e-table-model-append-row">e_table_model_append_row</link>        (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="ETableModel">ETableModel</link> *source,
                                             <link linkend="int">int</link> row);
const <link linkend="char">char</link>* <link linkend="e-table-model-row-sort-group">e_table_model_row_sort_group</link>    (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> row);
<link linkend="gboolean">gboolean</link>    <link linkend="e-table-model-has-sort-group">e_table_model_has_sort_group</link>    (<link linkend="ETableModel">ETableModel</link> *e_table_model);
<link linkend="void">void</link>*       <link linkend="e-table-model-duplicate-value">e_table_model_duplicate_value</link>   (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             const <link linkend="void">void</link> *value);
<link linkend="void">void</link>        <link linkend="e-table-model-free-value">e_table_model_free_value</link>        (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             <link linkend="void">void</link> *value);
<link linkend="void">void</link>*       <link linkend="e-table-model-initialize-value">e_table_model_initialize_value</link>  (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col);
<link linkend="gboolean">gboolean</link>    <link linkend="e-table-model-value-is-empty">e_table_model_value_is_empty</link>    (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             const <link linkend="void">void</link> *value);
<link linkend="char">char</link>*       <link linkend="e-table-model-value-to-string">e_table_model_value_to_string</link>   (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             const <link linkend="void">void</link> *value);
<link linkend="void">void</link>        <link linkend="e-table-model-pre-change">e_table_model_pre_change</link>        (<link linkend="ETableModel">ETableModel</link> *e_table_model);
<link linkend="void">void</link>        <link linkend="e-table-model-changed">e_table_model_changed</link>           (<link linkend="ETableModel">ETableModel</link> *e_table_model);
<link linkend="void">void</link>        <link linkend="e-table-model-row-changed">e_table_model_row_changed</link>       (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> row);
<link linkend="void">void</link>        <link linkend="e-table-model-cell-changed">e_table_model_cell_changed</link>      (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             <link linkend="int">int</link> row);
<link linkend="void">void</link>        <link linkend="e-table-model-row-inserted">e_table_model_row_inserted</link>      (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> row);
<link linkend="void">void</link>        <link linkend="e-table-model-row-deleted">e_table_model_row_deleted</link>       (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> row);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GtkObject">GtkObject</link>
   +----ETableModel
         +----<link linkend="ETableOne">ETableOne</link>
         +----<link linkend="ETableSimple">ETableSimple</link>
         +----<link linkend="ETableSubset">ETableSubset</link>
         +----<link linkend="ETreeModel">ETreeModel</link>
         +----<link linkend="GalDefineViewsModel">GalDefineViewsModel</link>
</synopsis>

</refsect1>






<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="ETableModel-model-changed">model-changed</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETableModel">ETableModel</link> *etablemodel,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETableModel-model-pre-change">model-pre-change</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETableModel">ETableModel</link> *etablemodel,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETableModel-model-row-changed">model-row-changed</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETableModel">ETableModel</link> *etablemodel,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETableModel-model-cell-changed">model-cell-changed</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETableModel">ETableModel</link> *etablemodel,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETableModel-model-row-inserted">model-row-inserted</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETableModel">ETableModel</link> *etablemodel,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="ETableModel-model-row-deleted">model-row-deleted</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETableModel">ETableModel</link> *etablemodel,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="E-TABLE-MODEL-TYPE-CAPS">E_TABLE_MODEL_TYPE</title>
<indexterm><primary>E_TABLE_MODEL_TYPE</primary></indexterm><programlisting>#define E_TABLE_MODEL_TYPE        (e_table_model_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ETableModel">ETableModel</title>
<indexterm><primary>ETableModel</primary></indexterm><programlisting>typedef struct {
	GtkObject   base;
} ETableModel;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="e-table-model-column-count">e_table_model_column_count ()</title>
<indexterm><primary>e_table_model_column_count</primary></indexterm><programlisting><link linkend="int">int</link>         e_table_model_column_count      (<link linkend="ETableModel">ETableModel</link> *e_table_model);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara> The e-table-model to operate on
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the number of columns in the table model.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-column-name">e_table_model_column_name ()</title>
<indexterm><primary>e_table_model_column_name</primary></indexterm><programlisting>const <link linkend="char">char</link>* e_table_model_column_name       (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>col</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-row-count">e_table_model_row_count ()</title>
<indexterm><primary>e_table_model_row_count</primary></indexterm><programlisting><link linkend="int">int</link>         e_table_model_row_count         (<link linkend="ETableModel">ETableModel</link> *e_table_model);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara> the e-table-model to operate on
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the number of rows in the Table model.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-value-at">e_table_model_value_at ()</title>
<indexterm><primary>e_table_model_value_at</primary></indexterm><programlisting><link linkend="void">void</link>*       e_table_model_value_at          (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             <link linkend="int">int</link> row);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>col</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>row</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-set-value-at">e_table_model_set_value_at ()</title>
<indexterm><primary>e_table_model_set_value_at</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_model_set_value_at      (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             <link linkend="int">int</link> row,
                                             const <link linkend="void">void</link> *value);</programlisting>
<para>
This function instructs the model to store the value in <parameter>data</parameter> in the
the <parameter>e_table_model</parameter> at column <parameter>col</parameter> and row <parameter>row</parameter>.  The <parameter>data</parameter> typically
comes from one of the ECell rendering objects.
</para>
<para>
There should be an agreement between the Table Model and the user
of this function about the data being stored.  Typically it will
be a pointer to a set of data, or a datum that fits inside a void *.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara> the table model to operate on.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>col</parameter>&nbsp;:</term>
<listitem><simpara> the column where the data will be stored in the model.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>row</parameter>&nbsp;:</term>
<listitem><simpara> the row where the data will be stored in the model. 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> the data to be stored.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-is-cell-editable">e_table_model_is_cell_editable ()</title>
<indexterm><primary>e_table_model_is_cell_editable</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_table_model_is_cell_editable  (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             <link linkend="int">int</link> row);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara> the table model to query.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>col</parameter>&nbsp;:</term>
<listitem><simpara> column to query.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>row</parameter>&nbsp;:</term>
<listitem><simpara> row to query.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if the cell in <parameter>e_table_model</parameter> at <parameter>col</parameter>,<parameter>row</parameter> can be
edited, <literal>FALSE</literal> otherwise
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-append-row">e_table_model_append_row ()</title>
<indexterm><primary>e_table_model_append_row</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_model_append_row        (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="ETableModel">ETableModel</link> *source,
                                             <link linkend="int">int</link> row);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara> the table model to append the a row to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>source</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>row</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-row-sort-group">e_table_model_row_sort_group ()</title>
<indexterm><primary>e_table_model_row_sort_group</primary></indexterm><programlisting>const <link linkend="char">char</link>* e_table_model_row_sort_group    (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> row);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>row</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-has-sort-group">e_table_model_has_sort_group ()</title>
<indexterm><primary>e_table_model_has_sort_group</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_table_model_has_sort_group    (<link linkend="ETableModel">ETableModel</link> *e_table_model);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-duplicate-value">e_table_model_duplicate_value ()</title>
<indexterm><primary>e_table_model_duplicate_value</primary></indexterm><programlisting><link linkend="void">void</link>*       e_table_model_duplicate_value   (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             const <link linkend="void">void</link> *value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>col</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-free-value">e_table_model_free_value ()</title>
<indexterm><primary>e_table_model_free_value</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_model_free_value        (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             <link linkend="void">void</link> *value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>col</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-initialize-value">e_table_model_initialize_value ()</title>
<indexterm><primary>e_table_model_initialize_value</primary></indexterm><programlisting><link linkend="void">void</link>*       e_table_model_initialize_value  (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>col</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-value-is-empty">e_table_model_value_is_empty ()</title>
<indexterm><primary>e_table_model_value_is_empty</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_table_model_value_is_empty    (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             const <link linkend="void">void</link> *value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>col</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-value-to-string">e_table_model_value_to_string ()</title>
<indexterm><primary>e_table_model_value_to_string</primary></indexterm><programlisting><link linkend="char">char</link>*       e_table_model_value_to_string   (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             const <link linkend="void">void</link> *value);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>col</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-pre-change">e_table_model_pre_change ()</title>
<indexterm><primary>e_table_model_pre_change</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_model_pre_change        (<link linkend="ETableModel">ETableModel</link> *e_table_model);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-changed">e_table_model_changed ()</title>
<indexterm><primary>e_table_model_changed</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_model_changed           (<link linkend="ETableModel">ETableModel</link> *e_table_model);</programlisting>
<para>
Use this function to notify any views of this table model that
the contents of the table model have changed.  This will emit
the signal "model_changed" on the <parameter>e_table_model</parameter> object.
</para>
<para>
It is preferable to use the <link linkend="e-table-model-row-changed"><function>e_table_model_row_changed()</function></link> and
the <link linkend="e-table-model-cell-changed"><function>e_table_model_cell_changed()</function></link> to notify of smaller changes
than to invalidate the entire model, as the views might have
ways of caching the information they render from the model.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara> the table model to notify of the change
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-row-changed">e_table_model_row_changed ()</title>
<indexterm><primary>e_table_model_row_changed</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_model_row_changed       (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> row);</programlisting>
<para>
Use this function to notify any views of the table model that
the contents of row <parameter>row</parameter> have changed in model.  This function
will emit the "model_row_changed" signal on the <parameter>e_table_model</parameter>
object</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara> the table model to notify of the change
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>row</parameter>&nbsp;:</term>
<listitem><simpara> the row that was changed in the model.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-cell-changed">e_table_model_cell_changed ()</title>
<indexterm><primary>e_table_model_cell_changed</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_model_cell_changed      (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> col,
                                             <link linkend="int">int</link> row);</programlisting>
<para>
Use this function to notify any views of the table model that
contents of the cell at <parameter>col</parameter>,<parameter>row</parameter> has changed. This will emit
the "model_cell_changed" signal on the <parameter>e_table_model</parameter>
object</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara> the table model to notify of the change
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>col</parameter>&nbsp;:</term>
<listitem><simpara> the column.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>row</parameter>&nbsp;:</term>
<listitem><simpara> the row
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-row-inserted">e_table_model_row_inserted ()</title>
<indexterm><primary>e_table_model_row_inserted</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_model_row_inserted      (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> row);</programlisting>
<para>
Use this function to notify any views of the table model that the
row <parameter>row</parameter> has been inserted into the model.  This function will emit
the "model_rows_inserted" signal on the <parameter>e_table_model</parameter> object</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara> the table model to notify of the change
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>row</parameter>&nbsp;:</term>
<listitem><simpara> the row that was inserted into the model.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-table-model-row-deleted">e_table_model_row_deleted ()</title>
<indexterm><primary>e_table_model_row_deleted</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_model_row_deleted       (<link linkend="ETableModel">ETableModel</link> *e_table_model,
                                             <link linkend="int">int</link> row);</programlisting>
<para>
Use this function to notify any views of the table model that the
row <parameter>row</parameter> has been deleted from the model.  This function will emit
the "model_rows_deleted" signal on the <parameter>e_table_model</parameter> object</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>e_table_model</parameter>&nbsp;:</term>
<listitem><simpara> the table model to notify of the change
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>row</parameter>&nbsp;:</term>
<listitem><simpara> the row that was deleted
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="ETableModel-model-changed">The &quot;model-changed&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETableModel">ETableModel</link> *etablemodel,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etablemodel</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETableModel-model-pre-change">The &quot;model-pre-change&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETableModel">ETableModel</link> *etablemodel,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etablemodel</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETableModel-model-row-changed">The &quot;model-row-changed&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETableModel">ETableModel</link> *etablemodel,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etablemodel</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETableModel-model-cell-changed">The &quot;model-cell-changed&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETableModel">ETableModel</link> *etablemodel,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etablemodel</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETableModel-model-row-inserted">The &quot;model-row-inserted&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETableModel">ETableModel</link> *etablemodel,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etablemodel</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="ETableModel-model-row-deleted">The &quot;model-row-deleted&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETableModel">ETableModel</link> *etablemodel,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etablemodel</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
