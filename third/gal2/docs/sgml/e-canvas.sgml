<refentry id="ECanvas">
<refmeta>
<refentrytitle>ECanvas</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GAL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>ECanvas</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



#define     <link linkend="E-CANVAS-TYPE-CAPS">E_CANVAS_TYPE</link>
<link linkend="void">void</link>        (<link linkend="ECanvasItemReflowFunc">*ECanvasItemReflowFunc</link>)        (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="gint">gint</link> flags);
<link linkend="void">void</link>        (<link linkend="ECanvasItemSelectionFunc">*ECanvasItemSelectionFunc</link>)     (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="gint">gint</link> flags,
                                             <link linkend="gpointer">gpointer</link> user_data);
<link linkend="gint">gint</link>        (<link linkend="ECanvasItemSelectionCompareFunc">*ECanvasItemSelectionCompareFunc</link>)
                                            (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="gpointer">gpointer</link> data1,
                                             <link linkend="gpointer">gpointer</link> data2,
                                             <link linkend="gint">gint</link> flags);
typedef     <link linkend="ECanvasSelectionInfo">ECanvasSelectionInfo</link>;
struct      <link linkend="ECanvas-struct">ECanvas</link>;
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="e-canvas-new">e_canvas_new</link>                    (void);
<link linkend="void">void</link>        <link linkend="e-canvas-item-grab-focus">e_canvas_item_grab_focus</link>        (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item);
<link linkend="void">void</link>        <link linkend="e-canvas-item-request-reflow">e_canvas_item_request_reflow</link>    (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item);
<link linkend="void">void</link>        <link linkend="e-canvas-item-request-parent-reflow">e_canvas_item_request_parent_reflow</link>
                                            (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item);
<link linkend="void">void</link>        <link linkend="e-canvas-item-set-reflow-callback">e_canvas_item_set_reflow_callback</link>
                                            (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="ECanvasItemReflowFunc">ECanvasItemReflowFunc</link> func);
<link linkend="void">void</link>        <link linkend="e-canvas-item-set-selection-callback">e_canvas_item_set_selection_callback</link>
                                            (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="ECanvasItemSelectionFunc">ECanvasItemSelectionFunc</link> func);
<link linkend="void">void</link>        <link linkend="e-canvas-item-set-selection-compare-callback">e_canvas_item_set_selection_compare_callback</link>
                                            (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="ECanvasItemSelectionCompareFunc">ECanvasItemSelectionCompareFunc</link> func);
<link linkend="void">void</link>        <link linkend="e-canvas-item-set-cursor">e_canvas_item_set_cursor</link>        (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="gpointer">gpointer</link> id);
<link linkend="void">void</link>        <link linkend="e-canvas-item-add-selection">e_canvas_item_add_selection</link>     (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="gpointer">gpointer</link> id);
<link linkend="void">void</link>        <link linkend="e-canvas-item-remove-selection">e_canvas_item_remove_selection</link>  (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="gpointer">gpointer</link> id);
<link linkend="void">void</link>        <link linkend="e-canvas-item-set-cursor-end">e_canvas_item_set_cursor_end</link>    (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="gpointer">gpointer</link> id);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GtkObject">GtkObject</link>
   +----<link linkend="GtkWidget">GtkWidget</link>
         +----<link linkend="GtkContainer">GtkContainer</link>
               +----<link linkend="GtkLayout">GtkLayout</link>
                     +----<link linkend="GnomeCanvas">GnomeCanvas</link>
                           +----ECanvas
</synopsis>

</refsect1>






<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="ECanvas-reflow">reflow</link>&quot;    <link linkend="void">void</link>        user_function      (<link linkend="ECanvas">ECanvas</link> *ecanvas,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="E-CANVAS-TYPE-CAPS">E_CANVAS_TYPE</title>
<indexterm><primary>E_CANVAS_TYPE</primary></indexterm><programlisting>#define E_CANVAS_TYPE			(e_canvas_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECanvasItemReflowFunc">ECanvasItemReflowFunc ()</title>
<indexterm><primary>ECanvasItemReflowFunc</primary></indexterm><programlisting><link linkend="void">void</link>        (*ECanvasItemReflowFunc)        (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="gint">gint</link> flags);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="ECanvasItemSelectionFunc">ECanvasItemSelectionFunc ()</title>
<indexterm><primary>ECanvasItemSelectionFunc</primary></indexterm><programlisting><link linkend="void">void</link>        (*ECanvasItemSelectionFunc)     (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="gint">gint</link> flags,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="ECanvasItemSelectionCompareFunc">ECanvasItemSelectionCompareFunc ()</title>
<indexterm><primary>ECanvasItemSelectionCompareFunc</primary></indexterm><programlisting><link linkend="gint">gint</link>        (*ECanvasItemSelectionCompareFunc)
                                            (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="gpointer">gpointer</link> data1,
                                             <link linkend="gpointer">gpointer</link> data2,
                                             <link linkend="gint">gint</link> flags);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="ECanvasSelectionInfo">ECanvasSelectionInfo</title>
<indexterm><primary>ECanvasSelectionInfo</primary></indexterm><programlisting>typedef struct {
	GnomeCanvasItem *item;
	gpointer         id;
} ECanvasSelectionInfo;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECanvas-struct">struct ECanvas</title>
<indexterm><primary>ECanvas</primary></indexterm><programlisting>struct ECanvas;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="e-canvas-new">e_canvas_new ()</title>
<indexterm><primary>e_canvas_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  e_canvas_new                    (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-canvas-item-grab-focus">e_canvas_item_grab_focus ()</title>
<indexterm><primary>e_canvas_item_grab_focus</primary></indexterm><programlisting><link linkend="void">void</link>        e_canvas_item_grab_focus        (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item);</programlisting>
<para>
Makes the specified item take the keyboard focus, so all keyboard
events will be sent to it. If the canvas widget itself did not have
the focus and <parameter>widget_too</parameter> is <literal>TRUE</literal>, it grabs that focus as well.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> A canvas item.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-canvas-item-request-reflow">e_canvas_item_request_reflow ()</title>
<indexterm><primary>e_canvas_item_request_reflow</primary></indexterm><programlisting><link linkend="void">void</link>        e_canvas_item_request_reflow    (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-canvas-item-request-parent-reflow">e_canvas_item_request_parent_reflow ()</title>
<indexterm><primary>e_canvas_item_request_parent_reflow</primary></indexterm><programlisting><link linkend="void">void</link>        e_canvas_item_request_parent_reflow
                                            (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-canvas-item-set-reflow-callback">e_canvas_item_set_reflow_callback ()</title>
<indexterm><primary>e_canvas_item_set_reflow_callback</primary></indexterm><programlisting><link linkend="void">void</link>        e_canvas_item_set_reflow_callback
                                            (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="ECanvasItemReflowFunc">ECanvasItemReflowFunc</link> func);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-canvas-item-set-selection-callback">e_canvas_item_set_selection_callback ()</title>
<indexterm><primary>e_canvas_item_set_selection_callback</primary></indexterm><programlisting><link linkend="void">void</link>        e_canvas_item_set_selection_callback
                                            (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="ECanvasItemSelectionFunc">ECanvasItemSelectionFunc</link> func);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-canvas-item-set-selection-compare-callback">e_canvas_item_set_selection_compare_callback ()</title>
<indexterm><primary>e_canvas_item_set_selection_compare_callback</primary></indexterm><programlisting><link linkend="void">void</link>        e_canvas_item_set_selection_compare_callback
                                            (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="ECanvasItemSelectionCompareFunc">ECanvasItemSelectionCompareFunc</link> func);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-canvas-item-set-cursor">e_canvas_item_set_cursor ()</title>
<indexterm><primary>e_canvas_item_set_cursor</primary></indexterm><programlisting><link linkend="void">void</link>        e_canvas_item_set_cursor        (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="gpointer">gpointer</link> id);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-canvas-item-add-selection">e_canvas_item_add_selection ()</title>
<indexterm><primary>e_canvas_item_add_selection</primary></indexterm><programlisting><link linkend="void">void</link>        e_canvas_item_add_selection     (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="gpointer">gpointer</link> id);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-canvas-item-remove-selection">e_canvas_item_remove_selection ()</title>
<indexterm><primary>e_canvas_item_remove_selection</primary></indexterm><programlisting><link linkend="void">void</link>        e_canvas_item_remove_selection  (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="gpointer">gpointer</link> id);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-canvas-item-set-cursor-end">e_canvas_item_set_cursor_end ()</title>
<indexterm><primary>e_canvas_item_set_cursor_end</primary></indexterm><programlisting><link linkend="void">void</link>        e_canvas_item_set_cursor_end    (<link linkend="GnomeCanvasItem">GnomeCanvasItem</link> *item,
                                             <link linkend="gpointer">gpointer</link> id);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="ECanvas-reflow">The &quot;reflow&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ECanvas">ECanvas</link> *ecanvas,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ecanvas</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
