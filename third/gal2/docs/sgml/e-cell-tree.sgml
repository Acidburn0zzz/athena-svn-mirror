<refentry id="ECellTree" revision="12 Jan 2001">
<refmeta>
<refentrytitle>ECellTree</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GAL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>ECellTree</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



#define     <link linkend="E-CELL-TREE-TYPE-CAPS">E_CELL_TREE_TYPE</link>
typedef     <link linkend="ECellTree">ECellTree</link>;
<link linkend="ECell">ECell</link>*      <link linkend="e-cell-tree-new">e_cell_tree_new</link>                 (<link linkend="GdkPixbuf">GdkPixbuf</link> *open_pixbuf,
                                             <link linkend="GdkPixbuf">GdkPixbuf</link> *closed_pixbuf,
                                             <link linkend="gboolean">gboolean</link> draw_lines,
                                             <link linkend="ECell">ECell</link> *subcell);
void        <link linkend="e-cell-tree-construct">e_cell_tree_construct</link>           (<link linkend="ECellTree">ECellTree</link> *ect,
                                             <link linkend="GdkPixbuf">GdkPixbuf</link> *open_pixbuf,
                                             <link linkend="GdkPixbuf">GdkPixbuf</link> *closed_pixbuf,
                                             <link linkend="gboolean">gboolean</link> draw_lines,
                                             <link linkend="ECell">ECell</link> *subcell);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GtkObject">GtkObject</link>
   +----<link linkend="ECell">ECell</link>
         +----ECellTree
</synopsis>

</refsect1>




<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="E-CELL-TREE-TYPE-CAPS">E_CELL_TREE_TYPE</title>
<programlisting>#define E_CELL_TREE_TYPE        (e_cell_tree_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECellTree">ECellTree</title>
<programlisting>typedef struct {
	ECell parent;

	gboolean draw_lines;

	GdkPixbuf   *open_pixbuf;
	GdkPixbuf   *closed_pixbuf;

	ECell *subcell;
} ECellTree;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="e-cell-tree-new">e_cell_tree_new ()</title>
<programlisting><link linkend="ECell">ECell</link>*      e_cell_tree_new                 (<link linkend="GdkPixbuf">GdkPixbuf</link> *open_pixbuf,
                                             <link linkend="GdkPixbuf">GdkPixbuf</link> *closed_pixbuf,
                                             <link linkend="gboolean">gboolean</link> draw_lines,
                                             <link linkend="ECell">ECell</link> *subcell);</programlisting>
<para>
Creates a new ECell renderer that can be used to render tree
effects that come from an ETreeModel.  Various assumptions are made
as to the fact that the ETableModel the ETable this cell is
associated with is in fact an ETreeModel.  The cell uses special
columns to get at structural information (needed to draw the
lines/icons.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>open_pixbuf</parameter>&nbsp;:</entry>
<entry> pixbuf to be used instead of the '-' icon.
</entry></row>
<row><entry align="right"><parameter>closed_pixbuf</parameter>&nbsp;:</entry>
<entry> pixbuf to be used instead of the '+' icon.
</entry></row>
<row><entry align="right"><parameter>draw_lines</parameter>&nbsp;:</entry>
<entry> whether or not to draw the lines between parents/children/siblings.
</entry></row>
<row><entry align="right"><parameter>subcell</parameter>&nbsp;:</entry>
<entry> the ECell to render to the right of the tree effects.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> an ECell object that can be used to render trees.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-tree-construct">e_cell_tree_construct ()</title>
<programlisting>void        e_cell_tree_construct           (<link linkend="ECellTree">ECellTree</link> *ect,
                                             <link linkend="GdkPixbuf">GdkPixbuf</link> *open_pixbuf,
                                             <link linkend="GdkPixbuf">GdkPixbuf</link> *closed_pixbuf,
                                             <link linkend="gboolean">gboolean</link> draw_lines,
                                             <link linkend="ECell">ECell</link> *subcell);</programlisting>
<para>
Constructs an ECellTree.  used by subclasses that need to
initialize a nested ECellTree.  See <link linkend="e-cell-tree-new">e_cell_tree_new</link>() for more info.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ect</parameter>&nbsp;:</entry>
<entry> the ECellTree we're constructing.
</entry></row>
<row><entry align="right"><parameter>open_pixbuf</parameter>&nbsp;:</entry>
<entry> pixbuf to be used instead of the '-' icon.
</entry></row>
<row><entry align="right"><parameter>closed_pixbuf</parameter>&nbsp;:</entry>
<entry> pixbuf to be used instead of the '+' icon.
</entry></row>
<row><entry align="right"><parameter>draw_lines</parameter>&nbsp;:</entry>
<entry> whether or not to draw the lines between parents/children/siblings.
</entry></row>
<row><entry align="right"><parameter>subcell</parameter>&nbsp;:</entry>
<entry> the ECell to render to the right of the tree effects.
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
