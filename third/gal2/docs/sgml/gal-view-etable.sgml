<refentry id="GalViewEtable">
<refmeta>
<refentrytitle>GalViewEtable</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GAL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GalViewEtable</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



#define     <link linkend="GAL-VIEW-ETABLE-TYPE-CAPS">GAL_VIEW_ETABLE_TYPE</link>
typedef     <link linkend="GalViewEtable">GalViewEtable</link>;
<link linkend="GalView">GalView</link>*    <link linkend="gal-view-etable-new">gal_view_etable_new</link>             (<link linkend="ETableSpecification">ETableSpecification</link> *spec);
<link linkend="GalView">GalView</link>*    <link linkend="gal-view-etable-construct">gal_view_etable_construct</link>       (<link linkend="GalViewEtable">GalViewEtable</link> *view,
                                             <link linkend="ETableSpecification">ETableSpecification</link> *spec);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GtkObject">GtkObject</link>
   +----<link linkend="GalView">GalView</link>
         +----GalViewEtable
</synopsis>

</refsect1>








<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GAL-VIEW-ETABLE-TYPE-CAPS">GAL_VIEW_ETABLE_TYPE</title>
<indexterm><primary>GAL_VIEW_ETABLE_TYPE</primary></indexterm><programlisting>#define GAL_VIEW_ETABLE_TYPE        (gal_view_etable_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GalViewEtable">GalViewEtable</title>
<indexterm><primary>GalViewEtable</primary></indexterm><programlisting>typedef struct {
	GalView base;

	ETableSpecification *spec;
	ETableState         *state;
	char                *title;
} GalViewEtable;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gal-view-etable-new">gal_view_etable_new ()</title>
<indexterm><primary>gal_view_etable_new</primary></indexterm><programlisting><link linkend="GalView">GalView</link>*    gal_view_etable_new             (<link linkend="ETableSpecification">ETableSpecification</link> *spec);</programlisting>
<para>
A new GalViewFactory for creating ETable views.  Create one of
these and pass it to GalViewCollection for use.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>spec</parameter>&nbsp;:</term>
<listitem><simpara> The spec to create GalViewEtables based upon.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The new GalViewFactoryEtable.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gal-view-etable-construct">gal_view_etable_construct ()</title>
<indexterm><primary>gal_view_etable_construct</primary></indexterm><programlisting><link linkend="GalView">GalView</link>*    gal_view_etable_construct       (<link linkend="GalViewEtable">GalViewEtable</link> *view,
                                             <link linkend="ETableSpecification">ETableSpecification</link> *spec);</programlisting>
<para>
constructs the GalViewFactoryEtable.  To be used by subclasses and
language bindings.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>view</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>spec</parameter>&nbsp;:</term>
<listitem><simpara> The spec to create GalViewEtables based upon.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The GalViewFactoryEtable.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
