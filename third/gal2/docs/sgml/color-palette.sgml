<refentry id="ColorPalette">
<refmeta>
<refentrytitle>ColorPalette</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GAL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>ColorPalette</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



#define     <link linkend="COLOR-PALETTE-TYPE-CAPS">COLOR_PALETTE_TYPE</link>
#define     <link linkend="COLOR-PALETTE-CAPS">COLOR_PALETTE</link>                   (obj)
#define     <link linkend="COLOR-PALETTE-CLASS-CAPS">COLOR_PALETTE_CLASS</link>             (k)
#define     <link linkend="IS-COLOR-PALETTE-CAPS">IS_COLOR_PALETTE</link>                (obj)
<link linkend="GtkType">GtkType</link>     <link linkend="color-palette-get-type">color_palette_get_type</link>          (void);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="color-palette-new">color_palette_new</link>               (const <link linkend="char">char</link> *no_color_label,
                                             <link linkend="GdkColor">GdkColor</link> *default_color,
                                             const <link linkend="gchar">gchar</link> *group_name);
<link linkend="GdkColor">GdkColor</link>*   <link linkend="color-palette-get-current-color">color_palette_get_current_color</link> (<link linkend="ColorPalette">ColorPalette</link> *P);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="color-palette-get-color-picker">color_palette_get_color_picker</link>  (<link linkend="ColorPalette">ColorPalette</link> *P);
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="COLOR-PALETTE-TYPE-CAPS">COLOR_PALETTE_TYPE</title>
<indexterm><primary>COLOR_PALETTE_TYPE</primary></indexterm><programlisting>#define COLOR_PALETTE_TYPE     (color_palette_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="COLOR-PALETTE-CAPS">COLOR_PALETTE()</title>
<indexterm><primary>COLOR_PALETTE</primary></indexterm><programlisting>#define COLOR_PALETTE(obj)     (GTK_CHECK_CAST((obj), COLOR_PALETTE_TYPE, ColorPalette))
</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="COLOR-PALETTE-CLASS-CAPS">COLOR_PALETTE_CLASS()</title>
<indexterm><primary>COLOR_PALETTE_CLASS</primary></indexterm><programlisting>#define COLOR_PALETTE_CLASS(k) (GTK_CHECK_CLASS_CAST(k), COLOR_PALETTE_TYPE)
</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>k</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="IS-COLOR-PALETTE-CAPS">IS_COLOR_PALETTE()</title>
<indexterm><primary>IS_COLOR_PALETTE</primary></indexterm><programlisting>#define IS_COLOR_PALETTE(obj)  (GTK_CHECK_TYPE((obj), COLOR_PALETTE_TYPE))
</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="color-palette-get-type">color_palette_get_type ()</title>
<indexterm><primary>color_palette_get_type</primary></indexterm><programlisting><link linkend="GtkType">GtkType</link>     color_palette_get_type          (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="color-palette-new">color_palette_new ()</title>
<indexterm><primary>color_palette_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  color_palette_new               (const <link linkend="char">char</link> *no_color_label,
                                             <link linkend="GdkColor">GdkColor</link> *default_color,
                                             const <link linkend="gchar">gchar</link> *group_name);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>no_color_label</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_color</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group_name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="color-palette-get-current-color">color_palette_get_current_color ()</title>
<indexterm><primary>color_palette_get_current_color</primary></indexterm><programlisting><link linkend="GdkColor">GdkColor</link>*   color_palette_get_current_color (<link linkend="ColorPalette">ColorPalette</link> *P);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>P</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="color-palette-get-color-picker">color_palette_get_color_picker ()</title>
<indexterm><primary>color_palette_get_color_picker</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  color_palette_get_color_picker  (<link linkend="ColorPalette">ColorPalette</link> *P);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>P</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
