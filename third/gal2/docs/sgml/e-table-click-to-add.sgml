<refentry id="ETableClickToAdd">
<refmeta>
<refentrytitle>ETableClickToAdd</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GAL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>ETableClickToAdd</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



#define     <link linkend="E-TABLE-CLICK-TO-ADD-TYPE-CAPS">E_TABLE_CLICK_TO_ADD_TYPE</link>
typedef     <link linkend="ETableClickToAdd">ETableClickToAdd</link>;
<link linkend="void">void</link>        <link linkend="e-table-click-to-add-commit">e_table_click_to_add_commit</link>     (<link linkend="ETableClickToAdd">ETableClickToAdd</link> *etcta);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GtkObject">GtkObject</link>
   +----<link linkend="GnomeCanvasItem">GnomeCanvasItem</link>
         +----<link linkend="GnomeCanvasGroup">GnomeCanvasGroup</link>
               +----ETableClickToAdd
</synopsis>

</refsect1>





<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="ETableClickToAdd--header">header</link>&quot;               <link linkend="GtkObject">GtkObject</link>            : Read / Write
  &quot;<link linkend="ETableClickToAdd--model">model</link>&quot;                <link linkend="GtkObject">GtkObject</link>            : Read / Write
  &quot;<link linkend="ETableClickToAdd--message">message</link>&quot;              <link linkend="gchar">gchar</link>*               : Read / Write
  &quot;<link linkend="ETableClickToAdd--width">width</link>&quot;                <link linkend="gdouble">gdouble</link>              : Read / Write
  &quot;<link linkend="ETableClickToAdd--height">height</link>&quot;               <link linkend="gdouble">gdouble</link>              : Read
</synopsis>
</refsect1>

<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="ETableClickToAdd-cursor-change">cursor-change</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="ETableClickToAdd">ETableClickToAdd</link> *etableclicktoadd,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="E-TABLE-CLICK-TO-ADD-TYPE-CAPS">E_TABLE_CLICK_TO_ADD_TYPE</title>
<indexterm><primary>E_TABLE_CLICK_TO_ADD_TYPE</primary></indexterm><programlisting>#define E_TABLE_CLICK_TO_ADD_TYPE        (e_table_click_to_add_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ETableClickToAdd">ETableClickToAdd</title>
<indexterm><primary>ETableClickToAdd</primary></indexterm><programlisting>typedef struct {
	GnomeCanvasGroup  parent;

	ETableModel      *one;    /* The ETableOne. */

	ETableModel      *model;  /* The backend model. */
	ETableHeader     *eth;    /* This is just to give to the ETableItem. */

	char             *message;

	GnomeCanvasItem  *row;    /* If row is NULL, we're sitting with no data and a "Click here" message. */
	GnomeCanvasItem  *text;   /* If text is NULL, row shouldn't be. */
	GnomeCanvasItem  *rect;   /* What the heck.  Why not. */
	
	gdouble           width;
	gdouble           height;

	ETableSelectionModel *selection;
} ETableClickToAdd;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="e-table-click-to-add-commit">e_table_click_to_add_commit ()</title>
<indexterm><primary>e_table_click_to_add_commit</primary></indexterm><programlisting><link linkend="void">void</link>        e_table_click_to_add_commit     (<link linkend="ETableClickToAdd">ETableClickToAdd</link> *etcta);</programlisting>
<para>
This routine commits the current thing being edited and returns to
just displaying the click to add message.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etcta</parameter>&nbsp;:</term>
<listitem><simpara> The <literal>ETableClickToAdd</literal> to commit.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<variablelist>
<varlistentry><term><anchor id="ETableClickToAdd--header">&quot;<literal>header</literal>&quot; (<link linkend="GtkObject">GtkObject</link> : Read / Write)</term>
<listitem>
<para></para>
</listitem></varlistentry>
<varlistentry><term><anchor id="ETableClickToAdd--model">&quot;<literal>model</literal>&quot; (<link linkend="GtkObject">GtkObject</link> : Read / Write)</term>
<listitem>
<para></para>
</listitem></varlistentry>
<varlistentry><term><anchor id="ETableClickToAdd--message">&quot;<literal>message</literal>&quot; (<link linkend="gchar">gchar</link>* : Read / Write)</term>
<listitem>
<para></para>
</listitem></varlistentry>
<varlistentry><term><anchor id="ETableClickToAdd--width">&quot;<literal>width</literal>&quot; (<link linkend="gdouble">gdouble</link> : Read / Write)</term>
<listitem>
<para></para>
</listitem></varlistentry>
<varlistentry><term><anchor id="ETableClickToAdd--height">&quot;<literal>height</literal>&quot; (<link linkend="gdouble">gdouble</link> : Read)</term>
<listitem>
<para></para>
</listitem></varlistentry>

</variablelist>
</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="ETableClickToAdd-cursor-change">The &quot;cursor-change&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="ETableClickToAdd">ETableClickToAdd</link> *etableclicktoadd,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>etableclicktoadd</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
