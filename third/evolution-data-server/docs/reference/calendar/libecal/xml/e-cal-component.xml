<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="ECalComponent">
<refmeta>
<refentrytitle>ECalComponent</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBECAL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>ECalComponent</refname><refpurpose>Typically an appointment or task, part of the ECal object.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



struct      <link linkend="ECalComponent-struct">ECalComponent</link>;
enum        <link linkend="ECalComponentVType">ECalComponentVType</link>;
enum        <link linkend="ECalComponentField">ECalComponentField</link>;
enum        <link linkend="ECalComponentClassification">ECalComponentClassification</link>;
struct      <link linkend="ECalComponentDateTime">ECalComponentDateTime</link>;
enum        <link linkend="ECalComponentPeriodType">ECalComponentPeriodType</link>;
struct      <link linkend="ECalComponentPeriod">ECalComponentPeriod</link>;
enum        <link linkend="ECalComponentRangeType">ECalComponentRangeType</link>;
struct      <link linkend="ECalComponentRange">ECalComponentRange</link>;
struct      <link linkend="ECalComponentText">ECalComponentText</link>;
enum        <link linkend="ECalComponentTransparency">ECalComponentTransparency</link>;
struct      <link linkend="ECalComponentAttendee">ECalComponentAttendee</link>;
struct      <link linkend="ECalComponentOrganizer">ECalComponentOrganizer</link>;
<link linkend="char">char</link>*       <link linkend="e-cal-component-gen-uid">e_cal_component_gen_uid</link>         (void);
<link linkend="ECalComponent">ECalComponent</link>* <link linkend="e-cal-component-new">e_cal_component_new</link>          (void);
<link linkend="ECalComponent">ECalComponent</link>* <link linkend="e-cal-component-clone">e_cal_component_clone</link>        (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-new-vtype">e_cal_component_set_new_vtype</link>   (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentVType">ECalComponentVType</link> type);
<link linkend="gboolean">gboolean</link>    <link linkend="e-cal-component-set-icalcomponent">e_cal_component_set_icalcomponent</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="icalcomponent">icalcomponent</link> *icalcomp);
<link linkend="icalcomponent">icalcomponent</link>* <link linkend="e-cal-component-get-icalcomponent">e_cal_component_get_icalcomponent</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="void">void</link>        <link linkend="e-cal-component-rescan">e_cal_component_rescan</link>          (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="void">void</link>        <link linkend="e-cal-component-strip-errors">e_cal_component_strip_errors</link>    (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="ECalComponentVType">ECalComponentVType</link> <link linkend="e-cal-component-get-vtype">e_cal_component_get_vtype</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="char">char</link>*       <link linkend="e-cal-component-get-as-string">e_cal_component_get_as_string</link>   (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="void">void</link>        <link linkend="e-cal-component-commit-sequence">e_cal_component_commit_sequence</link> (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="void">void</link>        <link linkend="e-cal-component-abort-sequence">e_cal_component_abort_sequence</link>  (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-uid">e_cal_component_get_uid</link>         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> **uid);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-uid">e_cal_component_set_uid</link>         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> *uid);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-categories">e_cal_component_get_categories</link>  (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> **categories);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-categories">e_cal_component_set_categories</link>  (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> *categories);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-categories-list">e_cal_component_get_categories_list</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **categ_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-categories-list">e_cal_component_set_categories_list</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *categ_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-classification">e_cal_component_get_classification</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentClassification">ECalComponentClassification</link> *classif);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-classification">e_cal_component_set_classification</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentClassification">ECalComponentClassification</link> classif);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-comment-list">e_cal_component_get_comment_list</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **text_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-comment-list">e_cal_component_set_comment_list</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *text_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-completed">e_cal_component_get_completed</link>   (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> **t);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-completed">e_cal_component_set_completed</link>   (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> *t);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-contact-list">e_cal_component_get_contact_list</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **text_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-contact-list">e_cal_component_set_contact_list</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *text_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-created">e_cal_component_get_created</link>     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> **t);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-created">e_cal_component_set_created</link>     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> *t);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-description-list">e_cal_component_get_description_list</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **text_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-description-list">e_cal_component_set_description_list</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *text_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-dtend">e_cal_component_get_dtend</link>       (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentDateTime">ECalComponentDateTime</link> *dt);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-dtend">e_cal_component_set_dtend</link>       (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentDateTime">ECalComponentDateTime</link> *dt);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-dtstamp">e_cal_component_get_dtstamp</link>     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> *t);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-dtstamp">e_cal_component_set_dtstamp</link>     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> *t);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-dtstart">e_cal_component_get_dtstart</link>     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentDateTime">ECalComponentDateTime</link> *dt);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-dtstart">e_cal_component_set_dtstart</link>     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentDateTime">ECalComponentDateTime</link> *dt);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-due">e_cal_component_get_due</link>         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentDateTime">ECalComponentDateTime</link> *dt);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-due">e_cal_component_set_due</link>         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentDateTime">ECalComponentDateTime</link> *dt);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-exdate-list">e_cal_component_get_exdate_list</link> (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **exdate_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-exdate-list">e_cal_component_set_exdate_list</link> (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *exdate_list);
<link linkend="gboolean">gboolean</link>    <link linkend="e-cal-component-has-exdates">e_cal_component_has_exdates</link>     (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-exrule-list">e_cal_component_get_exrule_list</link> (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **recur_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-exrule-property-list">e_cal_component_get_exrule_property_list</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **recur_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-exrule-list">e_cal_component_set_exrule_list</link> (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *recur_list);
<link linkend="gboolean">gboolean</link>    <link linkend="e-cal-component-has-exrules">e_cal_component_has_exrules</link>     (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="gboolean">gboolean</link>    <link linkend="e-cal-component-has-exceptions">e_cal_component_has_exceptions</link>  (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-geo">e_cal_component_get_geo</link>         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icalgeotype">icalgeotype</link> **geo);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-geo">e_cal_component_set_geo</link>         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icalgeotype">icalgeotype</link> *geo);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-last-modified">e_cal_component_get_last_modified</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> **t);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-last-modified">e_cal_component_set_last_modified</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> *t);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-organizer">e_cal_component_get_organizer</link>   (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentOrganizer">ECalComponentOrganizer</link> *organizer);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-organizer">e_cal_component_set_organizer</link>   (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentOrganizer">ECalComponentOrganizer</link> *organizer);
<link linkend="gboolean">gboolean</link>    <link linkend="e-cal-component-has-organizer">e_cal_component_has_organizer</link>   (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-percent">e_cal_component_get_percent</link>     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="int">int</link> **percent);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-percent">e_cal_component_set_percent</link>     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="int">int</link> *percent);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-priority">e_cal_component_get_priority</link>    (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="int">int</link> **priority);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-priority">e_cal_component_set_priority</link>    (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="int">int</link> *priority);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-recurid">e_cal_component_get_recurid</link>     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentRange">ECalComponentRange</link> *recur_id);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-recurid">e_cal_component_set_recurid</link>     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentRange">ECalComponentRange</link> *recur_id);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-rdate-list">e_cal_component_get_rdate_list</link>  (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **period_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-rdate-list">e_cal_component_set_rdate_list</link>  (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *period_list);
<link linkend="gboolean">gboolean</link>    <link linkend="e-cal-component-has-rdates">e_cal_component_has_rdates</link>      (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-rrule-list">e_cal_component_get_rrule_list</link>  (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **recur_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-rrule-property-list">e_cal_component_get_rrule_property_list</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **recur_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-rrule-list">e_cal_component_set_rrule_list</link>  (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *recur_list);
<link linkend="gboolean">gboolean</link>    <link linkend="e-cal-component-has-rrules">e_cal_component_has_rrules</link>      (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="gboolean">gboolean</link>    <link linkend="e-cal-component-has-recurrences">e_cal_component_has_recurrences</link> (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="gboolean">gboolean</link>    <link linkend="e-cal-component-has-simple-recurrence">e_cal_component_has_simple_recurrence</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="gboolean">gboolean</link>    <link linkend="e-cal-component-is-instance">e_cal_component_is_instance</link>     (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-sequence">e_cal_component_get_sequence</link>    (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="int">int</link> **sequence);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-sequence">e_cal_component_set_sequence</link>    (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="int">int</link> *sequence);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-status">e_cal_component_get_status</link>      (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="icalproperty-status">icalproperty_status</link> *status);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-status">e_cal_component_set_status</link>      (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="icalproperty-status">icalproperty_status</link> status);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-summary">e_cal_component_get_summary</link>     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentText">ECalComponentText</link> *summary);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-summary">e_cal_component_set_summary</link>     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentText">ECalComponentText</link> *summary);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-transparency">e_cal_component_get_transparency</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentTransparency">ECalComponentTransparency</link> *transp);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-transparency">e_cal_component_set_transparency</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentTransparency">ECalComponentTransparency</link> transp);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-url">e_cal_component_get_url</link>         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> **url);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-url">e_cal_component_set_url</link>         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> *url);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-attendee-list">e_cal_component_get_attendee_list</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **attendee_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-attendee-list">e_cal_component_set_attendee_list</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *attendee_list);
<link linkend="gboolean">gboolean</link>    <link linkend="e-cal-component-has-attendees">e_cal_component_has_attendees</link>   (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="void">void</link>        <link linkend="e-cal-component-get-location">e_cal_component_get_location</link>    (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> **location);
<link linkend="void">void</link>        <link linkend="e-cal-component-set-location">e_cal_component_set_location</link>    (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> *location);
<link linkend="gboolean">gboolean</link>    <link linkend="e-cal-component-event-dates-match">e_cal_component_event_dates_match</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp1,
                                             <link linkend="ECalComponent">ECalComponent</link> *comp2);
<link linkend="void">void</link>        <link linkend="e-cal-component-free-categories-list">e_cal_component_free_categories_list</link>
                                            (<link linkend="GSList">GSList</link> *categ_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-free-datetime">e_cal_component_free_datetime</link>   (<link linkend="ECalComponentDateTime">ECalComponentDateTime</link> *dt);
<link linkend="void">void</link>        <link linkend="e-cal-component-free-range">e_cal_component_free_range</link>      (<link linkend="ECalComponentRange">ECalComponentRange</link> *range);
<link linkend="void">void</link>        <link linkend="e-cal-component-free-exdate-list">e_cal_component_free_exdate_list</link>
                                            (<link linkend="GSList">GSList</link> *exdate_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-free-geo">e_cal_component_free_geo</link>        (struct <link linkend="icalgeotype">icalgeotype</link> *geo);
<link linkend="void">void</link>        <link linkend="e-cal-component-free-icaltimetype">e_cal_component_free_icaltimetype</link>
                                            (struct <link linkend="icaltimetype">icaltimetype</link> *t);
<link linkend="void">void</link>        <link linkend="e-cal-component-free-percent">e_cal_component_free_percent</link>    (<link linkend="int">int</link> *percent);
<link linkend="void">void</link>        <link linkend="e-cal-component-free-priority">e_cal_component_free_priority</link>   (<link linkend="int">int</link> *priority);
<link linkend="void">void</link>        <link linkend="e-cal-component-free-period-list">e_cal_component_free_period_list</link>
                                            (<link linkend="GSList">GSList</link> *period_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-free-recur-list">e_cal_component_free_recur_list</link> (<link linkend="GSList">GSList</link> *recur_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-free-sequence">e_cal_component_free_sequence</link>   (<link linkend="int">int</link> *sequence);
<link linkend="void">void</link>        <link linkend="e-cal-component-free-text-list">e_cal_component_free_text_list</link>  (<link linkend="GSList">GSList</link> *text_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-free-attendee-list">e_cal_component_free_attendee_list</link>
                                            (<link linkend="GSList">GSList</link> *attendee_list);
struct      <link linkend="ECalComponentAlarm">ECalComponentAlarm</link>;
struct      <link linkend="ECalComponentAlarmInstance">ECalComponentAlarmInstance</link>;
struct      <link linkend="ECalComponentAlarms">ECalComponentAlarms</link>;
enum        <link linkend="ECalComponentAlarmAction">ECalComponentAlarmAction</link>;
enum        <link linkend="ECalComponentAlarmTriggerType">ECalComponentAlarmTriggerType</link>;
struct      <link linkend="ECalComponentAlarmTrigger">ECalComponentAlarmTrigger</link>;
struct      <link linkend="ECalComponentAlarmRepeat">ECalComponentAlarmRepeat</link>;
<link linkend="gboolean">gboolean</link>    <link linkend="e-cal-component-has-alarms">e_cal_component_has_alarms</link>      (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="void">void</link>        <link linkend="e-cal-component-add-alarm">e_cal_component_add_alarm</link>       (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm);
<link linkend="void">void</link>        <link linkend="e-cal-component-remove-alarm">e_cal_component_remove_alarm</link>    (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> *auid);
<link linkend="void">void</link>        <link linkend="e-cal-component-remove-all-alarms">e_cal_component_remove_all_alarms</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="GList">GList</link>*      <link linkend="e-cal-component-get-alarm-uids">e_cal_component_get_alarm_uids</link>  (<link linkend="ECalComponent">ECalComponent</link> *comp);
<link linkend="ECalComponentAlarm">ECalComponentAlarm</link>* <link linkend="e-cal-component-get-alarm">e_cal_component_get_alarm</link>
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> *auid);
<link linkend="void">void</link>        <link linkend="e-cal-component-alarms-free">e_cal_component_alarms_free</link>     (<link linkend="ECalComponentAlarms">ECalComponentAlarms</link> *alarms);
<link linkend="ECalComponentAlarm">ECalComponentAlarm</link>* <link linkend="e-cal-component-alarm-new">e_cal_component_alarm_new</link>
                                            (void);
<link linkend="ECalComponentAlarm">ECalComponentAlarm</link>* <link linkend="e-cal-component-alarm-clone">e_cal_component_alarm_clone</link>
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm);
<link linkend="void">void</link>        <link linkend="e-cal-component-alarm-free">e_cal_component_alarm_free</link>      (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm);
const <link linkend="char">char</link>* <link linkend="e-cal-component-alarm-get-uid">e_cal_component_alarm_get_uid</link>   (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm);
<link linkend="void">void</link>        <link linkend="e-cal-component-alarm-get-action">e_cal_component_alarm_get_action</link>
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentAlarmAction">ECalComponentAlarmAction</link> *action);
<link linkend="void">void</link>        <link linkend="e-cal-component-alarm-set-action">e_cal_component_alarm_set_action</link>
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentAlarmAction">ECalComponentAlarmAction</link> action);
<link linkend="void">void</link>        <link linkend="e-cal-component-alarm-get-attach">e_cal_component_alarm_get_attach</link>
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="icalattach">icalattach</link> **attach);
<link linkend="void">void</link>        <link linkend="e-cal-component-alarm-set-attach">e_cal_component_alarm_set_attach</link>
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="icalattach">icalattach</link> *attach);
<link linkend="void">void</link>        <link linkend="e-cal-component-alarm-get-description">e_cal_component_alarm_get_description</link>
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentText">ECalComponentText</link> *description);
<link linkend="void">void</link>        <link linkend="e-cal-component-alarm-set-description">e_cal_component_alarm_set_description</link>
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentText">ECalComponentText</link> *description);
<link linkend="void">void</link>        <link linkend="e-cal-component-alarm-get-repeat">e_cal_component_alarm_get_repeat</link>
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentAlarmRepeat">ECalComponentAlarmRepeat</link> *repeat);
<link linkend="void">void</link>        <link linkend="e-cal-component-alarm-set-repeat">e_cal_component_alarm_set_repeat</link>
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentAlarmRepeat">ECalComponentAlarmRepeat</link> repeat);
<link linkend="void">void</link>        <link linkend="e-cal-component-alarm-get-trigger">e_cal_component_alarm_get_trigger</link>
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentAlarmTrigger">ECalComponentAlarmTrigger</link> *trigger);
<link linkend="void">void</link>        <link linkend="e-cal-component-alarm-set-trigger">e_cal_component_alarm_set_trigger</link>
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentAlarmTrigger">ECalComponentAlarmTrigger</link> trigger);
<link linkend="void">void</link>        <link linkend="e-cal-component-alarm-get-attendee-list">e_cal_component_alarm_get_attendee_list</link>
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="GSList">GSList</link> **attendee_list);
<link linkend="void">void</link>        <link linkend="e-cal-component-alarm-set-attendee-list">e_cal_component_alarm_set_attendee_list</link>
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="GSList">GSList</link> *attendee_list);
<link linkend="gboolean">gboolean</link>    <link linkend="e-cal-component-alarm-has-attendees">e_cal_component_alarm_has_attendees</link>
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm);
<link linkend="icalcomponent">icalcomponent</link>* <link linkend="e-cal-component-alarm-get-icalcomponent">e_cal_component_alarm_get_icalcomponent</link>
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm);


</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----ECalComponent
</synopsis>

</refsect1>








<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="ECalComponent-struct"/>struct ECalComponent</title>
<indexterm><primary>ECalComponent</primary></indexterm><programlisting>struct ECalComponent;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentVType"/>enum ECalComponentVType</title>
<indexterm><primary>ECalComponentVType</primary></indexterm><programlisting>typedef enum {
	E_CAL_COMPONENT_NO_TYPE,
	E_CAL_COMPONENT_EVENT,
	E_CAL_COMPONENT_TODO,
	E_CAL_COMPONENT_JOURNAL,
	E_CAL_COMPONENT_FREEBUSY,
	E_CAL_COMPONENT_TIMEZONE
} ECalComponentVType;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentField"/>enum ECalComponentField</title>
<indexterm><primary>ECalComponentField</primary></indexterm><programlisting>typedef enum {
	E_CAL_COMPONENT_FIELD_CATEGORIES,		/* concatenation of the categories list */
	E_CAL_COMPONENT_FIELD_CLASSIFICATION,
	E_CAL_COMPONENT_FIELD_COMPLETED,
	E_CAL_COMPONENT_FIELD_DTEND,
	E_CAL_COMPONENT_FIELD_DTSTART,
	E_CAL_COMPONENT_FIELD_DUE,
	E_CAL_COMPONENT_FIELD_GEO,
	E_CAL_COMPONENT_FIELD_PERCENT,
	E_CAL_COMPONENT_FIELD_PRIORITY,
	E_CAL_COMPONENT_FIELD_SUMMARY,
	E_CAL_COMPONENT_FIELD_TRANSPARENCY,
	E_CAL_COMPONENT_FIELD_URL,
	E_CAL_COMPONENT_FIELD_HAS_ALARMS,		/* not a real field */
	E_CAL_COMPONENT_FIELD_ICON,		/* not a real field */
	E_CAL_COMPONENT_FIELD_COMPLETE,		/* not a real field */
	E_CAL_COMPONENT_FIELD_RECURRING,		/* not a real field */
	E_CAL_COMPONENT_FIELD_OVERDUE,		/* not a real field */
	E_CAL_COMPONENT_FIELD_COLOR,		/* not a real field */
	E_CAL_COMPONENT_FIELD_STATUS,
	E_CAL_COMPONENT_FIELD_COMPONENT,		/* not a real field */
	E_CAL_COMPONENT_FIELD_LOCATION,
	E_CAL_COMPONENT_FIELD_NUM_FIELDS
} ECalComponentField;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentClassification"/>enum ECalComponentClassification</title>
<indexterm><primary>ECalComponentClassification</primary></indexterm><programlisting>typedef enum {
	E_CAL_COMPONENT_CLASS_NONE,
	E_CAL_COMPONENT_CLASS_PUBLIC,
	E_CAL_COMPONENT_CLASS_PRIVATE,
	E_CAL_COMPONENT_CLASS_CONFIDENTIAL,
	E_CAL_COMPONENT_CLASS_UNKNOWN
} ECalComponentClassification;
</programlisting>
<para>
These values determine the privacy classification of the event.
</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentDateTime"/>struct ECalComponentDateTime</title>
<indexterm><primary>ECalComponentDateTime</primary></indexterm><programlisting>struct ECalComponentDateTime {

	/* Actual date/time value */
	struct icaltimetype *value;

	/* Timezone ID */
	const char *tzid;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentPeriodType"/>enum ECalComponentPeriodType</title>
<indexterm><primary>ECalComponentPeriodType</primary></indexterm><programlisting>typedef enum {
	E_CAL_COMPONENT_PERIOD_DATETIME,
	E_CAL_COMPONENT_PERIOD_DURATION
} ECalComponentPeriodType;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentPeriod"/>struct ECalComponentPeriod</title>
<indexterm><primary>ECalComponentPeriod</primary></indexterm><programlisting>struct ECalComponentPeriod {

	ECalComponentPeriodType type;

	struct icaltimetype start;

	union {
		struct icaltimetype end;
		struct icaldurationtype duration;
	} u;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentRangeType"/>enum ECalComponentRangeType</title>
<indexterm><primary>ECalComponentRangeType</primary></indexterm><programlisting>typedef enum {
	E_CAL_COMPONENT_RANGE_SINGLE,
	E_CAL_COMPONENT_RANGE_THISPRIOR,
	E_CAL_COMPONENT_RANGE_THISFUTURE
} ECalComponentRangeType;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentRange"/>struct ECalComponentRange</title>
<indexterm><primary>ECalComponentRange</primary></indexterm><programlisting>struct ECalComponentRange {

	ECalComponentRangeType type;
	
	ECalComponentDateTime datetime;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentText"/>struct ECalComponentText</title>
<indexterm><primary>ECalComponentText</primary></indexterm><programlisting>struct ECalComponentText {

	/* Description string */
	const char *value;

	/* Alternate representation URI */
	const char *altrep;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentTransparency"/>enum ECalComponentTransparency</title>
<indexterm><primary>ECalComponentTransparency</primary></indexterm><programlisting>typedef enum {
	E_CAL_COMPONENT_TRANSP_NONE,
	E_CAL_COMPONENT_TRANSP_TRANSPARENT,
	E_CAL_COMPONENT_TRANSP_OPAQUE,
	E_CAL_COMPONENT_TRANSP_UNKNOWN
} ECalComponentTransparency;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentAttendee"/>struct ECalComponentAttendee</title>
<indexterm><primary>ECalComponentAttendee</primary></indexterm><programlisting>struct ECalComponentAttendee {

	const char *value;
	
	const char *member;
	icalparameter_cutype cutype;
	icalparameter_role role;
	icalparameter_partstat status;
	gboolean rsvp;
	
	const char *delto;
	const char *delfrom;
	const char *sentby;
	const char *cn;
	const char *language;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentOrganizer"/>struct ECalComponentOrganizer</title>
<indexterm><primary>ECalComponentOrganizer</primary></indexterm><programlisting>struct ECalComponentOrganizer {

	const char *value;
	const char *sentby;
	const char *cn;
	const char *language;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="e-cal-component-gen-uid"/>e_cal_component_gen_uid ()</title>
<indexterm><primary>e_cal_component_gen_uid</primary></indexterm><programlisting><link linkend="char">char</link>*       e_cal_component_gen_uid         (void);</programlisting>
<para>
Generates a unique identifier suitable for calendar components.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A unique identifier string.  Every time this function is called
a different string is returned.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-new"/>e_cal_component_new ()</title>
<indexterm><primary>e_cal_component_new</primary></indexterm><programlisting><link linkend="ECalComponent">ECalComponent</link>* e_cal_component_new          (void);</programlisting>
<para>
Creates a new empty calendar component object.  You should set it from an
<link linkend="icalcomponent"><type>icalcomponent</type></link> structure by using <link linkend="e-cal-component-set-icalcomponent"><function>e_cal_component_set_icalcomponent()</function></link> or with a
new empty component type by using <link linkend="e-cal-component-set-new-vtype"><function>e_cal_component_set_new_vtype()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly-created calendar component object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-clone"/>e_cal_component_clone ()</title>
<indexterm><primary>e_cal_component_clone</primary></indexterm><programlisting><link linkend="ECalComponent">ECalComponent</link>* e_cal_component_clone        (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>
Creates a new calendar component object by copying the information from
another one.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly-created calendar component with the same values as the
original one.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-new-vtype"/>e_cal_component_set_new_vtype ()</title>
<indexterm><primary>e_cal_component_set_new_vtype</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_new_vtype   (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentVType">ECalComponentVType</link> type);</programlisting>
<para>
Clears any existing component data from a calendar component object and
creates a new <link linkend="icalcomponent"><type>icalcomponent</type></link> of the specified type for it.  The only property
that will be set in the new component will be its unique identifier.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> Type of calendar component to create.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-icalcomponent"/>e_cal_component_set_icalcomponent ()</title>
<indexterm><primary>e_cal_component_set_icalcomponent</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_cal_component_set_icalcomponent
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="icalcomponent">icalcomponent</link> *icalcomp);</programlisting>
<para>
Sets the contents of a calendar component object from an <link linkend="icalcomponent"><type>icalcomponent</type></link>
structure.  If the <parameter>comp</parameter> already had an <link linkend="icalcomponent"><type>icalcomponent</type></link> set into it, it will
will be freed automatically if the <link linkend="icalcomponent"><type>icalcomponent</type></link> does not have a parent
component itself.
</para>
<para>
Supported component types are VEVENT, VTODO, VJOURNAL, VFREEBUSY, and VTIMEZONE.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icalcomp</parameter>&nbsp;:</term>
<listitem><simpara> An <link linkend="icalcomponent"><type>icalcomponent</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> TRUE on success, FALSE if <parameter>icalcomp</parameter> is an unsupported component
type.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-icalcomponent"/>e_cal_component_get_icalcomponent ()</title>
<indexterm><primary>e_cal_component_get_icalcomponent</primary></indexterm><programlisting><link linkend="icalcomponent">icalcomponent</link>* e_cal_component_get_icalcomponent
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>
Queries the <link linkend="icalcomponent"><type>icalcomponent</type></link> structure that a calendar component object is
wrapping.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> An <link linkend="icalcomponent"><type>icalcomponent</type></link> structure, or NULL if the <parameter>comp</parameter> has no
<link linkend="icalcomponent"><type>icalcomponent</type></link> set to it.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-rescan"/>e_cal_component_rescan ()</title>
<indexterm><primary>e_cal_component_rescan</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_rescan          (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-strip-errors"/>e_cal_component_strip_errors ()</title>
<indexterm><primary>e_cal_component_strip_errors</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_strip_errors    (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-vtype"/>e_cal_component_get_vtype ()</title>
<indexterm><primary>e_cal_component_get_vtype</primary></indexterm><programlisting><link linkend="ECalComponentVType">ECalComponentVType</link> e_cal_component_get_vtype
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>
Queries the type of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The type of the component, as defined by RFC 2445.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-as-string"/>e_cal_component_get_as_string ()</title>
<indexterm><primary>e_cal_component_get_as_string</primary></indexterm><programlisting><link linkend="char">char</link>*       e_cal_component_get_as_string   (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>
Gets the iCalendar string representation of a calendar component.  You should
call <link linkend="e-cal-component-commit-sequence"><function>e_cal_component_commit_sequence()</function></link> before this function to ensure that the
component's sequence number is consistent with the state of the object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> String representation of the calendar component according to
RFC 2445.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-commit-sequence"/>e_cal_component_commit_sequence ()</title>
<indexterm><primary>e_cal_component_commit_sequence</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_commit_sequence (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>
Increments the sequence number property in a calendar component object if it
needs it.  This needs to be done when any of a number of properties listed in
RFC 2445 change values, such as the start and end dates of a component.
</para>
<para>
This function must be called before calling <link linkend="e-cal-component-get-as-string"><function>e_cal_component_get_as_string()</function></link> to
ensure that the component is fully consistent.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-abort-sequence"/>e_cal_component_abort_sequence ()</title>
<indexterm><primary>e_cal_component_abort_sequence</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_abort_sequence  (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-uid"/>e_cal_component_get_uid ()</title>
<indexterm><primary>e_cal_component_get_uid</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_uid         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> **uid);</programlisting>
<para>
Queries the unique identifier of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the UID string.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-uid"/>e_cal_component_set_uid ()</title>
<indexterm><primary>e_cal_component_set_uid</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_uid         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> *uid);</programlisting>
<para>
Sets the unique identifier string of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&nbsp;:</term>
<listitem><simpara> Unique identifier.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-categories"/>e_cal_component_get_categories ()</title>
<indexterm><primary>e_cal_component_get_categories</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_categories  (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> **categories);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>categories</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-categories"/>e_cal_component_set_categories ()</title>
<indexterm><primary>e_cal_component_set_categories</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_categories  (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> *categories);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>categories</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-categories-list"/>e_cal_component_get_categories_list ()</title>
<indexterm><primary>e_cal_component_get_categories_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_categories_list
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **categ_list);</programlisting>
<para>
Queries the list of categories of a calendar component object.  Each element
in the returned categ_list is a string with the corresponding category.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>categ_list</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the list of strings, where each string is a
category.  This should be freed using <link linkend="e-cal-component-free-categories-list"><function>e_cal_component_free_categories_list()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-categories-list"/>e_cal_component_set_categories_list ()</title>
<indexterm><primary>e_cal_component_set_categories_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_categories_list
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *categ_list);</programlisting>
<para>
Sets the list of categories of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>categ_list</parameter>&nbsp;:</term>
<listitem><simpara> List of strings, one for each category.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-classification"/>e_cal_component_get_classification ()</title>
<indexterm><primary>e_cal_component_get_classification</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_classification
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentClassification">ECalComponentClassification</link> *classif);</programlisting>
<para>
Queries the classification of a calendar component object.  If the
classification property is not set on this component, this function returns
<link linkend="E-CAL-COMPONENT-CLASS-NONE-CAPS"><type>E_CAL_COMPONENT_CLASS_NONE</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>classif</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the classification.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-classification"/>e_cal_component_set_classification ()</title>
<indexterm><primary>e_cal_component_set_classification</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_classification
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentClassification">ECalComponentClassification</link> classif);</programlisting>
<para>
Sets the classification property of a calendar component object.  To unset
the property, specify E_CAL_COMPONENT_CLASS_NONE for <parameter>classif</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>classif</parameter>&nbsp;:</term>
<listitem><simpara> Classification to use.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-comment-list"/>e_cal_component_get_comment_list ()</title>
<indexterm><primary>e_cal_component_get_comment_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_comment_list
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **text_list);</programlisting>
<para>
Queries the comment of a calendar component object.  The comment property can
appear several times inside a calendar component, and so a list of
<link linkend="ECalComponentText"><type>ECalComponentText</type></link> is returned.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text_list</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the comment properties and their parameters, as
a list of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.  This should be freed using the
<link linkend="e-cal-component-free-text-list"><function>e_cal_component_free_text_list()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-comment-list"/>e_cal_component_set_comment_list ()</title>
<indexterm><primary>e_cal_component_set_comment_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_comment_list
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *text_list);</programlisting>
<para>
Sets the comment of a calendar component object.  The comment property can
appear several times inside a calendar component, and so a list of
<link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures is used.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text_list</parameter>&nbsp;:</term>
<listitem><simpara> List of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-completed"/>e_cal_component_get_completed ()</title>
<indexterm><primary>e_cal_component_get_completed</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_completed   (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> **t);</programlisting>
<para>
Queries the date at which a calendar compoment object was completed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the completion date.  This should be freed using the
<link linkend="e-cal-component-free-icaltimetype"><function>e_cal_component_free_icaltimetype()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-completed"/>e_cal_component_set_completed ()</title>
<indexterm><primary>e_cal_component_set_completed</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_completed   (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> *t);</programlisting>
<para>
Sets the date at which a calendar component object was completed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> Value for the completion date.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-contact-list"/>e_cal_component_get_contact_list ()</title>
<indexterm><primary>e_cal_component_get_contact_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_contact_list
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **text_list);</programlisting>
<para>
Queries the contact of a calendar component object.  The contact property can
appear several times inside a calendar component, and so a list of
<link linkend="ECalComponentText"><type>ECalComponentText</type></link> is returned.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text_list</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the contact properties and their parameters, as
a list of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.  This should be freed using the
<link linkend="e-cal-component-free-text-list"><function>e_cal_component_free_text_list()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-contact-list"/>e_cal_component_set_contact_list ()</title>
<indexterm><primary>e_cal_component_set_contact_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_contact_list
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *text_list);</programlisting>
<para>
Sets the contact of a calendar component object.  The contact property can
appear several times inside a calendar component, and so a list of
<link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures is used.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text_list</parameter>&nbsp;:</term>
<listitem><simpara> List of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-created"/>e_cal_component_get_created ()</title>
<indexterm><primary>e_cal_component_get_created</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_created     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> **t);</programlisting>
<para>
Queries the date in which a calendar component object was created in the
calendar store.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the creation date.  This should be freed using the
<link linkend="e-cal-component-free-icaltimetype"><function>e_cal_component_free_icaltimetype()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-created"/>e_cal_component_set_created ()</title>
<indexterm><primary>e_cal_component_set_created</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_created     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> *t);</programlisting>
<para>
Sets the date in which a calendar component object is created in the calendar
store.  This should only be used inside a calendar store application, i.e.
not by calendar user agents.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> Value for the creation date.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-description-list"/>e_cal_component_get_description_list ()</title>
<indexterm><primary>e_cal_component_get_description_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_description_list
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **text_list);</programlisting>
<para>
Queries the description of a calendar component object.  Journal components
may have more than one description, and as such this function returns a list
of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.  All other types of components can have at
most one description.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text_list</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the description properties and their parameters,
as a list of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.  This should be freed using the
<link linkend="e-cal-component-free-text-list"><function>e_cal_component_free_text_list()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-description-list"/>e_cal_component_set_description_list ()</title>
<indexterm><primary>e_cal_component_set_description_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_description_list
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *text_list);</programlisting>
<para>
Sets the description of a calendar component object.  Journal components may
have more than one description, and as such this function takes in a list of
<link linkend="ECalComponentDescription"><type>ECalComponentDescription</type></link> structures.  All other types of components can have
at most one description.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text_list</parameter>&nbsp;:</term>
<listitem><simpara> List of <link linkend="ECalComponentSummary"><type>ECalComponentSummary</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-dtend"/>e_cal_component_get_dtend ()</title>
<indexterm><primary>e_cal_component_get_dtend</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_dtend       (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentDateTime">ECalComponentDateTime</link> *dt);</programlisting>
<para>
Queries the date/time end of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dt</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the date/time end.  This should be freed with the
<link linkend="e-cal-component-free-datetime"><function>e_cal_component_free_datetime()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-dtend"/>e_cal_component_set_dtend ()</title>
<indexterm><primary>e_cal_component_set_dtend</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_dtend       (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentDateTime">ECalComponentDateTime</link> *dt);</programlisting>
<para>
Sets the date/time end property of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dt</parameter>&nbsp;:</term>
<listitem><simpara> End date/time.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-dtstamp"/>e_cal_component_get_dtstamp ()</title>
<indexterm><primary>e_cal_component_get_dtstamp</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_dtstamp     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> *t);</programlisting>
<para>
Queries the date/timestamp property of a calendar component object, which is
the last time at which the object was modified by a calendar user agent.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> A value for the date/timestamp.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-dtstamp"/>e_cal_component_set_dtstamp ()</title>
<indexterm><primary>e_cal_component_set_dtstamp</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_dtstamp     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> *t);</programlisting>
<para>
Sets the date/timestamp of a calendar component object.  This should be
called whenever a calendar user agent makes a change to a component's
properties.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> Date/timestamp value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-dtstart"/>e_cal_component_get_dtstart ()</title>
<indexterm><primary>e_cal_component_get_dtstart</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_dtstart     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentDateTime">ECalComponentDateTime</link> *dt);</programlisting>
<para>
Queries the date/time start of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dt</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the date/time start.  This should be freed with the
<link linkend="e-cal-component-free-datetime"><function>e_cal_component_free_datetime()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-dtstart"/>e_cal_component_set_dtstart ()</title>
<indexterm><primary>e_cal_component_set_dtstart</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_dtstart     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentDateTime">ECalComponentDateTime</link> *dt);</programlisting>
<para>
Sets the date/time start property of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dt</parameter>&nbsp;:</term>
<listitem><simpara> Start date/time.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-due"/>e_cal_component_get_due ()</title>
<indexterm><primary>e_cal_component_get_due</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_due         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentDateTime">ECalComponentDateTime</link> *dt);</programlisting>
<para>
Queries the due date/time of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dt</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the due date/time.  This should be freed with the
<link linkend="e-cal-component-free-datetime"><function>e_cal_component_free_datetime()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-due"/>e_cal_component_set_due ()</title>
<indexterm><primary>e_cal_component_set_due</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_due         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentDateTime">ECalComponentDateTime</link> *dt);</programlisting>
<para>
Sets the due date/time property of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dt</parameter>&nbsp;:</term>
<listitem><simpara> End date/time.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-exdate-list"/>e_cal_component_get_exdate_list ()</title>
<indexterm><primary>e_cal_component_get_exdate_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_exdate_list (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **exdate_list);</programlisting>
<para>
Queries the list of exception date properties in a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>exdate_list</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the list of exception dates, as a list of
<link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> structures.  This should be freed using the
<link linkend="e-cal-component-free-exdate-list"><function>e_cal_component_free_exdate_list()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-exdate-list"/>e_cal_component_set_exdate_list ()</title>
<indexterm><primary>e_cal_component_set_exdate_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_exdate_list (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *exdate_list);</programlisting>
<para>
Sets the list of exception dates in a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>exdate_list</parameter>&nbsp;:</term>
<listitem><simpara> List of <link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-has-exdates"/>e_cal_component_has_exdates ()</title>
<indexterm><primary>e_cal_component_has_exdates</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_cal_component_has_exdates     (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>
Queries whether a calendar component object has any exception dates defined
for it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> TRUE if the component has exception dates, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-exrule-list"/>e_cal_component_get_exrule_list ()</title>
<indexterm><primary>e_cal_component_get_exrule_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_exrule_list (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **recur_list);</programlisting>
<para>
Queries the list of exception rule properties of a calendar component
object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_list</parameter>&nbsp;:</term>
<listitem><simpara> List of exception rules as struct <link linkend="icalrecurrencetype"><type>icalrecurrencetype</type></link>
structures.  This should be freed using the <link linkend="e-cal-component-free-recur-list"><function>e_cal_component_free_recur_list()</function></link>
function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-exrule-property-list"/>e_cal_component_get_exrule_property_list ()</title>
<indexterm><primary>e_cal_component_get_exrule_property_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_exrule_property_list
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **recur_list);</programlisting>
<para>
Queries the list of exception rule properties of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_list</parameter>&nbsp;:</term>
<listitem><simpara> Returns a list of exception rule properties.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-exrule-list"/>e_cal_component_set_exrule_list ()</title>
<indexterm><primary>e_cal_component_set_exrule_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_exrule_list (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *recur_list);</programlisting>
<para>
Sets the list of exception rules in a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_list</parameter>&nbsp;:</term>
<listitem><simpara> List of struct <link linkend="icalrecurrencetype"><type>icalrecurrencetype</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-has-exrules"/>e_cal_component_has_exrules ()</title>
<indexterm><primary>e_cal_component_has_exrules</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_cal_component_has_exrules     (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>
Queries whether a calendar component object has any exception rules defined
for it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> TRUE if the component has exception rules, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-has-exceptions"/>e_cal_component_has_exceptions ()</title>
<indexterm><primary>e_cal_component_has_exceptions</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_cal_component_has_exceptions  (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>
Queries whether a calendar component object has any exception dates
or exception rules.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> TRUE if the component has exceptions, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-geo"/>e_cal_component_get_geo ()</title>
<indexterm><primary>e_cal_component_get_geo</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_geo         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icalgeotype">icalgeotype</link> **geo);</programlisting>
<para>
Sets the geographic position property of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>geo</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the geographic position property.  This should be
freed using the <link linkend="e-cal-component-free-geo"><function>e_cal_component_free_geo()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-geo"/>e_cal_component_set_geo ()</title>
<indexterm><primary>e_cal_component_set_geo</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_geo         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icalgeotype">icalgeotype</link> *geo);</programlisting>
<para>
Sets the geographic position property on a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>geo</parameter>&nbsp;:</term>
<listitem><simpara> Value for the geographic position property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-last-modified"/>e_cal_component_get_last_modified ()</title>
<indexterm><primary>e_cal_component_get_last_modified</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_last_modified
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> **t);</programlisting>
<para>
Queries the time at which a calendar component object was last modified in
the calendar store.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the last modified time value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-last-modified"/>e_cal_component_set_last_modified ()</title>
<indexterm><primary>e_cal_component_set_last_modified</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_last_modified
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             struct <link linkend="icaltimetype">icaltimetype</link> *t);</programlisting>
<para>
Sets the time at which a calendar component object was last stored in the
calendar store.  This should not be called by plain calendar user agents.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> Value for the last time modified.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-organizer"/>e_cal_component_get_organizer ()</title>
<indexterm><primary>e_cal_component_get_organizer</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_organizer   (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentOrganizer">ECalComponentOrganizer</link> *organizer);</programlisting>
<para>
Queries the organizer property of a calendar component object</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara>  A calendar component object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>organizer</parameter>&nbsp;:</term>
<listitem><simpara> A value for the organizer
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-organizer"/>e_cal_component_set_organizer ()</title>
<indexterm><primary>e_cal_component_set_organizer</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_organizer   (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentOrganizer">ECalComponentOrganizer</link> *organizer);</programlisting>
<para>
Sets the organizer of a calendar component object</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara>  A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>organizer</parameter>&nbsp;:</term>
<listitem><simpara> Value for the organizer property
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-has-organizer"/>e_cal_component_has_organizer ()</title>
<indexterm><primary>e_cal_component_has_organizer</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_cal_component_has_organizer   (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-percent"/>e_cal_component_get_percent ()</title>
<indexterm><primary>e_cal_component_get_percent</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_percent     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="int">int</link> **percent);</programlisting>
<para>
Queries the percent-complete property of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>percent</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the percent-complete property.  This should be
freed using the <link linkend="e-cal-component-free-percent"><function>e_cal_component_free_percent()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-percent"/>e_cal_component_set_percent ()</title>
<indexterm><primary>e_cal_component_set_percent</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_percent     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="int">int</link> *percent);</programlisting>
<para>
Sets the percent-complete property of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>percent</parameter>&nbsp;:</term>
<listitem><simpara> Value for the percent-complete property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-priority"/>e_cal_component_get_priority ()</title>
<indexterm><primary>e_cal_component_get_priority</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_priority    (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="int">int</link> **priority);</programlisting>
<para>
Queries the priority property of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priority</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the priority property.  This should be freed using
the <link linkend="e-cal-component-free-priority"><function>e_cal_component_free_priority()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-priority"/>e_cal_component_set_priority ()</title>
<indexterm><primary>e_cal_component_set_priority</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_priority    (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="int">int</link> *priority);</programlisting>
<para>
Sets the priority property of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priority</parameter>&nbsp;:</term>
<listitem><simpara> Value for the priority property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-recurid"/>e_cal_component_get_recurid ()</title>
<indexterm><primary>e_cal_component_get_recurid</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_recurid     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentRange">ECalComponentRange</link> *recur_id);</programlisting>
<para>
Queries the recurrence id property of a calendar component object</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_id</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the recurrence id property
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-recurid"/>e_cal_component_set_recurid ()</title>
<indexterm><primary>e_cal_component_set_recurid</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_recurid     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentRange">ECalComponentRange</link> *recur_id);</programlisting>
<para>
Sets the recurrence id property of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_id</parameter>&nbsp;:</term>
<listitem><simpara> Value for the recurrence id property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-rdate-list"/>e_cal_component_get_rdate_list ()</title>
<indexterm><primary>e_cal_component_get_rdate_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_rdate_list  (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **period_list);</programlisting>
<para>
Queries the list of recurrence date properties in a calendar component
object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>period_list</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the list of recurrence dates, as a list of
<link linkend="ECalComponentPeriod"><type>ECalComponentPeriod</type></link> structures.  This should be freed using the
<link linkend="e-cal-component-free-period-list"><function>e_cal_component_free_period_list()</function></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-rdate-list"/>e_cal_component_set_rdate_list ()</title>
<indexterm><primary>e_cal_component_set_rdate_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_rdate_list  (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *period_list);</programlisting>
<para>
Sets the list of recurrence dates in a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>period_list</parameter>&nbsp;:</term>
<listitem><simpara> List of <link linkend="ECalComponentPeriod"><type>ECalComponentPeriod</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-has-rdates"/>e_cal_component_has_rdates ()</title>
<indexterm><primary>e_cal_component_has_rdates</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_cal_component_has_rdates      (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>
Queries whether a calendar component object has any recurrence dates defined
for it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> TRUE if the component has recurrence dates, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-rrule-list"/>e_cal_component_get_rrule_list ()</title>
<indexterm><primary>e_cal_component_get_rrule_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_rrule_list  (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **recur_list);</programlisting>
<para>
Queries the list of recurrence rule properties of a calendar component
object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_list</parameter>&nbsp;:</term>
<listitem><simpara> List of recurrence rules as struct <link linkend="icalrecurrencetype"><type>icalrecurrencetype</type></link>
structures.  This should be freed using the <link linkend="e-cal-component-free-recur-list"><function>e_cal_component_free_recur_list()</function></link>
function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-rrule-property-list"/>e_cal_component_get_rrule_property_list ()</title>
<indexterm><primary>e_cal_component_get_rrule_property_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_rrule_property_list
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **recur_list);</programlisting>
<para>
Queries a list of recurrence rule properties of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_list</parameter>&nbsp;:</term>
<listitem><simpara> Returns a list of recurrence rule properties.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-rrule-list"/>e_cal_component_set_rrule_list ()</title>
<indexterm><primary>e_cal_component_set_rrule_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_rrule_list  (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *recur_list);</programlisting>
<para>
Sets the list of recurrence rules in a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recur_list</parameter>&nbsp;:</term>
<listitem><simpara> List of struct <link linkend="icalrecurrencetype"><type>icalrecurrencetype</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-has-rrules"/>e_cal_component_has_rrules ()</title>
<indexterm><primary>e_cal_component_has_rrules</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_cal_component_has_rrules      (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>
Queries whether a calendar component object has any recurrence rules defined
for it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> TRUE if the component has recurrence rules, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-has-recurrences"/>e_cal_component_has_recurrences ()</title>
<indexterm><primary>e_cal_component_has_recurrences</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_cal_component_has_recurrences (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>
Queries whether a calendar component object has any recurrence dates or
recurrence rules.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> TRUE if the component has recurrences, FALSE otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-has-simple-recurrence"/>e_cal_component_has_simple_recurrence ()</title>
<indexterm><primary>e_cal_component_has_simple_recurrence</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_cal_component_has_simple_recurrence
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-is-instance"/>e_cal_component_is_instance ()</title>
<indexterm><primary>e_cal_component_is_instance</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_cal_component_is_instance     (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-sequence"/>e_cal_component_get_sequence ()</title>
<indexterm><primary>e_cal_component_get_sequence</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_sequence    (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="int">int</link> **sequence);</programlisting>
<para>
Queries the sequence number of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sequence</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the sequence number.  This should be freed using
<link linkend="e-cal-component-free-sequence"><function>e_cal_component_free_sequence()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-sequence"/>e_cal_component_set_sequence ()</title>
<indexterm><primary>e_cal_component_set_sequence</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_sequence    (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="int">int</link> *sequence);</programlisting>
<para>
Sets the sequence number of a calendar component object.  Normally this
function should not be called, since the sequence number is incremented
automatically at the proper times.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sequence</parameter>&nbsp;:</term>
<listitem><simpara> Sequence number value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-status"/>e_cal_component_get_status ()</title>
<indexterm><primary>e_cal_component_get_status</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_status      (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="icalproperty-status">icalproperty_status</link> *status);</programlisting>
<para>
Queries the status property of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>status</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the status value.  It is set to <link linkend="ICAL-STATUS-NONE-CAPS"><type>ICAL_STATUS_NONE</type></link>
if the component has no status property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-status"/>e_cal_component_set_status ()</title>
<indexterm><primary>e_cal_component_set_status</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_status      (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="icalproperty-status">icalproperty_status</link> status);</programlisting>
<para>
Sets the status property of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>status</parameter>&nbsp;:</term>
<listitem><simpara> Status value.  You should use <link linkend="ICAL-STATUS-NONE-CAPS"><type>ICAL_STATUS_NONE</type></link> if you want to unset
this property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-summary"/>e_cal_component_get_summary ()</title>
<indexterm><primary>e_cal_component_get_summary</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_summary     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentText">ECalComponentText</link> *summary);</programlisting>
<para>
Queries the summary of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>summary</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the summary property and its parameters.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-summary"/>e_cal_component_set_summary ()</title>
<indexterm><primary>e_cal_component_set_summary</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_summary     (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentText">ECalComponentText</link> *summary);</programlisting>
<para>
Sets the summary of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>summary</parameter>&nbsp;:</term>
<listitem><simpara> Summary property and its parameters.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-transparency"/>e_cal_component_get_transparency ()</title>
<indexterm><primary>e_cal_component_get_transparency</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_transparency
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentTransparency">ECalComponentTransparency</link> *transp);</programlisting>
<para>
Queries the time transparency of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>transp</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the time transparency.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-transparency"/>e_cal_component_set_transparency ()</title>
<indexterm><primary>e_cal_component_set_transparency</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_transparency
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentTransparency">ECalComponentTransparency</link> transp);</programlisting>
<para>
Sets the time transparency of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>transp</parameter>&nbsp;:</term>
<listitem><simpara> Time transparency value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-url"/>e_cal_component_get_url ()</title>
<indexterm><primary>e_cal_component_get_url</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_url         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> **url);</programlisting>
<para>
Queries the uniform resource locator property of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>url</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the URL.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-url"/>e_cal_component_set_url ()</title>
<indexterm><primary>e_cal_component_set_url</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_url         (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> *url);</programlisting>
<para>
Sets the uniform resource locator property of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>url</parameter>&nbsp;:</term>
<listitem><simpara> URL value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-attendee-list"/>e_cal_component_get_attendee_list ()</title>
<indexterm><primary>e_cal_component_get_attendee_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_attendee_list
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> **attendee_list);</programlisting>
<para>
Queries the attendee properties of the calendar component object</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object. 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attendee_list</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the attendee property.
This should be freed using the <link linkend="e-cal-component-free-attendee-list"><function>e_cal_component_free_attendee_list()</function></link>
function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-attendee-list"/>e_cal_component_set_attendee_list ()</title>
<indexterm><primary>e_cal_component_set_attendee_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_attendee_list
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="GSList">GSList</link> *attendee_list);</programlisting>
<para>
Sets the attendees of a calendar component object</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object. 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attendee_list</parameter>&nbsp;:</term>
<listitem><simpara> Values for attendee properties
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-has-attendees"/>e_cal_component_has_attendees ()</title>
<indexterm><primary>e_cal_component_has_attendees</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_cal_component_has_attendees   (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-location"/>e_cal_component_get_location ()</title>
<indexterm><primary>e_cal_component_get_location</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_get_location    (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> **location);</programlisting>
<para>
Queries the location property of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>location</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the location.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-set-location"/>e_cal_component_set_location ()</title>
<indexterm><primary>e_cal_component_set_location</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_set_location    (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> *location);</programlisting>
<para>
Sets the location property of a calendar component object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>location</parameter>&nbsp;:</term>
<listitem><simpara> Location value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-event-dates-match"/>e_cal_component_event_dates_match ()</title>
<indexterm><primary>e_cal_component_event_dates_match</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_cal_component_event_dates_match
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp1,
                                             <link linkend="ECalComponent">ECalComponent</link> *comp2);</programlisting>
<para>
Checks if the DTSTART and DTEND properties of the 2 components match.
Note that the events may have different recurrence properties which are not
taken into account here.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp1</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>comp2</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> TRUE if the DTSTART and DTEND properties of the 2 components match.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-free-categories-list"/>e_cal_component_free_categories_list ()</title>
<indexterm><primary>e_cal_component_free_categories_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_free_categories_list
                                            (<link linkend="GSList">GSList</link> *categ_list);</programlisting>
<para>
Frees a list of category strings.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>categ_list</parameter>&nbsp;:</term>
<listitem><simpara> List of category strings.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-free-datetime"/>e_cal_component_free_datetime ()</title>
<indexterm><primary>e_cal_component_free_datetime</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_free_datetime   (<link linkend="ECalComponentDateTime">ECalComponentDateTime</link> *dt);</programlisting>
<para>
Frees a date/time structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dt</parameter>&nbsp;:</term>
<listitem><simpara> A date/time structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-free-range"/>e_cal_component_free_range ()</title>
<indexterm><primary>e_cal_component_free_range</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_free_range      (<link linkend="ECalComponentRange">ECalComponentRange</link> *range);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>range</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-free-exdate-list"/>e_cal_component_free_exdate_list ()</title>
<indexterm><primary>e_cal_component_free_exdate_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_free_exdate_list
                                            (<link linkend="GSList">GSList</link> *exdate_list);</programlisting>
<para>
Frees a list of <link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> structures as returned by the
<link linkend="e-cal-component-get-exdate-list"><function>e_cal_component_get_exdate_list()</function></link> function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>exdate_list</parameter>&nbsp;:</term>
<listitem><simpara> List of <link linkend="ECalComponentDateTime"><type>ECalComponentDateTime</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-free-geo"/>e_cal_component_free_geo ()</title>
<indexterm><primary>e_cal_component_free_geo</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_free_geo        (struct <link linkend="icalgeotype">icalgeotype</link> *geo);</programlisting>
<para>
Frees a struct <link linkend="icalgeotype"><type>icalgeotype</type></link> structure as returned by the calendar component
functions.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>geo</parameter>&nbsp;:</term>
<listitem><simpara> An <link linkend="icalgeotype"><type>icalgeotype</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-free-icaltimetype"/>e_cal_component_free_icaltimetype ()</title>
<indexterm><primary>e_cal_component_free_icaltimetype</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_free_icaltimetype
                                            (struct <link linkend="icaltimetype">icaltimetype</link> *t);</programlisting>
<para>
Frees a struct <link linkend="icaltimetype"><type>icaltimetype</type></link> value as returned by the calendar component
functions.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> An <link linkend="icaltimetype"><type>icaltimetype</type></link> structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-free-percent"/>e_cal_component_free_percent ()</title>
<indexterm><primary>e_cal_component_free_percent</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_free_percent    (<link linkend="int">int</link> *percent);</programlisting>
<para>
Frees a percent value as returned by the <link linkend="e-cal-component-get-percent"><function>e_cal_component_get_percent()</function></link>
function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>percent</parameter>&nbsp;:</term>
<listitem><simpara> Percent value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-free-priority"/>e_cal_component_free_priority ()</title>
<indexterm><primary>e_cal_component_free_priority</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_free_priority   (<link linkend="int">int</link> *priority);</programlisting>
<para>
Frees a priority value as returned by the <link linkend="e-cal-component-get-priority"><function>e_cal_component_get_priority()</function></link>
function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>priority</parameter>&nbsp;:</term>
<listitem><simpara> Priority value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-free-period-list"/>e_cal_component_free_period_list ()</title>
<indexterm><primary>e_cal_component_free_period_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_free_period_list
                                            (<link linkend="GSList">GSList</link> *period_list);</programlisting>
<para>
Frees a list of <link linkend="ECalComponentPeriod"><type>ECalComponentPeriod</type></link> structures.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>period_list</parameter>&nbsp;:</term>
<listitem><simpara> List of <link linkend="ECalComponentPeriod"><type>ECalComponentPeriod</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-free-recur-list"/>e_cal_component_free_recur_list ()</title>
<indexterm><primary>e_cal_component_free_recur_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_free_recur_list (<link linkend="GSList">GSList</link> *recur_list);</programlisting>
<para>
Frees a list of struct <link linkend="icalrecurrencetype"><type>icalrecurrencetype</type></link> structures.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>recur_list</parameter>&nbsp;:</term>
<listitem><simpara> List of struct <link linkend="icalrecurrencetype"><type>icalrecurrencetype</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-free-sequence"/>e_cal_component_free_sequence ()</title>
<indexterm><primary>e_cal_component_free_sequence</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_free_sequence   (<link linkend="int">int</link> *sequence);</programlisting>
<para>
Frees a sequence number value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sequence</parameter>&nbsp;:</term>
<listitem><simpara> Sequence number value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-free-text-list"/>e_cal_component_free_text_list ()</title>
<indexterm><primary>e_cal_component_free_text_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_free_text_list  (<link linkend="GSList">GSList</link> *text_list);</programlisting>
<para>
Frees a list of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.  This function should only be
used to free lists of text values as returned by the other getter functions
of <link linkend="ECalComponent"><type>ECalComponent</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>text_list</parameter>&nbsp;:</term>
<listitem><simpara> List of <link linkend="ECalComponentText"><type>ECalComponentText</type></link> structures.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-free-attendee-list"/>e_cal_component_free_attendee_list ()</title>
<indexterm><primary>e_cal_component_free_attendee_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_free_attendee_list
                                            (<link linkend="GSList">GSList</link> *attendee_list);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>attendee_list</parameter>&nbsp;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="ECalComponentAlarm"/>struct ECalComponentAlarm</title>
<indexterm><primary>ECalComponentAlarm</primary></indexterm><programlisting>struct ECalComponentAlarm;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentAlarmInstance"/>struct ECalComponentAlarmInstance</title>
<indexterm><primary>ECalComponentAlarmInstance</primary></indexterm><programlisting>struct ECalComponentAlarmInstance {

	/* UID of the alarm that triggered */
	const char *auid;

	/* Trigger time, i.e. "5 minutes before the appointment" */
	time_t trigger;

	/* Actual event occurrence to which this trigger corresponds */
	time_t occur_start;
	time_t occur_end;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentAlarms"/>struct ECalComponentAlarms</title>
<indexterm><primary>ECalComponentAlarms</primary></indexterm><programlisting>struct ECalComponentAlarms {

	/* The actual component */
	ECalComponent *comp;

	/* List of ECalComponentAlarmInstance structures */
	GSList *alarms;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentAlarmAction"/>enum ECalComponentAlarmAction</title>
<indexterm><primary>ECalComponentAlarmAction</primary></indexterm><programlisting>typedef enum {
	E_CAL_COMPONENT_ALARM_NONE,
	E_CAL_COMPONENT_ALARM_AUDIO,
	E_CAL_COMPONENT_ALARM_DISPLAY,
	E_CAL_COMPONENT_ALARM_EMAIL,
	E_CAL_COMPONENT_ALARM_PROCEDURE,
	E_CAL_COMPONENT_ALARM_UNKNOWN
} ECalComponentAlarmAction;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentAlarmTriggerType"/>enum ECalComponentAlarmTriggerType</title>
<indexterm><primary>ECalComponentAlarmTriggerType</primary></indexterm><programlisting>typedef enum {
	E_CAL_COMPONENT_ALARM_TRIGGER_NONE,
	E_CAL_COMPONENT_ALARM_TRIGGER_RELATIVE_START,
	E_CAL_COMPONENT_ALARM_TRIGGER_RELATIVE_END,
	E_CAL_COMPONENT_ALARM_TRIGGER_ABSOLUTE
} ECalComponentAlarmTriggerType;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentAlarmTrigger"/>struct ECalComponentAlarmTrigger</title>
<indexterm><primary>ECalComponentAlarmTrigger</primary></indexterm><programlisting>struct ECalComponentAlarmTrigger {

	ECalComponentAlarmTriggerType type;

	union {
		struct icaldurationtype rel_duration;
		struct icaltimetype abs_time;
	} u;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECalComponentAlarmRepeat"/>struct ECalComponentAlarmRepeat</title>
<indexterm><primary>ECalComponentAlarmRepeat</primary></indexterm><programlisting>struct ECalComponentAlarmRepeat {

	/* Number of extra repetitions, zero for none */
	int repetitions;

	/* Interval between repetitions */
	struct icaldurationtype duration;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="e-cal-component-has-alarms"/>e_cal_component_has_alarms ()</title>
<indexterm><primary>e_cal_component_has_alarms</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_cal_component_has_alarms      (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>
Checks whether the component has any alarms.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> TRUE if the component has any alarms.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-add-alarm"/>e_cal_component_add_alarm ()</title>
<indexterm><primary>e_cal_component_add_alarm</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_add_alarm       (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             <link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm);</programlisting>
<para>
Adds an alarm subcomponent to a calendar component.  You should have created
the <parameter>alarm</parameter> by using <link linkend="e-cal-component-alarm-new"><function>e_cal_component_alarm_new()</function></link>; it is invalid to use a
<link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link> structure that came from <link linkend="e-cal-component-get-alarm"><function>e_cal_component_get_alarm()</function></link>.  After
adding the alarm, the <parameter>alarm</parameter> structure is no longer valid because the
internal structures may change and you should get rid of it by using
<link linkend="e-cal-component-alarm-free"><function>e_cal_component_alarm_free()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara> An alarm.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-remove-alarm"/>e_cal_component_remove_alarm ()</title>
<indexterm><primary>e_cal_component_remove_alarm</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_remove_alarm    (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> *auid);</programlisting>
<para>
Removes an alarm subcomponent from a calendar component.  If the alarm that
corresponds to the specified <parameter>auid</parameter> had been fetched with
<link linkend="e-cal-component-get-alarm"><function>e_cal_component_get_alarm()</function></link>, then those alarm structures will be invalid; you
should get rid of them with <link linkend="e-cal-component-alarm-free"><function>e_cal_component_alarm_free()</function></link> before using this
function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>auid</parameter>&nbsp;:</term>
<listitem><simpara> UID of the alarm to remove.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-remove-all-alarms"/>e_cal_component_remove_all_alarms ()</title>
<indexterm><primary>e_cal_component_remove_all_alarms</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_remove_all_alarms
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>
Remove all alarms from the calendar component</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-alarm-uids"/>e_cal_component_get_alarm_uids ()</title>
<indexterm><primary>e_cal_component_get_alarm_uids</primary></indexterm><programlisting><link linkend="GList">GList</link>*      e_cal_component_get_alarm_uids  (<link linkend="ECalComponent">ECalComponent</link> *comp);</programlisting>
<para>
Builds a list of the unique identifiers of the alarm subcomponents inside a
calendar component.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> List of unique identifiers for alarms.  This should be freed
using <link linkend="cal-obj-uid-list-free"><function>cal_obj_uid_list_free()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-get-alarm"/>e_cal_component_get_alarm ()</title>
<indexterm><primary>e_cal_component_get_alarm</primary></indexterm><programlisting><link linkend="ECalComponentAlarm">ECalComponentAlarm</link>* e_cal_component_get_alarm
                                            (<link linkend="ECalComponent">ECalComponent</link> *comp,
                                             const <link linkend="char">char</link> *auid);</programlisting>
<para>
Queries a particular alarm subcomponent of a calendar component.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>comp</parameter>&nbsp;:</term>
<listitem><simpara> A calendar component.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>auid</parameter>&nbsp;:</term>
<listitem><simpara> Unique identifier for the sought alarm subcomponent.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The alarm subcomponent that corresponds to the specified <parameter>auid</parameter>,
or <link linkend="NULL-CAPS"><type>NULL</type></link> if no alarm exists with that UID.  This should be freed using
<link linkend="e-cal-component-alarm-free"><function>e_cal_component_alarm_free()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarms-free"/>e_cal_component_alarms_free ()</title>
<indexterm><primary>e_cal_component_alarms_free</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_alarms_free     (<link linkend="ECalComponentAlarms">ECalComponentAlarms</link> *alarms);</programlisting>
<para>
Frees a <link linkend="ECalComponentAlarms"><type>ECalComponentAlarms</type></link> structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarms</parameter>&nbsp;:</term>
<listitem><simpara> Component alarms structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-new"/>e_cal_component_alarm_new ()</title>
<indexterm><primary>e_cal_component_alarm_new</primary></indexterm><programlisting><link linkend="ECalComponentAlarm">ECalComponentAlarm</link>* e_cal_component_alarm_new
                                            (void);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new alarm component
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-clone"/>e_cal_component_alarm_clone ()</title>
<indexterm><primary>e_cal_component_alarm_clone</primary></indexterm><programlisting><link linkend="ECalComponentAlarm">ECalComponentAlarm</link>* e_cal_component_alarm_clone
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm);</programlisting>
<para>
Creates a new alarm subcomponent by copying the information from another one.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara> An alarm subcomponent.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly-created alarm subcomponent with the same values as the
original one.  Should be freed with <link linkend="e-cal-component-alarm-free"><function>e_cal_component_alarm_free()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-free"/>e_cal_component_alarm_free ()</title>
<indexterm><primary>e_cal_component_alarm_free</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_alarm_free      (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm);</programlisting>
<para>
Frees an alarm structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara> A calendar alarm.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-get-uid"/>e_cal_component_alarm_get_uid ()</title>
<indexterm><primary>e_cal_component_alarm_get_uid</primary></indexterm><programlisting>const <link linkend="char">char</link>* e_cal_component_alarm_get_uid   (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm);</programlisting>
<para>
Queries the unique identifier of an alarm subcomponent.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara> An alarm subcomponent.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> UID of the alarm.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-get-action"/>e_cal_component_alarm_get_action ()</title>
<indexterm><primary>e_cal_component_alarm_get_action</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_alarm_get_action
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentAlarmAction">ECalComponentAlarmAction</link> *action);</programlisting>
<para>
Queries the action type of an alarm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara> An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>action</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the alarm's action type.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-set-action"/>e_cal_component_alarm_set_action ()</title>
<indexterm><primary>e_cal_component_alarm_set_action</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_alarm_set_action
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentAlarmAction">ECalComponentAlarmAction</link> action);</programlisting>
<para>
Sets the action type for an alarm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara> An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>action</parameter>&nbsp;:</term>
<listitem><simpara> Action type.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-get-attach"/>e_cal_component_alarm_get_attach ()</title>
<indexterm><primary>e_cal_component_alarm_get_attach</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_alarm_get_attach
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="icalattach">icalattach</link> **attach);</programlisting>
<para>
Queries the attachment property of an alarm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara> An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attach</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the attachment; should be freed using <link linkend="icalattach-unref"><function>icalattach_unref()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-set-attach"/>e_cal_component_alarm_set_attach ()</title>
<indexterm><primary>e_cal_component_alarm_set_attach</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_alarm_set_attach
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="icalattach">icalattach</link> *attach);</programlisting>
<para>
Sets the attachment property of an alarm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara> An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attach</parameter>&nbsp;:</term>
<listitem><simpara> Attachment property or NULL to remove an existing property.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-get-description"/>e_cal_component_alarm_get_description ()</title>
<indexterm><primary>e_cal_component_alarm_get_description</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_alarm_get_description
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentText">ECalComponentText</link> *description);</programlisting>
<para>
Queries the description property of an alarm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara> An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>description</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the description property and its parameters.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-set-description"/>e_cal_component_alarm_set_description ()</title>
<indexterm><primary>e_cal_component_alarm_set_description</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_alarm_set_description
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentText">ECalComponentText</link> *description);</programlisting>
<para>
Sets the description property of an alarm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara> An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>description</parameter>&nbsp;:</term>
<listitem><simpara> Description property and its parameters, or NULL for no description.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-get-repeat"/>e_cal_component_alarm_get_repeat ()</title>
<indexterm><primary>e_cal_component_alarm_get_repeat</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_alarm_get_repeat
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentAlarmRepeat">ECalComponentAlarmRepeat</link> *repeat);</programlisting>
<para>
Queries the repeat/duration properties of an alarm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara> An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>repeat</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the repeat/duration properties.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-set-repeat"/>e_cal_component_alarm_set_repeat ()</title>
<indexterm><primary>e_cal_component_alarm_set_repeat</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_alarm_set_repeat
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentAlarmRepeat">ECalComponentAlarmRepeat</link> repeat);</programlisting>
<para>
Sets the repeat/duration values for an alarm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara> An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>repeat</parameter>&nbsp;:</term>
<listitem><simpara> Repeat/duration values.  To remove any repetitions from the alarm,
set the <parameter>repeat.repetitions</parameter> to 0.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-get-trigger"/>e_cal_component_alarm_get_trigger ()</title>
<indexterm><primary>e_cal_component_alarm_get_trigger</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_alarm_get_trigger
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentAlarmTrigger">ECalComponentAlarmTrigger</link> *trigger);</programlisting>
<para>
Queries the trigger time for an alarm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara> An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>trigger</parameter>&nbsp;:</term>
<listitem><simpara> Return value for the trigger time.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-set-trigger"/>e_cal_component_alarm_set_trigger ()</title>
<indexterm><primary>e_cal_component_alarm_set_trigger</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_alarm_set_trigger
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="ECalComponentAlarmTrigger">ECalComponentAlarmTrigger</link> trigger);</programlisting>
<para>
Sets the trigger time of an alarm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara> An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>trigger</parameter>&nbsp;:</term>
<listitem><simpara> Trigger time structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-get-attendee-list"/>e_cal_component_alarm_get_attendee_list ()</title>
<indexterm><primary>e_cal_component_alarm_get_attendee_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_alarm_get_attendee_list
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="GSList">GSList</link> **attendee_list);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attendee_list</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-set-attendee-list"/>e_cal_component_alarm_set_attendee_list ()</title>
<indexterm><primary>e_cal_component_alarm_set_attendee_list</primary></indexterm><programlisting><link linkend="void">void</link>        e_cal_component_alarm_set_attendee_list
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm,
                                             <link linkend="GSList">GSList</link> *attendee_list);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>attendee_list</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-has-attendees"/>e_cal_component_alarm_has_attendees ()</title>
<indexterm><primary>e_cal_component_alarm_has_attendees</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    e_cal_component_alarm_has_attendees
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="e-cal-component-alarm-get-icalcomponent"/>e_cal_component_alarm_get_icalcomponent ()</title>
<indexterm><primary>e_cal_component_alarm_get_icalcomponent</primary></indexterm><programlisting><link linkend="icalcomponent">icalcomponent</link>* e_cal_component_alarm_get_icalcomponent
                                            (<link linkend="ECalComponentAlarm">ECalComponentAlarm</link> *alarm);</programlisting>
<para>
Get the icalcomponent associated with the given <link linkend="ECalComponentAlarm"><type>ECalComponentAlarm</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>alarm</parameter>&nbsp;:</term>
<listitem><simpara> An alarm.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the icalcomponent.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
