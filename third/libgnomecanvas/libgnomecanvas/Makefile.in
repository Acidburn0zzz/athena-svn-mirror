# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AS = @AS@
AWK = @AWK@
CANVAS_GLADE_CFLAGS = @CANVAS_GLADE_CFLAGS@
CANVAS_GLADE_LIBS = @CANVAS_GLADE_LIBS@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
DATADIRNAME = @DATADIRNAME@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EXEEXT = @EXEEXT@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOME_ACLOCAL_DIR = @GNOME_ACLOCAL_DIR@
GNOME_ACLOCAL_FLAGS = @GNOME_ACLOCAL_FLAGS@
GTKDOC = @GTKDOC@
HAVE_GTK_DOC = @HAVE_GTK_DOC@
HTML_DIR = @HTML_DIR@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
LDFLAGS = @LDFLAGS@
LIBGNOMECANVAS_AGE = @LIBGNOMECANVAS_AGE@
LIBGNOMECANVAS_CFLAGS = @LIBGNOMECANVAS_CFLAGS@
LIBGNOMECANVAS_CURRENT = @LIBGNOMECANVAS_CURRENT@
LIBGNOMECANVAS_LIBS = @LIBGNOMECANVAS_LIBS@
LIBGNOMECANVAS_REVISION = @LIBGNOMECANVAS_REVISION@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKINSTALLDIRS = @MKINSTALLDIRS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PATH_TO_XRDB = @PATH_TO_XRDB@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
RANLIB = @RANLIB@
REBUILD = @REBUILD@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WARN_CFLAGS = @WARN_CFLAGS@
YACC = @YACC@
cxxflags_set = @cxxflags_set@

@PLATFORM_WIN32_TRUE@no_undefined = @PLATFORM_WIN32_TRUE@-no-undefined

INCLUDES = \
	-I$(top_srcdir) 				\
	-I$(top_builddir)				\
	$(WARN_CFLAGS) 					\
	$(LIBGNOMECANVAS_CFLAGS)			\
        -DGNOMECANVASLIBDIR=\""$(libdir)"\" 		\
        -DGNOMECANVASDATADIR=\""$(datadir)"\" 		\
        -DGNOMECANVASPIXMAPDIR=\""$(datadir)/pixmaps"\"	\
        -DGNOMECANVASBINDIR=\""$(bindir)"\" 		\
        -DGNOMECANVASLOCALSTATEDIR=\""$(localstatedir)"\" 	\
        -DGNOMECANVASLOCALEDIR=\""$(gnomelocaledir)"\" 	\
	-DG_LOG_DOMAIN=\"GnomeCanvas\"			\
	-DVERSION=\"$(VERSION)\"


lib_LTLIBRARIES = libgnomecanvas-2.la

libgnomecanvas_2_la_LIBADD = \
	$(LIBGNOMECANVAS_LIBS)


libgnomecanvas_2_la_LDFLAGS = $(no_undefined) \
	-version-info $(LIBGNOMECANVAS_CURRENT):$(LIBGNOMECANVAS_REVISION):$(LIBGNOMECANVAS_AGE) 


libgnomecanvasincludedir = $(includedir)/libgnomecanvas-2.0/libgnomecanvas

libgnomecanvasinclude_HEADERS = \
	gnome-canvas-shape.h			\
	gnome-canvas-bpath.h			\
	gnome-canvas-clipgroup.h		\
	gnome-canvas-line.h			\
	gnome-canvas-pixbuf.h			\
	gnome-canvas-polygon.h			\
	gnome-canvas-rect-ellipse.h		\
	gnome-canvas-text.h			\
	gnome-canvas-rich-text.h		\
	gnome-canvas-util.h			\
	gnome-canvas-widget.h			\
	gnome-canvas-path-def.h			\
	gnome-canvas.h				\
	libgnomecanvas.h


libgnomecanvas_2_la_SOURCES = \
	$(libgnomecanvasinclude_HEADERS)	\
	gnome-canvas-shape.c			\
	gnome-canvas-shape-private.h		\
	gnome-canvas-bpath.c			\
	gnome-canvas-path-def.c			\
	gnome-canvas-clipgroup.c		\
	gnome-canvas-i18n.h			\
	gnome-canvas-line.c			\
	gnome-canvas-pixbuf.c			\
	gnome-canvas-polygon.c			\
	gnome-canvas-rect-ellipse.c		\
	gnome-canvas-text.c			\
	gnome-canvas-rich-text.c		\
	gnome-canvas-util.c			\
	gnome-canvas-widget.c			\
	gnome-canvas.c				\
	libgnomecanvastypes.c


marshal_sources = \
	gnome-canvas-marshal.c			\
	gnome-canvas-marshal.h


BUILT_SOURCES = \
	$(marshal_sources)


EXTRA_DIST = \
	gnome-canvas-marshal.list	\
	libgnomecanvas-2.0.pc.in


pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libgnomecanvas-2.0.pc

DONT_DIST_SOURCE = $(marshal_sources)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES =  libgnomecanvas-2.0.pc
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
LIBS = @LIBS@
libgnomecanvas_2_la_DEPENDENCIES = 
libgnomecanvas_2_la_OBJECTS =  gnome-canvas-shape.lo \
gnome-canvas-bpath.lo gnome-canvas-path-def.lo \
gnome-canvas-clipgroup.lo gnome-canvas-line.lo gnome-canvas-pixbuf.lo \
gnome-canvas-polygon.lo gnome-canvas-rect-ellipse.lo \
gnome-canvas-text.lo gnome-canvas-rich-text.lo gnome-canvas-util.lo \
gnome-canvas-widget.lo gnome-canvas.lo libgnomecanvastypes.lo
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DATA =  $(pkgconfig_DATA)

HEADERS =  $(libgnomecanvasinclude_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in libgnomecanvas-2.0.pc.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libgnomecanvas_2_la_SOURCES)
OBJECTS = $(libgnomecanvas_2_la_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps libgnomecanvas/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

libgnomecanvas-2.0.pc: $(top_builddir)/config.status libgnomecanvas-2.0.pc.in
	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libgnomecanvas-2.la: $(libgnomecanvas_2_la_OBJECTS) $(libgnomecanvas_2_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libgnomecanvas_2_la_LDFLAGS) $(libgnomecanvas_2_la_OBJECTS) $(libgnomecanvas_2_la_LIBADD) $(LIBS)

install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgconfigdir)
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(pkgconfigdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(pkgconfigdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(pkgconfigdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(pkgconfigdir)/$$p; \
	  fi; fi; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	list='$(pkgconfig_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(pkgconfigdir)/$$p; \
	done

install-libgnomecanvasincludeHEADERS: $(libgnomecanvasinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libgnomecanvasincludedir)
	@list='$(libgnomecanvasinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libgnomecanvasincludedir)/$$p"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libgnomecanvasincludedir)/$$p; \
	done

uninstall-libgnomecanvasincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	list='$(libgnomecanvasinclude_HEADERS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libgnomecanvasincludedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = libgnomecanvas

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-hook
gnome-canvas-bpath.lo gnome-canvas-bpath.o : gnome-canvas-bpath.c \
	gnome-canvas.h gnome-canvas-util.h gnome-canvas-bpath.h \
	gnome-canvas.h gnome-canvas-shape.h gnome-canvas-path-def.h \
	gnome-canvas-shape.h gnome-canvas-shape-private.h \
	gnome-canvas-path-def.h
gnome-canvas-clipgroup.lo gnome-canvas-clipgroup.o : \
	gnome-canvas-clipgroup.c gnome-canvas.h gnome-canvas-util.h \
	gnome-canvas-clipgroup.h gnome-canvas.h gnome-canvas-util.h \
	gnome-canvas-path-def.h
gnome-canvas-line.lo gnome-canvas-line.o : gnome-canvas-line.c \
	../config.h libgnomecanvas.h gnome-canvas.h gnome-canvas-line.h \
	gnome-canvas-text.h gnome-canvas-rich-text.h \
	gnome-canvas-polygon.h gnome-canvas-shape.h \
	gnome-canvas-path-def.h gnome-canvas-pixbuf.h \
	gnome-canvas-widget.h gnome-canvas-rect-ellipse.h \
	gnome-canvas-bpath.h gnome-canvas-util.h
gnome-canvas-path-def.lo gnome-canvas-path-def.o : \
	gnome-canvas-path-def.c gnome-canvas-path-def.h
gnome-canvas-pixbuf.lo gnome-canvas-pixbuf.o : gnome-canvas-pixbuf.c \
	../config.h gnome-canvas.h gnome-canvas-util.h \
	gnome-canvas-pixbuf.h
gnome-canvas-polygon.lo gnome-canvas-polygon.o : gnome-canvas-polygon.c \
	../config.h libgnomecanvas.h gnome-canvas.h gnome-canvas-line.h \
	gnome-canvas-text.h gnome-canvas-rich-text.h \
	gnome-canvas-polygon.h gnome-canvas-shape.h \
	gnome-canvas-path-def.h gnome-canvas-pixbuf.h \
	gnome-canvas-widget.h gnome-canvas-rect-ellipse.h \
	gnome-canvas-bpath.h gnome-canvas-util.h gnome-canvas-shape.h
gnome-canvas-rect-ellipse.lo gnome-canvas-rect-ellipse.o : \
	gnome-canvas-rect-ellipse.c ../config.h \
	gnome-canvas-rect-ellipse.h gnome-canvas.h gnome-canvas-shape.h \
	gnome-canvas-path-def.h gnome-canvas-util.h \
	gnome-canvas-shape.h
gnome-canvas-rich-text.lo gnome-canvas-rich-text.o : \
	gnome-canvas-rich-text.c gnome-canvas.h gnome-canvas-util.h \
	gnome-canvas-rich-text.h gnome-canvas.h gnome-canvas-i18n.h
gnome-canvas-shape.lo gnome-canvas-shape.o : gnome-canvas-shape.c \
	gnome-canvas.h gnome-canvas-util.h gnome-canvas-shape.h \
	gnome-canvas.h gnome-canvas-path-def.h \
	gnome-canvas-shape-private.h gnome-canvas-path-def.h
gnome-canvas-text.lo gnome-canvas-text.o : gnome-canvas-text.c \
	../config.h gnome-canvas-text.h gnome-canvas.h \
	gnome-canvas-util.h gnome-canvas-i18n.h
gnome-canvas-util.lo gnome-canvas-util.o : gnome-canvas-util.c \
	../config.h gnome-canvas.h gnome-canvas-util.h
gnome-canvas-widget.lo gnome-canvas-widget.o : gnome-canvas-widget.c \
	../config.h gnome-canvas-widget.h gnome-canvas.h
gnome-canvas.lo gnome-canvas.o : gnome-canvas.c ../config.h \
	gnome-canvas.h gnome-canvas-i18n.h gnome-canvas-marshal.h \
	gnome-canvas-marshal.c
libgnomecanvastypes.lo libgnomecanvastypes.o : libgnomecanvastypes.c \
	../config.h libgnomecanvas.h gnome-canvas.h gnome-canvas-line.h \
	gnome-canvas-text.h gnome-canvas-rich-text.h \
	gnome-canvas-polygon.h gnome-canvas-shape.h \
	gnome-canvas-path-def.h gnome-canvas-pixbuf.h \
	gnome-canvas-widget.h gnome-canvas-rect-ellipse.h \
	gnome-canvas-bpath.h gnome-canvas-util.h

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES
install-exec: install-exec-am

install-data-am: install-pkgconfigDATA \
		install-libgnomecanvasincludeHEADERS install-data-local
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES uninstall-pkgconfigDATA \
		uninstall-libgnomecanvasincludeHEADERS uninstall-local
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(pkgconfigdir) \
		$(DESTDIR)$(libgnomecanvasincludedir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool uninstall-pkgconfigDATA install-pkgconfigDATA \
uninstall-libgnomecanvasincludeHEADERS \
install-libgnomecanvasincludeHEADERS tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-local install-data-am install-data install-am \
install uninstall-local uninstall-am uninstall all-redirect all-am all \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


@OS_WIN32_TRUE@install-libtool-import-lib:
@OS_WIN32_TRUE@	$(INSTALL) .libs/libgnomecanvas-2.dll.a $(DESTDIR)$(libdir)

@OS_WIN32_TRUE@uninstall-libtool-import-lib:
@OS_WIN32_TRUE@	-rm $(DESTDIR)$(libdir)/libgnomecanvas-2.dll.a
@OS_WIN32_FALSE@install-libtool-import-lib:
@OS_WIN32_FALSE@uninstall-libtool-import-lib:

$(libgnomecanvas_2_la_OBJECTS): $(marshal_sources)

gnome-canvas-marshal.h: gnome-canvas-marshal.list $(GLIB_GENMARSHAL)
	$(GLIB_GENMARSHAL) $< --header --prefix=gnome_canvas_marshal > $@
gnome-canvas-marshal.c: gnome-canvas-marshal.list $(GLIB_GENMARSHAL)
	$(GLIB_GENMARSHAL) $< --body --prefix=gnome_canvas_marshal > $@

dist-hook:
	for file in $(DONT_DIST_SOURCE) ; do \
	    rm -f $(distdir)/$$file ; \
	done

install-data-local: install-libtool-import-lib

uninstall-local: uninstall-libtool-import-lib

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
