/*
 * This file was generated by orbit-idl - DO NOT EDIT!
 */

#include <glib.h>
#define ORBIT_IDL_SERIAL 9
#include <orb/orbit.h>

#ifndef Echo_H
#define Echo_H 1
#ifdef __cplusplus
extern "C"
{
#endif				/* __cplusplus */

/** typedefs **/
#include <bonobo/Bonobo.h>
#if !defined(ORBIT_DECL_Demo_Echo) && !defined(_Demo_Echo_defined)
#define ORBIT_DECL_Demo_Echo 1
#define _Demo_Echo_defined 1
#define Demo_Echo__free CORBA_Object__free
   typedef CORBA_Object Demo_Echo;
   extern CORBA_unsigned_long Demo_Echo__classid;
#if !defined(TC_IMPL_TC_Demo_Echo_0)
#define TC_IMPL_TC_Demo_Echo_0 'E'
#define TC_IMPL_TC_Demo_Echo_1 'c'
#define TC_IMPL_TC_Demo_Echo_2 'h'
#define TC_IMPL_TC_Demo_Echo_3 'o'
   extern const struct CORBA_TypeCode_struct TC_Demo_Echo_struct;
#define TC_Demo_Echo ((CORBA_TypeCode)&TC_Demo_Echo_struct)
#endif
#endif

/** POA structures **/
   typedef struct
   {
      void *_private;
      void (*echo) (PortableServer_Servant _servant,
		    const CORBA_char * message, CORBA_Environment * ev);
   }
   POA_Demo_Echo__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_Demo_Echo__epv *Demo_Echo_epv;
   }
   POA_Demo_Echo__vepv;
   typedef struct
   {
      void *_private;
      POA_Demo_Echo__vepv *vepv;
   }
   POA_Demo_Echo;
   extern void POA_Demo_Echo__init(PortableServer_Servant servant,
				   CORBA_Environment * ev);
   extern void POA_Demo_Echo__fini(PortableServer_Servant servant,
				   CORBA_Environment * ev);

/** prototypes **/
#define Demo_Echo_ref Bonobo_Unknown_ref
#define Demo_Echo_unref Bonobo_Unknown_unref
#define Demo_Echo_queryInterface Bonobo_Unknown_queryInterface
   void Demo_Echo_echo(Demo_Echo _obj, const CORBA_char * message,
		       CORBA_Environment * ev);

   void _ORBIT_skel_Demo_Echo_echo(POA_Demo_Echo * _ORBIT_servant,
				   GIOPRecvBuffer * _ORBIT_recv_buffer,
				   CORBA_Environment * ev,
				   void (*_impl_echo) (PortableServer_Servant
						       _servant,
						       const CORBA_char *
						       message,
						       CORBA_Environment *
						       ev));
#ifdef __cplusplus
}
#endif				/* __cplusplus */

#endif
#undef ORBIT_IDL_SERIAL
