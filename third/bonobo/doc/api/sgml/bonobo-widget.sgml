<refentry id="bonobo-bonobo-widget" revision="9 Feb 2001">
<refmeta>
<refentrytitle>BonoboWidget</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>BONOBO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>BonoboWidget</refname><refpurpose>Simplified embedding of widgets in Bonobo.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



#define     <link linkend="BONOBO-WIDGET-TYPE-CAPS">BONOBO_WIDGET_TYPE</link>
#define     <link linkend="BONOBO-WIDGET-CAPS">BONOBO_WIDGET</link>                   (o)
#define     <link linkend="BONOBO-WIDGET-CLASS-CAPS">BONOBO_WIDGET_CLASS</link>             (k)
#define     <link linkend="BONOBO-IS-WIDGET-CAPS">BONOBO_IS_WIDGET</link>                (o)
#define     <link linkend="BONOBO-IS-WIDGET-CLASS-CAPS">BONOBO_IS_WIDGET_CLASS</link>          (k)
struct      <link linkend="BonoboWidget-struct">BonoboWidget</link>;
typedef     <link linkend="BonoboWidgetClass">BonoboWidgetClass</link>;
<link linkend="BonoboObjectClient">BonoboObjectClient</link>* <link linkend="bonobo-widget-get-server">bonobo_widget_get_server</link>
                                            (<link linkend="BonoboWidget">BonoboWidget</link> *bw);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="bonobo-widget-new-control">bonobo_widget_new_control</link>       (const char *goad_id,
                                             <link linkend="Bonobo-UIContainer">Bonobo_UIContainer</link> uih);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="bonobo-widget-new-control-from-objref">bonobo_widget_new_control_from_objref</link>
                                            (<link linkend="Bonobo-Control">Bonobo_Control</link> control,
                                             <link linkend="Bonobo-UIContainer">Bonobo_UIContainer</link> uih);
<link linkend="BonoboControlFrame">BonoboControlFrame</link>* <link linkend="bonobo-widget-get-control-frame">bonobo_widget_get_control_frame</link>
                                            (<link linkend="BonoboWidget">BonoboWidget</link> *bw);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="bonobo-widget-new-subdoc">bonobo_widget_new_subdoc</link>        (const char *object_desc,
                                             <link linkend="Bonobo-UIContainer">Bonobo_UIContainer</link> uih);
<link linkend="BonoboItemContainer">BonoboItemContainer</link>* <link linkend="bonobo-widget-get-container">bonobo_widget_get_container</link>
                                            (<link linkend="BonoboWidget">BonoboWidget</link> *bw);
<link linkend="BonoboClientSite">BonoboClientSite</link>* <link linkend="bonobo-widget-get-client-site">bonobo_widget_get_client_site</link>
                                            (<link linkend="BonoboWidget">BonoboWidget</link> *bw);
<link linkend="BonoboViewFrame">BonoboViewFrame</link>* <link linkend="bonobo-widget-get-view-frame">bonobo_widget_get_view_frame</link>
                                            (<link linkend="BonoboWidget">BonoboWidget</link> *bw);
<link linkend="Bonobo-UIContainer">Bonobo_UIContainer</link> <link linkend="bonobo-widget-get-uih">bonobo_widget_get_uih</link>    (<link linkend="BonoboWidget">BonoboWidget</link> *bw);
void        <link linkend="bonobo-widget-set-property">bonobo_widget_set_property</link>      (<link linkend="BonoboWidget">BonoboWidget</link> *control,
                                             const char *first_prop,
                                             ...);
void        <link linkend="bonobo-widget-get-property">bonobo_widget_get_property</link>      (<link linkend="BonoboWidget">BonoboWidget</link> *control,
                                             const char *first_prop,
                                             ...);

</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>
  Bonobo component embedding for hydrocephalic imbeciles.
</para>

<para>
  Pure cane sugar.
</para>

<para>
  This purpose of BonoboWidget is to make container-side use of Bonobo
  as easy as pie.  This widget has two functions:
  <orderedlist>
    <listitem>
      <para>
        Provide a simple wrapper for embedding a single-view
        subdocument.  In this case, BonoboWidget handles creating the
        embeddable, binding it to a local BonoboClientSite, creating a
        view for it, and displaying the view.  You can use the
        accessor functions (bonobo_widget_get_view_frame, etc) to get
        at the actual Bonobo objects which underlie the whole process.
      </para>

      <para>
        In order to do this, just call:
        <informalexample>
          <programlisting>
	bw = bonobo_widget_new_subdoc ("id of subdoc embeddable", top_level_uihandler);
          </programlisting>
        </informalexample>

        And then insert the 'bw' widget into the widget tree of your application like so:
        <informalexample>
          <programlisting>
	gtk_container_add (some_container, bw);
          </programlisting>
        </informalexample>
      </para>
        
      <para>
        You are free to make the UIContainer argument to
        <link linkend="bonobo-widget-new-subdoc">bonobo_widget_new_subdoc</link>() be CORBA_OBJECT_NIL.
      </para>
    </listitem>

    <listitem>
      <para>
        Provide a simple wrapper for embedding Controls.  Embedding
        controls is already really easy, but BonoboWidget reduces the
        work from about 5 lines to 1.  To embed a given control, just
        do:
        <informalexample>
          <programlisting>
       bw = bonobo_widget_new_control ("id for control");
       gtk_container_add (some_container, bw);
          </programlisting>
        </informalexample>
      </para>
    </listitem>
  </orderedlist>
</para>

<para>
   There are also functions for fetching and setting values in the
   Control PropertyBag, but the use of these functions is
   discouraged. 
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="BONOBO-WIDGET-TYPE-CAPS">BONOBO_WIDGET_TYPE</title>
<programlisting>#define BONOBO_WIDGET_TYPE        (bonobo_widget_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BONOBO-WIDGET-CAPS">BONOBO_WIDGET()</title>
<programlisting>#define BONOBO_WIDGET(o)          (GTK_CHECK_CAST ((o), BONOBO_WIDGET_TYPE, BonoboWidget))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>o</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-WIDGET-CLASS-CAPS">BONOBO_WIDGET_CLASS()</title>
<programlisting>#define BONOBO_WIDGET_CLASS(k)    (GTK_CHECK_CLASS_CAST((k), BONOBO_WIDGET_TYPE, BonoboWidgetClass))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>k</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-IS-WIDGET-CAPS">BONOBO_IS_WIDGET()</title>
<programlisting>#define BONOBO_IS_WIDGET(o)       (GTK_CHECK_TYPE ((o), BONOBO_WIDGET_TYPE))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>o</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-IS-WIDGET-CLASS-CAPS">BONOBO_IS_WIDGET_CLASS()</title>
<programlisting>#define BONOBO_IS_WIDGET_CLASS(k) (GTK_CHECK_CLASS_TYPE ((k), BONOBO_WIDGET_TYPE))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>k</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BonoboWidget-struct">struct BonoboWidget</title>
<programlisting>struct BonoboWidget;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboWidgetClass">BonoboWidgetClass</title>
<programlisting>typedef struct {
	GtkBinClass	 bin_class;
} BonoboWidgetClass;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="bonobo-widget-get-server">bonobo_widget_get_server ()</title>
<programlisting><link linkend="BonoboObjectClient">BonoboObjectClient</link>* bonobo_widget_get_server
                                            (<link linkend="BonoboWidget">BonoboWidget</link> *bw);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>bw</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-widget-new-control">bonobo_widget_new_control ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  bonobo_widget_new_control       (const char *goad_id,
                                             <link linkend="Bonobo-UIContainer">Bonobo_UIContainer</link> uih);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>goad_id</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>uih</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-widget-new-control-from-objref">bonobo_widget_new_control_from_objref ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  bonobo_widget_new_control_from_objref
                                            (<link linkend="Bonobo-Control">Bonobo_Control</link> control,
                                             <link linkend="Bonobo-UIContainer">Bonobo_UIContainer</link> uih);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>control</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>uih</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-widget-get-control-frame">bonobo_widget_get_control_frame ()</title>
<programlisting><link linkend="BonoboControlFrame">BonoboControlFrame</link>* bonobo_widget_get_control_frame
                                            (<link linkend="BonoboWidget">BonoboWidget</link> *bw);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>bw</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-widget-new-subdoc">bonobo_widget_new_subdoc ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  bonobo_widget_new_subdoc        (const char *object_desc,
                                             <link linkend="Bonobo-UIContainer">Bonobo_UIContainer</link> uih);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>object_desc</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>uih</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-widget-get-container">bonobo_widget_get_container ()</title>
<programlisting><link linkend="BonoboItemContainer">BonoboItemContainer</link>* bonobo_widget_get_container
                                            (<link linkend="BonoboWidget">BonoboWidget</link> *bw);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>bw</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-widget-get-client-site">bonobo_widget_get_client_site ()</title>
<programlisting><link linkend="BonoboClientSite">BonoboClientSite</link>* bonobo_widget_get_client_site
                                            (<link linkend="BonoboWidget">BonoboWidget</link> *bw);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>bw</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-widget-get-view-frame">bonobo_widget_get_view_frame ()</title>
<programlisting><link linkend="BonoboViewFrame">BonoboViewFrame</link>* bonobo_widget_get_view_frame
                                            (<link linkend="BonoboWidget">BonoboWidget</link> *bw);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>bw</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-widget-get-uih">bonobo_widget_get_uih ()</title>
<programlisting><link linkend="Bonobo-UIContainer">Bonobo_UIContainer</link> bonobo_widget_get_uih    (<link linkend="BonoboWidget">BonoboWidget</link> *bw);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>bw</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-widget-set-property">bonobo_widget_set_property ()</title>
<programlisting>void        bonobo_widget_set_property      (<link linkend="BonoboWidget">BonoboWidget</link> *control,
                                             const char *first_prop,
                                             ...);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>control</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>first_prop</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>...</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-widget-get-property">bonobo_widget_get_property ()</title>
<programlisting>void        bonobo_widget_get_property      (<link linkend="BonoboWidget">BonoboWidget</link> *control,
                                             const char *first_prop,
                                             ...);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>control</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>first_prop</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>...</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>



<refsect1>
<title>See Also</title>
<para>
   Object activation happens with <link linkend="bonobo-get-object">bonobo_get_object</link>().
</para>

<para>
   <link linkend="BonoboControl">BonoboControl</link>, <link linkend="BonoboControlFrame">BonoboControlFrame</link>, <link linkend="BonoboObject">BonoboObject</link>, <link linkend="BonoboView">BonoboView</link>,
   <link linkend="BonoboEmbeddable">BonoboEmbeddable</link>, <link linkend="BonoboUIContainer">BonoboUIContainer</link>, <link linkend="BonoboItemContainer">BonoboItemContainer</link>. 
</para>
</refsect1>

</refentry>
