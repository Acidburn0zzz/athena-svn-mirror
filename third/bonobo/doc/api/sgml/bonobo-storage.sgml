<refentry id="bonobo-bonobo-storage" revision="29 Dec 2000">
<refmeta>
<refentrytitle>bonobo-storage</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>BONOBO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>bonobo-storage</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



#define     <link linkend="BONOBO-STORAGE-TYPE-CAPS">BONOBO_STORAGE_TYPE</link>
#define     <link linkend="BONOBO-STORAGE-CAPS">BONOBO_STORAGE</link>                  (o)
#define     <link linkend="BONOBO-STORAGE-CLASS-CAPS">BONOBO_STORAGE_CLASS</link>            (k)
#define     <link linkend="BONOBO-IS-STORAGE-CAPS">BONOBO_IS_STORAGE</link>               (o)
#define     <link linkend="BONOBO-IS-STORAGE-CLASS-CAPS">BONOBO_IS_STORAGE_CLASS</link>         (k)
typedef     <link linkend="BonoboStorage">BonoboStorage</link>;
typedef     <link linkend="BonoboStorageClass">BonoboStorageClass</link>;
<link linkend="BonoboStorage">BonoboStorage</link>* <link linkend="bonobo-storage-construct">bonobo_storage_construct</link>     (<link linkend="BonoboStorage">BonoboStorage</link> *storage,
                                             <link linkend="Bonobo-Storage">Bonobo_Storage</link> corba_storage);
<link linkend="BonoboStorage">BonoboStorage</link>* <link linkend="bonobo-storage-open">bonobo_storage_open</link>          (const char *driver,
                                             const char *path,
                                             <link linkend="gint">gint</link> flags,
                                             <link linkend="gint">gint</link> mode);
<link linkend="BonoboStorage">BonoboStorage</link>* <link linkend="bonobo-storage-open-full">bonobo_storage_open_full</link>     (const char *driver,
                                             const char *path,
                                             <link linkend="gint">gint</link> flags,
                                             <link linkend="gint">gint</link> mode,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
void        <link linkend="bonobo-storage-copy-to">bonobo_storage_copy_to</link>          (<link linkend="Bonobo-Storage">Bonobo_Storage</link> src,
                                             <link linkend="Bonobo-Storage">Bonobo_Storage</link> dest,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);
<link linkend="Bonobo-Storage">Bonobo_Storage</link> <link linkend="bonobo-storage-corba-object-create">bonobo_storage_corba_object_create</link>
                                            (<link linkend="BonoboObject">BonoboObject</link> *object);
void        <link linkend="bonobo-storage-write-class-id">bonobo_storage_write_class_id</link>   (<link linkend="BonoboStorage">BonoboStorage</link> *storage,
                                             char *class_id);
void        <link linkend="bonobo-stream-write-class-id">bonobo_stream_write_class_id</link>    (<link linkend="BonoboStream">BonoboStream</link> *stream,
                                             char *class_id);
<link linkend="POA-Bonobo-Storage--epv">POA_Bonobo_Storage__epv</link>* <link linkend="bonobo-storage-get-epv">bonobo_storage_get_epv</link>
                                            (void);

</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="BONOBO-STORAGE-TYPE-CAPS">BONOBO_STORAGE_TYPE</title>
<programlisting>#define BONOBO_STORAGE_TYPE        (bonobo_storage_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BONOBO-STORAGE-CAPS">BONOBO_STORAGE()</title>
<programlisting>#define BONOBO_STORAGE(o)          (GTK_CHECK_CAST ((o), BONOBO_STORAGE_TYPE, BonoboStorage))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>o</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-STORAGE-CLASS-CAPS">BONOBO_STORAGE_CLASS()</title>
<programlisting>#define BONOBO_STORAGE_CLASS(k)    (GTK_CHECK_CLASS_CAST((k), BONOBO_STORAGE_TYPE, BonoboStorageClass))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>k</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-IS-STORAGE-CAPS">BONOBO_IS_STORAGE()</title>
<programlisting>#define BONOBO_IS_STORAGE(o)       (GTK_CHECK_TYPE ((o), BONOBO_STORAGE_TYPE))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>o</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-IS-STORAGE-CLASS-CAPS">BONOBO_IS_STORAGE_CLASS()</title>
<programlisting>#define BONOBO_IS_STORAGE_CLASS(k) (GTK_CHECK_CLASS_TYPE ((k), BONOBO_STORAGE_TYPE))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>k</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BonoboStorage">BonoboStorage</title>
<programlisting>typedef struct {
        BonoboObject object;

	BonoboStoragePrivate *priv;
} BonoboStorage;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboStorageClass">BonoboStorageClass</title>
<programlisting>typedef struct {
	BonoboObjectClass parent_class;

	/*
	 * virtual methods
	 */
	Bonobo_StorageInfo *(*get_info) (BonoboStorage *storage,
					 const CORBA_char *path,
					 const Bonobo_StorageInfoFields mask,
					 CORBA_Environment *ev);
	void          (*set_info)       (BonoboStorage *storage,
					 const CORBA_char *path,
					 const Bonobo_StorageInfo * info,
					 const Bonobo_StorageInfoFields mask,
					 CORBA_Environment *ev);
	BonoboStream  *(*open_stream)   (BonoboStorage *storage,
					 const CORBA_char *path,
					 Bonobo_Storage_OpenMode, 
					 CORBA_Environment *ev);
	BonoboStorage *(*open_storage)  (BonoboStorage *storage,
					 const CORBA_char *path,
					 Bonobo_Storage_OpenMode, 
					 CORBA_Environment *ev);
	void         (*copy_to)         (BonoboStorage *storage, 
					 Bonobo_Storage target,
					 CORBA_Environment *ev);
	void         (*rename)          (BonoboStorage *storage,
					 const CORBA_char *path_name,
					 const CORBA_char *new_path_name,
					 CORBA_Environment *ev);
	void         (*commit)          (BonoboStorage *storage,
					 CORBA_Environment *ev);
	void         (*revert)          (BonoboStorage *storage,
					 CORBA_Environment *ev);
	Bonobo_Storage_DirectoryList *
	             (*list_contents)   (BonoboStorage *storage,
					 const CORBA_char *path,
					 Bonobo_StorageInfoFields mask,
					 CORBA_Environment *ev);
	void         (*erase)           (BonoboStorage *storage,
                                         const CORBA_char *path,
                                         CORBA_Environment *ev);
} BonoboStorageClass;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="bonobo-storage-construct">bonobo_storage_construct ()</title>
<programlisting><link linkend="BonoboStorage">BonoboStorage</link>* bonobo_storage_construct     (<link linkend="BonoboStorage">BonoboStorage</link> *storage,
                                             <link linkend="Bonobo-Storage">Bonobo_Storage</link> corba_storage);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>storage</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>corba_storage</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-storage-open">bonobo_storage_open ()</title>
<programlisting><link linkend="BonoboStorage">BonoboStorage</link>* bonobo_storage_open          (const char *driver,
                                             const char *path,
                                             <link linkend="gint">gint</link> flags,
                                             <link linkend="gint">gint</link> mode);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>driver</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>path</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>flags</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>mode</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-storage-open-full">bonobo_storage_open_full ()</title>
<programlisting><link linkend="BonoboStorage">BonoboStorage</link>* bonobo_storage_open_full     (const char *driver,
                                             const char *path,
                                             <link linkend="gint">gint</link> flags,
                                             <link linkend="gint">gint</link> mode,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>driver</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>path</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>flags</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>mode</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-storage-copy-to">bonobo_storage_copy_to ()</title>
<programlisting>void        bonobo_storage_copy_to          (<link linkend="Bonobo-Storage">Bonobo_Storage</link> src,
                                             <link linkend="Bonobo-Storage">Bonobo_Storage</link> dest,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>src</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>dest</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>ev</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-storage-corba-object-create">bonobo_storage_corba_object_create ()</title>
<programlisting><link linkend="Bonobo-Storage">Bonobo_Storage</link> bonobo_storage_corba_object_create
                                            (<link linkend="BonoboObject">BonoboObject</link> *object);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>object</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-storage-write-class-id">bonobo_storage_write_class_id ()</title>
<programlisting>void        bonobo_storage_write_class_id   (<link linkend="BonoboStorage">BonoboStorage</link> *storage,
                                             char *class_id);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>storage</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>class_id</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-stream-write-class-id">bonobo_stream_write_class_id ()</title>
<programlisting>void        bonobo_stream_write_class_id    (<link linkend="BonoboStream">BonoboStream</link> *stream,
                                             char *class_id);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>stream</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>class_id</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-storage-get-epv">bonobo_storage_get_epv ()</title>
<programlisting><link linkend="POA-Bonobo-Storage--epv">POA_Bonobo_Storage__epv</link>* bonobo_storage_get_epv
                                            (void);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
