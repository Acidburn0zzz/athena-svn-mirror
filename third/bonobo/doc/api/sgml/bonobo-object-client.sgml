<refentry id="bonobo-bonobo-object-client" revision="9 Feb 2001">
<refmeta>
<refentrytitle>BonoboObjectClient</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>BONOBO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>BonoboObjectClient</refname><refpurpose>Object activation routines</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



#define     <link linkend="BONOBO-OBJECT-CLIENT-TYPE-CAPS">BONOBO_OBJECT_CLIENT_TYPE</link>
#define     <link linkend="BONOBO-OBJECT-CLIENT-CAPS">BONOBO_OBJECT_CLIENT</link>            (o)
#define     <link linkend="BONOBO-OBJECT-CLIENT-CLASS-CAPS">BONOBO_OBJECT_CLIENT_CLASS</link>      (k)
#define     <link linkend="BONOBO-IS-OBJECT-CLIENT-CAPS">BONOBO_IS_OBJECT_CLIENT</link>         (o)
#define     <link linkend="BONOBO-IS-OBJECT-CLIENT-CLASS-CAPS">BONOBO_IS_OBJECT_CLIENT_CLASS</link>   (k)
typedef     <link linkend="BonoboObjectClient">BonoboObjectClient</link>;
typedef     <link linkend="BonoboObjectClientClass">BonoboObjectClientClass</link>;
void        (<link linkend="BonoboObjectClientAsyncCallback">*BonoboObjectClientAsyncCallback</link>)
                                            (<link linkend="BonoboObjectClient">BonoboObjectClient</link> *o,
                                             const char *error,
                                             <link linkend="gpointer">gpointer</link> user_data);
<link linkend="BonoboObjectClient">BonoboObjectClient</link>* <link linkend="bonobo-object-client-from-corba">bonobo_object_client_from_corba</link>
                                            (<link linkend="Bonobo-Unknown">Bonobo_Unknown</link> o);
<link linkend="BonoboObjectClient">BonoboObjectClient</link>* <link linkend="bonobo-object-client-construct">bonobo_object_client_construct</link>
                                            (<link linkend="BonoboObjectClient">BonoboObjectClient</link> *object_client,
                                             <link linkend="CORBA-Object">CORBA_Object</link> corba_object);
<link linkend="BonoboObjectClient">BonoboObjectClient</link>* <link linkend="bonobo-object-activate">bonobo_object_activate</link>  (const char *iid,
                                             <link linkend="gint">gint</link> oaf_flags);
void        <link linkend="bonobo-object-activate-async">bonobo_object_activate_async</link>    (const char *iid,
                                             <link linkend="gint">gint</link> oaf_flags,
                                             <link linkend="BonoboObjectClientAsyncCallback">BonoboObjectClientAsyncCallback</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data);
<link linkend="gboolean">gboolean</link>    <link linkend="bonobo-object-client-has-interface">bonobo_object_client_has_interface</link>
                                            (<link linkend="BonoboObjectClient">BonoboObjectClient</link> *object,
                                             const char *interface_desc,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="Bonobo-Unknown">Bonobo_Unknown</link> <link linkend="bonobo-object-client-query-interface">bonobo_object_client_query_interface</link>
                                            (<link linkend="BonoboObjectClient">BonoboObjectClient</link> *object,
                                             const char *interface_desc,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
void        <link linkend="bonobo-object-client-ref">bonobo_object_client_ref</link>        (<link linkend="BonoboObjectClient">BonoboObjectClient</link> *object_client,
                                             <link linkend="BonoboObject">BonoboObject</link> *opt_exception_obj);
void        <link linkend="bonobo-object-client-unref">bonobo_object_client_unref</link>      (<link linkend="BonoboObjectClient">BonoboObjectClient</link> *object_client,
                                             <link linkend="BonoboObject">BonoboObject</link> *opt_exception_obj);

</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>
  The <link linkend="BonoboObjectClient">BonoboObjectClient</link> object is used primarly to activate Bonobo
  components (mainly by using <link linkend="gnome-object-activate">gnome_object_activate</link>()).  The CORBA
  object reference to the Bonobo object is wrapped in a <link linkend="BonoboObject">BonoboObject</link>.
</para>

<para>
  The <link linkend="BonoboObjectClient">BonoboObjectClient</link> object is also used to wrap an arbitrary
  Bonobo::Unknown CORBA object reference into a <link linkend="BonoboObject">BonoboObject</link> (by using
  <link linkend="gnome-object-client-from-corba">gnome_object_client_from_corba</link>()).
</para>

<para>
  The main activation entry point is the <link linkend="gnome-object-activate">gnome_object_activate</link>()
  function.  This is a high-level routine that knows how to activate
  components or activate and restore components.  Internally
  <link linkend="gnome-object-activate">gnome_object_activate</link>() checks whether its argument is a moniker_url
  or a GOAD-ID and depending on this it invokes
  <link linkend="gnome-object-activate-with-goad-id">gnome_object_activate_with_goad_id</link>() or <link linkend="gnome-object-restore-from-url">gnome_object_restore_from_url</link>().
</para>

<para>
  The <link linkend="gnome-object-activate-with-goad-id">gnome_object_activate_with_goad_id</link>() routine basically uses
  GNORBA's <link linkend="goad-server-activate-with-id">goad_server_activate_with_id</link>() to launch the component ( or
  launch the factory implementing the component and requesting from
  the factory a new instance).
</para>

<para>
  The <link linkend="gnome-object-restore-from-url">gnome_object_restore_from_url</link>() takes a textual moniker url
  description (See <link linkend="BonoboMoniker">BonoboMoniker</link>) that represents a specific object
  that is defined at least by a component and a url to restore its
  state from.  Optionally, you can specific a subobject to request
  from the resulting object.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="BONOBO-OBJECT-CLIENT-TYPE-CAPS">BONOBO_OBJECT_CLIENT_TYPE</title>
<programlisting>#define BONOBO_OBJECT_CLIENT_TYPE        (bonobo_object_client_get_type ())
</programlisting>
<para>
Returns the <link linkend="GtkType">GtkType</link> for the BonoboObjectClient object.
</para></refsect2>
<refsect2>
<title><anchor id="BONOBO-OBJECT-CLIENT-CAPS">BONOBO_OBJECT_CLIENT()</title>
<programlisting>#define BONOBO_OBJECT_CLIENT(o)          (GTK_CHECK_CAST ((o), BONOBO_OBJECT_CLIENT_TYPE, BonoboObjectClient))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>o</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-OBJECT-CLIENT-CLASS-CAPS">BONOBO_OBJECT_CLIENT_CLASS()</title>
<programlisting>#define BONOBO_OBJECT_CLIENT_CLASS(k)    (GTK_CHECK_CLASS_CAST((k), BONOBO_OBJECT_CLIENT_TYPE, BonoboObjectClientClass))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>k</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-IS-OBJECT-CLIENT-CAPS">BONOBO_IS_OBJECT_CLIENT()</title>
<programlisting>#define BONOBO_IS_OBJECT_CLIENT(o)       (GTK_CHECK_TYPE ((o), BONOBO_OBJECT_CLIENT_TYPE))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>o</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-IS-OBJECT-CLIENT-CLASS-CAPS">BONOBO_IS_OBJECT_CLIENT_CLASS()</title>
<programlisting>#define BONOBO_IS_OBJECT_CLIENT_CLASS(k) (GTK_CHECK_CLASS_TYPE ((k), BONOBO_OBJECT_CLIENT_TYPE))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>k</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BonoboObjectClient">BonoboObjectClient</title>
<programlisting>typedef struct {
	BonoboObject parent;
} BonoboObjectClient;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboObjectClientClass">BonoboObjectClientClass</title>
<programlisting>typedef struct {
	BonoboObjectClass parent_class;
} BonoboObjectClientClass;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboObjectClientAsyncCallback">BonoboObjectClientAsyncCallback ()</title>
<programlisting>void        (*BonoboObjectClientAsyncCallback)
                                            (<link linkend="BonoboObjectClient">BonoboObjectClient</link> *o,
                                             const char *error,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>o</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>error</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>user_data</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-object-client-from-corba">bonobo_object_client_from_corba ()</title>
<programlisting><link linkend="BonoboObjectClient">BonoboObjectClient</link>* bonobo_object_client_from_corba
                                            (<link linkend="Bonobo-Unknown">Bonobo_Unknown</link> o);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>o</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-object-client-construct">bonobo_object_client_construct ()</title>
<programlisting><link linkend="BonoboObjectClient">BonoboObjectClient</link>* bonobo_object_client_construct
                                            (<link linkend="BonoboObjectClient">BonoboObjectClient</link> *object_client,
                                             <link linkend="CORBA-Object">CORBA_Object</link> corba_object);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>object_client</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>corba_object</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-object-activate">bonobo_object_activate ()</title>
<programlisting><link linkend="BonoboObjectClient">BonoboObjectClient</link>* bonobo_object_activate  (const char *iid,
                                             <link linkend="gint">gint</link> oaf_flags);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>iid</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>oaf_flags</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-object-activate-async">bonobo_object_activate_async ()</title>
<programlisting>void        bonobo_object_activate_async    (const char *iid,
                                             <link linkend="gint">gint</link> oaf_flags,
                                             <link linkend="BonoboObjectClientAsyncCallback">BonoboObjectClientAsyncCallback</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>iid</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>oaf_flags</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>callback</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>user_data</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-object-client-has-interface">bonobo_object_client_has_interface ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    bonobo_object_client_has_interface
                                            (<link linkend="BonoboObjectClient">BonoboObjectClient</link> *object,
                                             const char *interface_desc,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>object</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>interface_desc</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-object-client-query-interface">bonobo_object_client_query_interface ()</title>
<programlisting><link linkend="Bonobo-Unknown">Bonobo_Unknown</link> bonobo_object_client_query_interface
                                            (<link linkend="BonoboObjectClient">BonoboObjectClient</link> *object,
                                             const char *interface_desc,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>object</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>interface_desc</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>opt_ev</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-object-client-ref">bonobo_object_client_ref ()</title>
<programlisting>void        bonobo_object_client_ref        (<link linkend="BonoboObjectClient">BonoboObjectClient</link> *object_client,
                                             <link linkend="BonoboObject">BonoboObject</link> *opt_exception_obj);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>object_client</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>opt_exception_obj</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-object-client-unref">bonobo_object_client_unref ()</title>
<programlisting>void        bonobo_object_client_unref      (<link linkend="BonoboObjectClient">BonoboObjectClient</link> *object_client,
                                             <link linkend="BonoboObject">BonoboObject</link> *opt_exception_obj);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>object_client</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>opt_exception_obj</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>



<refsect1>
<title>See Also</title>
<para>
  <link linkend="BonoboMoniker">BonoboMoniker</link> <link linkend="BonoboObject">BonoboObject</link>
</para>
</refsect1>

</refentry>
