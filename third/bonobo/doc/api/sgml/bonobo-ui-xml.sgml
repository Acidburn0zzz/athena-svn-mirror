<refentry id="bonobo-bonobo-ui-xml" revision="15 Feb 2001">
<refmeta>
<refentrytitle>BonoboUIXml</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>BONOBO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>BonoboUIXml</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



#define     <link linkend="BONOBO-UI-XML-TYPE-CAPS">BONOBO_UI_XML_TYPE</link>
#define     <link linkend="BONOBO-UI-XML-CAPS">BONOBO_UI_XML</link>                   (o)
#define     <link linkend="BONOBO-UI-XML-CLASS-CAPS">BONOBO_UI_XML_CLASS</link>             (k)
#define     <link linkend="BONOBO-IS-UI-XML-CAPS">BONOBO_IS_UI_XML</link>                (o)
#define     <link linkend="BONOBO-IS-UI-XML-CLASS-CAPS">BONOBO_IS_UI_XML_CLASS</link>          (k)
enum        <link linkend="BonoboUIXmlError">BonoboUIXmlError</link>;
struct      <link linkend="BonoboUIXml-struct">BonoboUIXml</link>;
typedef     <link linkend="BonoboUIXmlData">BonoboUIXmlData</link>;
<link linkend="gboolean">gboolean</link>    (<link linkend="BonoboUIXmlCompareFn">*BonoboUIXmlCompareFn</link>)         (<link linkend="gpointer">gpointer</link> id_a,
                                             <link linkend="gpointer">gpointer</link> id_b);
<link linkend="BonoboUIXmlData">BonoboUIXmlData</link>* (<link linkend="BonoboUIXmlDataNewFn">*BonoboUIXmlDataNewFn</link>)    (void);
void        (<link linkend="BonoboUIXmlDataFreeFn">*BonoboUIXmlDataFreeFn</link>)        (<link linkend="BonoboUIXmlData">BonoboUIXmlData</link> *data);
void        (<link linkend="BonoboUIXmlDumpFn">*BonoboUIXmlDumpFn</link>)            (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             <link linkend="BonoboUINode">BonoboUINode</link> *node);
void        (<link linkend="BonoboUIXmlAddNode">*BonoboUIXmlAddNode</link>)           (<link linkend="BonoboUINode">BonoboUINode</link> *parent,
                                             <link linkend="BonoboUINode">BonoboUINode</link> *child);
typedef     <link linkend="BonoboUIXmlClass">BonoboUIXmlClass</link>;
<link linkend="GtkType">GtkType</link>     <link linkend="bonobo-ui-xml-get-type">bonobo_ui_xml_get_type</link>          (void);
<link linkend="BonoboUIXml">BonoboUIXml</link>* <link linkend="bonobo-ui-xml-new">bonobo_ui_xml_new</link>              (<link linkend="BonoboUIXmlCompareFn">BonoboUIXmlCompareFn</link> compare,
                                             <link linkend="BonoboUIXmlDataNewFn">BonoboUIXmlDataNewFn</link> data_new,
                                             <link linkend="BonoboUIXmlDataFreeFn">BonoboUIXmlDataFreeFn</link> data_free,
                                             <link linkend="BonoboUIXmlDumpFn">BonoboUIXmlDumpFn</link> dump,
                                             <link linkend="BonoboUIXmlAddNode">BonoboUIXmlAddNode</link> add_node);
<link linkend="gpointer">gpointer</link>    <link linkend="bonobo-ui-xml-get-data">bonobo_ui_xml_get_data</link>          (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             <link linkend="BonoboUINode">BonoboUINode</link> *node);
void        <link linkend="bonobo-ui-xml-set-dirty">bonobo_ui_xml_set_dirty</link>         (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             <link linkend="BonoboUINode">BonoboUINode</link> *node);
void        <link linkend="bonobo-ui-xml-clean">bonobo_ui_xml_clean</link>             (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             <link linkend="BonoboUINode">BonoboUINode</link> *node);
<link linkend="BonoboUINode">BonoboUINode</link>* <link linkend="bonobo-ui-xml-get-path">bonobo_ui_xml_get_path</link>        (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             const char *path);
<link linkend="BonoboUINode">BonoboUINode</link>* <link linkend="bonobo-ui-xml-get-path-wildcard">bonobo_ui_xml_get_path_wildcard</link>
                                            (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             const char *path,
                                             <link linkend="gboolean">gboolean</link> *wildcard);
char*       <link linkend="bonobo-ui-xml-make-path">bonobo_ui_xml_make_path</link>         (<link linkend="BonoboUINode">BonoboUINode</link> *node);
char*       <link linkend="bonobo-ui-xml-get-parent-path">bonobo_ui_xml_get_parent_path</link>   (const char *path);
<link linkend="BonoboUIXmlError">BonoboUIXmlError</link> <link linkend="bonobo-ui-xml-merge">bonobo_ui_xml_merge</link>        (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             const char *path,
                                             <link linkend="BonoboUINode">BonoboUINode</link> *nodes,
                                             <link linkend="gpointer">gpointer</link> id);
<link linkend="BonoboUIXmlError">BonoboUIXmlError</link> <link linkend="bonobo-ui-xml-rm">bonobo_ui_xml_rm</link>           (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             const char *path,
                                             <link linkend="gpointer">gpointer</link> id);
void        <link linkend="bonobo-ui-xml-dump">bonobo_ui_xml_dump</link>              (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                             const char *msg);
void        <link linkend="bonobo-ui-xml-strip">bonobo_ui_xml_strip</link>             (<link linkend="BonoboUINode">BonoboUINode</link> **node);

</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="BONOBO-UI-XML-TYPE-CAPS">BONOBO_UI_XML_TYPE</title>
<programlisting>#define BONOBO_UI_XML_TYPE        (bonobo_ui_xml_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BONOBO-UI-XML-CAPS">BONOBO_UI_XML()</title>
<programlisting>#define BONOBO_UI_XML(o)          (GTK_CHECK_CAST ((o), BONOBO_UI_XML_TYPE, BonoboUIXml))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>o</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-UI-XML-CLASS-CAPS">BONOBO_UI_XML_CLASS()</title>
<programlisting>#define BONOBO_UI_XML_CLASS(k)    (GTK_CHECK_CLASS_CAST((k), BONOBO_UI_XML_TYPE, BonoboUIXmlClass))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>k</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-IS-UI-XML-CAPS">BONOBO_IS_UI_XML()</title>
<programlisting>#define BONOBO_IS_UI_XML(o)       (GTK_CHECK_TYPE ((o), BONOBO_UI_XML_TYPE))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>o</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-IS-UI-XML-CLASS-CAPS">BONOBO_IS_UI_XML_CLASS()</title>
<programlisting>#define BONOBO_IS_UI_XML_CLASS(k) (GTK_CHECK_CLASS_TYPE ((k), BONOBO_UI_XML_TYPE))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>k</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BonoboUIXmlError">enum BonoboUIXmlError</title>
<programlisting>typedef enum {
	BONOBO_UI_XML_OK,
	BONOBO_UI_XML_BAD_PARAM,
	BONOBO_UI_XML_INVALID_PATH,
	BONOBO_UI_XML_INVALID_XML
} BonoboUIXmlError;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboUIXml-struct">struct BonoboUIXml</title>
<programlisting>struct BonoboUIXml;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboUIXmlData">BonoboUIXmlData</title>
<programlisting>typedef struct {
	gpointer id;
	gboolean dirty;
	GSList  *overridden;
} BonoboUIXmlData;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboUIXmlCompareFn">BonoboUIXmlCompareFn ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    (*BonoboUIXmlCompareFn)         (<link linkend="gpointer">gpointer</link> id_a,
                                             <link linkend="gpointer">gpointer</link> id_b);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>id_a</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>id_b</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BonoboUIXmlDataNewFn">BonoboUIXmlDataNewFn ()</title>
<programlisting><link linkend="BonoboUIXmlData">BonoboUIXmlData</link>* (*BonoboUIXmlDataNewFn)    (void);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BonoboUIXmlDataFreeFn">BonoboUIXmlDataFreeFn ()</title>
<programlisting>void        (*BonoboUIXmlDataFreeFn)        (<link linkend="BonoboUIXmlData">BonoboUIXmlData</link> *data);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>data</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BonoboUIXmlDumpFn">BonoboUIXmlDumpFn ()</title>
<programlisting>void        (*BonoboUIXmlDumpFn)            (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             <link linkend="BonoboUINode">BonoboUINode</link> *node);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>tree</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>node</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BonoboUIXmlAddNode">BonoboUIXmlAddNode ()</title>
<programlisting>void        (*BonoboUIXmlAddNode)           (<link linkend="BonoboUINode">BonoboUINode</link> *parent,
                                             <link linkend="BonoboUINode">BonoboUINode</link> *child);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>parent</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>child</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BonoboUIXmlClass">BonoboUIXmlClass</title>
<programlisting>typedef struct {
	GtkObjectClass         object_klass;

	void                 (*override)          (BonoboUINode *node);
	void                 (*replace_override)  (BonoboUINode *new_node,
						   BonoboUINode *old_node);
	void                 (*reinstate)         (BonoboUINode *node);
	void                 (*rename)            (BonoboUINode *node);
	void                 (*remove)            (BonoboUINode *node);

	gpointer               dummy;
} BonoboUIXmlClass;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="bonobo-ui-xml-get-type">bonobo_ui_xml_get_type ()</title>
<programlisting><link linkend="GtkType">GtkType</link>     bonobo_ui_xml_get_type          (void);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-ui-xml-new">bonobo_ui_xml_new ()</title>
<programlisting><link linkend="BonoboUIXml">BonoboUIXml</link>* bonobo_ui_xml_new              (<link linkend="BonoboUIXmlCompareFn">BonoboUIXmlCompareFn</link> compare,
                                             <link linkend="BonoboUIXmlDataNewFn">BonoboUIXmlDataNewFn</link> data_new,
                                             <link linkend="BonoboUIXmlDataFreeFn">BonoboUIXmlDataFreeFn</link> data_free,
                                             <link linkend="BonoboUIXmlDumpFn">BonoboUIXmlDumpFn</link> dump,
                                             <link linkend="BonoboUIXmlAddNode">BonoboUIXmlAddNode</link> add_node);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>compare</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>data_new</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>data_free</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>dump</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>add_node</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-ui-xml-get-data">bonobo_ui_xml_get_data ()</title>
<programlisting><link linkend="gpointer">gpointer</link>    bonobo_ui_xml_get_data          (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             <link linkend="BonoboUINode">BonoboUINode</link> *node);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>tree</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>node</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-ui-xml-set-dirty">bonobo_ui_xml_set_dirty ()</title>
<programlisting>void        bonobo_ui_xml_set_dirty         (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             <link linkend="BonoboUINode">BonoboUINode</link> *node);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>tree</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>node</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-ui-xml-clean">bonobo_ui_xml_clean ()</title>
<programlisting>void        bonobo_ui_xml_clean             (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             <link linkend="BonoboUINode">BonoboUINode</link> *node);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>tree</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>node</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-ui-xml-get-path">bonobo_ui_xml_get_path ()</title>
<programlisting><link linkend="BonoboUINode">BonoboUINode</link>* bonobo_ui_xml_get_path        (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             const char *path);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>tree</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>path</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-ui-xml-get-path-wildcard">bonobo_ui_xml_get_path_wildcard ()</title>
<programlisting><link linkend="BonoboUINode">BonoboUINode</link>* bonobo_ui_xml_get_path_wildcard
                                            (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             const char *path,
                                             <link linkend="gboolean">gboolean</link> *wildcard);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>tree</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>path</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>wildcard</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-ui-xml-make-path">bonobo_ui_xml_make_path ()</title>
<programlisting>char*       bonobo_ui_xml_make_path         (<link linkend="BonoboUINode">BonoboUINode</link> *node);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>node</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-ui-xml-get-parent-path">bonobo_ui_xml_get_parent_path ()</title>
<programlisting>char*       bonobo_ui_xml_get_parent_path   (const char *path);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>path</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-ui-xml-merge">bonobo_ui_xml_merge ()</title>
<programlisting><link linkend="BonoboUIXmlError">BonoboUIXmlError</link> bonobo_ui_xml_merge        (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             const char *path,
                                             <link linkend="BonoboUINode">BonoboUINode</link> *nodes,
                                             <link linkend="gpointer">gpointer</link> id);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>tree</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>path</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>nodes</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>id</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-ui-xml-rm">bonobo_ui_xml_rm ()</title>
<programlisting><link linkend="BonoboUIXmlError">BonoboUIXmlError</link> bonobo_ui_xml_rm           (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             const char *path,
                                             <link linkend="gpointer">gpointer</link> id);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>tree</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>path</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>id</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-ui-xml-dump">bonobo_ui_xml_dump ()</title>
<programlisting>void        bonobo_ui_xml_dump              (<link linkend="BonoboUIXml">BonoboUIXml</link> *tree,
                                             <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                             const char *msg);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>tree</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>node</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>msg</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-ui-xml-strip">bonobo_ui_xml_strip ()</title>
<programlisting>void        bonobo_ui_xml_strip             (<link linkend="BonoboUINode">BonoboUINode</link> **node);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>node</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
