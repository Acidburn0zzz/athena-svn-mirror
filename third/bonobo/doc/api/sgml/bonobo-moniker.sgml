<refentry id="bonobo-bonobo-moniker" revision="9 Feb 2001">
<refmeta>
<refentrytitle>BonoboMoniker</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>BONOBO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>BonoboMoniker</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



struct      <link linkend="BonoboMonikerPrivate">BonoboMonikerPrivate</link>;
#define     <link linkend="BONOBO-MONIKER-TYPE-CAPS">BONOBO_MONIKER_TYPE</link>
#define     <link linkend="BONOBO-MONIKER-CAPS">BONOBO_MONIKER</link>                  (o)
#define     <link linkend="BONOBO-MONIKER-CLASS-CAPS">BONOBO_MONIKER_CLASS</link>            (k)
#define     <link linkend="BONOBO-IS-MONIKER-CAPS">BONOBO_IS_MONIKER</link>               (o)
#define     <link linkend="BONOBO-IS-MONIKER-CLASS-CAPS">BONOBO_IS_MONIKER_CLASS</link>         (k)
typedef     <link linkend="BonoboMoniker">BonoboMoniker</link>;
typedef     <link linkend="BonoboMonikerClass">BonoboMonikerClass</link>;
<link linkend="POA-Bonobo-Moniker--epv">POA_Bonobo_Moniker__epv</link>* <link linkend="bonobo-moniker-get-epv">bonobo_moniker_get_epv</link>
                                            (void);
<link linkend="Bonobo-Moniker">Bonobo_Moniker</link> <link linkend="bonobo-moniker-corba-object-create">bonobo_moniker_corba_object_create</link>
                                            (<link linkend="BonoboObject">BonoboObject</link> *object);
<link linkend="Bonobo-Moniker">Bonobo_Moniker</link> <link linkend="bonobo-moniker-get-parent">bonobo_moniker_get_parent</link>    (<link linkend="BonoboMoniker">BonoboMoniker</link> *moniker,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);
void        <link linkend="bonobo-moniker-set-parent">bonobo_moniker_set_parent</link>       (<link linkend="BonoboMoniker">BonoboMoniker</link> *moniker,
                                             <link linkend="Bonobo-Moniker">Bonobo_Moniker</link> parent,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);
const char* <link linkend="bonobo-moniker-get-name">bonobo_moniker_get_name</link>         (<link linkend="BonoboMoniker">BonoboMoniker</link> *moniker,
                                             int char_offset);
void        <link linkend="bonobo-moniker-set-name">bonobo_moniker_set_name</link>         (<link linkend="BonoboMoniker">BonoboMoniker</link> *moniker,
                                             const char *name,
                                             int num_chars);

</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="BonoboMonikerPrivate">struct BonoboMonikerPrivate</title>
<programlisting>struct BonoboMonikerPrivate;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BONOBO-MONIKER-TYPE-CAPS">BONOBO_MONIKER_TYPE</title>
<programlisting>#define BONOBO_MONIKER_TYPE        (bonobo_moniker_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BONOBO-MONIKER-CAPS">BONOBO_MONIKER()</title>
<programlisting>#define BONOBO_MONIKER(o)          (GTK_CHECK_CAST ((o), BONOBO_MONIKER_TYPE, BonoboMoniker))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>o</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-MONIKER-CLASS-CAPS">BONOBO_MONIKER_CLASS()</title>
<programlisting>#define BONOBO_MONIKER_CLASS(k)    (GTK_CHECK_CLASS_CAST((k), BONOBO_MONIKER_TYPE, BonoboMonikerClass))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>k</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-IS-MONIKER-CAPS">BONOBO_IS_MONIKER()</title>
<programlisting>#define BONOBO_IS_MONIKER(o)       (GTK_CHECK_TYPE ((o), BONOBO_MONIKER_TYPE))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>o</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-IS-MONIKER-CLASS-CAPS">BONOBO_IS_MONIKER_CLASS()</title>
<programlisting>#define BONOBO_IS_MONIKER_CLASS(k) (GTK_CHECK_CLASS_TYPE ((k), BONOBO_MONIKER_TYPE))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>k</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BonoboMoniker">BonoboMoniker</title>
<programlisting>typedef struct {
        BonoboObject          object;
	
	BonoboMonikerPrivate *priv;
} BonoboMoniker;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboMonikerClass">BonoboMonikerClass</title>
<programlisting>typedef struct {
	BonoboObjectClass parent_class;

	/*
	 * virtual methods
	 */
	Bonobo_Moniker (*get_parent)         (BonoboMoniker               *moniker,
					      CORBA_Environment           *ev);
	void           (*set_parent)         (BonoboMoniker               *moniker,
					      const Bonobo_Moniker         parent,
					      CORBA_Environment           *ev);
	CORBA_char    *(*get_display_name)   (BonoboMoniker               *moniker,
					      CORBA_Environment           *ev);
	Bonobo_Moniker (*parse_display_name) (BonoboMoniker               *moniker,
					      Bonobo_Moniker               parent,
					      const CORBA_char            *name,
					      CORBA_Environment           *ev);
	Bonobo_Unknown (*resolve)            (BonoboMoniker               *moniker,
					      const Bonobo_ResolveOptions *options,
					      const CORBA_char            *requested_interface,
					      CORBA_Environment           *ev);
} BonoboMonikerClass;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="bonobo-moniker-get-epv">bonobo_moniker_get_epv ()</title>
<programlisting><link linkend="POA-Bonobo-Moniker--epv">POA_Bonobo_Moniker__epv</link>* bonobo_moniker_get_epv
                                            (void);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-moniker-corba-object-create">bonobo_moniker_corba_object_create ()</title>
<programlisting><link linkend="Bonobo-Moniker">Bonobo_Moniker</link> bonobo_moniker_corba_object_create
                                            (<link linkend="BonoboObject">BonoboObject</link> *object);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>object</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-moniker-get-parent">bonobo_moniker_get_parent ()</title>
<programlisting><link linkend="Bonobo-Moniker">Bonobo_Moniker</link> bonobo_moniker_get_parent    (<link linkend="BonoboMoniker">BonoboMoniker</link> *moniker,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>moniker</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>ev</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-moniker-set-parent">bonobo_moniker_set_parent ()</title>
<programlisting>void        bonobo_moniker_set_parent       (<link linkend="BonoboMoniker">BonoboMoniker</link> *moniker,
                                             <link linkend="Bonobo-Moniker">Bonobo_Moniker</link> parent,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *ev);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>moniker</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>parent</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>ev</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-moniker-get-name">bonobo_moniker_get_name ()</title>
<programlisting>const char* bonobo_moniker_get_name         (<link linkend="BonoboMoniker">BonoboMoniker</link> *moniker,
                                             int char_offset);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>moniker</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>char_offset</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-moniker-set-name">bonobo_moniker_set_name ()</title>
<programlisting>void        bonobo_moniker_set_name         (<link linkend="BonoboMoniker">BonoboMoniker</link> *moniker,
                                             const char *name,
                                             int num_chars);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>moniker</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>name</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>num_chars</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
