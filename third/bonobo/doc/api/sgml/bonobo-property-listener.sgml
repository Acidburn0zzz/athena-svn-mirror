<refentry id="bonobo-bonobo-property-listener" revision="9 Feb 2001">
<refmeta>
<refentrytitle>BonoboPropertyListener</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>BONOBO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>BonoboPropertyListener</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



typedef     <link linkend="BonoboPropertyListener">BonoboPropertyListener</link>;
#define     <link linkend="BONOBO-PROPERTY-LISTENER-TYPE-CAPS">BONOBO_PROPERTY_LISTENER_TYPE</link>
#define     <link linkend="BONOBO-PROPERTY-LISTENER-CAPS">BONOBO_PROPERTY_LISTENER</link>        (o)
#define     <link linkend="BONOBO-PROPERTY-LISTENER-CLASS-CAPS">BONOBO_PROPERTY_LISTENER_CLASS</link>  (k)
#define     <link linkend="BONOBO-IS-PROPERTY-LISTENER-CAPS">BONOBO_IS_PROPERTY_LISTENER</link>     (o)
#define     <link linkend="BONOBO-IS-PROPERTY-LISTENER-CLASS-CAPS">BONOBO_IS_PROPERTY_LISTENER_CLASS</link>(k)
typedef     <link linkend="BonoboPropertyListenerClass">BonoboPropertyListenerClass</link>;
<link linkend="POA-Bonobo-PropertyListener--epv">POA_Bonobo_PropertyListener__epv</link>* <link linkend="bonobo-property-listener-get-epv">bonobo_property_listener_get_epv</link>
                                            (void);
<link linkend="BonoboPropertyListener">BonoboPropertyListener</link>* <link linkend="bonobo-property-listener-new">bonobo_property_listener_new</link>
                                            (void);

</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="BonoboPropertyListener">BonoboPropertyListener</title>
<programlisting>typedef struct {
        BonoboObject		object;
} BonoboPropertyListener;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BONOBO-PROPERTY-LISTENER-TYPE-CAPS">BONOBO_PROPERTY_LISTENER_TYPE</title>
<programlisting>#define BONOBO_PROPERTY_LISTENER_TYPE        (bonobo_property_listener_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BONOBO-PROPERTY-LISTENER-CAPS">BONOBO_PROPERTY_LISTENER()</title>
<programlisting>#define BONOBO_PROPERTY_LISTENER(o)          (GTK_CHECK_CAST ((o), BONOBO_PROPERTY_LISTENER_TYPE, BonoboPropertyListener))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>o</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-PROPERTY-LISTENER-CLASS-CAPS">BONOBO_PROPERTY_LISTENER_CLASS()</title>
<programlisting>#define BONOBO_PROPERTY_LISTENER_CLASS(k)    (GTK_CHECK_CLASS_CAST((k), BONOBO_PROPERTY_LISTENER_TYPE, BonoboPropertyListenerClass))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>k</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-IS-PROPERTY-LISTENER-CAPS">BONOBO_IS_PROPERTY_LISTENER()</title>
<programlisting>#define BONOBO_IS_PROPERTY_LISTENER(o)       (GTK_CHECK_TYPE ((o), BONOBO_PROPERTY_LISTENER_TYPE))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>o</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BONOBO-IS-PROPERTY-LISTENER-CLASS-CAPS">BONOBO_IS_PROPERTY_LISTENER_CLASS()</title>
<programlisting>#define BONOBO_IS_PROPERTY_LISTENER_CLASS(k) (GTK_CHECK_CLASS_TYPE ((k), BONOBO_PROPERTY_LISTENER_TYPE))
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>k</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="BonoboPropertyListenerClass">BonoboPropertyListenerClass</title>
<programlisting>typedef struct {
	BonoboObjectClass parent_class;

	/* Signal definition */
	void (* prop_changed) (BonoboPropertyListener *listener, gchar *name, BonoboArg *event_data);
} BonoboPropertyListenerClass;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="bonobo-property-listener-get-epv">bonobo_property_listener_get_epv ()</title>
<programlisting><link linkend="POA-Bonobo-PropertyListener--epv">POA_Bonobo_PropertyListener__epv</link>* bonobo_property_listener_get_epv
                                            (void);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="bonobo-property-listener-new">bonobo_property_listener_new ()</title>
<programlisting><link linkend="BonoboPropertyListener">BonoboPropertyListener</link>* bonobo_property_listener_new
                                            (void);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
