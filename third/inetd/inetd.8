.\"	$NetBSD: inetd.8,v 1.12.2.1 1997/11/11 14:05:35 mrg Exp $
.\"
.\" Copyright (c) 1985, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     from: @(#)inetd.8       8.4 (Berkeley) 6/1/94
.\"
.TH INETD 8 March 16, 1991
.UC 4
.SH NAME
inetd, inetd.conf \- internet ``super-server''
.SH SYNOPSIS
.B inetd
[
.B \-d
] [
.B \-l
] [
.B \-n
] [ configuration file ]
.SH DESCRIPTION
.I inetd
should be run at boot time
It then listens for connections on certain
internet sockets.  When a connection is found on one
of its sockets, it decides what service the socket
corresponds to, and invokes a program to service the request.
After the program is
finished, it continues to listen on the socket (except in some cases which
will be described below).  Essentially,
.I inetd
allows running one daemon to invoke several others,
reducing load on the system.
.PP
The options available for
.I inetd:
.PP
.RS
.IP \-d
Turns on debugging.
.PP
.IP \-l
Turns on libwrap connection logging.
.PP
.IP \-n
Turns on ``switched'' services by default.
.RE
.PP
Upon execution,
.I inetd
reads its configuration information from a configuration
file which, by default, is
.IR /etc/inetd.conf .
There must be an entry for each field of the configuration
file, with entries for each field separated by a tab or
a space.  Comments are denoted by a ``#'' at the beginning
of a line.  There must be an entry for each field (except for one
special case, described below).  The
fields of the configuration file are as follows:
.PP
.RS
service name
.br
socket type
.br
protocol
.br
wait/nowait[.max]
.br
switched/unswitched
.br
user[.group]
.br
server program
.br
server program arguments
.RE
.PP
To specify a
.I Sun-RPC
based service, the entry would contain these fields.
.PP
.RS
service name/version
.br
socket type
.br
rpc/protocol
.br
wait/nowait[.max]
.br
switched/unswitched
.br
user[.group]
.br
server program
.br
server program arguments
.RE
.PP
For Internet services, the first field of the line may also have a host
address specifier prefixed to it, separated from the service name by a
colon.  If this is done, the string before the colon in the first field
indiciates what local address
.I inetd
should use when listening for that service, or the single character
``*''
to indicate
INADDR_ANY,
meaning
all local addresses.
To avoid repeating an address that occurs frequently, a line with a
host address specifier and colon, but no further fields, causes the
host address specifier to be remembered and used for all further lines
with no explicit host specifier (until another such line or the end of
the file).  A line
.PP
*:
.PP
is implicitly provided at the top of the file; thus, traditional
configuration files (which have no host address specifiers) will be
interpreted in the traditional manner, with all services listened for
on all local addresses.
.PP
The
.I service-name
entry is the name of a valid service in
the file
.IR /etc/services .
For
``internal''
services (discussed below), the service
name
.I must
be the official name of the service (that is, the first entry in
.IR /etc/services ) .
When used to specify a
.I Sun-RPC
based service, this field is a valid RPC service name in
the file
.IR /etc/rpc .
The part on the right of the
``/''
is the RPC version number. This
can simply be a single numeric argument or a range of versions.
A range is bounded by the low version to the high version \-
``rusers/1-3''.
.PP
The
.I socket-type
should be one of
``stream'',
``dgram'',
``raw'',
``rdm'',
or
``seqpacket'',
depending on whether the socket is a stream, datagram, raw,
reliably delivered message, or sequenced packet socket.
.PP
The
.I protocol
must be a valid protocol as given in
.IR /etc/protocols .
Examples might be
``tcp''
or
``udp''.
Rpc based services are specified with the
``rpc/tcp''
or
``rpc/udp''
service type.
.PP
The
.I wait/nowait
entry is used to tell
.I inetd
if it should wait for the server program to return,
or continue processing connections on the socket.
If a datagram server connects
to its peer, freeing the socket so
.I inetd
can receive further messages on the socket, it is said to be
a
``multi-threaded''
server, and should use the
``nowait''
entry.  For datagram servers which process all incoming datagrams
on a socket and eventually time out, the server is said to be
``single-threaded''
and should use a
``wait''
entry.
.B Comsat(8)
and
.B talkd(8)
are both examples of the latter type of
datagram server.
.B Tftpd(8)
is an exception; it is a datagram server that establishes pseudo-connections.
It must be listed as
``wait''
in order to avoid a race;
the server reads the first packet, creates a new socket,
and then forks and exits to allow
.I inetd
to check for new service requests to spawn new servers.
The optional
``max''
suffix (separated from
``wait''
or
``nowait''
by a dot) specifies the maximum number of server instances that may be
spawned from
.I inetd
within an interval of 60 seconds. When omitted,
``max''
defaults to 40.
.PP
Stream servers are usually marked as
``nowait''
but if a single server process is to handle multiple connections, it may be
marked as
``wait''.
The master socket will then be passed as fd 0 to the server, which will then
need to accept the incoming connection.  The server should eventually time
out and exit when no more connections are active.
.I inetd
will continue to
listen on the master socket for connections, so the server should not close
it when it exits. 
.B identd(8)
is usually the only stream server marked as wait.
.PP
The
.I switched/unswitched
entry determines whether the service should always be on, or if it
should be affected by the
.B access_on(1)
and
.B access_off(1)
commands. By default, when
.I inetd
is started, services which are switched will not be active, until they
are started by
.I access_on .
If the -n option (``non-fascist'') is specified on the command line,
then the switched services will be active by default.
.PP
.PP
The
.I user
entry should contain the user name of the user as whom the server
should run.  This allows for servers to be given less permission
than root. An optional group name can be specified by appending a dot to
the user name followed by the group name. This allows for servers to run with
a different (primary) group id than specified in the password file. If a group
is specified and user is not root, the supplementary groups associated with
that user will still be set.
.PP
The
.I server-program
entry should contain the pathname of the program which is to be
executed by
.I inetd
when a request is found on its socket.  If
.I inetd
provides this service internally, this entry should
be
``internal''.
.PP
The
.I server program arguments
should be just as arguments
normally are, starting with argv[0], which is the name of
the program.  If the service is provided internally, the
word
``internal''
should take the place of this entry.
.PP
.I inetd
provides several
trivial
services internally by use of
routines within itself.  These services are
``echo'',
``discard'',
``chargen''
(character generator),
``daytime''
(human readable time), and
``time''
(machine readable time,
in the form of the number of seconds since midnight, January
1, 1900).  All of these services are tcp based.  For
details of these services, consult the appropriate
RFC
from the Network Information Center.
.PP
.I inetd
rereads its configuration file when it receives a hangup signal,
.Dv SIGHUP .
Services may be added, deleted or modified when the configuration file
is reread.
.I inetd
creates a file
.I /var/athena/inetd.pid
that contains its process identifier.
.SH BUGS
Host address specifiers, while they make conceptual sense for RPC
services, do not work entirely correctly.  This is largely because the
portmapper interface does not provide a way to register different ports
for the same service on different local addresses.  Provided you never
have more than one entry for a given RPC service, everything should
work correctly.  (Note that default host address specifiers do apply to
RPC lines with no explicit specifier.)
.SH SEE ALSO
comsat(8),
fingerd(8),
ftpd(8),
rexecd(8),
rlogind(8),
rshd(8),
telnetd(8),
tftpd(8),
hosts_access(5),
hosts_options(5)
.SH HISTORY
The
.I inetd
command appeared in
BSD 4.3.
Support for
.I Sun-RPC
based services is modeled after that
provided by
.I Sun-OS 4.1 .
