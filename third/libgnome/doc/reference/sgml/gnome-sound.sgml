<refentry id="libgnome-gnome-sound">
<refmeta>
<refentrytitle>gnome-sound</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOME Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gnome-sound</refname><refpurpose>Sound playing routines.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>

#include &lt;libgnome/libgnome.h&gt;


void        <link linkend="gnome-sound-init">gnome_sound_init</link>                (const char *hostname);
void        <link linkend="gnome-sound-shutdown">gnome_sound_shutdown</link>            (void);
void        <link linkend="gnome-sound-play">gnome_sound_play</link>                (const char *filename);
int         <link linkend="gnome-sound-sample-load">gnome_sound_sample_load</link>         (const char *sample_name,
                                             const char *filename);
int         <link linkend="gnome-sound-connection-get">gnome_sound_connection_get</link>      (void);
</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>
This module provides wrapper functions for playing sound samples. Currently it
just wraps the esound daemon, but the API is flexible enough that other sound
infrastructures can be included in the future.
</para>
<para>
These functions also allow for the fact that no sound may be supported on the
current platform. So applications can safely call these functions to play
sounds and they will just quietly return if no action is possible.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="gnome-sound-init">gnome_sound_init ()</title>
<programlisting>void        gnome_sound_init                (const char *hostname);</programlisting>
<para>
Initialize the esd connection.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>hostname</parameter>&nbsp;:</entry>
<entry> Hostname where esd daemon resides.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-sound-shutdown">gnome_sound_shutdown ()</title>
<programlisting>void        gnome_sound_shutdown            (void);</programlisting>
<para>
Shuts down the gnome sound support.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gnome-sound-play">gnome_sound_play ()</title>
<programlisting>void        gnome_sound_play                (const char *filename);</programlisting>
<para>
Plays the audio stored in <parameter>filename</parameter>, if possible. Fail quietly if playing is
not possible (due to missing sound support or for other reasons).</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>filename</parameter>&nbsp;:</entry>
<entry> File containing the sound sample.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-sound-sample-load">gnome_sound_sample_load ()</title>
<programlisting>int         gnome_sound_sample_load         (const char *sample_name,
                                             const char *filename);</programlisting>
<para>
Loads the audio from <parameter>filename</parameter> and load it into the esd cache for later
playing. Programs will rarely want to call this function directly. Use
<link linkend="gnome-sound-play">gnome_sound_play</link>() instead for fire and forget sound playing.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>sample_name</parameter>&nbsp;:</entry>
<entry> The name of the sample.
</entry></row>
<row><entry align="right"><parameter>filename</parameter>&nbsp;:</entry>
<entry> The filename where the audio is stored.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> The esound sample_id or <literal>-1</literal> if the sample was unable to be cached
for esound.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-sound-connection-get">gnome_sound_connection_get ()</title>
<programlisting>int         gnome_sound_connection_get      (void);</programlisting>
<para>
Rarely needed to by programs directly, this function may be useful if a
program has cached a sample with <link linkend="gnome-sound-sample-load">gnome_sound_sample_load</link>() and now wishes to
call <link linkend="esd-sample-play">esd_sample_play</link>() to play the sample.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the file descriptor of our esound connection or <literal>-1</literal>
on error.
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
