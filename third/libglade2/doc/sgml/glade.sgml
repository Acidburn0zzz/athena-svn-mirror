<refentry id="libglade-Libglade-Initialisation">
<refmeta>
<refentrytitle>Libglade Initialisation</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGLADE Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Libglade Initialisation</refname><refpurpose>Routines used to initialise libglade.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>

#include &lt;glade/glade-init.h&gt;


void        <link linkend="glade-init">glade_init</link>                      (void);
void        <link linkend="glade-require">glade_require</link>                   (const <link linkend="gchar">gchar</link> *library);
void        <link linkend="glade-provide">glade_provide</link>                   (const <link linkend="gchar">gchar</link> *library);

</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>
These routines are used to initialise libglade, and to load addon modules
that recognise extra widget sets.  The <filename>glade_init</filename>
routine must be called before any libglade routines are used, and the
<filename>glade_load_module</filename> routine would be used to load
extra modules.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="glade-init">glade_init ()</title>
<programlisting>void        glade_init                      (void);</programlisting>
<para>
It used to be necessary to call <link linkend="glade-init">glade_init</link>() before creating
GladeXML objects.  This is now no longer the case, as libglade will
be initialised on demand now.  Calling <link linkend="glade-init">glade_init</link>() manually will
not cause any problems though.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="glade-require">glade_require ()</title>
<programlisting>void        glade_require                   (const <link linkend="gchar">gchar</link> *library);</programlisting>
<para>
Ensure that a required library is available.  If it is not already
available, libglade will attempt to dynamically load a module that
contains the handlers for that library.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>library</parameter>&nbsp;:</entry>
<entry> the required library
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="glade-provide">glade_provide ()</title>
<programlisting>void        glade_provide                   (const <link linkend="gchar">gchar</link> *library);</programlisting>
<para>
This function should be called by a module to assert that it
provides wrappers for a particular library.  This should be called
by the <link linkend="register-widgets">register_widgets</link>() function of a libglade module so that it
isn't loaded twice, for instance.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>library</parameter>&nbsp;:</entry>
<entry> the provided library
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
