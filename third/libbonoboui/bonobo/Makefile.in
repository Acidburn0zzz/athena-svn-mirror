# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AS = @AS@
BONOBOUI_CFLAGS = @BONOBOUI_CFLAGS@
BONOBOUI_GLADE_CFLAGS = @BONOBOUI_GLADE_CFLAGS@
BONOBOUI_GLADE_LIBS = @BONOBOUI_GLADE_LIBS@
BONOBOUI_LIBS = @BONOBOUI_LIBS@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
DATADIRNAME = @DATADIRNAME@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EXEEXT = @EXEEXT@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GLIB_MKENUMS = @GLIB_MKENUMS@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
INSTOBJEXT = @INSTOBJEXT@
INTLDEPS = @INTLDEPS@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
INTLTOOL_CAVES_RULE = @INTLTOOL_CAVES_RULE@
INTLTOOL_DESKTOP_RULE = @INTLTOOL_DESKTOP_RULE@
INTLTOOL_DIRECTORY_RULE = @INTLTOOL_DIRECTORY_RULE@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_KEYS_RULE = @INTLTOOL_KEYS_RULE@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_OAF_RULE = @INTLTOOL_OAF_RULE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_PONG_RULE = @INTLTOOL_PONG_RULE@
INTLTOOL_PROP_RULE = @INTLTOOL_PROP_RULE@
INTLTOOL_SCHEMAS_RULE = @INTLTOOL_SCHEMAS_RULE@
INTLTOOL_SERVER_RULE = @INTLTOOL_SERVER_RULE@
INTLTOOL_SHEET_RULE = @INTLTOOL_SHEET_RULE@
INTLTOOL_SOUNDLIST_RULE = @INTLTOOL_SOUNDLIST_RULE@
INTLTOOL_THEME_RULE = @INTLTOOL_THEME_RULE@
INTLTOOL_UI_RULE = @INTLTOOL_UI_RULE@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_XML_RULE = @INTLTOOL_XML_RULE@
LDFLAGS = @LDFLAGS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKINSTALLDIRS = @MKINSTALLDIRS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PATH_TO_XRDB = @PATH_TO_XRDB@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POSUB = @POSUB@
RANLIB = @RANLIB@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WARN_CFLAGS = @WARN_CFLAGS@
YACC = @YACC@
cxxflags_set = @cxxflags_set@
gnomelocaledir = @gnomelocaledir@

INCLUDES = \
	-I$(top_srcdir) 				\
	-I$(top_builddir)				\
	$(WARN_CFLAGS)					\
	$(BONOBOUI_CFLAGS)				\
	-DPLUGIN_DIR=\""$(PLUGIN_DIR)"\"		\
	-DBONOBO_UI_INTERNAL				\
	-DBONOBO_UIDIR=\""$(datadir)/gnome-2.0/ui/"\"	\
        -DBONOBO_LIBDIR=\""$(libdir)"\" 		\
        -DBONOBO_DATADIR=\""$(datadir)"\" 		\
        -DBONOBO_PIXMAPDIR=\""$(datadir)/pixmaps"\"	\
        -DBONOBO_BINDIR=\""$(bindir)"\" 		\
        -DBONOBO_LOCALSTATEDIR=\""$(localstatedir)"\" 	\
        -DBONOBO_LOCALEDIR=\""$(gnomelocaledir)"\" 	\
	-DG_DISABLE_DEPRECATED				\
	-DGDK_DISABLE_DEPRECATED			\
	-DGDK_PIXBUF_DISABLE_DEPRECATED			\
	-DGTK_DISABLE_DEPRECATED			\
	-DGNOME_DISABLE_DEPRECATED			\
	-DBONOBO_DISABLE_DEPRECATED			\
	-DG_LOG_DOMAIN=\"Bonobo\"			\
	-DVERSION=\"$(VERSION)\"


lib_LTLIBRARIES = libbonoboui-2.la

noinst_HEADERS = \
	bonobo-control-internal.h		\
	bonobo-ui-engine-config.h		\
	bonobo-ui-engine-private.h		\
	bonobo-ui-marshal.h			\
	bonobo-ui-node-private.h		\
	bonobo-ui-preferences.h			\
	bonobo-ui-private.h			\
	bonobo-ui-sync-menu.h			\
	bonobo-ui-sync-keys.h			\
	bonobo-ui-sync-status.h			\
	bonobo-ui-sync-toolbar.h		\
	bonobo-ui-toolbar.h			\
	bonobo-ui-toolbar-control-item.h  	\
	bonobo-ui-toolbar-popup-item.h		\
	bonobo-ui-toolbar-separator-item.h	\
	bonobo-ui-xml.h


libbonoboincludedir = $(includedir)/libbonoboui-2.0/bonobo

libbonoboui_h_sources = \
	bonobo-canvas-component.h		\
	bonobo-canvas-item.h			\
	bonobo-control-frame.h			\
	bonobo-control.h			\
	bonobo-dock-band.h			\
	bonobo-dock-item.h			\
	bonobo-dock-layout.h			\
	bonobo-dock.h				\
	bonobo-file-selector-util.h		\
	bonobo-plug.h				\
	bonobo-property-control.h		\
	bonobo-selector-widget.h		\
	bonobo-selector.h			\
	bonobo-socket.h				\
	bonobo-ui-component.h			\
	bonobo-ui-config-widget.h		\
	bonobo-ui-container.h			\
	bonobo-ui-engine.h			\
	bonobo-ui-main.h			\
	bonobo-ui-node.h			\
	bonobo-ui-sync.h			\
	bonobo-ui-toolbar-button-item.h		\
	bonobo-ui-toolbar-item.h		\
	bonobo-ui-toolbar-toggle-button-item.h	\
	bonobo-ui-toolbar.h			\
	bonobo-ui-util.h			\
	bonobo-widget.h				\
	bonobo-window.h				\
	bonobo-zoomable-frame.h			\
	bonobo-zoomable.h


libbonoboui_2_la_LIBADD = \
	$(BONOBOUI_LIBS)


libbonoboui_2_la_SOURCES = \
	bonobo-a11y.c				\
	bonobo-a11y.h				\
	bonobo-dock.c				\
	bonobo-dock.h				\
	bonobo-dock-item.c			\
	bonobo-dock-item.h			\
	bonobo-dock-item-grip.c			\
	bonobo-dock-item-grip.h			\
	bonobo-dock-band.c			\
	bonobo-dock-band.h			\
	bonobo-dock-layout.c			\
	bonobo-dock-layout.h			\
	bonobo-ui-init-gtk.c			\
	bonobo-ui-main.h			\
	bonobo-ui-main.c			\
	bonobo-canvas-component.c		\
	bonobo-canvas-item.c			\
	bonobo-control-frame.c			\
	bonobo-control.c			\
	bonobo-file-selector-util.c		\
	bonobo-plug.c				\
	bonobo-property-control.c		\
	bonobo-selector.c			\
	bonobo-selector-widget.c		\
	bonobo-socket.c				\
	bonobo-ui-component.c            	\
	bonobo-ui-config-widget.c		\
	bonobo-ui-container.c            	\
	bonobo-ui-engine.c			\
	bonobo-ui-engine-config.c		\
	bonobo-ui-node.c                 	\
	bonobo-ui-preferences.c			\
	bonobo-ui-sync.c			\
	bonobo-ui-sync-menu.c			\
	bonobo-ui-sync-keys.c			\
	bonobo-ui-sync-status.c			\
	bonobo-ui-sync-toolbar.c		\
	bonobo-ui-toolbar-button-item.c  	\
	bonobo-ui-toolbar-control-item.c  	\
	bonobo-ui-toolbar-item.c		\
	bonobo-ui-toolbar-popup-item.c		\
	bonobo-ui-toolbar-separator-item.c	\
	bonobo-ui-toolbar-toggle-button-item.c	\
	bonobo-ui-toolbar.c			\
	bonobo-ui-type-builtins.c		\
	bonobo-ui-util.c			\
	bonobo-ui-xml.c				\
	bonobo-widget.c				\
	bonobo-window.c				\
	bonobo-zoomable.c			\
	bonobo-zoomable-frame.c			\
	bonobo-ui-marshal-main.c


libbonoboui_built_public_sources = \
	bonobo-ui-type-builtins.h


libbonoboui_built_private_sources = \
	bonobo-ui-type-builtins.c	\
	bonobo-ui-marshal.c 		\
	bonobo-ui-marshal.h		\
	libbonoboui.defs


libbonoboui_built_sources = \
	$(libbonoboui_built_public_sources)	\
	$(libbonoboui_built_private_sources)


libbonoboinclude_HEADERS = \
	$(libbonoboui_h_sources) \
	$(libbonoboui_built_public_sources)


pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libbonoboui-2.0.pc

EXTRA_DIST = bonobo-insert-component.xpm libbonoboui-2.0.pc.in \
	bonobo-ui-marshal.list

CLEANFILES = $(libbonoboui_built_sources)

DONT_DIST_SOURCE = $(libbonoboui_built_sources)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES =  libbonoboui-2.0.pc
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
LIBS = @LIBS@
libbonoboui_2_la_LDFLAGS = 
libbonoboui_2_la_DEPENDENCIES = 
libbonoboui_2_la_OBJECTS =  bonobo-a11y.lo bonobo-dock.lo \
bonobo-dock-item.lo bonobo-dock-item-grip.lo bonobo-dock-band.lo \
bonobo-dock-layout.lo bonobo-ui-init-gtk.lo bonobo-ui-main.lo \
bonobo-canvas-component.lo bonobo-canvas-item.lo \
bonobo-control-frame.lo bonobo-control.lo bonobo-file-selector-util.lo \
bonobo-plug.lo bonobo-property-control.lo bonobo-selector.lo \
bonobo-selector-widget.lo bonobo-socket.lo bonobo-ui-component.lo \
bonobo-ui-config-widget.lo bonobo-ui-container.lo bonobo-ui-engine.lo \
bonobo-ui-engine-config.lo bonobo-ui-node.lo bonobo-ui-preferences.lo \
bonobo-ui-sync.lo bonobo-ui-sync-menu.lo bonobo-ui-sync-keys.lo \
bonobo-ui-sync-status.lo bonobo-ui-sync-toolbar.lo \
bonobo-ui-toolbar-button-item.lo bonobo-ui-toolbar-control-item.lo \
bonobo-ui-toolbar-item.lo bonobo-ui-toolbar-popup-item.lo \
bonobo-ui-toolbar-separator-item.lo \
bonobo-ui-toolbar-toggle-button-item.lo bonobo-ui-toolbar.lo \
bonobo-ui-type-builtins.lo bonobo-ui-util.lo bonobo-ui-xml.lo \
bonobo-widget.lo bonobo-window.lo bonobo-zoomable.lo \
bonobo-zoomable-frame.lo bonobo-ui-marshal-main.lo
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DATA =  $(pkgconfig_DATA)

HEADERS =  $(libbonoboinclude_HEADERS) $(noinst_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in libbonoboui-2.0.pc.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libbonoboui_2_la_SOURCES)
OBJECTS = $(libbonoboui_2_la_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps bonobo/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

libbonoboui-2.0.pc: $(top_builddir)/config.status libbonoboui-2.0.pc.in
	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libbonoboui-2.la: $(libbonoboui_2_la_OBJECTS) $(libbonoboui_2_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libbonoboui_2_la_LDFLAGS) $(libbonoboui_2_la_OBJECTS) $(libbonoboui_2_la_LIBADD) $(LIBS)

install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgconfigdir)
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(pkgconfigdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(pkgconfigdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(pkgconfigdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(pkgconfigdir)/$$p; \
	  fi; fi; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	list='$(pkgconfig_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(pkgconfigdir)/$$p; \
	done

install-libbonoboincludeHEADERS: $(libbonoboinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libbonoboincludedir)
	@list='$(libbonoboinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libbonoboincludedir)/$$p"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libbonoboincludedir)/$$p; \
	done

uninstall-libbonoboincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	list='$(libbonoboinclude_HEADERS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libbonoboincludedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = bonobo

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-hook
bonobo-a11y.lo bonobo-a11y.o : bonobo-a11y.c bonobo-a11y.h
bonobo-canvas-component.lo bonobo-canvas-component.o : \
	bonobo-canvas-component.c ../config.h bonobo-ui-component.h \
	bonobo-ui-node.h bonobo-canvas-component.h bonobo-ui-marshal.h
bonobo-canvas-item.lo bonobo-canvas-item.o : bonobo-canvas-item.c \
	../config.h bonobo-canvas-item.h
bonobo-client-site.lo bonobo-client-site.o : bonobo-client-site.c \
	../config.h bonobo-client-site.h bonobo-view-frame.h \
	bonobo-control-frame.h bonobo-wrapper.h bonobo-ui-container.h \
	bonobo-ui-engine.h bonobo-ui-sync.h bonobo-ui-node.h \
	bonobo-embeddable.h bonobo-canvas-component.h bonobo-view.h \
	bonobo-control.h bonobo-ui-component.h bonobo-canvas-item.h
bonobo-control-frame.lo bonobo-control-frame.o : bonobo-control-frame.c \
	../config.h bonobo-control.h bonobo-plug.h \
	bonobo-ui-container.h bonobo-ui-engine.h bonobo-ui-sync.h \
	bonobo-ui-node.h bonobo-ui-component.h bonobo-control-frame.h \
	bonobo-socket.h bonobo-ui-marshal.h bonobo-control-internal.h \
	bonobo-ui-private.h bonobo-ui-node-private.h \
	bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h
bonobo-control.lo bonobo-control.o : bonobo-control.c ../config.h \
	bonobo-plug.h bonobo-control.h bonobo-ui-container.h \
	bonobo-ui-engine.h bonobo-ui-sync.h bonobo-ui-node.h \
	bonobo-ui-component.h bonobo-ui-sync-menu.h \
	bonobo-control-internal.h bonobo-socket.h \
	bonobo-control-frame.h bonobo-ui-private.h \
	bonobo-ui-node-private.h bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h
bonobo-desktop-window.lo bonobo-desktop-window.o : \
	bonobo-desktop-window.c ../config.h bonobo-desktop-window.h
bonobo-dock-band.lo bonobo-dock-band.o : bonobo-dock-band.c ../config.h \
	bonobo-dock.h bonobo-dock-band.h bonobo-dock-item.h \
	bonobo-dock-layout.h
bonobo-dock-item-grip.lo bonobo-dock-item-grip.o : \
	bonobo-dock-item-grip.c bonobo-a11y.h bonobo-dock-band.h \
	bonobo-dock.h bonobo-dock-layout.h bonobo-dock-item.h \
	bonobo-dock-item-grip.h
bonobo-dock-item.lo bonobo-dock-item.o : bonobo-dock-item.c ../config.h \
	bonobo-dock-band.h bonobo-dock.h bonobo-dock-layout.h \
	bonobo-dock-item.h bonobo-ui-private.h bonobo-ui-node.h \
	bonobo-ui-engine.h bonobo-ui-container.h bonobo-ui-sync.h \
	bonobo-ui-node-private.h bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h bonobo-control-frame.h bonobo-ui-component.h \
	bonobo-socket.h bonobo-ui-marshal.h bonobo-dock-item-grip.h
bonobo-dock-layout.lo bonobo-dock-layout.o : bonobo-dock-layout.c \
	../config.h bonobo-dock-layout.h bonobo-dock.h \
	bonobo-dock-band.h bonobo-dock-item.h
bonobo-dock.lo bonobo-dock.o : bonobo-dock.c bonobo-dock.h \
	bonobo-dock-band.h bonobo-dock-item.h bonobo-dock-layout.h
bonobo-embeddable.lo bonobo-embeddable.o : bonobo-embeddable.c \
	../config.h bonobo-embeddable.h bonobo-canvas-component.h \
	bonobo-view.h bonobo-control.h bonobo-control-frame.h \
	bonobo-wrapper.h bonobo-ui-component.h bonobo-ui-node.h \
	bonobo-view-frame.h bonobo-ui-container.h bonobo-ui-engine.h \
	bonobo-ui-sync.h bonobo-client-site.h
bonobo-file-selector-util.lo bonobo-file-selector-util.o : \
	bonobo-file-selector-util.c ../config.h \
	bonobo-file-selector-util.h bonobo-widget.h \
	bonobo-control-frame.h bonobo-ui-component.h bonobo-ui-node.h \
	bonobo-socket.h
bonobo-plug.lo bonobo-plug.o : bonobo-plug.c bonobo-plug.h \
	bonobo-control.h bonobo-ui-container.h bonobo-ui-engine.h \
	bonobo-ui-sync.h bonobo-ui-node.h bonobo-ui-component.h \
	bonobo-control-internal.h bonobo-socket.h \
	bonobo-control-frame.h bonobo-ui-private.h \
	bonobo-ui-node-private.h bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h
bonobo-property-control.lo bonobo-property-control.o : \
	bonobo-property-control.c ../config.h bonobo-property-control.h \
	bonobo-control.h bonobo-plug.h bonobo-ui-container.h \
	bonobo-ui-engine.h bonobo-ui-sync.h bonobo-ui-node.h \
	bonobo-ui-component.h bonobo-ui-marshal.h
bonobo-selector-widget.lo bonobo-selector-widget.o : \
	bonobo-selector-widget.c ../config.h bonobo-selector-widget.h \
	bonobo-ui-preferences.h bonobo-ui-engine.h \
	bonobo-ui-container.h bonobo-ui-sync.h bonobo-ui-node.h \
	bonobo-ui-toolbar.h bonobo-ui-toolbar-item.h \
	bonobo-insert-component.xpm
bonobo-selector.lo bonobo-selector.o : bonobo-selector.c ../config.h \
	bonobo-selector.h bonobo-selector-widget.h
bonobo-socket.lo bonobo-socket.o : bonobo-socket.c bonobo-socket.h \
	bonobo-control-frame.h bonobo-ui-component.h bonobo-ui-node.h \
	bonobo-control-internal.h bonobo-plug.h bonobo-control.h \
	bonobo-ui-container.h bonobo-ui-engine.h bonobo-ui-sync.h \
	bonobo-ui-private.h bonobo-ui-node-private.h \
	bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h
bonobo-ui-component.lo bonobo-ui-component.o : bonobo-ui-component.c \
	../config.h bonobo-ui-xml.h bonobo-ui-node.h bonobo-ui-engine.h \
	bonobo-ui-container.h bonobo-ui-sync.h bonobo-ui-util.h \
	bonobo-ui-component.h bonobo-ui-marshal.h
bonobo-ui-config-widget.lo bonobo-ui-config-widget.o : \
	bonobo-ui-config-widget.c bonobo-ui-util.h \
	bonobo-ui-component.h bonobo-ui-node.h bonobo-ui-private.h \
	bonobo-ui-engine.h bonobo-ui-container.h bonobo-ui-sync.h \
	bonobo-ui-node-private.h bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h bonobo-control-frame.h bonobo-socket.h \
	bonobo-ui-engine-private.h bonobo-ui-xml.h \
	bonobo-ui-engine-config.h bonobo-ui-config-widget.h \
	bonobo-ui-sync-toolbar.h bonobo-dock.h bonobo-dock-band.h \
	bonobo-dock-item.h bonobo-dock-layout.h bonobo-ui-toolbar.h
bonobo-ui-container.lo bonobo-ui-container.o : bonobo-ui-container.c \
	../config.h bonobo-ui-xml.h bonobo-ui-node.h bonobo-ui-engine.h \
	bonobo-ui-container.h bonobo-ui-sync.h bonobo-ui-util.h \
	bonobo-ui-component.h
bonobo-ui-engine-config.lo bonobo-ui-engine-config.o : \
	bonobo-ui-engine-config.c bonobo-ui-util.h \
	bonobo-ui-component.h bonobo-ui-node.h bonobo-ui-private.h \
	bonobo-ui-engine.h bonobo-ui-container.h bonobo-ui-sync.h \
	bonobo-ui-node-private.h bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h bonobo-control-frame.h bonobo-socket.h \
	bonobo-ui-sync-menu.h bonobo-ui-config-widget.h \
	bonobo-ui-engine-config.h bonobo-ui-xml.h \
	bonobo-ui-engine-private.h
bonobo-ui-engine.lo bonobo-ui-engine.o : bonobo-ui-engine.c ../config.h \
	bonobo-widget.h bonobo-control-frame.h bonobo-ui-component.h \
	bonobo-ui-node.h bonobo-socket.h bonobo-ui-xml.h \
	bonobo-ui-engine.h bonobo-ui-container.h bonobo-ui-sync.h \
	bonobo-ui-util.h bonobo-ui-private.h bonobo-ui-node-private.h \
	bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-ui-engine-config.h bonobo-ui-engine-private.h \
	bonobo-ui-marshal.h bonobo-ui-preferences.h bonobo-ui-toolbar.h
bonobo-ui-init-gtk.lo bonobo-ui-init-gtk.o : bonobo-ui-init-gtk.c \
	../config.h bonobo-ui-main.h
bonobo-ui-main.lo bonobo-ui-main.o : bonobo-ui-main.c ../config.h \
	bonobo-ui-private.h bonobo-ui-node.h bonobo-ui-engine.h \
	bonobo-ui-container.h bonobo-ui-sync.h bonobo-ui-node-private.h \
	bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h bonobo-control-frame.h bonobo-ui-component.h \
	bonobo-socket.h bonobo-ui-main.h bonobo-a11y.h
bonobo-ui-marshal-main.lo bonobo-ui-marshal-main.o : \
	bonobo-ui-marshal-main.c bonobo-ui-marshal.h \
	bonobo-ui-marshal.c
bonobo-ui-node.lo bonobo-ui-node.o : bonobo-ui-node.c ../config.h \
	bonobo-ui-node.h bonobo-ui-node-private.h
bonobo-ui-preferences.lo bonobo-ui-preferences.o : \
	bonobo-ui-preferences.c ../config.h bonobo-ui-private.h \
	bonobo-ui-node.h bonobo-ui-engine.h bonobo-ui-container.h \
	bonobo-ui-sync.h bonobo-ui-node-private.h \
	bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h bonobo-control-frame.h bonobo-ui-component.h \
	bonobo-socket.h bonobo-ui-preferences.h bonobo-ui-toolbar.h
bonobo-ui-sync-keys.lo bonobo-ui-sync-keys.o : bonobo-ui-sync-keys.c \
	../config.h bonobo-ui-xml.h bonobo-ui-node.h bonobo-ui-engine.h \
	bonobo-ui-container.h bonobo-ui-sync.h bonobo-ui-util.h \
	bonobo-ui-component.h bonobo-ui-sync-keys.h bonobo-ui-private.h \
	bonobo-ui-node-private.h bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h bonobo-control-frame.h bonobo-socket.h
bonobo-ui-sync-menu.lo bonobo-ui-sync-menu.o : bonobo-ui-sync-menu.c \
	../config.h bonobo-ui-xml.h bonobo-ui-node.h bonobo-ui-engine.h \
	bonobo-ui-container.h bonobo-ui-sync.h bonobo-ui-util.h \
	bonobo-ui-component.h bonobo-ui-sync-menu.h bonobo-ui-private.h \
	bonobo-ui-node-private.h bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h bonobo-control-frame.h bonobo-socket.h \
	bonobo-ui-preferences.h bonobo-ui-toolbar.h
bonobo-ui-sync-status.lo bonobo-ui-sync-status.o : \
	bonobo-ui-sync-status.c ../config.h bonobo-ui-xml.h \
	bonobo-ui-node.h bonobo-ui-engine.h bonobo-ui-container.h \
	bonobo-ui-sync.h bonobo-ui-util.h bonobo-ui-component.h \
	bonobo-ui-sync-status.h bonobo-ui-preferences.h \
	bonobo-ui-toolbar.h bonobo-ui-toolbar-item.h \
	bonobo-ui-private.h bonobo-ui-node-private.h \
	bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-widget.h \
	bonobo-control-frame.h bonobo-socket.h \
	bonobo-ui-toolbar-separator-item.h
bonobo-ui-sync-toolbar.lo bonobo-ui-sync-toolbar.o : \
	bonobo-ui-sync-toolbar.c ../config.h bonobo-ui-xml.h \
	bonobo-ui-node.h bonobo-ui-engine.h bonobo-ui-container.h \
	bonobo-ui-sync.h bonobo-ui-util.h bonobo-ui-component.h \
	bonobo-ui-engine-config.h bonobo-ui-sync-toolbar.h \
	bonobo-dock.h bonobo-dock-band.h bonobo-dock-item.h \
	bonobo-dock-layout.h bonobo-ui-toolbar.h \
	bonobo-ui-toolbar-item.h bonobo-ui-preferences.h \
	bonobo-ui-private.h bonobo-ui-node-private.h \
	bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-widget.h \
	bonobo-control-frame.h bonobo-socket.h \
	bonobo-ui-toolbar-toggle-button-item.h \
	bonobo-ui-toolbar-separator-item.h \
	bonobo-ui-toolbar-popup-item.h
bonobo-ui-sync.lo bonobo-ui-sync.o : bonobo-ui-sync.c ../config.h \
	bonobo-ui-engine.h bonobo-ui-container.h bonobo-ui-sync.h \
	bonobo-ui-node.h
bonobo-ui-toolbar-button-item.lo bonobo-ui-toolbar-button-item.o : \
	bonobo-ui-toolbar-button-item.c ../config.h bonobo-ui-private.h \
	bonobo-ui-node.h bonobo-ui-engine.h bonobo-ui-container.h \
	bonobo-ui-sync.h bonobo-ui-node-private.h \
	bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h bonobo-control-frame.h bonobo-ui-component.h \
	bonobo-socket.h bonobo-ui-toolbar-button-item.h
bonobo-ui-toolbar-control-item.lo bonobo-ui-toolbar-control-item.o : \
	bonobo-ui-toolbar-control-item.c ../config.h \
	bonobo-ui-private.h bonobo-ui-node.h bonobo-ui-engine.h \
	bonobo-ui-container.h bonobo-ui-sync.h bonobo-ui-node-private.h \
	bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h bonobo-control-frame.h bonobo-ui-component.h \
	bonobo-socket.h
bonobo-ui-toolbar-icon.lo bonobo-ui-toolbar-icon.o : \
	bonobo-ui-toolbar-icon.c ../config.h bonobo-ui-toolbar-icon.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h
bonobo-ui-toolbar-item.lo bonobo-ui-toolbar-item.o : \
	bonobo-ui-toolbar-item.c ../config.h bonobo-ui-private.h \
	bonobo-ui-node.h bonobo-ui-engine.h bonobo-ui-container.h \
	bonobo-ui-sync.h bonobo-ui-node-private.h \
	bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h bonobo-control-frame.h bonobo-ui-component.h \
	bonobo-socket.h bonobo-ui-toolbar-item.h
bonobo-ui-toolbar-popup-item.lo bonobo-ui-toolbar-popup-item.o : \
	bonobo-ui-toolbar-popup-item.c ../config.h \
	bonobo-ui-toolbar-popup-item.h \
	bonobo-ui-toolbar-toggle-button-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h
bonobo-ui-toolbar-separator-item.lo bonobo-ui-toolbar-separator-item.o : \
	bonobo-ui-toolbar-separator-item.c ../config.h bonobo-a11y.h \
	bonobo-ui-toolbar-separator-item.h bonobo-ui-toolbar-item.h
bonobo-ui-toolbar-toggle-button-item.lo bonobo-ui-toolbar-toggle-button-item.o : \
	bonobo-ui-toolbar-toggle-button-item.c ../config.h \
	bonobo-ui-toolbar-toggle-button-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h
bonobo-ui-toolbar.lo bonobo-ui-toolbar.o : bonobo-ui-toolbar.c \
	../config.h bonobo-ui-private.h bonobo-ui-node.h \
	bonobo-ui-engine.h bonobo-ui-container.h bonobo-ui-sync.h \
	bonobo-ui-node-private.h bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h bonobo-control-frame.h bonobo-ui-component.h \
	bonobo-socket.h bonobo-ui-toolbar.h \
	bonobo-ui-toolbar-popup-item.h \
	bonobo-ui-toolbar-toggle-button-item.h
bonobo-ui-type-builtins.lo bonobo-ui-type-builtins.o : \
	bonobo-ui-type-builtins.c ../libbonoboui.h bonobo-widget.h \
	bonobo-control-frame.h bonobo-ui-component.h bonobo-ui-node.h \
	bonobo-socket.h bonobo-control.h bonobo-plug.h \
	bonobo-ui-container.h bonobo-ui-engine.h bonobo-ui-sync.h \
	bonobo-property-control.h bonobo-window.h bonobo-ui-main.h \
	bonobo-ui-util.h bonobo-selector.h bonobo-selector-widget.h \
	bonobo-file-selector-util.h bonobo-canvas-item.h \
	bonobo-canvas-component.h bonobo-zoomable.h \
	bonobo-zoomable-frame.h bonobo-dock-item.h bonobo-dock.h \
	bonobo-dock-band.h bonobo-dock-layout.h \
	bonobo-ui-toolbar-item.h bonobo-ui-toolbar.h \
	bonobo-ui-type-builtins.h bonobo-ui-type-builtins.h
bonobo-ui-util.lo bonobo-ui-util.o : bonobo-ui-util.c ../config.h \
	bonobo-ui-xml.h bonobo-ui-node.h bonobo-ui-engine.h \
	bonobo-ui-container.h bonobo-ui-sync.h bonobo-ui-util.h \
	bonobo-ui-component.h bonobo-ui-private.h \
	bonobo-ui-node-private.h bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-ui-toolbar-item.h \
	bonobo-widget.h bonobo-control-frame.h bonobo-socket.h
bonobo-ui-xml.lo bonobo-ui-xml.o : bonobo-ui-xml.c ../config.h \
	bonobo-ui-xml.h bonobo-ui-node.h bonobo-ui-engine.h \
	bonobo-ui-container.h bonobo-ui-sync.h bonobo-ui-marshal.h \
	bonobo-ui-node-private.h
bonobo-view-frame.lo bonobo-view-frame.o : bonobo-view-frame.c \
	../config.h bonobo-view.h bonobo-control.h \
	bonobo-control-frame.h bonobo-wrapper.h bonobo-ui-component.h \
	bonobo-ui-node.h bonobo-view-frame.h bonobo-ui-container.h \
	bonobo-ui-engine.h bonobo-ui-sync.h bonobo-client-site.h \
	bonobo-embeddable.h bonobo-canvas-component.h
bonobo-view.lo bonobo-view.o : bonobo-view.c ../config.h bonobo-view.h \
	bonobo-control.h bonobo-control-frame.h bonobo-wrapper.h \
	bonobo-ui-component.h bonobo-ui-node.h bonobo-view-frame.h \
	bonobo-ui-container.h bonobo-ui-engine.h bonobo-ui-sync.h \
	bonobo-client-site.h bonobo-embeddable.h \
	bonobo-canvas-component.h
bonobo-widget.lo bonobo-widget.o : bonobo-widget.c ../config.h \
	bonobo-widget.h bonobo-control-frame.h bonobo-ui-component.h \
	bonobo-ui-node.h bonobo-socket.h
bonobo-win.lo bonobo-win.o : bonobo-win.c ../config.h bonobo-dock-item.h \
	bonobo-dock.h bonobo-dock-band.h bonobo-dock-layout.h \
	bonobo-win.h bonobo-ui-engine.h bonobo-ui-container.h \
	bonobo-ui-sync.h bonobo-ui-node.h bonobo-ui-sync-menu.h \
	bonobo-ui-sync-keys.h bonobo-ui-sync-status.h \
	bonobo-ui-sync-toolbar.h bonobo-ui-toolbar.h \
	bonobo-ui-toolbar-item.h
bonobo-window.lo bonobo-window.o : bonobo-window.c ../config.h \
	bonobo-dock-item.h bonobo-dock.h bonobo-dock-band.h \
	bonobo-dock-layout.h bonobo-window.h bonobo-ui-engine.h \
	bonobo-ui-container.h bonobo-ui-sync.h bonobo-ui-node.h \
	bonobo-ui-preferences.h bonobo-ui-toolbar.h \
	bonobo-ui-toolbar-item.h bonobo-ui-private.h \
	bonobo-ui-node-private.h bonobo-ui-toolbar-control-item.h \
	bonobo-ui-toolbar-button-item.h bonobo-widget.h \
	bonobo-control-frame.h bonobo-ui-component.h bonobo-socket.h \
	bonobo-ui-sync-menu.h bonobo-ui-sync-keys.h \
	bonobo-ui-sync-status.h bonobo-ui-sync-toolbar.h
bonobo-wrapper.lo bonobo-wrapper.o : bonobo-wrapper.c ../config.h \
	bonobo-wrapper.h
bonobo-zoomable-frame.lo bonobo-zoomable-frame.o : \
	bonobo-zoomable-frame.c ../config.h bonobo-zoomable-frame.h
bonobo-zoomable.lo bonobo-zoomable.o : bonobo-zoomable.c ../config.h \
	bonobo-zoomable.h
bonoboui-marshal-main.lo bonoboui-marshal-main.o : \
	bonoboui-marshal-main.c bonoboui-marshal.h bonoboui-marshal.c

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES
install-exec: install-exec-am

install-data-am: install-pkgconfigDATA install-libbonoboincludeHEADERS
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES uninstall-pkgconfigDATA \
		uninstall-libbonoboincludeHEADERS
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(pkgconfigdir) \
		$(DESTDIR)$(libbonoboincludedir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool uninstall-pkgconfigDATA install-pkgconfigDATA \
uninstall-libbonoboincludeHEADERS install-libbonoboincludeHEADERS tags \
mostlyclean-tags distclean-tags clean-tags maintainer-clean-tags \
distdir info-am info dvi-am dvi check check-am installcheck-am \
installcheck install-exec-am install-exec install-data-am install-data \
install-am install uninstall-am uninstall all-redirect all-am all \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


$(libbonoboui_2_la_OBJECTS): $(libbonoboui_built_sources)

$(srcdir)/bonobo-ui-marshal.h: bonobo-ui-marshal.list $(GLIB_GENMARSHAL)
	$(GLIB_GENMARSHAL) $< --header --prefix=bonobo_ui_marshal > $@

$(srcdir)/bonobo-ui-marshal.c: bonobo-ui-marshal.list $(GLIB_GENMARSHAL)
	$(GLIB_GENMARSHAL) $< --body --prefix=bonobo_ui_marshal > $@

$(srcdir)/bonobo-ui-type-builtins.c: $(libbonoboui_h_sources) $(GLIB_MKENUMS)
	cd $(srcdir) \
	&& $(GLIB_MKENUMS) \
			--fhead "#include \"libbonoboui.h\"\n\n" \
			--fhead "#include \"bonobo-ui-type-builtins.h\"\n\n" \
			--fprod "\n/* enumerations from \"@filename@\" */" \
			--vhead "static const G@Type@Value _@enum_name@_values[] = {" \
			--vprod "  { @VALUENAME@, \"@VALUENAME@\", \"@valuenick@\" }," \
			--vtail "  { 0, NULL, NULL }\n};\n\n" \
			--vtail "GType\n@enum_name@_get_type (void)\n{\n" \
			--vtail "  static GType type = 0;\n\n" \
			--vtail "  if (!type)\n" \
			--vtail "    type = g_@type@_register_static (\"@EnumName@\", _@enum_name@_values);\n\n" \
			--vtail "  return type;\n}\n\n" \
		$(libbonoboui_h_sources) > xgen-gtbec \
	&& cp xgen-gtbec $(@F) \
	&& rm -f xgen-gtbec

$(srcdir)/bonobo-ui-type-builtins.h: $(libbonoboui_h_sources) $(GLIB_MKENUMS)
	cd $(srcdir) \
	&& $(GLIB_MKENUMS) \
			--fhead "#ifndef __BONOBO_UI_TYPE_BUILTINS_H__\n" \
			--fhead "#define __BONOBO_UI_TYPE_BUILTINS_H__ 1\n\n" \
			--fhead "#include <glib-object.h>\n\n" \
			--fhead "G_BEGIN_DECLS\n\n" \
			--ftail "G_END_DECLS\n\n" \
			--ftail "#endif /* __BONOBO_UI_TYPE_BUILTINS_H__ */\n" \
			--fprod "\n/* --- @filename@ --- */" \
			--eprod "#define BONOBO_TYPE_@ENUMSHORT@ @enum_name@_get_type()\n" \
			--eprod "GType @enum_name@_get_type (void);\n" \
		$(libbonoboui_h_sources) > xgen-gth \
	&& cp xgen-gth $(@F) \
	&& rm -f xgen-gth

$(srcdir)/libbonoboui.defs: $(libbonoboui_h_sources) $(GLIB_MKENUMS)
	cd $(srcdir) \
	&& $(GLIB_MKENUMS) --comments ";; @comment@" \
			--fprod "; enumerations from \"@filename@\"\n " \
	                --vhead "(define-@type@ @EnumName@" \
	                --vprod "   (@valuenick@ @VALUENAME@)" \
	                --vtail ")" \
	                $(libbonoboui_h_sources) > xgen-gdef \
	&& (cmp -s xgen-gdef libbonoboui.defs || cp xgen-gdef libbonoboui.defs) \
	&& rm -f xgen-gdef

dist-hook:
	for file in $(DONT_DIST_SOURCE) ; do \
	    rm -f $(distdir)/$$file ; \
	done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
