<refentry id="libbonoboui-bonobo-selector">
<refmeta>
<refentrytitle>BonoboSelector</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBBONOBOUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>BonoboSelector</refname><refpurpose>a component selector widget</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<anchor id="BonoboSelector"/>
<synopsis>



struct      <link linkend="BonoboSelectorPrivate">BonoboSelectorPrivate</link>;
struct      <link linkend="BonoboSelector-struct">BonoboSelector</link>;
struct      <link linkend="BonoboSelectorClass">BonoboSelectorClass</link>;
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="bonobo-selector-construct">bonobo_selector_construct</link>       (<link linkend="BonoboSelector">BonoboSelector</link> *sel,
                                             const <link linkend="gchar">gchar</link> *title,
                                             <link linkend="BonoboSelectorWidget">BonoboSelectorWidget</link> *selector);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="bonobo-selector-new">bonobo_selector_new</link>             (const <link linkend="gchar">gchar</link> *title,
                                             const <link linkend="gchar">gchar</link> **interfaces_required);
<link linkend="gchar">gchar</link>*      <link linkend="bonobo-selector-get-selected-id">bonobo_selector_get_selected_id</link> (<link linkend="BonoboSelector">BonoboSelector</link> *sel);
<link linkend="gchar">gchar</link>*      <link linkend="bonobo-selector-get-selected-name">bonobo_selector_get_selected_name</link>
                                            (<link linkend="BonoboSelector">BonoboSelector</link> *sel);
<link linkend="gchar">gchar</link>*      <link linkend="bonobo-selector-get-selected-description">bonobo_selector_get_selected_description</link>
                                            (<link linkend="BonoboSelector">BonoboSelector</link> *sel);
<link linkend="gchar">gchar</link>*      <link linkend="bonobo-selector-select-id">bonobo_selector_select_id</link>       (const <link linkend="gchar">gchar</link> *title,
                                             const <link linkend="gchar">gchar</link> **interfaces_required);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----<link linkend="GtkWidget">GtkWidget</link>
               +----<link linkend="GtkContainer">GtkContainer</link>
                     +----<link linkend="GtkBin">GtkBin</link>
                           +----<link linkend="GtkWindow">GtkWindow</link>
                                 +----<link linkend="GtkDialog">GtkDialog</link>
                                       +----BonoboSelector
</synopsis>

</refsect1>



<refsect1>
<title>Implemented Interfaces</title>
<para>
BonoboSelector implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link>.</para>

</refsect1>


<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="BonoboSelector--interfaces-required">interfaces-required</link>&quot;  <link linkend="GValueArray">GValueArray</link>           : Write / Construct
</synopsis>
</refsect1>

<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="BonoboSelector-cancel">cancel</link>&quot;    <link linkend="void">void</link>        user_function      (<link linkend="BonoboSelector">BonoboSelector</link> *bonoboselector,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="BonoboSelector-ok">ok</link>&quot;        <link linkend="void">void</link>        user_function      (<link linkend="BonoboSelector">BonoboSelector</link> *bonoboselector,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>
This <link linkend="GnomeDialog"><type>GnomeDialog</type></link> allows the user to select a component implementing
a set of interfaces. The easiest way to do this in your code is by
using:
  <example>
    <title>Simple Bonobo/Control selection</title>
    <programlisting>
{
	char *interfaces [] = { "IDL:Bonobo/Control:1.0", NULL };
	char *oaf_iid;

	oaf_iid = bonobo_selector_select_id (
		_("Please select a Control"), interfaces);

	g_warning ("You selected '<literal>s</literal>'", oaf_iid);

	g_free (oaf_iid);
}
    </programlisting>
  </example>
  This will throw up a dialog containing all the available components
implementing the IDL:Bonobo/Control:1.0 interface and list them for
the user to select.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="BonoboSelectorPrivate"/>struct BonoboSelectorPrivate</title>
<indexterm><primary>BonoboSelectorPrivate</primary></indexterm><programlisting>struct BonoboSelectorPrivate;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboSelector-struct"/>struct BonoboSelector</title>
<indexterm><primary>BonoboSelector</primary></indexterm><programlisting>struct BonoboSelector;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboSelectorClass"/>struct BonoboSelectorClass</title>
<indexterm><primary>BonoboSelectorClass</primary></indexterm><programlisting>struct BonoboSelectorClass {

	GtkDialogClass parent_class;
	
	void (* ok)	(BonoboSelector *sel);
	void (* cancel)	(BonoboSelector *sel);

	gpointer dummy[2];
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="bonobo-selector-construct"/>bonobo_selector_construct ()</title>
<indexterm><primary>bonobo_selector_construct</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  bonobo_selector_construct       (<link linkend="BonoboSelector">BonoboSelector</link> *sel,
                                             const <link linkend="gchar">gchar</link> *title,
                                             <link linkend="BonoboSelectorWidget">BonoboSelectorWidget</link> *selector);</programlisting>
<para>
Don't use this ever - use construct-time properties instead.
TODO: Remove from header when we are allowed to change the API.
Constructs the innards of a bonobo selector window.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sel</parameter>&nbsp;:</term>
<listitem><simpara> the selector to construct
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>title</parameter>&nbsp;:</term>
<listitem><simpara> the title for the window
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>selector</parameter>&nbsp;:</term>
<listitem><simpara> the component view widget to put inside it.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the constructed widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="bonobo-selector-new"/>bonobo_selector_new ()</title>
<indexterm><primary>bonobo_selector_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  bonobo_selector_new             (const <link linkend="gchar">gchar</link> *title,
                                             const <link linkend="gchar">gchar</link> **interfaces_required);</programlisting>
<para>
Creates a new BonoboSelector widget.  The title of the dialog
is set to <parameter>title</parameter>, and the list of selectable servers is populated
with those servers which support the interfaces specified in
<parameter>interfaces_required</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>title</parameter>&nbsp;:</term>
<listitem><simpara> A string which should go in the title of the
BonoboSelector window.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>interfaces_required</parameter>&nbsp;:</term>
<listitem><simpara> A NULL-terminated array of interfaces which a
server must support in order to be listed in the selector.  Defaults
to "IDL:Bonobo/Embeddable:1.0" if no interfaces are listed.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A pointer to the newly-created BonoboSelector widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="bonobo-selector-get-selected-id"/>bonobo_selector_get_selected_id ()</title>
<indexterm><primary>bonobo_selector_get_selected_id</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      bonobo_selector_get_selected_id (<link linkend="BonoboSelector">BonoboSelector</link> *sel);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sel</parameter>&nbsp;:</term>
<listitem><simpara> A BonoboSelector widget.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly-allocated string containing the ID of the
currently-selected CORBA server (i.e., the corba server whose name
is highlighted in the list).  The user of this function is
responsible for freeing this. It will give an oaf iid back.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="bonobo-selector-get-selected-name"/>bonobo_selector_get_selected_name ()</title>
<indexterm><primary>bonobo_selector_get_selected_name</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      bonobo_selector_get_selected_name
                                            (<link linkend="BonoboSelector">BonoboSelector</link> *sel);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sel</parameter>&nbsp;:</term>
<listitem><simpara> A BonoboSelector widget.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly-allocated string containing the name of the
currently-selected CORBA server (i.e., the corba server whose name
is highlighted in the list).  The user of this function is
responsible for freeing this.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="bonobo-selector-get-selected-description"/>bonobo_selector_get_selected_description ()</title>
<indexterm><primary>bonobo_selector_get_selected_description</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      bonobo_selector_get_selected_description
                                            (<link linkend="BonoboSelector">BonoboSelector</link> *sel);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sel</parameter>&nbsp;:</term>
<listitem><simpara> A BonoboSelector widget.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly-allocated string containing the description of the
currently-selected CORBA server (i.e., the corba server whose name
is highlighted in the list).  The user of this function is
responsible for freeing this.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="bonobo-selector-select-id"/>bonobo_selector_select_id ()</title>
<indexterm><primary>bonobo_selector_select_id</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      bonobo_selector_select_id       (const <link linkend="gchar">gchar</link> *title,
                                             const <link linkend="gchar">gchar</link> **interfaces_required);</programlisting>
<para>
Calls <link linkend="bonobo-selector-new"><function>bonobo_selector_new()</function></link> to create a new
BonoboSelector widget with the specified paramters, <parameter>title</parameter> and
<parameter>interfaces_required</parameter>.  Then runs the dialog modally and allows
the user to make a selection.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>title</parameter>&nbsp;:</term>
<listitem><simpara> The title to be used for the dialog.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>interfaces_required</parameter>&nbsp;:</term>
<listitem><simpara> A list of required interfaces.  See
<link linkend="bonobo-selector-new"><function>bonobo_selector_new()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The Oaf IID of the selected server, or NULL if no server is
selected.  The ID string has been allocated with g_strdup.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<refsect2><title><anchor id="BonoboSelector--interfaces-required"/>The &quot;<literal>interfaces-required</literal>&quot; property</title>
<programlisting>  &quot;interfaces-required&quot;  <link linkend="GValueArray">GValueArray</link>           : Write / Construct</programlisting>
<para>A NULL-terminated array of interfaces which a server must support in order to be listed in the selector. Defaults to "IDL:Bonobo/Embeddable:1.0" if no interfaces are listed.</para></refsect2>

</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="BonoboSelector-cancel"/>The &quot;cancel&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="BonoboSelector">BonoboSelector</link> *bonoboselector,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>bonoboselector</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="BonoboSelector-ok"/>The &quot;ok&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="BonoboSelector">BonoboSelector</link> *bonoboselector,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>bonoboselector</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
