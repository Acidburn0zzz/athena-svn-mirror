<refentry id="libbonoboui-bonobo-selector-widget">
<refmeta>
<refentrytitle>bonobo-selector-widget</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBBONOBOUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>bonobo-selector-widget</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



            <link linkend="BonoboSelectorWidgetPrivate">BonoboSelectorWidgetPrivate</link>;
            <link linkend="BonoboSelectorWidget">BonoboSelectorWidget</link>;
            <link linkend="BonoboSelectorWidgetClass">BonoboSelectorWidgetClass</link>;
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="bonobo-selector-widget-new">bonobo_selector_widget_new</link>      (void);
<link linkend="void">void</link>        <link linkend="bonobo-selector-widget-set-interfaces">bonobo_selector_widget_set_interfaces</link>
                                            (<link linkend="BonoboSelectorWidget">BonoboSelectorWidget</link> *sel,
                                             const <link linkend="gchar">gchar</link> **interfaces_required);
<link linkend="gchar">gchar</link>*      <link linkend="bonobo-selector-widget-get-id">bonobo_selector_widget_get_id</link>   (<link linkend="BonoboSelectorWidget">BonoboSelectorWidget</link> *sel);
<link linkend="gchar">gchar</link>*      <link linkend="bonobo-selector-widget-get-name">bonobo_selector_widget_get_name</link> (<link linkend="BonoboSelectorWidget">BonoboSelectorWidget</link> *sel);
<link linkend="gchar">gchar</link>*      <link linkend="bonobo-selector-widget-get-description">bonobo_selector_widget_get_description</link>
                                            (<link linkend="BonoboSelectorWidget">BonoboSelectorWidget</link> *sel);

</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="BonoboSelectorWidgetPrivate"/>BonoboSelectorWidgetPrivate</title>
<indexterm><primary>BonoboSelectorWidgetPrivate</primary></indexterm><programlisting>typedef struct _BonoboSelectorWidgetPrivate BonoboSelectorWidgetPrivate;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboSelectorWidget"/>BonoboSelectorWidget</title>
<indexterm><primary>BonoboSelectorWidget</primary></indexterm><programlisting>typedef struct {
	GtkVBox parent;

	BonoboSelectorWidgetPrivate *priv;
} BonoboSelectorWidget;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboSelectorWidgetClass"/>BonoboSelectorWidgetClass</title>
<indexterm><primary>BonoboSelectorWidgetClass</primary></indexterm><programlisting>typedef struct {
	GtkVBoxClass parent_class;

	/* Virtual methods */
	gchar *(* get_id)          (BonoboSelectorWidget *sel);
	gchar *(* get_name)        (BonoboSelectorWidget *sel);
	gchar *(* get_description) (BonoboSelectorWidget *sel);
	void   (* set_interfaces)  (BonoboSelectorWidget *sel,
				    const gchar         **interfaces);

	/* User select */
	void   (* final_select)    (BonoboSelectorWidget *sel);

	gpointer dummy[2];
} BonoboSelectorWidgetClass;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="bonobo-selector-widget-new"/>bonobo_selector_widget_new ()</title>
<indexterm><primary>bonobo_selector_widget_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  bonobo_selector_widget_new      (void);</programlisting>
<para>
Creates a new BonoboSelectorWidget widget, this contains
a list and a description pane for each component.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A pointer to the newly-created BonoboSelectorWidget widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="bonobo-selector-widget-set-interfaces"/>bonobo_selector_widget_set_interfaces ()</title>
<indexterm><primary>bonobo_selector_widget_set_interfaces</primary></indexterm><programlisting><link linkend="void">void</link>        bonobo_selector_widget_set_interfaces
                                            (<link linkend="BonoboSelectorWidget">BonoboSelectorWidget</link> *sel,
                                             const <link linkend="gchar">gchar</link> **interfaces_required);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sel</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>interfaces_required</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="bonobo-selector-widget-get-id"/>bonobo_selector_widget_get_id ()</title>
<indexterm><primary>bonobo_selector_widget_get_id</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      bonobo_selector_widget_get_id   (<link linkend="BonoboSelectorWidget">BonoboSelectorWidget</link> *sel);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sel</parameter>&nbsp;:</term>
<listitem><simpara> A BonoboSelectorWidget widget.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A newly-allocated string containing the ID of the
currently-selected CORBA server (i.e., the corba server whose name
is highlighted in the list).  The user of this function is
responsible for freeing this. It will give an oaf iid back.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="bonobo-selector-widget-get-name"/>bonobo_selector_widget_get_name ()</title>
<indexterm><primary>bonobo_selector_widget_get_name</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      bonobo_selector_widget_get_name (<link linkend="BonoboSelectorWidget">BonoboSelectorWidget</link> *sel);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sel</parameter>&nbsp;:</term>
<listitem><simpara> A BonoboSelectorWidget widget.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A newly-allocated string containing the name of the
currently-selected CORBA server (i.e., the corba server whose name
is highlighted in the list).  The user of this function is
responsible for freeing this.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="bonobo-selector-widget-get-description"/>bonobo_selector_widget_get_description ()</title>
<indexterm><primary>bonobo_selector_widget_get_description</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      bonobo_selector_widget_get_description
                                            (<link linkend="BonoboSelectorWidget">BonoboSelectorWidget</link> *sel);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sel</parameter>&nbsp;:</term>
<listitem><simpara> A BonoboSelectorWidget widget.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A newly-allocated string containing the description of the
currently-selected CORBA server (i.e., the corba server whose name
is highlighted in the list).  The user of this function is
responsible for freeing this.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
