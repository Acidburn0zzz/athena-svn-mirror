<refentry id="libbonoboui-bonobo-property-control">
<refmeta>
<refentrytitle>bonobo-property-control</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBBONOBOUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>bonobo-property-control</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<anchor id="BonoboPropertyControl"/>
<synopsis>



struct      <link linkend="BonoboPropertyControl-struct">BonoboPropertyControl</link>;
struct      <link linkend="BonoboPropertyControlPrivate">BonoboPropertyControlPrivate</link>;
#define     <link linkend="BONOBO-PROPERTY-CONTROL-CHANGED-CAPS">BONOBO_PROPERTY_CONTROL_CHANGED</link>
<link linkend="BonoboControl">BonoboControl</link>* (<link linkend="BonoboPropertyControlGetControlFn">*BonoboPropertyControlGetControlFn</link>)
                                            (<link linkend="BonoboPropertyControl">BonoboPropertyControl</link> *control,
                                             <link linkend="int">int</link> page_number,
                                             <link linkend="void">void</link> *closure);
struct      <link linkend="BonoboPropertyControlClass">BonoboPropertyControlClass</link>;
<link linkend="BonoboPropertyControl">BonoboPropertyControl</link>* <link linkend="bonobo-property-control-construct">bonobo_property_control_construct</link>
                                            (<link linkend="BonoboPropertyControl">BonoboPropertyControl</link> *property_control,
                                             <link linkend="BonoboEventSource">BonoboEventSource</link> *event_source,
                                             <link linkend="BonoboPropertyControlGetControlFn">BonoboPropertyControlGetControlFn</link> get_fn,
                                             <link linkend="int">int</link> num_pages,
                                             <link linkend="void">void</link> *closure);
<link linkend="BonoboPropertyControl">BonoboPropertyControl</link>* <link linkend="bonobo-property-control-new-full">bonobo_property_control_new_full</link>
                                            (<link linkend="BonoboPropertyControlGetControlFn">BonoboPropertyControlGetControlFn</link> get_fn,
                                             <link linkend="int">int</link> num_pages,
                                             <link linkend="BonoboEventSource">BonoboEventSource</link> *event_source,
                                             <link linkend="void">void</link> *closure);
<link linkend="BonoboPropertyControl">BonoboPropertyControl</link>* <link linkend="bonobo-property-control-new">bonobo_property_control_new</link>
                                            (<link linkend="BonoboPropertyControlGetControlFn">BonoboPropertyControlGetControlFn</link> get_fn,
                                             <link linkend="int">int</link> num_pages,
                                             <link linkend="void">void</link> *closure);
<link linkend="void">void</link>        <link linkend="bonobo-property-control-changed">bonobo_property_control_changed</link> (<link linkend="BonoboPropertyControl">BonoboPropertyControl</link> *property_control,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="BonoboEventSource">BonoboEventSource</link>* <link linkend="bonobo-property-control-get-event-source">bonobo_property_control_get_event_source</link>
                                            (<link linkend="BonoboPropertyControl">BonoboPropertyControl</link> *property_control);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="BonoboObject">BonoboObject</link>
         +----BonoboPropertyControl
</synopsis>

</refsect1>






<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="BonoboPropertyControl-action">action</link>&quot;    <link linkend="void">void</link>        user_function      (<link linkend="BonoboPropertyControl">BonoboPropertyControl</link> *bonobopropertycontrol,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="BonoboPropertyControl-struct"/>struct BonoboPropertyControl</title>
<indexterm><primary>BonoboPropertyControl</primary></indexterm><programlisting>struct BonoboPropertyControl;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboPropertyControlPrivate"/>struct BonoboPropertyControlPrivate</title>
<indexterm><primary>BonoboPropertyControlPrivate</primary></indexterm><programlisting>struct BonoboPropertyControlPrivate;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BONOBO-PROPERTY-CONTROL-CHANGED-CAPS"/>BONOBO_PROPERTY_CONTROL_CHANGED</title>
<indexterm><primary>BONOBO_PROPERTY_CONTROL_CHANGED</primary></indexterm><programlisting>#define BONOBO_PROPERTY_CONTROL_CHANGED "Bonobo::PropertyControl_changed"
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="BonoboPropertyControlGetControlFn"/>BonoboPropertyControlGetControlFn ()</title>
<indexterm><primary>BonoboPropertyControlGetControlFn</primary></indexterm><programlisting><link linkend="BonoboControl">BonoboControl</link>* (*BonoboPropertyControlGetControlFn)
                                            (<link linkend="BonoboPropertyControl">BonoboPropertyControl</link> *control,
                                             <link linkend="int">int</link> page_number,
                                             <link linkend="void">void</link> *closure);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>control</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>page_number</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>closure</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="BonoboPropertyControlClass"/>struct BonoboPropertyControlClass</title>
<indexterm><primary>BonoboPropertyControlClass</primary></indexterm><programlisting>struct BonoboPropertyControlClass {

	BonoboObjectClass parent_class;

	POA_Bonobo_PropertyControl__epv epv;

	gpointer dummy[4];

	void (* action) (BonoboPropertyControl *property_control, 
			 Bonobo_PropertyControl_Action action);
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="bonobo-property-control-construct"/>bonobo_property_control_construct ()</title>
<indexterm><primary>bonobo_property_control_construct</primary></indexterm><programlisting><link linkend="BonoboPropertyControl">BonoboPropertyControl</link>* bonobo_property_control_construct
                                            (<link linkend="BonoboPropertyControl">BonoboPropertyControl</link> *property_control,
                                             <link linkend="BonoboEventSource">BonoboEventSource</link> *event_source,
                                             <link linkend="BonoboPropertyControlGetControlFn">BonoboPropertyControlGetControlFn</link> get_fn,
                                             <link linkend="int">int</link> num_pages,
                                             <link linkend="void">void</link> *closure);</programlisting>
<para>
Initialises the BonoboPropertyControl object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property_control</parameter>&nbsp;:</term>
<listitem><simpara> A BonoboPropertyControl object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event_source</parameter>&nbsp;:</term>
<listitem><simpara> A BonoboEventSource object that will be aggregated onto the
property control.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>get_fn</parameter>&nbsp;:</term>
<listitem><simpara> Creation routine.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>num_pages</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>closure</parameter>&nbsp;:</term>
<listitem><simpara> Data passed to closure routine.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The newly constructed BonoboPropertyControl.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="bonobo-property-control-new-full"/>bonobo_property_control_new_full ()</title>
<indexterm><primary>bonobo_property_control_new_full</primary></indexterm><programlisting><link linkend="BonoboPropertyControl">BonoboPropertyControl</link>* bonobo_property_control_new_full
                                            (<link linkend="BonoboPropertyControlGetControlFn">BonoboPropertyControlGetControlFn</link> get_fn,
                                             <link linkend="int">int</link> num_pages,
                                             <link linkend="BonoboEventSource">BonoboEventSource</link> *event_source,
                                             <link linkend="void">void</link> *closure);</programlisting>
<para>
Creates a BonoboPropertyControl object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>get_fn</parameter>&nbsp;:</term>
<listitem><simpara> The function to be called when the getControl method is called.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>num_pages</parameter>&nbsp;:</term>
<listitem><simpara> The number of pages this property control has.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event_source</parameter>&nbsp;:</term>
<listitem><simpara> The event source to use to emit events on.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>closure</parameter>&nbsp;:</term>
<listitem><simpara> The data to be passed into the <parameter>get_fn</parameter> routine.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A pointer to a newly created BonoboPropertyControl object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="bonobo-property-control-new"/>bonobo_property_control_new ()</title>
<indexterm><primary>bonobo_property_control_new</primary></indexterm><programlisting><link linkend="BonoboPropertyControl">BonoboPropertyControl</link>* bonobo_property_control_new
                                            (<link linkend="BonoboPropertyControlGetControlFn">BonoboPropertyControlGetControlFn</link> get_fn,
                                             <link linkend="int">int</link> num_pages,
                                             <link linkend="void">void</link> *closure);</programlisting>
<para>
Creates a BonoboPropertyControl object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>get_fn</parameter>&nbsp;:</term>
<listitem><simpara> The function to be called when the getControl method is called.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>num_pages</parameter>&nbsp;:</term>
<listitem><simpara> The number of pages this property control has.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>closure</parameter>&nbsp;:</term>
<listitem><simpara> The data to be passed into the <parameter>get_fn</parameter> routine
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A pointer to a newly created BonoboPropertyControl object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="bonobo-property-control-changed"/>bonobo_property_control_changed ()</title>
<indexterm><primary>bonobo_property_control_changed</primary></indexterm><programlisting><link linkend="void">void</link>        bonobo_property_control_changed (<link linkend="BonoboPropertyControl">BonoboPropertyControl</link> *property_control,
                                             <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
Tells the server that a value in the property control has been changed,
and that it should indicate this somehow.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property_control</parameter>&nbsp;:</term>
<listitem><simpara> The BonoboPropertyControl that has changed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&nbsp;:</term>
<listitem><simpara> An optional CORBA_Environment for exception handling. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="bonobo-property-control-get-event-source"/>bonobo_property_control_get_event_source ()</title>
<indexterm><primary>bonobo_property_control_get_event_source</primary></indexterm><programlisting><link linkend="BonoboEventSource">BonoboEventSource</link>* bonobo_property_control_get_event_source
                                            (<link linkend="BonoboPropertyControl">BonoboPropertyControl</link> *property_control);</programlisting>
<para>
Returns the BonoboEventSource that <parameter>property_control</parameter> uses.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>property_control</parameter>&nbsp;:</term>
<listitem><simpara> The BonoboPropertyControl.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A BonoboEventSource.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="BonoboPropertyControl-action"/>The &quot;action&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="BonoboPropertyControl">BonoboPropertyControl</link> *bonobopropertycontrol,
                                            <link linkend="gint">gint</link> arg1,
                                            <link linkend="gint">gint</link> arg2,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>bonobopropertycontrol</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara>

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
