/* 
 * (c) Copyright 1989, 1990, 1991, 1992, 1993, 1994 OPEN SOFTWARE FOUNDATION, INC. 
 * ALL RIGHTS RESERVED 
*/ 
/* 
 * Motif Release 1.2.4
*/ 
XCOMM   $RCSfile: Motif.tmpl,v $ $Revision: 1.2 $ $Date: 1999-01-30 03:43:13 $

/* Include AFTER Project.tmpl */

/* Redefining MKDIRHIER if necessary			*/
/* It should go away if the definition of MKDIRHIER	*/
/* is protected by #ifndef in Project.tmpl		*/

#ifdef MkDirHier
     MKDIRHIER	= MkDirHier
#endif

#ifdef AUTOMATION
#ifndef Automation
#define Automation 	YES
#endif
#else
#define NO_AUTOMATION
#endif

#ifdef USE_VISTACC
#ifndef UseVista
#define UseVista
#endif
#ifndef CATCMD
#define CATCMD cat
#endif
#endif

#ifdef USE_PURIFY
#ifndef UsePurify
#define UsePurify
#endif
#endif

#ifdef DEBUG_GEOMETRY
#ifndef DebugGeometry
#define DebugGeometry YES
#endif
#endif

/*  Don't collide with the X installed flag */

#ifndef _MUse
#ifdef UseInstalledMotif
#define _MUse(a,b) a
#else
#define _MUse(a,b) b
#endif
#endif

#ifndef _MUseCat
#if __STDC__ && !defined(UnixCpp)
#ifdef UseInstalledMotif
#define _MUseCat(a,b,c) a##c
#else
#define _MUseCat(a,b,c) b##c
#endif
#else
#ifdef UseInstalledMotif
#define _MUseCat(a,b,c) a/**/c
#else
#define _MUseCat(a,b,c) b/**/c
#endif
#endif
#endif

/* As default Motif is in X tree */
#ifndef MTop
#define MTop $(TOP)
#endif

/* Change this to point to your X tree */
#ifndef XTop
#define XTop $(TOP)
#endif

#ifndef MotifDefines
#define MotifDefines /**/
#endif

#ifndef XmDefines
#define XmDefines /**/
#endif

#ifndef LibraryDefines
#define LibraryDefines StandardDefines MotifDefines
#endif

/* To compile without SHAPE extension, set this to -DNO_SHAPE */
#ifndef MwmDefines
#define MwmDefines /**/
#endif

#ifndef UilFlags
#define UilFlags /**/
#endif

#ifndef TestDefines
#define TestDefines -DMOTIF1_2 -DX11R5
#endif

#ifndef AutoDefines
#if Automation
#define AutoDefines -DAUTOMATION
#else
#define AutoDefines /**/
#endif
#endif

#ifndef AutoIncludes
#if Automation
#define AutoIncludes -I$(AUTOSCRIPTSRC)
#else
#define AutoIncludes /**/
#endif
#endif

#ifdef UsePurify
#define PurifyFilesToClean *.pure_linkinfo *.pure_hardlink
#else
#define PurifyFilesToClean
#endif
#if Automation
#define TestExtraFilesToClean *.Dat *.Scr PurifyFilesToClean
#else 
#define TestExtraFilesToClean *.Dat PurifyFilesToClean
#endif 

#ifndef UsrIncDir
#define UsrIncDir IncRoot
#endif

#ifndef XBuildIncRoot
#define XBuildIncRoot $(XTOP)
#endif

/* Place to install .uid files */
#ifndef UidDir
#define UidDir $(LIBDIR)/uid
#endif

#ifndef XmExtraLibraries
#define XmExtraLibraries /**/
#endif

#ifndef YaccFlags
#define YaccFlags /**/
#endif

#ifndef SharedLibXm
#define SharedLibXm HasSharedLibraries
#endif
#ifndef SharedLibMrm
#define SharedLibMrm HasSharedLibraries
#endif
#ifndef SharedLibUil
#define SharedLibUil HasSharedLibraries
#endif
#ifndef SharedLibACommon
#define SharedLibACommon HasSharedLibraries
#endif
#ifndef SharedLibScript
#define SharedLibScript HasSharedLibraries
#endif
#ifndef SharedLibUtil
#define SharedLibUtil HasSharedLibraries
#endif
#ifndef SharedLibCreate
#define SharedLibCreate HasSharedLibraries
#endif
#ifndef SharedLibVisual
#define SharedLibVisual HasSharedLibraries
#endif
#ifndef SharedLibSynth
#define SharedLibSynth HasSharedLibraries
#endif
#ifndef SharedLibMCommon
#define SharedLibMCommon HasSharedLibraries
#endif

#ifndef NormalLibXm
#define NormalLibXm (!SharedLibXm | ForceNormalLib)
#endif
#ifndef NormalLibMrm
#define NormalLibMrm (!SharedLibMrm | ForceNormalLib)
#endif
#ifndef NormalLibUil
#define NormalLibUil (!SharedLibUil | ForceNormalLib)
#endif
#ifndef NormalLibACommon
#define NormalLibACommon (!SharedLibACommon | ForceNormalLib)
#endif
#ifndef NormalLibScript
#define NormalLibScript (!SharedLibScript | ForceNormalLib)
#endif
#ifndef NormalLibUtil
#define NormalLibUtil (!SharedLibUtil | ForceNormalLib)
#endif
#ifndef NormalLibCreate
#define NormalLibCreate (!SharedLibCreate | ForceNormalLib)
#endif
#ifndef NormalLibVisual
#define NormalLibVisual (!SharedLibVisual | ForceNormalLib)
#endif
#ifndef NormalLibSynth
#define NormalLibSynth (!SharedLibSynth | ForceNormalLib)
#endif
#ifndef NormalLibMCommon
#define NormalLibMCommon (!SharedLibMCommon | ForceNormalLib)
#endif

#ifndef SharedXmRev
#define SharedXmRev 1.2
#endif
#ifndef SharedMrmRev
#define SharedMrmRev 1.2
#endif
#ifndef SharedUilRev
#define SharedUilRev 1.2
#endif
#ifndef SharedACommonRev
#define SharedACommonRev 1.2
#endif
#ifndef SharedScriptRev
#define SharedScriptRev 1.2
#endif
#ifndef SharedUtilRev
#define SharedUtilRev 1.2
#endif
#ifndef SharedCreateRev
#define SharedCreateRev 1.2
#endif
#ifndef SharedVisualRev
#define SharedVisualRev 1.2
#endif
#ifndef SharedSynthRev
#define SharedSynthRev 1.2
#endif
#ifndef SharedMCommonRev
#define SharedMCommonRev 1.2
#endif

#if HasSharedLibraries
          SOXMREV = SharedXmRev
         SOMRMREV = SharedMrmRev
         SOUILREV = SharedUilRev
     SOACOMMONREV = SharedACommonRev
      SOSCRIPTREV = SharedScriptRev
        SOUTILREV = SharedUtilRev
      SOCREATEREV = SharedCreateRev
      SOVISUALREV = SharedVisualRev
       SOSYNTHREV = SharedSynthRev
     SOMCOMMONREV = SharedMCommonRev
#endif

#ifndef XmClientLibs
#define XmClientLibs $(XMLIB) $(XTOOLLIB) $(XLIB) $(XMEXTRA_LIBS)
#endif
#ifndef XmClientDepLibs
#define XmClientDepLibs $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB)
#endif

#ifndef MrmClientLibs 
#define MrmClientLibs $(MRESOURCELIB) $(XMLIB) $(XTOOLLIB) $(XLIB) $(XMEXTRA_LIBS)
#endif
#ifndef MrmClientDepLibs
#define MrmClientDepLibs $(DEPMRESOURCELIB) $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB)
#endif

/*
 * BuildClientLibs should be set to a version of MrmClientLibs that can be
 * used to build uil and wmldbcreate.  On the initial build, MrmClientLibs
 * may refer to shared libraries that may not be usable, since some systems
 * require a separate install step.  The default is to use ".a" files
 * initially, or the standard libraries if UseInstalledMotif is YES.
 */
#ifndef BuildClientLibs
#ifdef UseInstalledMotif
#define BuildClientLibs MrmClientLibs
#else
#define BuildClientLibs $(MRESOURCESRC)/libMrm.a $(MWIDGETSRC)/libXm.a $(XTOOLLIB) $(XLIB) $(XMEXTRA_LIBS)
#undef NormalLibXm
#undef NormalLibMrm
#define NormalLibXm YES
#define NormalLibMrm YES
#endif
#endif
#ifndef BuildClientDepLibs
#ifdef UseInstalledMotif
#define BuildClientDepLibs MrmClientDepLibs
#else
#define BuildClientDepLibs $(MRESOURCESRC)/libMrm.a $(MWIDGETSRC)/libXm.a $(DEPXTOOLLIB) $(DEPXLIB)
#endif
#endif

#ifndef UilClientLibs
#define UilClientLibs $(UILLIB) $(MRESOURCELIB) $(XMLIB) $(XTOOLLIB) $(XLIB) $(XMEXTRA_LIBS)
#endif
#ifndef UilClientDepLibs
#define UilClientDepLibs $(DEPUILLIB) $(DEPMRESOURCELIB) $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB)
#endif

#ifndef TestClientLibs
#define TestClientLibs $(PURIFYLIBS) $(TESTMALFNS) $(TESTCOMLIB) \
		$(AUTOSCRIPTLIB) $(AUTOUTILLIB) \
		$(AUTOCREATELIB) $(AUTOVISUALLIB) $(AUTOSYNTHLIB) \
	$(XMLIB) $(TESTMALLOCLIB) $(TESTGEOLIB) $(XTOOLLIB) $(XLIB) \
	$(AUTOEXTRALIBS) $(XMEXTRA_LIBS)
#endif
#ifndef TestUilClientLibs
#define TestUilClientLibs $(PURIFYLIBS) $(TESTMALFNS) $(TESTCOMLIB) \
		$(AUTOSCRIPTLIB) $(AUTOUTILLIB) \
		$(AUTOCREATELIB) $(AUTOVISUALLIB) $(AUTOSYNTHLIB) \
	$(UILLIB) $(MRESOURCELIB) $(XMLIB) $(TESTMALLOCLIB) $(TESTGEOLIB) \
	$(XTOOLLIB) $(XLIB) $(AUTOEXTRALIBS) $(XMEXTRA_LIBS)
#endif
#ifndef TestClientDepLibs
#define TestClientDepLibs XmClientDepLibs
#endif
#ifndef TestUilClientDepLibs
#define TestUilClientDepLibs UilClientDepLibs
#endif

/* For separate Motif and X trees */

              XTOP = XTop
              MTOP = MTop
     XBUILDINCROOT = XBuildIncRoot        /* base of X build loc */
      XBUILDINCDIR = $(XBUILDINCROOT)/X11
#if defined(UseInstalled) && !defined(UseInstalledMotif)
          IRULESRC = $(CONFIGSRC)
         IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)
#endif


/* Redefine X locations */

         CLIENTSRC = $(XTOP)/clients
           DEMOSRC = $(XTOP)/demos
            LIBSRC = $(XTOP)/lib
           FONTSRC = $(XTOP)/fonts
        INCLUDESRC = $(XTOP)/X11
         SERVERSRC = $(XTOP)/server
           UTILSRC = $(XTOP)/util
        EXAMPLESRC = $(XTOP)/examples
            DOCSRC = $(XTOP)/doc
            RGBSRC = $(XTOP)/rgb
      EXTENSIONSRC = $(XTOP)/extensions

#ifdef UseInstalledMotif
#if AlternateIncRoot
      TOP_INCLUDES = -I$(INCROOT)		/* All installed; alt. root */
#endif
      UIL_INCLUDES = -I$(USRINCDIR)/uil
#else
#ifdef UseInstalled
#if AlternateIncRoot
      TOP_INCLUDES = -I$(MINCLUDESRC) -I/usr/X11R6/include
#else
      TOP_INCLUDES = -I$(MINCLUDESRC)		/* X installed; std. root */
#endif
#else
      TOP_INCLUDES = -I$(MINCLUDESRC) -I$(XTOP)	/* X and Motif source */
#endif
      UIL_INCLUDES = -I$(UILSRC)
#endif

      USRINCDIR = UsrIncDir
         UIDDIR = UidDir
        TESTSRC = $(MTOP)/tests
        TESTLIB = $(TESTSRC)/lib
  GENERALSRCLIB = $(TESTSRC)/General/lib
  GENERALSRCBIN = $(TESTSRC)/General/bin
   MANUALSRCLIB = $(TESTSRC)/Manual/lib
   MANUALSRCBIN = $(TESTSRC)/Manual/bin
     AUTOSRCLIB = $(TESTSRC)/Auto/lib
     AUTOSRCBIN = $(TESTSRC)/Auto/bin
       COMMONPP = $(GENERALSRCBIN)/Commonpp
         GENRUN = $(GENERALSRCBIN)/Genrun
         MANRUN = $(GENERALSRCBIN)/Manrun
#ifdef DebugLib
  TESTMALLOCSRC = $(GENERALSRCLIB)/Malloc
#endif
#ifdef DebugGeometry
     TESTGEOSRC = $(TESTLIB)/Geometry
#endif
#ifdef Automation
     TESTCOMSRC = $(AUTOSRCLIB)/Common
  AUTOSCRIPTSRC = $(AUTOSRCLIB)/Script
   AUTOSYNTHSRC = $(AUTOSRCLIB)/Synth
  AUTOCREATESRC = $(AUTOSRCLIB)/Create
  AUTOVISUALSRC = $(AUTOSRCLIB)/Visual
    AUTOUTILSRC = $(AUTOSRCLIB)/Util
  AUTOEXTRALIBS = -ll -ly -lm
#else
     TESTCOMSRC = $(MANUALSRCLIB)/Common
#endif

/* MTOOLKITSRC  should be removed */
    MTOOLKITSRC = $(TOOLKITSRC)
    MINCLUDESRC = $(MTOP)/X11
        MLIBSRC = $(MTOP)/lib
     MCLIENTSRC = $(MTOP)/clients
       MDEMOSRC = $(MTOP)/demos
     MWIDGETSRC = $(MLIBSRC)/Xm
   MRESOURCESRC = $(MLIBSRC)/Mrm
         UILSRC = $(MCLIENTSRC)/uil

            UIL = _MUse(uil,$(UILSRC)/uil)
         DEPUIL = _MUseCat($(BINDIR),$(UILSRC),/uil)

   XMEXTRA_LIBS = XmExtraLibraries

#ifndef UnsharedLibReferences
#define UnsharedLibReferences(varname,libname,libsource) \
Concat(DEP,varname) = _LibUseCat($(USRLIBDIR)/lib,libsource/lib,libname.a) @@\
varname = LoaderLibPrefix _LibUse(Concat(-l,libname),$(Concat(DEP,varname)))
#endif
#ifndef SharedLibReferences
#define SharedLibReferences(varname,libname,libsource,rev) \
Concat(DEP,varname) = /**/                                            @@\
varname = LoaderLibPrefix _LibUse(/**/,Concat(-L,libsource)) Concat(-l,libname)
#endif

#undef _LibUse
#undef _LibUseCat
#define _LibUse _MUse
#define _LibUseCat _MUseCat

#if SharedLibXm
SharedLibReferences(XMLIB,Xm,$(MWIDGETSRC),$(SOXMREV))
#else
UnsharedLibReferences(XMLIB,Xm,$(MWIDGETSRC))
#endif

#if SharedLibMrm
SharedLibReferences(MRESOURCELIB,Mrm,$(MRESOURCESRC),$(SOMRMREV))
#else
UnsharedLibReferences(MRESOURCELIB,Mrm,$(MRESOURCESRC))
#endif

#if SharedLibUil
SharedLibReferences(UILLIB,Uil,$(UILSRC),$(SOUILREV))
#else
UnsharedLibReferences(UILLIB,Uil,$(UILSRC))
#endif

#ifdef DebugLib
     TESTMALFNS = $(TESTMALLOCSRC)/MallocInit.o $(TESTMALLOCSRC)/MallocExit.o
UnsharedLibReferences(TESTMALLOCLIB,Malloc,$(TESTMALLOCSRC))
#endif

#ifdef DebugGeometry
UnsharedLibReferences(TESTGEOLIB,XtGeo,$(TESTGEOSRC))
#endif


#ifdef Automation

#if SharedLibACommon
SharedLibReferences(TESTCOMLIB,Common,$(TESTCOMSRC),$(SOACOMMONREV))
#else
UnsharedLibReferences(TESTCOMLIB,Common,$(TESTCOMSRC))
#endif

#if SharedLibScript
SharedLibReferences(AUTOSCRIPTLIB,Script,$(AUTOSCRIPTSRC),$(SOSCRIPTREV))
#else
UnsharedLibReferences(AUTOSCRIPTLIB,Script,$(AUTOSCRIPTSRC))
#endif

#if SharedLibSynth
SharedLibReferences(AUTOSYNTHLIB,Synth,$(AUTOSYNTHSRC),$(SOSYNTHREV))
#else
UnsharedLibReferences(AUTOSYNTHLIB,Synth,$(AUTOSYNTHSRC))
#endif

#if SharedLibCreate
SharedLibReferences(AUTOCREATELIB,Create,$(AUTOCREATESRC),$(SOCREATEREV))
#else
UnsharedLibReferences(AUTOCREATELIB,Create,$(AUTOCREATESRC))
#endif

#if SharedLibVisual
SharedLibReferences(AUTOVISUALLIB,Visual,$(AUTOVISUALSRC),$(SOVISUALREV))
#else
UnsharedLibReferences(AUTOVISUALLIB,Visual,$(AUTOVISUALSRC))
#endif

#if SharedLibUtil
SharedLibReferences(AUTOUTILLIB,Util,$(AUTOUTILSRC),$(SOUTILREV))
#else
UnsharedLibReferences(AUTOUTILLIB,Util,$(AUTOUTILSRC))
#endif

#else   /* Manual */

#if SharedLibMCommon
SharedLibReferences(TESTCOMLIB,Common,$(TESTCOMSRC),$(SOMCOMMONREV))
#else
UnsharedLibReferences(TESTCOMLIB,Common,$(TESTCOMSRC))
#endif

#endif  /* Automation */



#ifdef UsePurify
     PURIFYLIBS = $(PURIFYHOME)/purify_stubs.a
#endif
  LINTMRESOURCE = $(MRESOURCESRC)/libMrm.a
LINTXMWIDGETLIB = $(MWIDGETSRC)/llib-l/Xm.ln
     LINTXMTOOL = $(MTOOLKITSRC)/llib-lXt.ln
     LINTUILLIB = $(UILSRC)/llib-lUil.ln

      YACCFLAGS = YaccFlags
       UILFLAGS = UilFlags

         RM_CMD = $(RM) FilesToClean ExtraFilesToClean TestExtraFilesToClean

    STD_DEFINES = StandardDefines MotifDefines

#if NeedDefaultDepLibs
/*
 */
#if HasSharedLibraries || UseInstalled
        DEPLIBS = $(DEPXMLIB) $(DEPXTOOLLIB) $(DEPXLIB)
#else
        DEPLIBS = $(LOCAL_LIBRARIES)
#endif
        DEPLIBS1 = $(DEPLIBS)
        DEPLIBS2 = $(DEPLIBS)
        DEPLIBS3 = $(DEPLIBS)
#endif /* NeedDefaultDepLibs */

