XCOMM (c) Copyright 1989, 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
XCOMM ALL RIGHTS RESERVED 
XCOMM 
XCOMM Motif Release 1.2.2
XCOMM $Header: /afs/dev.mit.edu/source/repository/third/motif/config/hpLib.rules,v 1.1.1.1 1999-01-30 03:16:31 ghudson Exp $

#ifndef ForceNormalLib
#define ForceNormalLib YES
#endif

#ifndef HasSharedLibraries
#if OSMajorVersion >= 8
#define HasSharedLibraries YES
#else
#define HasSharedLibraries NO
#endif
#endif
#ifndef SharedDataSeparation
#define SharedDataSeparation NO
#endif
#ifndef SharedCodeDef
#define SharedCodeDef /**/ 
#endif
#ifndef SharedLibraryDef
#define SharedLibraryDef /**/
#endif
#ifndef ShLibIncludeFile
#define ShLibIncludeFile <hpLib.tmpl>
#endif
#ifndef SharedLibraryLoadFlags
#define SharedLibraryLoadFlags -b
#endif
#ifndef PositionIndependentCFlags
#define PositionIndependentCFlags +z
#endif
#ifndef InstShLibFlags
#define InstShLibFlags -m 0555
#endif


/* library rules */

/* This rule helps write the next two. It encapsulates the whole
 * building process.
 */

#ifndef SharedLibraryTargetRules
#define SharedLibraryTargetRules(slname,solist,down,up)	$(RM) slname~	@@\
	(cd down; \							@@\
	$(LD) -o up/slname~  $(SHLIBLDFLAGS) solist)			@@\
	$(RM) slname							@@\
	$(MV) slname~ slname
#endif /* SharedLibraryTargetRules */

/* This rule is exactly like SharedLibraryTarget except lib is not
 * prepended to the library name.
 */
# ifndef LibLessSharedLibraryTarget
# define LibLessSharedLibraryTarget(libname,rev,solist,down,up)		@@\
AllTarget(libname.sl)							@@\
									@@\
libname.sl:  solist							@@\
SharedLibraryTargetRules($@,solist,down,up)				@@\
									@@\
Concat(load,libname.sl):						@@\
SharedLibraryTargetRules(libname.sl,solist,down,up)			@@\
									@@\
clean::									@@\
	$(RM) libname.sl

# endif  /* LibLessSharedLibraryTarget */

# ifndef SharedLibraryTarget
# define SharedLibraryTarget(libname,rev,solist,down,up)		@@\
AllTarget(Concat(lib,libname.sl))					@@\
									@@\
Concat(lib,libname.sl):  solist						@@\
SharedLibraryTargetRules($@,solist,down,up)				@@\
									@@\
Concat(loadlib,libname.sl):						@@\
SharedLibraryTargetRules(Concat(lib,libname.sl),solist,down,up)		@@\
									@@\
clean::									@@\
	$(RM) Concat(lib,libname.sl)

# endif  /* SharedLibraryTarget */

/*
 * InstallSharedLibrary - generate rules to install the shared library.
 */
#ifndef InstallSharedLibrary
#define InstallSharedLibrary(libname,rev,dest)				@@\
	install:: Concat(lib,libname.sl)				@@\
	MakeDir($(DESTDIR)dest)						@@\
	$(INSTALL) -c $(INSTSHLIBFLAGS) Concat(lib,libname.sl) $(DESTDIR)dest	@@\

#endif /* InstallSharedLibrary */


/* library rules */
/* use null rule for DataTarget */
# ifndef SharedLibraryDataTarget
# define SharedLibraryDataTarget(libname,rev,solist)  /**/ 
#endif
# ifndef InstallSharedLibraryData
# define InstallSharedLibraryData(libname,rev,solist)  /**/ 
#endif

/*
 * If we use shared libraries, then when installing, relink the program with
 * the (hopefully) already installed shared libraries.
 *
 * From: kent@manzi.unx.sas.com (Paul Kent)
 * original: tml@tik.vtt.fi (Tor Lillqvist)
 * Add TOPDIR and CURDIR settings, and re-order some logic: dbrooks@osf.org.
 */
#if HasSharedLibraries
#if !UseInstalled
#define InstallProgramWithFlags(program,dest,flags)			@@\
install:: program							@@\
	if [ program = "imake" ]; then exit 0; else $(RM) program; fi	@@\
	$(IMAKE_CMD) -DUseInstalled -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR) -eMakefile.install program	@@\
	MakeDir($(DESTDIR)dest)						@@\
	$(INSTALL) -c $(INSTPGMFLAGS) flags program $(DESTDIR)dest	@@\
	$(RM) Makefile.install
#endif
#endif
