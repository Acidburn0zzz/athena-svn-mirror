XCOMM 
XCOMM (c) Copyright 1989, 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
XCOMM ALL RIGHTS RESERVED 
XCOMM 
XCOMM 
XCOMM Motif Release 1.2.5
XCOMM @OSF_COPYRIGHT@
XCOMM 
XCOMM HISTORY
XCOMM 
XCOMM   $RCSfile: Imakefile,v $ $Revision: 1.2 $ $Date: 1999-01-30 03:47:18 $
#define DoNormalLib NormalLibXm
#define DoSharedLib SharedLibXm
#define DoDebugLib DebugLibXm
#define DoProfileLib ProfileLibXm
#include <Library.tmpl>

#if !defined(SunArchitecture) 
MKCATTOOL = ./mkcatdefs/mkcatdefs
#endif

#ifdef RsArchitecture
REQUIREDLIBS = -lXt -lX11
#endif

#define IHaveSubdirs
#define PassCDebugFlags 'CDEBUGFLAGS=$(CDEBUGFLAGS)'

SUBDIRS = BC_1_1

    INCLUDES = -I.

INSTALLFLAGS = $(INSTINCFLAGS)

    LINTLIBS = $(LINTXLIB) $(LINTXTOOL)

SRCH_DEFINES = -DLIBDIR=\"$(LIBDIR)\" -DINCDIR=\"$(INCDIR)\"
BINDINGS_DEF = -DXMBINDDIR_FALLBACK=\"$(USRLIBDIR)/Xm/bindings\"

/*** Begin non-OSF stuff ***/

#if 0
#SUBDIRS = bindings mkcatdefs
SUBDIRS = mkcatdefs

MakeSubdirs($(SUBDIRS))
DependSubdirs($(SUBDIRS))
#endif
/* Commenting out the following will remove CDE specific visuals and
 * behavior
 * Notes: To use size of XmString as in OSF/Motif 1.2.2. Add the flag
 *        -DXM_STRINGS_1_2_2_STATE
 */
 CDE_DEFINES = -DUSE_COLOR_OBJECT $(MOTIF_MSG_DEF) \
	       -DCDE_RESOURCES -DCDE_VISUAL -DCDE_MENU_BTN \
	       -DSUPPORT_ZERO_WIDTH -DCDE_COLOR_CALC \
	       -DCDE_FILESB -DCDE_TAB -DCDE_BIND -DCDE_INTEGRATE \
	       -DCDE_DRAG_ICON -DCDE_NO_DRAG_FROM_LABELS

     DEFINES = -DXT_HAS_TRANS_FIX \
		-DNOT_SUPPORT_READDIR_R \
		$(CDE_DEFINES) \
		$(VENDOR_DEFINES) 

#if defined(HPArchitecture)
#if OSMajorVersion > 9
MOTIF_MSG_DEF = -DI18N_MSG
#else
MOTIF_MSG_DEF = 
#endif

EXTRA_CCOPTIONS = +ESlit
VENDOR_DEFINES = -DHP_MOTIF -DHAS_WIDECHAR_FUNCTIONS 

#define StrObsolete hpObsolete
#endif

#if defined(SunArchitecture) 
#if (OSMajorVersion > 4)
MOTIF_MSG_DEF = -DI18N_MSG 
VENDOR_DEFINES = -DSUN_MOTIF -DNO_REGCOMP -DNO_ALLOCA -DIC_PER_SHELL \
		 -DHAS_WIDECHAR_FUNCTIONS 

    /* override the definition LD for Sun */
    LD=$(CC)
    REQUIREDLIBS = $(ALL_LIBPATH) -lXt -lX11
#else
VENDOR_DEFINES = -DNOT_SUPPORT_READDIR_R -DSUN4_MOTIF
#endif
#endif

#if defined(USLArchitecture)
 MOTIF_MSG_DEF = -DI18N_MSG
VENDOR_DEFINES = -DNOVELL_MOTIF -DNO_REGCOMP -DNOT_SUPPORT_READDIR_R \
		 -DNEED_STRCASECMP -DHAS_WIDECHAR_FUNCTIONS
#endif

#if defined(RsArchitecture)
 MOTIF_MSG_DEF = -DI18N_MSG
VENDOR_DEFINES = -DIBM_MOTIF -UXT_HAS_TRANS_FIX -DIC_PER_SHELL \
		 -DHAS_WIDECHAR_FUNCTIONS 
#endif

#if defined(SCOArchitecture)
 MOTIF_MSG_DEF = -DI18N_MSG
VENDOR_DEFINES = -DNO_REGCOMP 
#endif

#if defined(LinuxArchitecture)
VENDOR_DEFINES = -UNOT_SUPPORT_READDIR_R -DHAS_MODERN_READDIR_R \
		 -DHAS_WIDECHAR_FUNCTIONS
#endif

/*** End non-OSF stuff ***/
LOCAL_HDRS = ColorObj.h	ColorObjP.h IconFile.h IconFileP.h 

LOCAL_SRCS = ColorObj.c DtHash.c IconFile.c \
	     XpmCrDataFI.c XpmCrDataFP.c XpmCrIFData.c \
	     XpmCreate.c XpmData.c XpmHashtable.c XpmMisc.c XpmParse.c \
	     XpmRdFToI.c XpmRgb.c XpmScan.c StrObsolete.c
LOCAL_OBJS = ColorObj.o DtHash.o IconFile.o \
	     XpmCrDataFI.o XpmCrDataFP.o XpmCrIFData.o \
	     XpmCreate.o XpmData.o XpmHashtable.o XpmMisc.o XpmParse.o \
	     XpmRdFToI.o XpmRgb.o XpmScan.o StrObsolete.o




HEADERS = $(LOCAL_HDRS) \
	ArrowB.h        ArrowBG.h       ArrowBGP.h      ArrowBP.h \
        BulletinB.h     BulletinBP.h    CacheP.h        CascadeB.h \
        CascadeBG.h     CascadeBGP.h    CascadeBP.h     Command.h \
        CommandP.h      CutPaste.h      CutPasteP.h     DialogS.h \
        DialogSP.h      DialogSEP.h     DragC.h         DragCP.h \
        DragDrop.h      DragIcon.h      DragIconP.h     DragOverS.h \
        DragOverSP.h    DropTransP.h    DropSMgr.h      DropSMgrP.h \
        DropTrans.h     DrawingA.h      DrawingAP.h     DrawnB.h \
        DrawnBP.h       FileSB.h        FileSBP.h       Form.h \
        FormP.h         Frame.h         FrameP.h        Label.h \
        LabelG.h        LabelGP.h       LabelP.h        List.h \
        ListP.h         MainW.h         MainWP.h        MenuShell.h \
        MenuShellP.h    MessageB.h      MessageBP.h     PanedW.h \
        PanedWP.h       PushB.h         PushBG.h        PushBGP.h \
        PushBP.h        RCUtilsP.h      RowColumn.h     RowColumnP.h \
        SashP.h         Scale.h         ScaleP.h        ScrollBar.h \
        ScrollBarP.h    ScrolledW.h     ScrolledWP.h    SelectioB.h \
        SelectioBP.h    SeparatoG.h     SeparatoGP.h    Separator.h \
        SeparatorP.h    TextF.h         TextFP.h        TextFSelP.h \
        TextSelP.h      Text.h          TextInP.h       TextOutP.h \
        TextP.h         TextStrSoP.h    ToggleB.h       ToggleBG.h \
        ToggleBGP.h     ToggleBP.h      Xm.h            XmP.h \
        BaseClassP.h    ManagerP.h      PrimitiveP.h    GadgetP.h \
        XmStrDefs.h     VaSimpleP.h     VirtKeys.h      VirtKeysP.h \
        ExtObjectP.h    Display.h       DisplayP.h      Screen.h \
        ScreenP.h       ShellEP.h       VendorS.h       VendorSP.h \
        VendorSEP.h     WorldP.h        DesktopP.h      AtomMgr.h \
        Protocols.h     ProtocolsP.h    MwmUtil.h       TransltnsP.h \
        RepType.h       XmosP.h         DrawP.h         TearOffP.h \
        TearOffBP.h     MenuUtilP.h     XmAll.h		

HEADERS2 = $(HEADERS) ImageCachI.h

SRCS1 = $(LOCAL_SRCS) \
	ArrowB.c        ArrowBG.c       BulletinB.c     CallbackI.c \
        CascadeB.c      CascadeBG.c     Command.c       CutPaste.c \
        Dest.c          DialogS.c       DialogSE.c      DragBS.c \
        DragC.c         DragOverS.c     DragICC.c       DragIcon.c \
        DragUnder.c     DrawingA.c      DrawnB.c        DropSMgr.c \
        DropSMgrI.c     DropTrans.c     ExtObject.c     FileSB.c \
        Form.c          Frame.c         Gadget.c        GadgetUtil.c \
        GeoUtils.c      ImageCache.c    Label.c         LabelG.c \
        List.c          MainW.c         MapEvents.c     MenuShell.c \
        MenuUtil.c      MessageB.c      PanedW.c        PushB.c \
        PushBG.c        ReadImage.c     Region.c        ResConvert.c \
        ResInd.c        RowColumn.c     RCUtils.c       Sash.c \
        Scale.c         ScrollBar.c     ScrolledW.c     SelectioB.c \
        SeparatoG.c     Separator.c     Simple.c        Text.c \
        TextIn.c        TextOut.c       TextStrSo.c     TextSel.c \
        ToggleB.c       ToggleBG.c      TrackLoc.c      UniqueEvnt.c \
        VaSimple.c      VirtKeys.c      Visual.c        XmString.c \
        XmStrDefs.c     TextF.c         TextFSel.c      AtomMgr.c \
        Cache.c         Protocols.c     Primitive.c     Manager.c \
        Traversal.c     TravAct.c       TraversalI.c    BaseClass.c \
        Desktop.c       Messages.c      Transltns.c     RepType.c \
        Xmos.c          Draw.c          TearOff.c       TearOffB.c \
        XmIm.c          GMUtils.c       Display.c       Screen.c \
        ShellE.c        VendorS.c       VendorSE.c      World.c \
        Obsolete.c      sharedlib.c	regexp.c

OBJS1 = $(LOCAL_OBJS) \
	ArrowB.o        ArrowBG.o       BulletinB.o     CallbackI.o \
        CascadeB.o      CascadeBG.o     Command.o       CutPaste.o \
        Dest.o          DragBS.o        DragC.o         DragICC.o \
        DragIcon.o      DragOverS.o     DragUnder.o     DrawingA.o \
        DrawnB.o        DropSMgr.o      DropSMgrI.o     DropTrans.o \
        FileSB.o        Form.o          Frame.o         Gadget.o \
        GadgetUtil.o    GeoUtils.o      ImageCache.o    Label.o \
        LabelG.o        List.o          MainW.o         MapEvents.o \
        MenuShell.o     MenuUtil.o      MessageB.o      PanedW.o \
        PushB.o         PushBG.o        ReadImage.o     Region.o \
        ResConvert.o    ResInd.o        RowColumn.o     RCUtils.o \
        Sash.o          Scale.o         ScrollBar.o     ScrolledW.o \
        SelectioB.o     SeparatoG.o     Separator.o     Simple.o \
        Text.o          TextIn.o        TextOut.o       TextStrSo.o \
        TextSel.o       ToggleB.o       ToggleBG.o      UniqueEvnt.o \
        Visual.o        XmString.o      XmStrDefs.o     TextF.o \
        TextFSel.o      AtomMgr.o       Cache.o         TrackLoc.o \
        Protocols.o     XmIm.o          GMUtils.o	regexp.o

OBJS2 = Primitive.o     Manager.o       DialogS.o       DialogSE.o \
        Traversal.o     TravAct.o       TraversalI.o    VaSimple.o \
        ExtObject.o     BaseClass.o     VirtKeys.o      Desktop.o \
        Messages.o      Transltns.o     RepType.o       Xmos.o \
        Draw.o          TearOff.o       TearOffB.o      Display.o \
        Screen.o        ShellE.o        VendorS.o       VendorSE.o \
        World.o         Obsolete.o

/*
 * Added for mkcatdefs Tool
 *
 */

#if 0
all:: XmMsgI.h
XmMsgI.h: Xm.msg
	$(RM) XmMsgI.h Xm.cat
	$(MKCATTOOL) Xm Xm.msg > Xm1.msg
	$(MV) Xm_msg.h XmMsgI.h
	echo "extern nl_catd Xm_catd;" >> XmMsgI.h
	gencat Xm.cat Xm1.msg
	$(RM) Xm1.msg
#endif


    SRCS = $(SRCS1)
    OBJS = $(OBJS1) $(OBJS2)

#if SharedDataSeparation
UNSHAREDOBJS = XmStrDefs.o sharedlib.o
#endif

LibraryObjectRule()

SpecialLibObjectRule(Xmos.o,$(ICONFIGFILES),$(SRCH_DEFINES))
SpecialLibObjectRule(VirtKeys.o,$(ICONFIGFILES),$(BINDINGS_DEF))

#if DoSharedLib && SharedDataSeparation
SpecialObjectRule(sharedlib.o,,$(SHLIBDEF))
#endif


#ifdef RsArchitecture
/*
 * These rules turn off optimization
 * on the IBM side.
 */
SpecialLibObjectRule(Draw.o,/**/,-qoptimize=1)
SpecialLibObjectRule(TextF.o,/**/,-qoptimize=1)
SpecialLibObjectRule(XmString.o,/**/,-qoptimize=1)
#endif

/* For install of developer's build environment */
LOCAL_BINSTALL_LIBDEST = lib
LOCAL_BINSTALL_INCLUDEDEST = include/Xm
LOCAL_BINSTALL_DTINCLUDEDEST = include/Dt

#if DoSharedLib
#if DoNormalLib
SharedLibraryTarget(Xm,$(SOXMREV),$(OBJS),shared,..)
#else
SharedLibraryTarget(Xm,$(SOXMREV),$(OBJS),.,.)
#endif
InstallSharedLibrary(Xm,$(SOXMREV),$(USRLIBDIR))
#endif
#if DoNormalLib
NormalLibraryTarget(Xm,$(OBJS))
InstallLibrary(Xm,$(USRLIBDIR))
#endif
#if DoProfileLib
ProfiledLibraryTarget(Xm,$(OBJS))
InstallLibrary(Xm_p,$(USRLIBDIR))
#endif
#if DoDebugLib
DebuggedLibraryTarget(Xm,$(OBJS))
InstallLibrary(Xm_d,$(USRLIBDIR))
#endif

LintLibraryTarget(Xm,$(SRCS))
InstallLintLibrary(Xm,$(LINTLIBDIR))

BuildIncludes($(HEADERS2),Xm,..)


InstallMultiple($(HEADERS),$(USRINCDIR)/Xm)

DependTarget()

NormalLintTarget($(SRCS))

#ifdef UseVista
VistaMapRule(libXm.M,libXm.a)
#endif

/*
 * Certain architectures have a bug that produces a bad
 * shared library if Obsolete.o is included.
 */

#if SharedLibXm && defined(BugAffectingSharedXm)
Obsolete.o:
	_DebuggedObjCompile($(_NOOP_))
	_ProfiledObjCompile($(_NOOP_))
	$(MV) Obsolete.c Obsolete.c~
	echo "static char _obs_str[] =\"Obsolete.c not supported\";" > Obsolete.c
	_SharedObjCompile($(_NOOP_))
	$(MV) Obsolete.c~ Obsolete.c
	_NormalObjCompile($(_NOOP_))
#endif
