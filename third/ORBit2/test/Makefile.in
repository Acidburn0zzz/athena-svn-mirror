# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AC_TYPE_NAME = @AC_TYPE_NAME@
AS = @AS@
AWK = @AWK@
CC = @CC@
DISABLE_DEPRECATED_CFLAGS = @DISABLE_DEPRECATED_CFLAGS@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EXEEXT = @EXEEXT@
GLIB_REQUIRED = @GLIB_REQUIRED@
HAVE_ORBIT_SSL_SUPPORT = @HAVE_ORBIT_SSL_SUPPORT@
LIBIDL_REQUIRED = @LIBIDL_REQUIRED@
LIBTOOL = @LIBTOOL@
LINC_REQUIRED = @LINC_REQUIRED@
LN_S = @LN_S@
LT_VERSION = @LT_VERSION@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORBIT_CFLAGS = @ORBIT_CFLAGS@
ORBIT_DEBUG_CFLAGS = @ORBIT_DEBUG_CFLAGS@
ORBIT_IDL_CFLAGS = @ORBIT_IDL_CFLAGS@
ORBIT_IDL_LIBS = @ORBIT_IDL_LIBS@
ORBIT_LIBS = @ORBIT_LIBS@
ORBIT_MAJOR_VERSION = @ORBIT_MAJOR_VERSION@
ORBIT_MICRO_VERSION = @ORBIT_MICRO_VERSION@
ORBIT_MINOR_VERSION = @ORBIT_MINOR_VERSION@
ORBIT_NAME_CFLAGS = @ORBIT_NAME_CFLAGS@
ORBIT_NAME_LIBS = @ORBIT_NAME_LIBS@
ORBIT_SERIAL = @ORBIT_SERIAL@
ORBIT_VERSION = @ORBIT_VERSION@
PACKAGE = @PACKAGE@
PKG_CONFIG = @PKG_CONFIG@
POPT_LIBS = @POPT_LIBS@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
WARN_CFLAGS = @WARN_CFLAGS@
pkglibdir = @pkglibdir@

SUBDIRS = everything inhibit poa

INCLUDES = \
	-I$(top_srcdir)/include     \
	-I$(top_srcdir)/src/orb     \
	-I$(top_builddir)/include   \
	-DORBIT2_INTERNAL_API       \
	$(WARN_CFLAGS)              \
	$(ORBIT_DEBUG_CFLAGS)       \
	$(ORBIT_CFLAGS)


bin_PROGRAMS = ior-decode-2 typelib-dump
noinst_PROGRAMS = test1 \
	echo-client echo-client-t echo-server \
	empty-client empty-server \
	test-any-client test-any-server \
	test-dynany test-mem test-performance test-giop


TESTS = test-dynany test-mem test-performance test-giop

LDADD = $(top_builddir)/src/orb/libORBit-2.la $(ORBIT_LIBS)

test_mem_SOURCES = test-mem.c

test_performance_SOURCES = \
	test-performance.c	\
	test1.h			\
	test1-skels.c		\
	test1-common.c


test_giop_SOURCES = \
	test-giop.c		\
	test-giop-frag.h


TEST_ANY_IDLOUT = test-any.h test-any-common.c test-any-stubs.c test-any-skels.c
test_any_client_SOURCES = test-any-client.c $(TEST_ANY_IDLOUT)
test_any_server_SOURCES = test-any-server.c $(TEST_ANY_IDLOUT)

ECHO_IDLOUT = echo.h echo-common.c echo-stubs.c echo-skels.c
echo_client_SOURCES = echo-client.c $(ECHO_IDLOUT)
echo_client_t_SOURCES = echo-client-t.c $(ECHO_IDLOUT)
echo_server_SOURCES = echo-server.c echo-srv.c $(ECHO_IDLOUT) echo-share.h$

EMPTY_IDLOUT = empty.h empty-common.c empty-stubs.c empty-skels.c
empty_client_SOURCES = empty-client.c $(EMPTY_IDLOUT)
empty_server_SOURCES = empty-server.c $(EMPTY_IDLOUT)

IDLOUT = test1-stubs.c test1-skels.c test1-common.c test1.h
test1_SOURCES = test1.c $(IDLOUT)

ior_decode_2_SOURCES = ior-decode.c

typelib_dump_SOURCES = typelib-dump.c

DYNANY_IDLOUT = dynany.h dynany-common.c
test_dynany_SOURCES = $(DYNANY_IDLOUT) test-dynany.c
test_dynany_LDFLAGS = -lm

IDL_FLAGS = --showcpperrors
IDL_FILES = echo.idl empty.idl test-any.idl test1.idl dynany.idl

IDL_COMPILER = $(top_builddir)/src/idl-compiler/orbit-idl-2

@MAINTAINER_MODE_TRUE@IDL_DEPS_MAGIC := @MAINTAINER_MODE_TRUE@$(shell mkdir .deps > /dev/null 2>&1 || :)
@MAINTAINER_MODE_TRUE@IDL_DEP_FILES = @MAINTAINER_MODE_TRUE@$(IDL_FILES:%.idl=.deps/%.idl.P)

BUILT_SOURCES = \
	$(EMPTY_IDLOUT)    \
	$(ECHO_IDLOUT)     \
	$(IDLOUT)          \
	$(TEST_ANY_IDLOUT) \
	$(DYNANY_IDLOUT)


CLEANFILES = $(BUILT_SOURCES)
EXTRA_DIST = $(IDL_FILES)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
bin_PROGRAMS =  ior-decode-2$(EXEEXT) typelib-dump$(EXEEXT)
noinst_PROGRAMS =  test1$(EXEEXT) echo-client$(EXEEXT) \
echo-client-t$(EXEEXT) echo-server$(EXEEXT) empty-client$(EXEEXT) \
empty-server$(EXEEXT) test-any-client$(EXEEXT) test-any-server$(EXEEXT) \
test-dynany$(EXEEXT) test-mem$(EXEEXT) test-performance$(EXEEXT) \
test-giop$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS) $(noinst_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
ior_decode_2_OBJECTS =  ior-decode.$(OBJEXT)
ior_decode_2_LDADD = $(LDADD)
ior_decode_2_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit-2.la
ior_decode_2_LDFLAGS = 
typelib_dump_OBJECTS =  typelib-dump.$(OBJEXT)
typelib_dump_LDADD = $(LDADD)
typelib_dump_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit-2.la
typelib_dump_LDFLAGS = 
test1_OBJECTS =  test1.$(OBJEXT) test1-stubs.$(OBJEXT) \
test1-skels.$(OBJEXT) test1-common.$(OBJEXT)
test1_LDADD = $(LDADD)
test1_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit-2.la
test1_LDFLAGS = 
echo_client_OBJECTS =  echo-client.$(OBJEXT) echo-common.$(OBJEXT) \
echo-stubs.$(OBJEXT) echo-skels.$(OBJEXT)
echo_client_LDADD = $(LDADD)
echo_client_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit-2.la
echo_client_LDFLAGS = 
echo_client_t_OBJECTS =  echo-client-t.$(OBJEXT) echo-common.$(OBJEXT) \
echo-stubs.$(OBJEXT) echo-skels.$(OBJEXT)
echo_client_t_LDADD = $(LDADD)
echo_client_t_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit-2.la
echo_client_t_LDFLAGS = 
echo_server_OBJECTS =  echo-server.$(OBJEXT) echo-srv.$(OBJEXT) \
echo-common.$(OBJEXT) echo-stubs.$(OBJEXT) echo-skels.$(OBJEXT)
echo_server_LDADD = $(LDADD)
echo_server_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit-2.la
echo_server_LDFLAGS = 
empty_client_OBJECTS =  empty-client.$(OBJEXT) empty-common.$(OBJEXT) \
empty-stubs.$(OBJEXT) empty-skels.$(OBJEXT)
empty_client_LDADD = $(LDADD)
empty_client_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit-2.la
empty_client_LDFLAGS = 
empty_server_OBJECTS =  empty-server.$(OBJEXT) empty-common.$(OBJEXT) \
empty-stubs.$(OBJEXT) empty-skels.$(OBJEXT)
empty_server_LDADD = $(LDADD)
empty_server_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit-2.la
empty_server_LDFLAGS = 
test_any_client_OBJECTS =  test-any-client.$(OBJEXT) \
test-any-common.$(OBJEXT) test-any-stubs.$(OBJEXT) \
test-any-skels.$(OBJEXT)
test_any_client_LDADD = $(LDADD)
test_any_client_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit-2.la
test_any_client_LDFLAGS = 
test_any_server_OBJECTS =  test-any-server.$(OBJEXT) \
test-any-common.$(OBJEXT) test-any-stubs.$(OBJEXT) \
test-any-skels.$(OBJEXT)
test_any_server_LDADD = $(LDADD)
test_any_server_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit-2.la
test_any_server_LDFLAGS = 
test_dynany_OBJECTS =  dynany-common.$(OBJEXT) test-dynany.$(OBJEXT)
test_dynany_LDADD = $(LDADD)
test_dynany_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit-2.la
test_mem_OBJECTS =  test-mem.$(OBJEXT)
test_mem_LDADD = $(LDADD)
test_mem_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit-2.la
test_mem_LDFLAGS = 
test_performance_OBJECTS =  test-performance.$(OBJEXT) \
test1-skels.$(OBJEXT) test1-common.$(OBJEXT)
test_performance_LDADD = $(LDADD)
test_performance_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit-2.la
test_performance_LDFLAGS = 
test_giop_OBJECTS =  test-giop.$(OBJEXT)
test_giop_LDADD = $(LDADD)
test_giop_DEPENDENCIES =  $(top_builddir)/src/orb/libORBit-2.la
test_giop_LDFLAGS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(ior_decode_2_SOURCES) $(typelib_dump_SOURCES) $(test1_SOURCES) $(echo_client_SOURCES) $(echo_client_t_SOURCES) $(echo_server_SOURCES) $(empty_client_SOURCES) $(empty_server_SOURCES) $(test_any_client_SOURCES) $(test_any_server_SOURCES) $(test_dynany_SOURCES) $(test_mem_SOURCES) $(test_performance_SOURCES) $(test_giop_SOURCES)
OBJECTS = $(ior_decode_2_OBJECTS) $(typelib_dump_OBJECTS) $(test1_OBJECTS) $(echo_client_OBJECTS) $(echo_client_t_OBJECTS) $(echo_server_OBJECTS) $(empty_client_OBJECTS) $(empty_server_OBJECTS) $(test_any_client_OBJECTS) $(test_any_server_OBJECTS) $(test_dynany_OBJECTS) $(test_mem_OBJECTS) $(test_performance_OBJECTS) $(test_giop_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) $(top_srcdir)/Makefile.shared
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps test/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

mostlyclean-noinstPROGRAMS:

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

distclean-noinstPROGRAMS:

maintainer-clean-noinstPROGRAMS:

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

ior-decode-2$(EXEEXT): $(ior_decode_2_OBJECTS) $(ior_decode_2_DEPENDENCIES)
	@rm -f ior-decode-2$(EXEEXT)
	$(LINK) $(ior_decode_2_LDFLAGS) $(ior_decode_2_OBJECTS) $(ior_decode_2_LDADD) $(LIBS)

typelib-dump$(EXEEXT): $(typelib_dump_OBJECTS) $(typelib_dump_DEPENDENCIES)
	@rm -f typelib-dump$(EXEEXT)
	$(LINK) $(typelib_dump_LDFLAGS) $(typelib_dump_OBJECTS) $(typelib_dump_LDADD) $(LIBS)

test1$(EXEEXT): $(test1_OBJECTS) $(test1_DEPENDENCIES)
	@rm -f test1$(EXEEXT)
	$(LINK) $(test1_LDFLAGS) $(test1_OBJECTS) $(test1_LDADD) $(LIBS)

echo-client$(EXEEXT): $(echo_client_OBJECTS) $(echo_client_DEPENDENCIES)
	@rm -f echo-client$(EXEEXT)
	$(LINK) $(echo_client_LDFLAGS) $(echo_client_OBJECTS) $(echo_client_LDADD) $(LIBS)

echo-client-t$(EXEEXT): $(echo_client_t_OBJECTS) $(echo_client_t_DEPENDENCIES)
	@rm -f echo-client-t$(EXEEXT)
	$(LINK) $(echo_client_t_LDFLAGS) $(echo_client_t_OBJECTS) $(echo_client_t_LDADD) $(LIBS)

echo-server$(EXEEXT): $(echo_server_OBJECTS) $(echo_server_DEPENDENCIES)
	@rm -f echo-server$(EXEEXT)
	$(LINK) $(echo_server_LDFLAGS) $(echo_server_OBJECTS) $(echo_server_LDADD) $(LIBS)

empty-client$(EXEEXT): $(empty_client_OBJECTS) $(empty_client_DEPENDENCIES)
	@rm -f empty-client$(EXEEXT)
	$(LINK) $(empty_client_LDFLAGS) $(empty_client_OBJECTS) $(empty_client_LDADD) $(LIBS)

empty-server$(EXEEXT): $(empty_server_OBJECTS) $(empty_server_DEPENDENCIES)
	@rm -f empty-server$(EXEEXT)
	$(LINK) $(empty_server_LDFLAGS) $(empty_server_OBJECTS) $(empty_server_LDADD) $(LIBS)

test-any-client$(EXEEXT): $(test_any_client_OBJECTS) $(test_any_client_DEPENDENCIES)
	@rm -f test-any-client$(EXEEXT)
	$(LINK) $(test_any_client_LDFLAGS) $(test_any_client_OBJECTS) $(test_any_client_LDADD) $(LIBS)

test-any-server$(EXEEXT): $(test_any_server_OBJECTS) $(test_any_server_DEPENDENCIES)
	@rm -f test-any-server$(EXEEXT)
	$(LINK) $(test_any_server_LDFLAGS) $(test_any_server_OBJECTS) $(test_any_server_LDADD) $(LIBS)

test-dynany$(EXEEXT): $(test_dynany_OBJECTS) $(test_dynany_DEPENDENCIES)
	@rm -f test-dynany$(EXEEXT)
	$(LINK) $(test_dynany_LDFLAGS) $(test_dynany_OBJECTS) $(test_dynany_LDADD) $(LIBS)

test-mem$(EXEEXT): $(test_mem_OBJECTS) $(test_mem_DEPENDENCIES)
	@rm -f test-mem$(EXEEXT)
	$(LINK) $(test_mem_LDFLAGS) $(test_mem_OBJECTS) $(test_mem_LDADD) $(LIBS)

test-performance$(EXEEXT): $(test_performance_OBJECTS) $(test_performance_DEPENDENCIES)
	@rm -f test-performance$(EXEEXT)
	$(LINK) $(test_performance_LDFLAGS) $(test_performance_OBJECTS) $(test_performance_LDADD) $(LIBS)

test-giop$(EXEEXT): $(test_giop_OBJECTS) $(test_giop_DEPENDENCIES)
	@rm -f test-giop$(EXEEXT)
	$(LINK) $(test_giop_LDFLAGS) $(test_giop_OBJECTS) $(test_giop_LDADD) $(LIBS)

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.

@SET_MAKE@

all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive  \
check-recursive installcheck-recursive info-recursive dvi-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
	  rev="$$subdir $$rev"; \
	  test "$$subdir" != "." || dot_seen=yes; \
	done; \
	test "$$dot_seen" = "no" && rev=". $$rev"; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
   if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
   fi; \
	done; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = test

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(top_distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-hook
check-TESTS: $(TESTS)
	@failed=0; all=0; \
	srcdir=$(srcdir); export srcdir; \
	for tst in $(TESTS); do \
	  if test -f $$tst; then dir=.; \
	  else dir="$(srcdir)"; fi; \
	  if $(TESTS_ENVIRONMENT) $$dir/$$tst; then \
	    all=`expr $$all + 1`; \
	    echo "PASS: $$tst"; \
	  elif test $$? -ne 77; then \
	    all=`expr $$all + 1`; \
	    failed=`expr $$failed + 1`; \
	    echo "FAIL: $$tst"; \
	  fi; \
	done; \
	if test "$$failed" -eq 0; then \
	  banner="All $$all tests passed"; \
	else \
	  banner="$$failed of $$all tests failed"; \
	fi; \
	dashes=`echo "$$banner" | sed s/./=/g`; \
	echo "$$dashes"; \
	echo "$$banner"; \
	echo "$$dashes"; \
	test "$$failed" -eq 0
info-am:
info: info-recursive
dvi-am:
dvi: dvi-recursive
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
installcheck-am:
installcheck: installcheck-recursive
install-exec-am: install-binPROGRAMS
install-exec: install-exec-recursive

install-data-am:
install-data: install-data-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-recursive
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-recursive
all-am: Makefile $(PROGRAMS)
all-redirect: all-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-noinstPROGRAMS \
		mostlyclean-compile mostlyclean-libtool \
		mostlyclean-tags mostlyclean-generic

mostlyclean: mostlyclean-recursive

clean-am:  clean-binPROGRAMS clean-noinstPROGRAMS clean-compile \
		clean-libtool clean-tags clean-generic mostlyclean-am

clean: clean-recursive

distclean-am:  distclean-binPROGRAMS distclean-noinstPROGRAMS \
		distclean-compile distclean-libtool distclean-tags \
		distclean-generic clean-am distclean-local
	-rm -f libtool

distclean: distclean-recursive

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-noinstPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-recursive

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-noinstPROGRAMS distclean-noinstPROGRAMS \
clean-noinstPROGRAMS maintainer-clean-noinstPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool install-data-recursive \
uninstall-data-recursive install-exec-recursive \
uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
all-recursive check-recursive installcheck-recursive info-recursive \
dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir check-TESTS \
info-am info dvi-am dvi check check-am installcheck-am installcheck \
install-exec-am install-exec install-data-am install-data install-am \
install uninstall-am uninstall all-redirect all-am all installdirs-am \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean

$(srcdir)/test-any-client.c $(srcdir)/test-any-server.c: test-any.h
$(srcdir)/echo-client-t.c $(srcdir)/echo-client.c $(srcdir)/echo-server.c $(srcdir)/echo-srv.c: echo.h
$(srcdir)/empty-client.c $(srcdir)/empty-server.c: empty.h
$(srcdir)/test1.c: test1.h

%.h %-stubs.c %-skels.c %-common.c %-imodule.c %-skelimpl.c: $(IDL_DIR)%.idl $(IDL_COMPILER)
	-(rm -f $(*).h $(*)-stubs.c $(*)-skels.c $(*)-common.c $(*)-imodule.c $(*)-skelimpl.c || true) > /dev/null
	$(IDL_COMPILER) $(IDL_FLAGS) --deps $(*D)/.deps/$(*F).idl.P $< 
	for I in $(*).h $(*)-stubs.c $(*)-skels.c $(*)-common.c $(*)-imodule.c $(*)-skelimpl.c; do \
		if test -f $$I; then \
			sed -e 's,OObject,Object,g' -e 's,TTypeCode,TypeCode,g' $$I > $$I.out; \
			mv $$I.out $$I ; \
		fi; \
	done
@MAINTAINER_MODE_TRUE@-include $(IDL_DEP_FILES)
@MAINTAINER_MODE_TRUE@distclean-local:
@MAINTAINER_MODE_TRUE@	-rm -rf .deps

dist-hook:
	cd $(distdir); rm -f $(BUILT_SOURCES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
