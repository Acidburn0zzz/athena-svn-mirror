# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AC_TYPE_NAME = @AC_TYPE_NAME@
AS = @AS@
AWK = @AWK@
CC = @CC@
DISABLE_DEPRECATED_CFLAGS = @DISABLE_DEPRECATED_CFLAGS@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EXEEXT = @EXEEXT@
GLIB_REQUIRED = @GLIB_REQUIRED@
HAVE_ORBIT_SSL_SUPPORT = @HAVE_ORBIT_SSL_SUPPORT@
LIBIDL_REQUIRED = @LIBIDL_REQUIRED@
LIBTOOL = @LIBTOOL@
LINC_REQUIRED = @LINC_REQUIRED@
LN_S = @LN_S@
LT_VERSION = @LT_VERSION@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORBIT_CFLAGS = @ORBIT_CFLAGS@
ORBIT_DEBUG_CFLAGS = @ORBIT_DEBUG_CFLAGS@
ORBIT_IDL_CFLAGS = @ORBIT_IDL_CFLAGS@
ORBIT_IDL_LIBS = @ORBIT_IDL_LIBS@
ORBIT_LIBS = @ORBIT_LIBS@
ORBIT_MAJOR_VERSION = @ORBIT_MAJOR_VERSION@
ORBIT_MICRO_VERSION = @ORBIT_MICRO_VERSION@
ORBIT_MINOR_VERSION = @ORBIT_MINOR_VERSION@
ORBIT_NAME_CFLAGS = @ORBIT_NAME_CFLAGS@
ORBIT_NAME_LIBS = @ORBIT_NAME_LIBS@
ORBIT_SERIAL = @ORBIT_SERIAL@
ORBIT_VERSION = @ORBIT_VERSION@
PACKAGE = @PACKAGE@
PKG_CONFIG = @PKG_CONFIG@
POPT_LIBS = @POPT_LIBS@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
WARN_CFLAGS = @WARN_CFLAGS@
pkglibdir = @pkglibdir@

noinst_LTLIBRARIES = liborb-core.la

TYPELIB_DIR = $(libdir)/orbit-2.0

INCLUDES = \
	-I.						\
	-I$(srcdir)					\
	-I$(top_srcdir)/include				\
	-I$(top_builddir)/include			\
	-I$(top_builddir)/include/orbit/orb-core	\
	-DORBIT_TYPELIB_DIR=\""$(TYPELIB_DIR)"\"	\
	-DORBIT2_INTERNAL_API				\
	$(WARN_CFLAGS)					\
	$(ORBIT_DEBUG_CFLAGS)				\
	$(DISABLE_DEPRECATED_CFLAGS)			\
	$(ORBIT_CFLAGS)


main_src = \
	corba-orb.c \
	orbhttp.c \
	orbhttp.h \
	orbit-object.c \
	orbit-small.c \
	orbit-typelib.c \
	orbit-trace.c \
	corba-object.c \
	corba-policy.c \
	corba-env.c \
	corba-string.c \
	allocators.c \
	corba-typecode.c \
	corba-types.c \
	corba-any.c \
	corba-context.c \
	orb-core-private.h \
	orb-core-export.h \
	corba-nvlist.c \
	corba-request.c \
	iop-profiles.c \
	iop-profiles.h \
	orbit-debug.h


liborb_core_la_SOURCES = \
	$(BUILT_SOURCES) \
	$(main_src)


IDLOUT = corba-defs-common.c
DEFS_IDLOUT = iop-defs-common.c
OPS_IDLOUT = corba-ops.h corba-ops-stubs.c corba-ops-common.c corba-ops-skels.c
IFACE_IDLOUT = orbit-interface-common.c

IDL_COMPILER = $(top_builddir)/src/idl-compiler/orbit-idl-2

IDL_FLAGS = -I$(top_srcdir)/src/idl/CORBA_PIDL			\
	-I$(top_srcdir)/src/idl/CORBA				\
	-I$(top_srcdir)/src/idl/misc				\
	-I$(top_srcdir)/src/idl/interop				\
	--noskels --nodefskels --nostubs --noidata --noheaders	\
	--define=Object=OObject --define=TypeCode=TTypeCode	\
        --showcpperrors

IDL_FILES = corba-defs.idl iop-defs.idl corba-ops.idl orbit-interface.idl

@MAINTAINER_MODE_TRUE@IDL_DEPS_MAGIC := @MAINTAINER_MODE_TRUE@$(shell mkdir .deps > /dev/null 2>&1 || :)
@MAINTAINER_MODE_TRUE@IDL_DEP_FILES = @MAINTAINER_MODE_TRUE@$(IDL_FILES:%.idl=.deps/%.idl.P)

IDL_FLAGS_CORBA_OPS = --showcpperrors

IDL_FLAGS_INTERFACE = --nostubs --noskels --showcpperrors --noheaders

BUILT_SOURCES = $(IFACE_IDLOUT) $(IDLOUT) $(DEFS_IDLOUT) $(OPS_IDLOUT)
CLEANFILES = $(BUILT_SOURCES)
EXTRA_DIST = $(IDL_FILES)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../../../config.h
CONFIG_CLEAN_FILES = 
LTLIBRARIES =  $(noinst_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I../../..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
liborb_core_la_LDFLAGS = 
liborb_core_la_LIBADD = 
liborb_core_la_OBJECTS =  orbit-interface-common.lo corba-defs-common.lo \
iop-defs-common.lo corba-ops-stubs.lo corba-ops-common.lo \
corba-ops-skels.lo corba-orb.lo orbhttp.lo orbit-object.lo \
orbit-small.lo orbit-typelib.lo orbit-trace.lo corba-object.lo \
corba-policy.lo corba-env.lo corba-string.lo allocators.lo \
corba-typecode.lo corba-types.lo corba-any.lo corba-context.lo \
corba-nvlist.lo corba-request.lo iop-profiles.lo
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(liborb_core_la_SOURCES)
OBJECTS = $(liborb_core_la_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) $(top_srcdir)/Makefile.shared
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps src/orb/orb-core/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-noinstLTLIBRARIES:

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)

distclean-noinstLTLIBRARIES:

maintainer-clean-noinstLTLIBRARIES:

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

liborb-core.la: $(liborb_core_la_OBJECTS) $(liborb_core_la_DEPENDENCIES)
	$(LINK)  $(liborb_core_la_LDFLAGS) $(liborb_core_la_OBJECTS) $(liborb_core_la_LIBADD) $(LIBS)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src/orb/orb-core

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-hook
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am:
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am:
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-noinstLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-noinstLTLIBRARIES clean-compile clean-libtool \
		clean-tags clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-noinstLTLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am distclean-local
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-noinstLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-noinstLTLIBRARIES distclean-noinstLTLIBRARIES \
clean-noinstLTLIBRARIES maintainer-clean-noinstLTLIBRARIES \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


$(liborb_core_la_OBJECTS) : $(BUILT_SOURCES)

%.h %-stubs.c %-skels.c %-common.c %-imodule.c %-skelimpl.c: $(IDL_DIR)%.idl $(IDL_COMPILER)
	-(rm -f $(*).h $(*)-stubs.c $(*)-skels.c $(*)-common.c $(*)-imodule.c $(*)-skelimpl.c || true) > /dev/null
	$(IDL_COMPILER) $(IDL_FLAGS) --deps $(*D)/.deps/$(*F).idl.P $< 
	for I in $(*).h $(*)-stubs.c $(*)-skels.c $(*)-common.c $(*)-imodule.c $(*)-skelimpl.c; do \
		if test -f $$I; then \
			sed -e 's,OObject,Object,g' -e 's,TTypeCode,TypeCode,g' $$I > $$I.out; \
			mv $$I.out $$I ; \
		fi; \
	done
@MAINTAINER_MODE_TRUE@-include $(IDL_DEP_FILES)
@MAINTAINER_MODE_TRUE@distclean-local:
@MAINTAINER_MODE_TRUE@	-rm -rf .deps
$(OPS_IDLOUT): corba-ops.idl $(IDL_COMPILER)
	-(rm -f $(OPS_IDLOUT) || true) > /dev/null
	$(IDL_COMPILER) $(IDL_FLAGS_CORBA_OPS) --deps .deps/corba-ops.idl.P $<
	for I in $(OPS_IDLOUT); do								\
		sed -e 's,ZZZis_a,_is_a,g' -e 's,ZZis_a,is_a,g' $$I > $$I.out; mv $$I.out $$I;	\
	done;											\
	sed -e "s,Z,_,g" corba-ops-skels.c > corba-ops-skels.c.out;				\
	mv corba-ops-skels.c.out corba-ops-skels.c;
$(IFACE_IDLOUT) : orbit-interface.idl $(IDL_COMPILER)
	-(rm -f $(IFACE_IDLOUT) || true) > /dev/null
	$(IDL_COMPILER) $(IDL_FLAGS_INTERFACE) --deps .deps/orbit-interface.idl.P $<

dist-hook:
	cd $(distdir); rm -f $(BUILT_SOURCES)

$(IDL_COMPILER): update-orbitidl
	@true

update-orbitidl:
	@cd $(top_builddir)/src/idl-compiler && $(MAKE) $(AM_MAKEFLAGS)

.PHONY: update-orbitidl

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
