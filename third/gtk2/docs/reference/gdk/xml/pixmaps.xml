<refentry id="gdk-Bitmaps-and-Pixmaps">
<refmeta>
<refentrytitle>Bitmaps and Pixmaps</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GDK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Bitmaps and Pixmaps</refname><refpurpose>Offscreen drawables</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<anchor id="GdkPixmap"/>
<synopsis>

#include &lt;gdk/gdk.h&gt;


struct      <link linkend="GdkPixmap-struct">GdkPixmap</link>;
<link linkend="GdkPixmap">GdkPixmap</link>*  <link linkend="gdk-pixmap-new">gdk_pixmap_new</link>                  (<link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height,
                                             <link linkend="gint">gint</link> depth);
<link linkend="GdkBitmap">GdkBitmap</link>*  <link linkend="gdk-bitmap-create-from-data">gdk_bitmap_create_from_data</link>     (<link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             const <link linkend="gchar">gchar</link> *data,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height);
<link linkend="GdkPixmap">GdkPixmap</link>*  <link linkend="gdk-pixmap-create-from-data">gdk_pixmap_create_from_data</link>     (<link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             const <link linkend="gchar">gchar</link> *data,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height,
                                             <link linkend="gint">gint</link> depth,
                                             <link linkend="GdkColor">GdkColor</link> *fg,
                                             <link linkend="GdkColor">GdkColor</link> *bg);
<link linkend="GdkPixmap">GdkPixmap</link>*  <link linkend="gdk-pixmap-create-from-xpm">gdk_pixmap_create_from_xpm</link>      (<link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             <link linkend="GdkBitmap">GdkBitmap</link> **mask,
                                             <link linkend="GdkColor">GdkColor</link> *transparent_color,
                                             const <link linkend="gchar">gchar</link> *filename);
<link linkend="GdkPixmap">GdkPixmap</link>*  <link linkend="gdk-pixmap-colormap-create-from-xpm">gdk_pixmap_colormap_create_from_xpm</link>
                                            (<link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             <link linkend="GdkColormap">GdkColormap</link> *colormap,
                                             <link linkend="GdkBitmap">GdkBitmap</link> **mask,
                                             <link linkend="GdkColor">GdkColor</link> *transparent_color,
                                             const <link linkend="gchar">gchar</link> *filename);
<link linkend="GdkPixmap">GdkPixmap</link>*  <link linkend="gdk-pixmap-create-from-xpm-d">gdk_pixmap_create_from_xpm_d</link>    (<link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             <link linkend="GdkBitmap">GdkBitmap</link> **mask,
                                             <link linkend="GdkColor">GdkColor</link> *transparent_color,
                                             <link linkend="gchar">gchar</link> **data);
<link linkend="GdkPixmap">GdkPixmap</link>*  <link linkend="gdk-pixmap-colormap-create-from-xpm-d">gdk_pixmap_colormap_create_from_xpm_d</link>
                                            (<link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             <link linkend="GdkColormap">GdkColormap</link> *colormap,
                                             <link linkend="GdkBitmap">GdkBitmap</link> **mask,
                                             <link linkend="GdkColor">GdkColor</link> *transparent_color,
                                             <link linkend="gchar">gchar</link> **data);
#define     <link linkend="gdk-pixmap-ref">gdk_pixmap_ref</link>
#define     <link linkend="gdk-pixmap-unref">gdk_pixmap_unref</link>
struct      <link linkend="GdkBitmap">GdkBitmap</link>;
#define     <link linkend="gdk-bitmap-ref">gdk_bitmap_ref</link>
#define     <link linkend="gdk-bitmap-unref">gdk_bitmap_unref</link>


</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GdkDrawable">GdkDrawable</link>
         +----GdkPixmap
</synopsis>

</refsect1>






<refsect1>
<title>Description</title>
<para>
Pixmaps are offscreen drawables. They can be drawn upon with the
standard drawing primitives, then copied to another drawable (such as
a <link linkend="GdkWindow">GdkWindow</link>) with <link linkend="gdk-pixmap-draw">gdk_pixmap_draw</link>(). The depth of a pixmap
is the number of bits per pixels. Bitmaps are simply pixmaps
with a depth of 1. (That is, they are monochrome bitmaps - each
pixel can be either on or off).
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GdkPixmap-struct"/>struct GdkPixmap</title>
<programlisting>struct GdkPixmap;</programlisting>
<para>
An opaque structure representing an offscreen drawable.
Pointers to structures of type <link linkend="GdkPixmap">GdkPixmap</link>, <link linkend="GdkBitmap">GdkBitmap</link>,
and <link linkend="GdkWindow">GdkWindow</link>, can often be used interchangeably. 
The type <link linkend="GdkDrawable">GdkDrawable</link> refers generically to any of
these types.
</para></refsect2>
<refsect2>
<title><anchor id="gdk-pixmap-new"/>gdk_pixmap_new ()</title>
<programlisting><link linkend="GdkPixmap">GdkPixmap</link>*  gdk_pixmap_new                  (<link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height,
                                             <link linkend="gint">gint</link> depth);</programlisting>
<para>
Create a new pixmap with a given size and depth.
</para><variablelist role="params">
<varlistentry><term><parameter>drawable</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara>The width of the new pixmap in pixels.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara>The height of the new pixmap in pixels.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>depth</parameter>&nbsp;:</term>
<listitem><simpara>The depth (number of bits per pixel) of the new pixmap. 
  If -1, and <parameter>window</parameter> is not <literal>NULL</literal>, the depth of the new
  pixmap will be equal to that of <parameter>window</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the <link linkend="GdkPixmap">GdkPixmap</link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-bitmap-create-from-data"/>gdk_bitmap_create_from_data ()</title>
<programlisting><link linkend="GdkBitmap">GdkBitmap</link>*  gdk_bitmap_create_from_data     (<link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             const <link linkend="gchar">gchar</link> *data,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height);</programlisting>
<para>
Creates a new bitmap from data in XBM format.
</para><variablelist role="params">
<varlistentry><term><parameter>drawable</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>a pointer to the XBM data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara>the width of the new pixmap in pixels.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara>the height of the new pixmap in pixels.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the <link linkend="GdkBitmap">GdkBitmap</link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-pixmap-create-from-data"/>gdk_pixmap_create_from_data ()</title>
<programlisting><link linkend="GdkPixmap">GdkPixmap</link>*  gdk_pixmap_create_from_data     (<link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             const <link linkend="gchar">gchar</link> *data,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height,
                                             <link linkend="gint">gint</link> depth,
                                             <link linkend="GdkColor">GdkColor</link> *fg,
                                             <link linkend="GdkColor">GdkColor</link> *bg);</programlisting>
<para>
Create a two-color pixmap from data in XBM data.
</para><variablelist role="params">
<varlistentry><term><parameter>drawable</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>a pointer to the data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara>the width of the new pixmap in pixels.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara>the height of the new pixmap in pixels.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>depth</parameter>&nbsp;:</term>
<listitem><simpara>the depth (number of bits per pixel) of the new pixmap.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fg</parameter>&nbsp;:</term>
<listitem><simpara>the foreground color.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bg</parameter>&nbsp;:</term>
<listitem><simpara>the background color.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the <link linkend="GdkPixmap">GdkPixmap</link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-pixmap-create-from-xpm"/>gdk_pixmap_create_from_xpm ()</title>
<programlisting><link linkend="GdkPixmap">GdkPixmap</link>*  gdk_pixmap_create_from_xpm      (<link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             <link linkend="GdkBitmap">GdkBitmap</link> **mask,
                                             <link linkend="GdkColor">GdkColor</link> *transparent_color,
                                             const <link linkend="gchar">gchar</link> *filename);</programlisting>
<para>
Create a pixmap from a XPM file.
</para><variablelist role="params">
<varlistentry><term><parameter>drawable</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mask</parameter>&nbsp;:</term>
<listitem><simpara>a pointer to a place to store a bitmap representing
the transparency mask of the XPM file. Can be <literal>NULL</literal>,
in which case transparency will be ignored.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>transparent_color</parameter>&nbsp;:</term>
<listitem><simpara>the color to be used for the pixels
that are transparent in the input file. Can be <literal>NULL</literal>,
in which case a default color will be used.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara>the filename of a file containing XPM data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the <link linkend="GdkPixmap">GdkPixmap</link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-pixmap-colormap-create-from-xpm"/>gdk_pixmap_colormap_create_from_xpm ()</title>
<programlisting><link linkend="GdkPixmap">GdkPixmap</link>*  gdk_pixmap_colormap_create_from_xpm
                                            (<link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             <link linkend="GdkColormap">GdkColormap</link> *colormap,
                                             <link linkend="GdkBitmap">GdkBitmap</link> **mask,
                                             <link linkend="GdkColor">GdkColor</link> *transparent_color,
                                             const <link linkend="gchar">gchar</link> *filename);</programlisting>
<para>
Create a pixmap from a XPM file using a particular colormap.
</para><variablelist role="params">
<varlistentry><term><parameter>drawable</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>colormap</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GdkColormap">GdkColormap</link> that the new pixmap will be use.
  If omitted, the colormap for <parameter>window</parameter> will be used.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mask</parameter>&nbsp;:</term>
<listitem><simpara>a pointer to a place to store a bitmap representing
the transparency mask of the XPM file. Can be <literal>NULL</literal>,
in which case transparency will be ignored.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>transparent_color</parameter>&nbsp;:</term>
<listitem><simpara>the color to be used for the pixels
that are transparent in the input file. Can be <literal>NULL</literal>,
in which case a default color will be used.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara>the filename of a file containing XPM data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the <link linkend="GdkPixmap">GdkPixmap</link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-pixmap-create-from-xpm-d"/>gdk_pixmap_create_from_xpm_d ()</title>
<programlisting><link linkend="GdkPixmap">GdkPixmap</link>*  gdk_pixmap_create_from_xpm_d    (<link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             <link linkend="GdkBitmap">GdkBitmap</link> **mask,
                                             <link linkend="GdkColor">GdkColor</link> *transparent_color,
                                             <link linkend="gchar">gchar</link> **data);</programlisting>
<para>
Create a pixmap from data in XPM format.
</para><variablelist role="params">
<varlistentry><term><parameter>drawable</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mask</parameter>&nbsp;:</term>
<listitem><simpara>Pointer to a place to store a bitmap representing
the transparency mask of the XPM file. Can be <literal>NULL</literal>,
in which case transparency will be ignored.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>transparent_color</parameter>&nbsp;:</term>
<listitem><simpara>This color will be used for the pixels
that are transparent in the input file. Can be <literal>NULL</literal>
in which case a default color will be used.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>Pointer to a string containing the XPM data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the <link linkend="GdkPixmap">GdkPixmap</link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-pixmap-colormap-create-from-xpm-d"/>gdk_pixmap_colormap_create_from_xpm_d ()</title>
<programlisting><link linkend="GdkPixmap">GdkPixmap</link>*  gdk_pixmap_colormap_create_from_xpm_d
                                            (<link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             <link linkend="GdkColormap">GdkColormap</link> *colormap,
                                             <link linkend="GdkBitmap">GdkBitmap</link> **mask,
                                             <link linkend="GdkColor">GdkColor</link> *transparent_color,
                                             <link linkend="gchar">gchar</link> **data);</programlisting>
<para>
Create a pixmap from data in XPM format using a particular
colormap.
</para><variablelist role="params">
<varlistentry><term><parameter>drawable</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>colormap</parameter>&nbsp;:</term>
<listitem><simpara>the <link linkend="GdkColormap">GdkColormap</link> that the new pixmap will be use.
  If omitted, the colormap for <parameter>window</parameter> will be used.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mask</parameter>&nbsp;:</term>
<listitem><simpara>a pointer to a place to store a bitmap representing
the transparency mask of the XPM file. Can be <literal>NULL</literal>,
in which case transparency will be ignored.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>transparent_color</parameter>&nbsp;:</term>
<listitem><simpara>the color to be used for the pixels
that are transparent in the input file. Can be <literal>NULL</literal>,
in which case a default color will be used.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>Pointer to a string containing the XPM data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the <link linkend="GdkPixmap">GdkPixmap</link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-pixmap-ref"/>gdk_pixmap_ref</title>
<programlisting>#define gdk_pixmap_ref                 gdk_drawable_ref
</programlisting>
<warning><para><literal>gdk_pixmap_ref</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Deprecated equivalent of <link linkend="g-object-ref">g_object_ref</link>().
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><parameter>pixmap</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-pixmap-unref"/>gdk_pixmap_unref</title>
<programlisting>#define gdk_pixmap_unref               gdk_drawable_unref
</programlisting>
<warning><para><literal>gdk_pixmap_unref</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Deprecated equivalent of <link linkend="g-object-unref">g_object_unref</link>().
</para></refsect2>
<refsect2>
<title><anchor id="GdkBitmap"/>struct GdkBitmap</title>
<programlisting>struct GdkBitmap {

  gpointer user_data;
};
</programlisting>
<para>
An opaque structure representing an offscreen drawable of depth
1. Pointers to structures of type <link linkend="GdkPixmap">GdkPixmap</link>, <link linkend="GdkBitmap">GdkBitmap</link>, and
<link linkend="GdkWindow">GdkWindow</link>, can often be used interchangeably.  The type <link linkend="GdkDrawable">GdkDrawable</link>
refers generically to any of these types.
</para></refsect2>
<refsect2>
<title><anchor id="gdk-bitmap-ref"/>gdk_bitmap_ref</title>
<programlisting>#define gdk_bitmap_ref                 gdk_drawable_ref
</programlisting>
<warning><para><literal>gdk_bitmap_ref</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Deprecated equivalent of <link linkend="g-object-ref">g_object_ref</link>().
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><parameter>pixmap</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-bitmap-unref"/>gdk_bitmap_unref</title>
<programlisting>#define gdk_bitmap_unref               gdk_drawable_unref
</programlisting>
<warning><para><literal>gdk_bitmap_unref</literal> is deprecated and should not be used in newly-written code.</para></warning>
<para>
Deprecated equivalent of <link linkend="g-object-unref">g_object_unref</link>().
</para></refsect2>

</refsect1>




</refentry>
