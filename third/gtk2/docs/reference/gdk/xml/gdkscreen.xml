<refentry id="GdkScreen">
<refmeta>
<refentrytitle>GdkScreen</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GDK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GdkScreen</refname><refpurpose>Object representing a physical screen</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;gdk/gdk.h&gt;


struct      <link linkend="GdkScreen-struct">GdkScreen</link>;
<link linkend="GdkScreen">GdkScreen</link>*  <link linkend="gdk-screen-get-default">gdk_screen_get_default</link>          (void);
<link linkend="GdkColormap">GdkColormap</link>* <link linkend="gdk-screen-get-default-colormap">gdk_screen_get_default_colormap</link>
                                            (<link linkend="GdkScreen">GdkScreen</link> *screen);
void        <link linkend="gdk-screen-set-default-colormap">gdk_screen_set_default_colormap</link> (<link linkend="GdkScreen">GdkScreen</link> *screen,
                                             <link linkend="GdkColormap">GdkColormap</link> *colormap);
<link linkend="GdkColormap">GdkColormap</link>* <link linkend="gdk-screen-get-system-colormap">gdk_screen_get_system_colormap</link> (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="GdkVisual">GdkVisual</link>*  <link linkend="gdk-screen-get-system-visual">gdk_screen_get_system_visual</link>    (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="GdkColormap">GdkColormap</link>* <link linkend="gdk-screen-get-rgb-colormap">gdk_screen_get_rgb_colormap</link>    (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="GdkVisual">GdkVisual</link>*  <link linkend="gdk-screen-get-rgb-visual">gdk_screen_get_rgb_visual</link>       (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="GdkWindow">GdkWindow</link>*  <link linkend="gdk-screen-get-root-window">gdk_screen_get_root_window</link>      (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="GdkDisplay">GdkDisplay</link>* <link linkend="gdk-screen-get-display">gdk_screen_get_display</link>          (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="gint">gint</link>        <link linkend="gdk-screen-get-number">gdk_screen_get_number</link>           (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="gint">gint</link>        <link linkend="gdk-screen-get-width">gdk_screen_get_width</link>            (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="gint">gint</link>        <link linkend="gdk-screen-get-height">gdk_screen_get_height</link>           (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="gint">gint</link>        <link linkend="gdk-screen-get-width-mm">gdk_screen_get_width_mm</link>         (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="gint">gint</link>        <link linkend="gdk-screen-get-height-mm">gdk_screen_get_height_mm</link>        (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="GList">GList</link>*      <link linkend="gdk-screen-list-visuals">gdk_screen_list_visuals</link>         (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="GList">GList</link>*      <link linkend="gdk-screen-get-toplevel-windows">gdk_screen_get_toplevel_windows</link> (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="gchar">gchar</link>*      <link linkend="gdk-screen-make-display-name">gdk_screen_make_display_name</link>    (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="gint">gint</link>        <link linkend="gdk-screen-get-n-monitors">gdk_screen_get_n_monitors</link>       (<link linkend="GdkScreen">GdkScreen</link> *screen);
void        <link linkend="gdk-screen-get-monitor-geometry">gdk_screen_get_monitor_geometry</link> (<link linkend="GdkScreen">GdkScreen</link> *screen,
                                             <link linkend="gint">gint</link> monitor_num,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *dest);
<link linkend="gint">gint</link>        <link linkend="gdk-screen-get-monitor-at-point">gdk_screen_get_monitor_at_point</link> (<link linkend="GdkScreen">GdkScreen</link> *screen,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y);
<link linkend="gint">gint</link>        <link linkend="gdk-screen-get-monitor-at-window">gdk_screen_get_monitor_at_window</link>
                                            (<link linkend="GdkScreen">GdkScreen</link> *screen,
                                             <link linkend="GdkWindow">GdkWindow</link> *window);
void        <link linkend="gdk-screen-broadcast-client-message">gdk_screen_broadcast_client_message</link>
                                            (<link linkend="GdkScreen">GdkScreen</link> *screen,
                                             <link linkend="GdkEvent">GdkEvent</link> *event);
<link linkend="gboolean">gboolean</link>    <link linkend="gdk-screen-get-setting">gdk_screen_get_setting</link>          (<link linkend="GdkScreen">GdkScreen</link> *screen,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="GValue">GValue</link> *value);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----GdkScreen
</synopsis>

</refsect1>




<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="GdkScreen-size-changed">size-changed</link>&quot;
            void        user_function      (<link linkend="GdkScreen">GdkScreen</link> *gdkscreen,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>
  <link linkend="GdkScreen">GdkScreen</link> objects are the GDK representation of a physical screen. It is used 
  throughout GDK and GTK+ to specify which screen the top level windows
  are to be displayed on. 
  It is also used to query the screen specification and default settings such as 
  the default colormap (<link linkend="gdk-screen-get-default-colormap">gdk_screen_get_default_colormap</link>()),
  the screen width (<link linkend="gdk-screen-get-width">gdk_screen_get_width</link>()), etc.
</para>
<para>Note that a screen may consist of multiple monitors which are merged to
form a large screen area. 
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GdkScreen-struct"/>struct GdkScreen</title>
<programlisting>struct GdkScreen;</programlisting>
<para>
This is a currently just a placeholder typedef for the first argument of 
the <parameter>window_at_pointer</parameter> function in <link linkend="GdkPointerHooks">GdkPointerHooks</link>. It will be used
when GDK gets multihead support. 
</para><para>Since 2.2

</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-default"/>gdk_screen_get_default ()</title>
<programlisting><link linkend="GdkScreen">GdkScreen</link>*  gdk_screen_get_default          (void);</programlisting>
<para>
Gets the default screen for the default display. (See
<link linkend="gdk-display-get-default">gdk_display_get_default</link>()).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>, or <literal>NULL</literal> if there is no default display.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-default-colormap"/>gdk_screen_get_default_colormap ()</title>
<programlisting><link linkend="GdkColormap">GdkColormap</link>* gdk_screen_get_default_colormap
                                            (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Gets the default colormap for <parameter>screen</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the default <link linkend="GdkColormap">GdkColormap</link>.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-set-default-colormap"/>gdk_screen_set_default_colormap ()</title>
<programlisting>void        gdk_screen_set_default_colormap (<link linkend="GdkScreen">GdkScreen</link> *screen,
                                             <link linkend="GdkColormap">GdkColormap</link> *colormap);</programlisting>
<para>
Sets the default <parameter>colormap</parameter> for <parameter>screen</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>colormap</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkColormap">GdkColormap</link>
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-system-colormap"/>gdk_screen_get_system_colormap ()</title>
<programlisting><link linkend="GdkColormap">GdkColormap</link>* gdk_screen_get_system_colormap (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Gets the system's default colormap for <parameter>screen</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the default colormap for <parameter>screen</parameter>.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-system-visual"/>gdk_screen_get_system_visual ()</title>
<programlisting><link linkend="GdkVisual">GdkVisual</link>*  gdk_screen_get_system_visual    (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Get the system's default visual for <parameter>screen</parameter>.
This is the visual for the root window of the display.
The return value should not be freed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the system visual

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-rgb-colormap"/>gdk_screen_get_rgb_colormap ()</title>
<programlisting><link linkend="GdkColormap">GdkColormap</link>* gdk_screen_get_rgb_colormap    (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Gets the preferred colormap for rendering image data on <parameter>screen</parameter>.
Not a very useful function; historically, GDK could only render RGB
image data to one colormap and visual, but in the current version
it can render to any colormap and visual. So there's no need to
call this function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the preferred colormap

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-rgb-visual"/>gdk_screen_get_rgb_visual ()</title>
<programlisting><link linkend="GdkVisual">GdkVisual</link>*  gdk_screen_get_rgb_visual       (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Gets a "preferred visual" chosen by GdkRGB for rendering image data
on <parameter>screen</parameter>. In previous versions of
GDK, this was the only visual GdkRGB could use for rendering. In
current versions, it's simply the visual GdkRGB would have chosen as 
the optimal one in those previous versions. GdkRGB can now render to 
drawables with any visual.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The <link linkend="GdkVisual">GdkVisual</link> chosen by GdkRGB.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-root-window"/>gdk_screen_get_root_window ()</title>
<programlisting><link linkend="GdkWindow">GdkWindow</link>*  gdk_screen_get_root_window      (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Gets the root window of <parameter>screen</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the root window

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-display"/>gdk_screen_get_display ()</title>
<programlisting><link linkend="GdkDisplay">GdkDisplay</link>* gdk_screen_get_display          (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Gets the display to which the <parameter>screen</parameter> belongs.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the display to which <parameter>screen</parameter> belongs

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-number"/>gdk_screen_get_number ()</title>
<programlisting><link linkend="gint">gint</link>        gdk_screen_get_number           (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Gets the index of <parameter>screen</parameter> among the screens in the display
to which it belongs. (See <link linkend="gdk-screen-get-display">gdk_screen_get_display</link>())</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the index

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-width"/>gdk_screen_get_width ()</title>
<programlisting><link linkend="gint">gint</link>        gdk_screen_get_width            (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Gets the width of <parameter>screen</parameter> in pixels</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the width of <parameter>screen</parameter> in pixels.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-height"/>gdk_screen_get_height ()</title>
<programlisting><link linkend="gint">gint</link>        gdk_screen_get_height           (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Gets the height of <parameter>screen</parameter> in pixels</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the height of <parameter>screen</parameter> in pixels.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-width-mm"/>gdk_screen_get_width_mm ()</title>
<programlisting><link linkend="gint">gint</link>        gdk_screen_get_width_mm         (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Gets the width of <parameter>screen</parameter> in millimeters. 
Note that on some X servers this value will not be correct.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the width of <parameter>screen</parameter> in pixels.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-height-mm"/>gdk_screen_get_height_mm ()</title>
<programlisting><link linkend="gint">gint</link>        gdk_screen_get_height_mm        (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Returns the height of <parameter>screen</parameter> in millimeters. 
Note that on some X servers this value will not be correct.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the heigth of <parameter>screen</parameter> in pixels.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-list-visuals"/>gdk_screen_list_visuals ()</title>
<programlisting><link linkend="GList">GList</link>*      gdk_screen_list_visuals         (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Lists the available visuals for the specified <parameter>screen</parameter>.
A visual describes a hardware image data format.
For example, a visual might support 24-bit color, or 8-bit color,
and might expect pixels to be in a certain format.
</para>
<para>
Call <link linkend="g-list-free">g_list_free</link>() on the return value when you're finished with it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> the relevant <link linkend="GdkScreen">GdkScreen</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a list of visuals; the list must be freed, but not its 
contents

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-toplevel-windows"/>gdk_screen_get_toplevel_windows ()</title>
<programlisting><link linkend="GList">GList</link>*      gdk_screen_get_toplevel_windows (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Obtains a list of all toplevel windows known to GDK on the screen <parameter>screen</parameter>.
A toplevel window is a child of the root window (see
<link linkend="gdk-get-default-root-window">gdk_get_default_root_window</link>()).
</para>
<para>
The returned list should be freed with <link linkend="g-list-free">g_list_free</link>(), but
its elements need not be freed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GdkScreen">GdkScreen</link> where the toplevels are located.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> list of toplevel windows, free with <link linkend="g-list-free">g_list_free</link>()

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-make-display-name"/>gdk_screen_make_display_name ()</title>
<programlisting><link linkend="gchar">gchar</link>*      gdk_screen_make_display_name    (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Determines the name to pass to <link linkend="gdk-display-open">gdk_display_open</link>() to get
a <link linkend="GdkDisplay">GdkDisplay</link> with this screen as the default screen.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a newly allocated string, free with <link linkend="g-free">g_free</link>()

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-n-monitors"/>gdk_screen_get_n_monitors ()</title>
<programlisting><link linkend="gint">gint</link>        gdk_screen_get_n_monitors       (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Returns the number of monitors being part of the virtual screen</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> number of monitors part of the virtual screen or
         0 if <parameter>screen</parameter> is not in virtual screen mode.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-monitor-geometry"/>gdk_screen_get_monitor_geometry ()</title>
<programlisting>void        gdk_screen_get_monitor_geometry (<link linkend="GdkScreen">GdkScreen</link> *screen,
                                             <link linkend="gint">gint</link> monitor_num,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *dest);</programlisting>
<para>
Retrieves the <link linkend="GdkRectangle">GdkRectangle</link> representing the size and start
coordinates of the individual monitor within the the entire virtual
screen.
</para>
<para>
Note that the virtual screen coordinates can be retrieved via 
<link linkend="gdk-screen-get-width">gdk_screen_get_width</link>() and <link linkend="gdk-screen-get-height">gdk_screen_get_height</link>().</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>monitor_num</parameter>&nbsp;:</term>
<listitem><simpara> the monitor number. 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkRectangle">GdkRectangle</link> to be filled with the monitor geometry
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-monitor-at-point"/>gdk_screen_get_monitor_at_point ()</title>
<programlisting><link linkend="gint">gint</link>        gdk_screen_get_monitor_at_point (<link linkend="GdkScreen">GdkScreen</link> *screen,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y);</programlisting>
<para>
Returns the monitor number in which the point (<parameter>x</parameter>,<parameter>y</parameter>) is located.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> the x coordinate in the virtual screen.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> the y coordinate in the virtual screen.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the monitor number in which the point (<parameter>x</parameter>,<parameter>y</parameter>) lies, or
  a monitor close to (<parameter>x</parameter>,<parameter>y</parameter>) if the point is not in any monitor.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-monitor-at-window"/>gdk_screen_get_monitor_at_window ()</title>
<programlisting><link linkend="gint">gint</link>        gdk_screen_get_monitor_at_window
                                            (<link linkend="GdkScreen">GdkScreen</link> *screen,
                                             <link linkend="GdkWindow">GdkWindow</link> *window);</programlisting>
<para>
Returns the number of the monitor in which the largest area of the 
bounding rectangle of <parameter>window</parameter> resides.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkScreen">GdkScreen</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkWindow">GdkWindow</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the monitor number in which most of <parameter>window</parameter> is located,
          or if <parameter>window</parameter> does not intersect any monitors, a monitor,
          close to <parameter>window</parameter>.
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-broadcast-client-message"/>gdk_screen_broadcast_client_message ()</title>
<programlisting>void        gdk_screen_broadcast_client_message
                                            (<link linkend="GdkScreen">GdkScreen</link> *screen,
                                             <link linkend="GdkEvent">GdkEvent</link> *event);</programlisting>
<para>
Sends an X ClientMessage event to all toplevel windows on <parameter>screen</parameter>.
</para>
<para>
Toplevel windows are determined by checking for the WM_STATE property, 
as described in the Inter-Client Communication Conventions Manual (ICCCM).
If no windows are found with the WM_STATE property set, the message is 
sent to all children of the root window.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GdkScreen">GdkScreen</link> where the event will be broadcasted.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>event</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GdkEvent">GdkEvent</link>.
</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>
<refsect2>
<title><anchor id="gdk-screen-get-setting"/>gdk_screen_get_setting ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    gdk_screen_get_setting          (<link linkend="GdkScreen">GdkScreen</link> *screen,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="GValue">GValue</link> *value);</programlisting>
<para>
Retrieves a desktop-wide setting such as double-click time
for the <link linkend="GdkScreen">GdkScreen</link> <parameter>screen</parameter>. 
</para>
<para>
FIXME needs a list of valid settings here, or a link to 
more information.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GdkScreen">GdkScreen</link> where the setting is located
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the setting
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> location to store the value of the setting
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if the setting existed and a value was stored
  in <parameter>value</parameter>, <literal>FALSE</literal> otherwise.

</simpara></listitem></varlistentry>
</variablelist><para>Since  2.2
</para></refsect2>

</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="GdkScreen-size-changed"/>The &quot;size-changed&quot; signal</title>
<programlisting>void        user_function                  (<link linkend="GdkScreen">GdkScreen</link> *gdkscreen,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gdkscreen</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
