<refentry id="gdk-Points-Rectangles-and-Regions">
<refmeta>
<refentrytitle>Points, Rectangles and Regions</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GDK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Points, Rectangles and Regions</refname><refpurpose>Simple graphical data types</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;gdk/gdk.h&gt;


struct      <link linkend="GdkPoint">GdkPoint</link>;

struct      <link linkend="GdkRectangle">GdkRectangle</link>;
<link linkend="gboolean">gboolean</link>    <link linkend="gdk-rectangle-intersect">gdk_rectangle_intersect</link>         (<link linkend="GdkRectangle">GdkRectangle</link> *src1,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *src2,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *dest);
void        <link linkend="gdk-rectangle-union">gdk_rectangle_union</link>             (<link linkend="GdkRectangle">GdkRectangle</link> *src1,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *src2,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *dest);

struct      <link linkend="GdkRegion">GdkRegion</link>;
<link linkend="GdkRegion">GdkRegion</link>*  <link linkend="gdk-region-new">gdk_region_new</link>                  (void);
<link linkend="GdkRegion">GdkRegion</link>*  <link linkend="gdk-region-polygon">gdk_region_polygon</link>              (<link linkend="GdkPoint">GdkPoint</link> *points,
                                             <link linkend="gint">gint</link> npoints,
                                             <link linkend="GdkFillRule">GdkFillRule</link> fill_rule);
enum        <link linkend="GdkFillRule">GdkFillRule</link>;
<link linkend="GdkRegion">GdkRegion</link>*  <link linkend="gdk-region-copy">gdk_region_copy</link>                 (<link linkend="GdkRegion">GdkRegion</link> *region);
<link linkend="GdkRegion">GdkRegion</link>*  <link linkend="gdk-region-rectangle">gdk_region_rectangle</link>            (<link linkend="GdkRectangle">GdkRectangle</link> *rectangle);
void        <link linkend="gdk-region-destroy">gdk_region_destroy</link>              (<link linkend="GdkRegion">GdkRegion</link> *region);

void        <link linkend="gdk-region-get-clipbox">gdk_region_get_clipbox</link>          (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *rectangle);
void        <link linkend="gdk-region-get-rectangles">gdk_region_get_rectangles</link>       (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             <link linkend="GdkRectangle">GdkRectangle</link> **rectangles,
                                             <link linkend="gint">gint</link> *n_rectangles);
<link linkend="gboolean">gboolean</link>    <link linkend="gdk-region-empty">gdk_region_empty</link>                (<link linkend="GdkRegion">GdkRegion</link> *region);
<link linkend="gboolean">gboolean</link>    <link linkend="gdk-region-equal">gdk_region_equal</link>                (<link linkend="GdkRegion">GdkRegion</link> *region1,
                                             <link linkend="GdkRegion">GdkRegion</link> *region2);
<link linkend="gboolean">gboolean</link>    <link linkend="gdk-region-point-in">gdk_region_point_in</link>             (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             int x,
                                             int y);
<link linkend="GdkOverlapType">GdkOverlapType</link> <link linkend="gdk-region-rect-in">gdk_region_rect_in</link>           (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *rect);
enum        <link linkend="GdkOverlapType">GdkOverlapType</link>;

void        <link linkend="gdk-region-offset">gdk_region_offset</link>               (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             <link linkend="gint">gint</link> dx,
                                             <link linkend="gint">gint</link> dy);
void        <link linkend="gdk-region-shrink">gdk_region_shrink</link>               (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             <link linkend="gint">gint</link> dx,
                                             <link linkend="gint">gint</link> dy);
void        <link linkend="gdk-region-union-with-rect">gdk_region_union_with_rect</link>      (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *rect);
void        <link linkend="gdk-region-intersect">gdk_region_intersect</link>            (<link linkend="GdkRegion">GdkRegion</link> *source1,
                                             <link linkend="GdkRegion">GdkRegion</link> *source2);
void        <link linkend="gdk-region-union">gdk_region_union</link>                (<link linkend="GdkRegion">GdkRegion</link> *source1,
                                             <link linkend="GdkRegion">GdkRegion</link> *source2);
void        <link linkend="gdk-region-subtract">gdk_region_subtract</link>             (<link linkend="GdkRegion">GdkRegion</link> *source1,
                                             <link linkend="GdkRegion">GdkRegion</link> *source2);
void        <link linkend="gdk-region-xor">gdk_region_xor</link>                  (<link linkend="GdkRegion">GdkRegion</link> *source1,
                                             <link linkend="GdkRegion">GdkRegion</link> *source2);

struct      <link linkend="GdkSpan">GdkSpan</link>;
void        (<link linkend="GdkSpanFunc">*GdkSpanFunc</link>)                  (<link linkend="GdkSpan">GdkSpan</link> *span,
                                             <link linkend="gpointer">gpointer</link> data);
void        <link linkend="gdk-region-spans-intersect-foreach">gdk_region_spans_intersect_foreach</link>
                                            (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             <link linkend="GdkSpan">GdkSpan</link> *spans,
                                             int n_spans,
                                             <link linkend="gboolean">gboolean</link> sorted,
                                             <link linkend="GdkSpanFunc">GdkSpanFunc</link> function,
                                             <link linkend="gpointer">gpointer</link> data);


</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>
GDK provides the <link linkend="GdkPoint">GdkPoint</link>, <link linkend="GdkRectangle">GdkRectangle</link>, <link linkend="GdkRegion">GdkRegion</link> and <link linkend="GdkSpan">GdkSpan</link> data types
for representing pixels and sets of pixels on the screen.
</para>
<para>
<link linkend="GdkPoint">GdkPoint</link> is a simple structure containing an x and y coordinate of a point.
</para>
<para>
<link linkend="GdkRectangle">GdkRectangle</link> is a structure holding the position and size of a rectangle.
The intersection of two rectangles can be computed with
<link linkend="gdk-rectangle-intersect">gdk_rectangle_intersect</link>(). To find the union of two rectangles use
<link linkend="gdk-rectangle-union">gdk_rectangle_union</link>().
</para>
<para>
<link linkend="GdkRegion">GdkRegion</link> is an opaque data type holding a set of arbitrary pixels, and is
usually used for clipping graphical operations (see <link linkend="gdk-gc-set-clip-region">gdk_gc_set_clip_region</link>()).
</para>
<para>
<link linkend="GdkSpan">GdkSpan</link> is a structure holding a spanline. A spanline is a horizontal line that
is one pixel wide. It is mainly used when rasterizing other graphics primitives.
It can be intersected to regions by using <link linkend="gdk-region-spans-intersect-foreach">gdk_region_spans_intersect_foreach</link>().
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GdkPoint"/>struct GdkPoint</title>
<programlisting>struct GdkPoint {

  gint x;
  gint y;
};
</programlisting>
<para>
Defines the x and y coordinates of a point.
</para><variablelist role="struct">
<varlistentry>
<term><link linkend="gint">gint</link> <structfield>x</structfield></term>
<listitem><simpara>the x coordinate of the point.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gint">gint</link> <structfield>y</structfield></term>
<listitem><simpara>the y coordinate of the point.

</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GdkRectangle"/>struct GdkRectangle</title>
<programlisting>struct GdkRectangle {

  gint x;
  gint y;
  gint width;
  gint height;
};
</programlisting>
<para>
Defines the position and size of a rectangle.
</para><variablelist role="struct">
<varlistentry>
<term><link linkend="gint">gint</link> <structfield>x</structfield></term>
<listitem><simpara>the x coordinate of the left edge of the rectangle.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gint">gint</link> <structfield>y</structfield></term>
<listitem><simpara>the y coordinate of the top of the rectangle.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gint">gint</link> <structfield>width</structfield></term>
<listitem><simpara>the width of the rectangle.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gint">gint</link> <structfield>height</structfield></term>
<listitem><simpara>the height of the rectangle.

</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-rectangle-intersect"/>gdk_rectangle_intersect ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    gdk_rectangle_intersect         (<link linkend="GdkRectangle">GdkRectangle</link> *src1,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *src2,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *dest);</programlisting>
<para>
Calculates the intersection of two rectangles.
</para><variablelist role="params">
<varlistentry><term><parameter>src1</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkRectangle">GdkRectangle</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src2</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkRectangle">GdkRectangle</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>the intersection of <parameter>src1</parameter> and <parameter>src2</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><literal>TRUE</literal> if the rectangles intersect.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-rectangle-union"/>gdk_rectangle_union ()</title>
<programlisting>void        gdk_rectangle_union             (<link linkend="GdkRectangle">GdkRectangle</link> *src1,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *src2,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *dest);</programlisting>
<para>
Calculates the union of two rectangles.
The union of rectangles <parameter>src1</parameter> and <parameter>src2</parameter> is the smallest rectangle which
includes both <parameter>src1</parameter> and <parameter>src2</parameter> within it.
</para><variablelist role="params">
<varlistentry><term><parameter>src1</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkRectangle">GdkRectangle</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src2</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkRectangle">GdkRectangle</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara>the union of <parameter>src1</parameter> and <parameter>src2</parameter>.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GdkRegion"/>struct GdkRegion</title>
<programlisting>struct GdkRegion;</programlisting>
<para>
A GdkRegion represents a set of pixels on the screen.
The only user-visible field of the structure is the user_data member, which
can be used to attach arbitrary data to the <link linkend="GdkRegion">GdkRegion</link>.
</para></refsect2>
<refsect2>
<title><anchor id="gdk-region-new"/>gdk_region_new ()</title>
<programlisting><link linkend="GdkRegion">GdkRegion</link>*  gdk_region_new                  (void);</programlisting>
<para>
Creates a new empty <link linkend="GdkRegion">GdkRegion</link>.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>a new empty <link linkend="GdkRegion">GdkRegion</link>.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-polygon"/>gdk_region_polygon ()</title>
<programlisting><link linkend="GdkRegion">GdkRegion</link>*  gdk_region_polygon              (<link linkend="GdkPoint">GdkPoint</link> *points,
                                             <link linkend="gint">gint</link> npoints,
                                             <link linkend="GdkFillRule">GdkFillRule</link> fill_rule);</programlisting>
<para>
Creates a new <link linkend="GdkRegion">GdkRegion</link> using the polygon defined by a number of points.

</para><variablelist role="params">
<varlistentry><term><parameter>points</parameter>&nbsp;:</term>
<listitem><simpara>an array of <link linkend="GdkPoint">GdkPoint</link> structs.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>npoints</parameter>&nbsp;:</term>
<listitem><simpara>the number of elements in the <parameter>points</parameter> array.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fill_rule</parameter>&nbsp;:</term>
<listitem><simpara>specifies which pixels are included in the region when the polygon
overlaps itself.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>a new <link linkend="GdkRegion">GdkRegion</link> based on the given polygon.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GdkFillRule"/>enum GdkFillRule</title>
<programlisting>typedef enum
{
  GDK_EVEN_ODD_RULE,
  GDK_WINDING_RULE
} GdkFillRule;
</programlisting>
<para>
The method for determining which pixels are included in a region, when
creating a <link linkend="GdkRegion">GdkRegion</link> from a polygon.
The fill rule is only relevant for polygons which overlap themselves.
</para><variablelist role="enum">
<varlistentry>
<term><literal>GDK_EVEN_ODD_RULE</literal></term>
<listitem><simpara>areas which are overlapped an odd number of times are
included in the region, while areas overlapped an even number of times are not.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GDK_WINDING_RULE</literal></term>
<listitem><simpara>overlapping areas are always included.

</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-copy"/>gdk_region_copy ()</title>
<programlisting><link linkend="GdkRegion">GdkRegion</link>*  gdk_region_copy                 (<link linkend="GdkRegion">GdkRegion</link> *region);</programlisting>
<para>
Copies <parameter>region</parameter>, creating an identical new region.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>region</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkRegion">GdkRegion</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new region identical to <parameter>region</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-rectangle"/>gdk_region_rectangle ()</title>
<programlisting><link linkend="GdkRegion">GdkRegion</link>*  gdk_region_rectangle            (<link linkend="GdkRectangle">GdkRectangle</link> *rectangle);</programlisting>
<para>
Creates a new region containing the area <parameter>rectangle</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>rectangle</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkRectangle">GdkRectangle</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new region
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-destroy"/>gdk_region_destroy ()</title>
<programlisting>void        gdk_region_destroy              (<link linkend="GdkRegion">GdkRegion</link> *region);</programlisting>
<para>
Destroys a <link linkend="GdkRegion">GdkRegion</link>.
</para><variablelist role="params">
<varlistentry><term><parameter>region</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkRegion">GdkRegion</link>.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-get-clipbox"/>gdk_region_get_clipbox ()</title>
<programlisting>void        gdk_region_get_clipbox          (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *rectangle);</programlisting>
<para>
Returns the smallest rectangle which includes the entire <link linkend="GdkRegion">GdkRegion</link>.
</para><variablelist role="params">
<varlistentry><term><parameter>region</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkRegion">GdkRegion</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rectangle</parameter>&nbsp;:</term>
<listitem><simpara>returns the smallest rectangle which includes all of <parameter>region</parameter>.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-get-rectangles"/>gdk_region_get_rectangles ()</title>
<programlisting>void        gdk_region_get_rectangles       (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             <link linkend="GdkRectangle">GdkRectangle</link> **rectangles,
                                             <link linkend="gint">gint</link> *n_rectangles);</programlisting>
<para>
Obtains the area covered by the region as a list of rectangles.
The array returned in <parameter>rectangles</parameter> must be freed with <link linkend="g-free">g_free</link>().</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>region</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkRegion">GdkRegion</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rectangles</parameter>&nbsp;:</term>
<listitem><simpara> return location for an array of rectangles
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_rectangles</parameter>&nbsp;:</term>
<listitem><simpara> length of returned array
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-empty"/>gdk_region_empty ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    gdk_region_empty                (<link linkend="GdkRegion">GdkRegion</link> *region);</programlisting>
<para>
Returns <literal>TRUE</literal> if the <link linkend="GdkRegion">GdkRegion</link> is empty.
</para><variablelist role="params">
<varlistentry><term><parameter>region</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkRegion">GdkRegion</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><literal>TRUE</literal> if <parameter>region</parameter> is empty.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-equal"/>gdk_region_equal ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    gdk_region_equal                (<link linkend="GdkRegion">GdkRegion</link> *region1,
                                             <link linkend="GdkRegion">GdkRegion</link> *region2);</programlisting>
<para>
Returns <literal>TRUE</literal> if the two regions are the same.
</para><variablelist role="params">
<varlistentry><term><parameter>region1</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkRegion">GdkRegion</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>region2</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkRegion">GdkRegion</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><literal>TRUE</literal> if <parameter>region1</parameter> and <parameter>region2</parameter> are equal.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-point-in"/>gdk_region_point_in ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    gdk_region_point_in             (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             int x,
                                             int y);</programlisting>
<para>
Returns <literal>TRUE</literal> if a point is in a region.
</para><variablelist role="params">
<varlistentry><term><parameter>region</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkRegion">GdkRegion</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara>the x coordinate of a point.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara>the y coordinate of a point.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><literal>TRUE</literal> if the point is in <parameter>region</parameter>.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-rect-in"/>gdk_region_rect_in ()</title>
<programlisting><link linkend="GdkOverlapType">GdkOverlapType</link> gdk_region_rect_in           (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *rect);</programlisting>
<para>
Tests whether a rectangle is within a region.
</para><variablelist role="params">
<varlistentry><term><parameter>region</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkRegion">GdkRegion</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rect</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkRectangle">GdkRectangle</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><literal>GDK_OVERLAP_RECTANGLE_IN</literal>, <literal>GDK_OVERLAP_RECTANGLE_OUT</literal>, or
<literal>GDK_OVERLAP_RECTANGLE_PART</literal>, depending on whether the rectangle is inside,
outside, or partly inside the <link linkend="GdkRegion">GdkRegion</link>, respectively.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GdkOverlapType"/>enum GdkOverlapType</title>
<programlisting>typedef enum
{
  GDK_OVERLAP_RECTANGLE_IN,
  GDK_OVERLAP_RECTANGLE_OUT,
  GDK_OVERLAP_RECTANGLE_PART
} GdkOverlapType;
</programlisting>
<para>
Specifies the possible values returned by <link linkend="gdk-region-rect-in">gdk_region_rect_in</link>().
</para><variablelist role="enum">
<varlistentry>
<term><literal>GDK_OVERLAP_RECTANGLE_IN</literal></term>
<listitem><simpara>if the rectangle is inside the <link linkend="GdkRegion">GdkRegion</link>.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GDK_OVERLAP_RECTANGLE_OUT</literal></term>
<listitem><simpara>if the rectangle is outside the <link linkend="GdkRegion">GdkRegion</link>.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GDK_OVERLAP_RECTANGLE_PART</literal></term>
<listitem><simpara>if the rectangle is partly inside the <link linkend="GdkRegion">GdkRegion</link>.

</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-offset"/>gdk_region_offset ()</title>
<programlisting>void        gdk_region_offset               (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             <link linkend="gint">gint</link> dx,
                                             <link linkend="gint">gint</link> dy);</programlisting>
<para>
Moves a region the specified distance.
</para><variablelist role="params">
<varlistentry><term><parameter>region</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkRegion">GdkRegion</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dx</parameter>&nbsp;:</term>
<listitem><simpara>the distance to move the region horizontally.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dy</parameter>&nbsp;:</term>
<listitem><simpara>the distance to move the region vertically.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-shrink"/>gdk_region_shrink ()</title>
<programlisting>void        gdk_region_shrink               (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             <link linkend="gint">gint</link> dx,
                                             <link linkend="gint">gint</link> dy);</programlisting>
<para>
Resizes a region by the specified amount.
Positive values shrink the region. Negative values expand it.
</para><variablelist role="params">
<varlistentry><term><parameter>region</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkRegion">GdkRegion</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dx</parameter>&nbsp;:</term>
<listitem><simpara>the number of pixels to shrink the region horizontally.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dy</parameter>&nbsp;:</term>
<listitem><simpara>the number of pixels to shrink the region vertically.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-union-with-rect"/>gdk_region_union_with_rect ()</title>
<programlisting>void        gdk_region_union_with_rect      (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             <link linkend="GdkRectangle">GdkRectangle</link> *rect);</programlisting>
<para>
Sets the area of <parameter>region</parameter> to the union of the areas of <parameter>region</parameter> and
<parameter>rect</parameter>. The resulting area is the set of pixels contained in
either <parameter>region</parameter> or <parameter>rect</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>region</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkRegion">GdkRegion</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rect</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkRectangle">GdkRectangle</link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-intersect"/>gdk_region_intersect ()</title>
<programlisting>void        gdk_region_intersect            (<link linkend="GdkRegion">GdkRegion</link> *source1,
                                             <link linkend="GdkRegion">GdkRegion</link> *source2);</programlisting>
<para>
Sets the area of <parameter>source1</parameter> to the intersection of the areas of <parameter>source1</parameter>
and <parameter>source2</parameter>. The resulting area is the set of pixels contained in
both <parameter>source1</parameter> and <parameter>source2</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>source1</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkRegion">GdkRegion</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>source2</parameter>&nbsp;:</term>
<listitem><simpara> another <link linkend="GdkRegion">GdkRegion</link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-union"/>gdk_region_union ()</title>
<programlisting>void        gdk_region_union                (<link linkend="GdkRegion">GdkRegion</link> *source1,
                                             <link linkend="GdkRegion">GdkRegion</link> *source2);</programlisting>
<para>
Sets the area of <parameter>source1</parameter> to the union of the areas of <parameter>source1</parameter> and
<parameter>source2</parameter>. The resulting area is the set of pixels contained in
either <parameter>source1</parameter> or <parameter>source2</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>source1</parameter>&nbsp;:</term>
<listitem><simpara>  a <link linkend="GdkRegion">GdkRegion</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>source2</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkRegion">GdkRegion</link> 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-subtract"/>gdk_region_subtract ()</title>
<programlisting>void        gdk_region_subtract             (<link linkend="GdkRegion">GdkRegion</link> *source1,
                                             <link linkend="GdkRegion">GdkRegion</link> *source2);</programlisting>
<para>
Subtracts the area of <parameter>source2</parameter> from the area <parameter>source1</parameter>. The resulting
area is the set of pixels contained in <parameter>source1</parameter> but not in <parameter>source2</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>source1</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkRegion">GdkRegion</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>source2</parameter>&nbsp;:</term>
<listitem><simpara> another <link linkend="GdkRegion">GdkRegion</link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-xor"/>gdk_region_xor ()</title>
<programlisting>void        gdk_region_xor                  (<link linkend="GdkRegion">GdkRegion</link> *source1,
                                             <link linkend="GdkRegion">GdkRegion</link> *source2);</programlisting>
<para>
Sets the area of <parameter>source1</parameter> to the exclusive-OR of the areas of <parameter>source1</parameter>
and <parameter>source2</parameter>. The resulting area is the set of pixels contained in one
or the other of the two sources but not in both.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>source1</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GdkRegion">GdkRegion</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>source2</parameter>&nbsp;:</term>
<listitem><simpara> another <link linkend="GdkRegion">GdkRegion</link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GdkSpan"/>struct GdkSpan</title>
<programlisting>struct GdkSpan {

  gint x;
  gint y;
  gint width;
};
</programlisting>
<para>
A GdkSpan represents a horizontal line of pixels starting
at the pixel with coordinates <parameter>x</parameter>, <parameter>y</parameter> and ending before <parameter>x</parameter> + <parameter>width</parameter>, <parameter>y</parameter>.
</para><variablelist role="struct">
<varlistentry>
<term><link linkend="gint">gint</link> <structfield>x</structfield></term>
<listitem><simpara>x coordinate of the first pixel.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gint">gint</link> <structfield>y</structfield></term>
<listitem><simpara>y coordinate of the first pixel.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gint">gint</link> <structfield>width</structfield></term>
<listitem><simpara>number of pixels in the span.

</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GdkSpanFunc"/>GdkSpanFunc ()</title>
<programlisting>void        (*GdkSpanFunc)                  (<link linkend="GdkSpan">GdkSpan</link> *span,
                                             <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
This defines the type of the function passed to 
<link linkend="gdk-region-spans-intersect-foreach">gdk_region_spans_intersect_foreach</link>(). 
</para><variablelist role="params">
<varlistentry><term><parameter>span</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkSpan">GdkSpan</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>the user data passed to <link linkend="gdk-region-spans-intersect-foreach">gdk_region_spans_intersect_foreach</link>().


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gdk-region-spans-intersect-foreach"/>gdk_region_spans_intersect_foreach ()</title>
<programlisting>void        gdk_region_spans_intersect_foreach
                                            (<link linkend="GdkRegion">GdkRegion</link> *region,
                                             <link linkend="GdkSpan">GdkSpan</link> *spans,
                                             int n_spans,
                                             <link linkend="gboolean">gboolean</link> sorted,
                                             <link linkend="GdkSpanFunc">GdkSpanFunc</link> function,
                                             <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
Calls a function on each span in the intersection of <parameter>region</parameter> and
<parameter>spans</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>region</parameter>&nbsp;:</term>
<listitem><simpara>a <link linkend="GdkRegion">GdkRegion</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>spans</parameter>&nbsp;:</term>
<listitem><simpara>an array of <link linkend="GdkSpans">GdkSpans</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_spans</parameter>&nbsp;:</term>
<listitem><simpara>the length of <parameter>spans</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sorted</parameter>&nbsp;:</term>
<listitem><simpara><literal>TRUE</literal> if <parameter>spans</parameter> is sorted wrt. the y coordinate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>function</parameter>&nbsp;:</term>
<listitem><simpara>function to call on each span in the intersection.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>data to pass to <parameter>function</parameter>.


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
