BUILDTOP=$(C)$(S)$(U)$(U)
FERG_SRCS=f_cbc.c f_cksum.c f_pcbc.c f_sched.c f_ecb.c f_parity.c f_tables.c
FERG_OBJS=f_cbc.$(OBJEXT) f_cksum.$(OBJEXT) f_pcbc.$(OBJEXT) f_sched.$(OBJEXT) \
	  f_ecb.$(OBJEXT) f_parity.$(OBJEXT) f_tables.$(OBJEXT)

DESSRCS= $(FERG_SRCS) key_sched.c debug_decl.c quad_cksum.c \
	string_to_key.c weak_key.c util.c 

SRCS=   des_internal.h \
	key_test.c testit.c verify.c enc.c \
	$(DESSRCS) \
	$(DES_TIME_SRCS) $(SERVER_DES_SRCS)

OBJS= $(FERG_OBJS) key_sched.$(OBJEXT) debug_decl.$(OBJEXT) quad_cksum.$(OBJEXT) \
	string_to_key.$(OBJEXT) weak_key.$(OBJEXT) util.$(OBJEXT) \
	$(DES_TIME_OBJS) $(SERVER_DES_OBJS)

# These routines are only used in server & Unix envrionments, not PC clients.
SERVER_DES_SRCS= new_rnd_key.c random_key.c read_password.c
SERVER_DES_OBJS= new_rnd_key.$(OBJEXT) random_key.$(OBJEXT) read_password.$(OBJEXT)

ARCHIVEARGS= $@ $(OBJS)

CODE=$(SRCS) Makefile.in f_tables.h READ_ME f_README ChangeLog

# Library to create
LIBNAME=libdes.$(LIBEXT)

# Make this the first target.
all::

#### include configury here
##DOS!include ..\..\config\common
##DOS!include ..\..\config\mt-win

# We want *library* compilation options...
DBG=$(DBG_LIB)

all:: $(LIBNAME)

$(LIBNAME): $(OBJS)
	$(RMLIB) $@
	$(ARCHIVE) $(ARCHIVEARGS)
	$(RANLIB) $@

clean:: clean-$(WHAT)
	-$(RM) $(LIBNAME)
	-$(RM) *.$(OBJEXT)

distclean:: clean
	$(RM) *~ core
	$(RM) Makefile config.status 

clean-::
clean-unix::

clean-windows::
	-$(RM) libdes.bak
	-$(RM) msvc.pdb
	-$(RM) proj.err

install:: install-$(WHAT)

install-unix::
	$(INSTALLLIB) $(LIBNAME) $(DESTDIR)$(LIBDIR)$(S)$(LIBNAME)
	$(CHMOD) 644 $(DESTDIR)$(LIBDIR)$(S)$(LIBNAME)
	$(RANLIB)    $(DESTDIR)$(LIBDIR)$(S)$(LIBNAME)
	$(CHMOD) 444 $(DESTDIR)$(LIBDIR)$(S)$(LIBNAME)

install-windows::

## 


## verify that the library correctly implements the DES standard.  
## Run this after any change to the source.

verify: verify.$(OBJEXT) $(LIBNAME)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $@.$(OBJEXT) $(LIBNAME) $(BSDLIB)

key_test: key_test.$(OBJEXT) $(LIBNAME)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $@.$(OBJEXT) $(LIBNAME) $(BSDLIB)

testit: testit.$(OBJEXT) $(LIBNAME) random_key.$(OBJEXT)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $@.$(OBJEXT) random_key.$(OBJEXT) \
					      $(LIBNAME) $(BSDLIB)

check:: testit verify key_test
	$(C)$(S)verify
	time $(C)$(S)testit -n50000 10 20
	$(C)$(S)key_test

clean::
	$(RM) verify
	$(RM) verify.$(OBJEXT)
	$(RM) key_test
	$(RM) key_test.$(OBJEXT)
	$(RM) testit
	$(RM) testit.$(OBJEXT)
