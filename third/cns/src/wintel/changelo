Wed Feb 1 12:00:00 1995  John Rivlin  (jrivlin@fusion.com)
	
	* makefile: Updated to reflect name changes from wintel to telnet.
	Added install and clean targets to install telnet.exe into 
	the windows directory.

	* wintel.c: Renamed to telnet.c

	* wintel.def: Renamed to telnet.def

	* wintel.rc: Renamed to telnet.rc

	* wintel.dlg: Renamed to telnet.dlg

	* wintel.h: Renamed to telnet.h

	* auth.c: Changed wintel to telnet throughout

	* font.c: Changed wintel to telnet throughout

	* negotiat.c: Changed wintel to telnet throughout

	* screen.c: Changed wintel to telnet throughout

	* ini.h: Changed wintel to telnet throughout.  Also changed
	to use kerberos.ini file rather than seperate wintel.ini file.
	The sections used will be "Telnet" and "Telnet Hosts".
	Also changed INI_DEFAULTS to INI_TELNET

Mon Jan 30 12:00:00 1995  John Rivlin  (jrivlin@fusion.com)

	* screen.c: Added MakeWindowTitle routine to create titles which
	include width and height of window as well as hostname.  Called
	during initialization and window resizing.  Window title size
	increased to 128 bytes.

	* screen.c: Updated PrivateProfile calls to use INI_xxx variables.
	Included ini.h to gain access to them.  Also changed the name of
	the .INI file from NCSA_NET.INI to WINTEL.INI.  This centralizes the
	vocabulary used in the WINTEL.INI file.

	* screen.c: Changed default wrapping mode to allow wrapping at end
	of line (DECAWM=1).  This allows lines which are too long to wrap
	by default without explicitly setting wrapping mode.  This helps
	when "ansi" rather than "vt100" is selected for a TERM type.
	
	* screen.c: Create Windows blinking Caret on focus and initialization.  
	Also add calls to ScreenCursorOff and ScreenCrusorOn to get the cursor
	repositioned properly after scrolling operations or other cursor
	movement.

	* screen.c (ScreenWndProc): Consolidated locking and unlocking of
	hgScr throughout to make code mode readable.

	* screen.c (ScreenWndProc): WM_GETMINMAXINFO message now handles 
	minimization and maximization of window properly.  Also improved 
	to provide minimum window size of 20wx4h.

	* screen.c (ScreenWndProc): WM_SIZE now avoids resizing on minimization.
	
	* intern.c (GetScreenLineFromY): Removed optimization for bottom of
	screen case as it fails when the scrolling region is set to not 
	include the bottom line of the screen.

	* intern.c (ScreenClip, Screendellines, Screeninslines): Deleted as
	they are obsolete.

	* intern.c (ScreenCursorOn, ScreenCursorOff): Modified to use Windows
	caret rather than drawing an "_" character.  Also ScreenCursorOn
	now accounts for scrollback through the screen buffer.

	* intern.c (ScreenUnscroll): Created to readjust the screen back
	to the bottom of the scroll buffer.

	* intern.c (ScreenDraw): Removed obsolete code.  Removed code which
	became ScreenUnscroll.  Note that no call to ScreenUnscroll was 
	put in place of the removed code.  This is because the unscroll has
	been moved to the ScreenEM routine and is now called more frequently
	correcting a number of problems with emulation taking place while
	the screen was scrolled back.

	* font.c: Now uses ini.h variables rather than hard coded values.

	* wintel.c (MainWndProc): Save off the backspace setting for each
	host and for the default case in the .INI file.  Also save the
	screen size changes in the .INI file and avoid send NAWS commands
	to systems which can't negotiate window size.

	* wintel.c (SaveHostName): Created to maintain a list of recently
	connected hosts in the WINTEL.INI file.

	* wintel.c: Remove obsolete code.

	* wintel.c (OpenTelnetConnection): Pick up default window size and
	save off the host name in the list of recent hosts contacted.

	* emul.c (ScreenEm): Unscroll the screen prior to all emulation.
	This solves a number of bugs with screen update occurring while
	the screen buffer is not scrolled to the bottom of the screen.
	This could be improved to happen on keyboard input rather than
	screen output at some later date, however this would require
	a variety of changes in lower level code.

	* negotiat.c: Remember when a connection is not able to do
	window size negotiation.  Also remember the window width and 
	height within the connection info.

	* wintel.h: Change send_naws prototype now that send_naws
	can pick up window size info out of the con structure.

	* struct.h: Changed con structure to remember window size and
	resizeability.

	* screen.h: Added 3 pixels to FRAME_HEIGHT to allow caret to be
	visible.  Also expanded tabs table size to fix crashes which
	occurred when tab stops were being set or cleared.  Prototypes
	for ScreenUnscroll added.  OutScreenLine and OutScreenChar
	removed as they are obsolete.


Fri Jan 20 12:00:00 1995  John Rivlin  (jrivlin@fusion.com)

	* intern,c: Changed loops to memset calls throughout for performance 
	and clarity.  Removed dead code.
	* screen.c (DrawTextScreen): Rewrote to improve preformance 
	dramatically by not setting attributes on each character.
	* screen.c (ScreenAdjustUp, ScreenAdjustDown): Added these routines
	to adjust the screen relative to the buffer on page up, page down,
	line up, line down and thumb tracking operations.
	* screen.c (ScreenWndProc): Added (IDM_DEBUG) menu handling to 
	display integrity information about the internal screen description.
	Rewrote SB_LINEUP, SB_LINEDOWN, SB_PAGEUP, SB_PAGEDOWN, SB_THUMBTRACK
	and SB_THUMBPOSITION to facilitate improved scrolling preformance and
	elimiate scrolling redraw bugs.
	screen.h: added IDM_DEBUG case value.
	wintel.rc: Added Debug menu item.

Tue Jan 7 12:00:00 1995  John Rivlin  (jrivlin@fusion.com)

	Features added, bugs fixed are as follows:

		Merged WINTEL, SCREEN and INCLUDE sub-directories and moved
		the result up one level to WINTEL directory.  Deleted 
		unused files.
		
		Removed SCREEN DLL merging the routines contained therein 
		into WINTEL application allowing single exe file result.

		Changed all code to compile using large model.

		Removed usage of FAR and far keywords.

		Changed telnet to use a kstream rather than a socket
		in preparation for encryption support.  Did not actually
		add encryption support due to lack of clear definition.
		Tested kstream in context with telent, however left the
		key read operating directly on socket in wintel/MainWndProc
		due to performance problems with single character read
		in kstream_read which needs to get worked out.

		Added dynamic screen resizing capability.  NAWS telnet option
		is now sent when the screen is resized.

		Fixed bug causing occasional authentication failures.

		Added delete lines and delete character terminal emulation.

		Fixed scrolling bugs causing odd scrollbar behavior and
		stray pixels on redraw.

		Page up and Page down keys now perform the correct 
		functions.  They were switched.

	* ChangeLog: Merge change log from screen, include and wintel 
	directories
	* auth.h: Added callback routines for kstream implementation
	to allow encryption of the data stream.
	* auth.c: Added auth_encrypt_enable, auth_init, auth_destroy,
	auth_encrypt, auth_decrypt to facilitate kstream support.
	Changed all socked references to kstream references for 
	encryption support.
	* wintel.def: Removed references to SCREEN DLL routines which
	have now become internal.
	* wintel.c: Moved ScreenInit initialization to ApplicationInit
	routine to reflect change from DLL.  Changed all socket references
	to kstream references for encryption support.  Changed all socket
	calls to equivalent kstream calls.  Added WM_MYSCREENSIZE message
	to send NAWS message when the screen is dynamically resized.
	* negotiat.c: Changed socket calls to kstream calls for encryption
	support.  Made end_sub static in parse routine to fix uninitialized
	variable bug which sometimes caused authentication to fail. Moved
	NAWS sending code to send_naws routine to allow it to be called 
	multiple places.
	* wintel.rc: Moved the contents of screen.rc in to simplify things.
	* screen.rc: deleted
	* wintel.h: Cleaned up #include references removing pathname.
	Moved globals szAutoHostName, szUserName, and szHostName in
	so they can be accessed from multiple files.  Added prototype
	for send_naws.
	* makefile: simplified and merged with screen makefile
	* screen/makefile: Merged into makefile
	* emul.c: Changed all references to maxwidth -> width for screen
	resizing.  Added delete lines and delete characters support.
	Removed references to VSPBOTTOM -> scr.height.
	* intern.c: All routines changed to support dynamic screen
	resizing.
	* intern.c (ScreenDelLines): Implemented.
	* intern.c (ScreenInsertLine): Replaced to fix scrolling bugs.
	* intern.c (ScreenInsLines): Rewritten to fix scrolling bugs and
	support dynamic resizing.
	* intern.c (ScreenIndex): Fixed off by 1 bug.
	* intern.c (ScreenDelChars): Implemented.
	* intern.c (ScreenEraseEOL): Remove unused offset.
	* intern.c (ScreenSetOption): Removed 132 column support as
	it is not meaningful in resizable environment.
	* intern.c (CheckScreen): Added to verify the integrity of the
	screen line table during debugging.
	* screen.c: All routines modified for dynamic resizing.
	* screen.c (LibMain): Removed as screen is no longer a DLL.
	* screen.c (ScreenNewLine): Modified to create MAX_LINE_WIDTH
	lines to support resizing.
	* screen.c (InitNewScreen): Removed extra line from bottom of
	screen table and reworked for dynamic resizing.  Note that 
	the extra line in the screen table was masking off by one 
	errors elsewhere.
	* screen.c (SetScrollBar): Created to consolidate scrollbar
	resizing.  Added Windows 3.1 ability to have a scrollbar which
	is disabled when text goes away, rather than disappears and
	reappears.
	* screen.c (ScreenScroll): Rewritten to handle dynamic resizing
	and fix a variety of scrolling bugs.
	* screen.c (SetScreenSize): Created to perform dynamic screen
	resizing.
	* screen.c (ScreenWndProc): Corrected problem with page up
	key be switched with page down key.  Fixed problems with
	stray pixels caused by ScrollWindow calls.  Also solved problems
	with half lines at the bottom of the screen created by dynamic
	resizing improvements.  Made window resizeable, including
	generation of WM_MYSCREENSIZE message on WM_SIZE message.
	edit.c: Reworked for dynamic screen resizing.  Fixed problems
	caused by having half lines at the bottom of the screen to
	click on.
	proto.h: Updated for kstream usage.
	struct.h: Updated for kstream usage.
	screen.h: Changed WM_xxxx message values to avoid conflicts
	with Windows message values.  Added MAX_LINE_WIDTH to control
	overall maximum window width in columns.  Changed SCREENLINE
	and SCREEN structures to support dynamiic resizing.  Added
	prototypes for new routines ScreenInit, ScreenDelChars, 
	ScreenDelLInes and CheckScreen.

Wed Nov 23 01:37:01 1994  John Gilmore  (gnu@cygnus.com)

	* auth.c:  Improve error messages further.
	* wintel.dlg:  Revise dialog box to be much more friendly.
	* wintel.mak:  Change stack size from 18K to 32K so that the
	program doesn't hang or crash by exceeding the stack in WinSock 
	calls.

Wed Nov 23 01:13:04 1994  John Gilmore  (gnu@cygnus.com)

	* auth.c:  Print much improved error messages for auth failures.
	* auth.c (auth_abort):  Use TelnetSend, not send, in case send fails.

Fri Nov 11 22:26:31 1994  John Gilmore  (gnu@cygnus.com)

	Clean up, and make it work reliably in-house at Cygnus.

	* $$msvcin.txt, *.obj, *.sbr, screen.dll, screen.lib, wintel.bsc,
	wintel.dsa, wintel.exe, wintel.map, wintel.pdb, wintel.res,
	wintel.rws, wintel.sym, wintel.wsp, wintel.~dl:  Vacuum up the
	binaries, and take out the trash.
	* auth.c, negotiat.c:  Take paths out of #includes.
	* auth.c, negotiat.c, wintel.c: Replace all calls to send() with
	TelnetSend().
	* wintel.c (TelnetSend):  New function, making sends synchronous
	even when receiving data on the socket is async.
	* wintel.mak (DEBUG):  Enable.
	(INCLUDE_DIRS):  Add and set.
	(CFLAGS_D_WEXE, CFLAGS_R_WEXE): Use $(INCLUDE_DIRS).
	(LIBS_D_WEXE, LIBS_R_WEXE):  Fix path to kerberos.lib.
	(clean):  Add rule.

Fri Nov 11 22:20:39 1994  John Gilmore  (gnu@cygnus.com)

	* $$msvcin.txt, buf.txt, *.obj, *.sbr, edout, edtemp.bat,
	msvc.pdb, screen.bsc, screen.dll, screen.lib, screen.map,
	screen.pdb, screen.res, screen.sym, screen.wsp, winmem.sbt,
	wintel.exe:  Remove binary files and misc useless trash.

	* screen.mak (clean):  Add.
	(CFLAGS_R_WDLL):  Use same -I option normaly, as when debugging.

Fri Nov 11 22:15:40 1994  John Gilmore  (gnu@cygnus.com)

	* proto.h (TelnetSend):  Prototype for new function that 
	implements "send" even on a nonblocking socket.

