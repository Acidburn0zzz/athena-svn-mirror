AC_PREREQ(2.0)
AC_INIT(Makefile.local)
dnl Default to /usr/kerberos, not /usr/local.
AC_PREFIX_DEFAULT(/usr/kerberos)

dnl We're currently in TOP/src/appl/rdist.
AC_CONFIG_AUX_DIR(../../..)
dnl I forget why, but gas at least needed this to be absolute. -kr
ac_aux_dir=`cd $ac_aux_dir && pwd`
ac_install_sh="$ac_aux_dir/install.sh -c"

AC_CANONICAL_SYSTEM

rdist_os=NONE

# FIXME: This should actually be based on the host.  Kerberos does not
# have a target.  Its configury should be based on the host.

changequote(,)
case "${target}" in
  *-*-aix3*)		rdist_os=aix3 ;;
  *-*-dgux*)		rdist_os=dgux ;;
  *-*-hpux*)		rdist_os=hpux ;;
  *-*-irix4*)		rdist_os=irix4 ;;
  *-*-irix5*)		rdist_os=irix5 ;;
  *-*-linux*)		rdist_os=linux ;;
  *-*-osf*)		rdist_os=osf1 ;;
  *-*-solaris2*)	rdist_os=sunos5 ;;
  *-*-sunos4*)		rdist_os=sunos4 ;;
  *-*-sysv4.2*)		rdist_os=svr4 ;;
  *-*-ultrix4*)		rdist_os=ultrix4 ;;
  i[345]86-*-bsd*)      rdist_os=bsdi ;;
  mips*-pyramid-osx*)	rdist_os=pyrosx ;;
# These configurations are from the Cygnus version of Kerberos 4, but don't
# appear to be supported by rdist yet.  Once some more of the flags are
# derived from feature tests rather than system names, porting should be
# easier.
#  *-*-sco*)		rdist_os=sco ;;
#  *-*-sysv3.2*)	rdist_os=sco32 ;;
#  *-next-bsd*)		rdist_os=next ;;
#  *-*-macos* | *-*-mpw*) rdist_os=mac ;;
#  i[34]86-*-windows*)	rdist_os=win ;;
#  *-*-vxworks*)	rdist_os=i960vx ;;
#
# These are the names supported by rdist.  The above list isn't a complete
# translation table.  Unfortunately, I don't have the systems in question
# to experiment with to flesh out the table.
#  aix3 bsdi concen cxux dcosx dgux dynix dynixptx fpx4 ftx hpux irix4 irix5
#  isc linux mipsos4 mipsos5 ncr nextstep2 nextstep3 osf1 pyrosx stellix
#  sunos4 sunos5 svr4 tracebsd ultrix4 unicos xinu43
#
changequote([,])
# Other names 
  *)	AC_MSG_ERROR(Configuration ${host} isn't supported for CNS rdist yet.)
	;;
esac

case ${rdist_os} in
  NONE)	AC_MSG_ERROR(Configure script error: rdist_os not set.) ;;
esac

AC_SUBST(rdist_os)

var_frag=${srcdir}/mf/Makefile.var
AC_SUBST_FILE(var_frag)
local_frag=${srcdir}/Makefile.local
AC_SUBST_FILE(local_frag)
local_os_frag=${srcdir}/Makefile.local.${rdist_os}
AC_SUBST_FILE(local_os_frag)
# This one is optional.
test -r ${local_os_frag} || local_os_frag=/dev/null

makefile_frag=config-mk
AC_SUBST_FILE(makefile_frag)

dnl Find BSD style install.
AC_PROG_INSTALL
dnl Is ranlib needed?
AC_PROG_RANLIB
dnl Use gcc if available, else cc.
AC_PROG_CC
AC_ISC_POSIX
dnl Does make set $(MAKE) ?
AC_PROG_MAKE_SET

dnl The autoconf macro AC_PROG_CC doesn't check that we can actually
dnl run the compiler!!
AC_MSG_CHECKING(compiler availability and simple error detection)
AC_TRY_COMPILE(,[ exit(0); ],[
  dnl true
  AC_TRY_COMPILE(,[ syntax errors galore! ],
    dnl true
    AC_MSG_ERROR(Can't detect syntax errors!  Is CC set right?),
    dnl false
    true)],
  dnl false
  AC_MSG_ERROR(Can't compile test program!  Is CC set right?))
AC_MSG_RESULT(ok)

dnl
dnl Libraries?  For LIB_SYS.  I'm not sure of the best way to turn this
dnl into a set of feature tests.  I mean, I could just include all of the
dnl libraries from the set that exist on a system, but I don't know if some
dnl systems have these libraries but in some broken form that requires that
dnl we *not* use them.  Grumble.
dnl
case ${rdist_os} in
  bsdi)			LIBS="$LIBS -lcompat" ;;
  cxux)			LIBS="$LIBS -lucbc" ;;
  dcosx | ftx | ncr)	LIBS="$LIBS -lnsl -lsocket -lc /usr/ucblib/libucb.a" ;;
  dynix)		LIBS="$LIBS -lseq -lc /usr/att/lib/libc.a" ;;
  dynixptx)		LIBS="$LIBS -lsocket -linet -lnsl -lrpc -lseq" ;;
  irix4 | irix5)	LIBS="$LIBS -lsun" ;;
  isc)			LIBS="$LIBS -linet"
			CFLAGS="$CFLAGS -D_SYSV3" # -O -m486 ?
			;;
  sunos5 | svr4)	LIBS="$LIBS -lnsl -lsocket" ;;
  mipsos4 | mipsos5)	CFLAGS="$CFLAGS -lsystype bsd43" ;;
esac

dnl Other changes not handled yet, because I think they're possibly
dnl unneeded, silly, or not generalized enough.
dnl
dnl linux, sunos5: BIN_DIR=/usr/bin

dnl AC_CHECK_FUNCS(fchown fchmod select)
dnl posix saved ids?

dnl Look for missing functions, for MISSINGOBJS.
dnl AC_REPLACE_FUNCS fills in @LIBOBJS@.
AC_REPLACE_FUNCS(strerror strcasecmp strdup vsprintf strtol hasmntopt)
dnl This one is special.  There may be some systems where we should
dnl test whether it works correctly.  Deal with that later.
AC_CHECK_FUNC(re_comp, true, LIBOBJS="$LIBOBJS regex.o")

test -r ${srcdir}/config/os-${rdist_os}.h || \
  AC_MSG_ERROR(Header file ${srcdir}/os-${rdist_os}.h not found.)

dnl AC_DEFINE_UNQUOTED(OS_H,"os-${rdist_os}.h")

dnl Is there any system on which we want to use any other value??
MAKE_SHELL=/bin/sh
AC_SUBST(MAKE_SHELL)

MAN_8_SECT=8
# Solaris puts man pages for administative programs into 1m, not 8.
if test -d /usr/man/man1m && test ! -d /usr/man/man8 ; then
  MAN_8_SECT=1m
fi
AC_SUBST(MAN_8_SECT)

AC_OUTPUT(config-mk
	Makefile config/Makefile doc/Makefile include/Makefile mf/Makefile
	src/Makefile support/Makefile)
