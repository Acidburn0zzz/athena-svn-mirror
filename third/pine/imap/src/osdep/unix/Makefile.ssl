# Program:	SSL makefile
#
# Author:	Mark Crispin
#		Networks and Distributed Computing
#		Computing & Communications
#		University of Washington
#		Administration Building, AG-44
#		Seattle, WA  98195
#		Internet: MRC@CAC.Washington.EDU
#
# Date:		11 May 1989
# Last Edited:	1 February 2001
#
# The IMAP toolkit provided in this Distribution is
# Copyright 2001 University of Washington.
#
# The full text of our legal notices is contained in the file called
# CPYRIGHT, included with this Distribution.


# Extended flags needed for additional authenticators.  You may need to modify.

SSLDIR=/usr/local/ssl
SSLCERTS=$(SSLDIR)/certs
SSLINCLUDE=$(SSLDIR)/include
SSLLIB=$(SSLDIR)/lib

SSLCRYPTO=-lcrypto

# Older versions of MIT Kerberos also have a libcrypto.  If so, you may need
# to use this instead
#SSLCRYPTO=$(SSLLIB)/libcrypto.a

# RSA Security Inc. released the RSA public key encryption algorithm into
# the public domain on September 6, 2000.  There is no longer any need to
# use RSAREF.
SSLRSA= # -lRSAglue -lrsaref

SSLCFLAGS= -I$(SSLINCLUDE) -I$(SSLINCLUDE)/openssl\
 -DSSL_CERT_DIRECTORY=\"$(SSLCERTS)\"
SSLLDFLAGS= -L$(SSLLIB) -lssl $(SSLCRYPTO) $(SSLRSA)


ssl:	# SSL flags
	echo $(SSLCFLAGS) >> OSCFLAGS
	echo $(SSLLDFLAGS) >> LDFLAGS
# Note: Tim Rice says that SSL has to be lunk before other libraries on SCO.
# However, doing so breaks password validation on Linux.  If you need to do
# link the SSL libraries first, comment out the previous line, and uncomment
# the next two lines.
#	echo $(SSLLDFLAGS) `cat LDFLAGS` > LDFLAGS.tmp
#	mv LDFLAGS.tmp LDFLAGS
	echo "void ssl_onceonlyinit (void);" >> linkage.h
	echo "extern int ssl_getchar (void);" >> linkage.h
	echo "extern char *ssl_gets (char *s,int n);" >> linkage.h
	echo "extern int ssl_putchar (int c);" >> linkage.h
	echo "extern int ssl_puts (char *s);" >> linkage.h
	echo "extern int ssl_flush (void);" >> linkage.h
	echo "extern char *ssl_start_tls (char *s);" >> linkage.h
	echo "#undef PBIN" >> linkage.h
	echo "#define PBIN ssl_getchar" >> linkage.h
	echo "#undef PSIN" >> linkage.h
	echo "#define PSIN(s,n) ssl_gets (s,n)" >> linkage.h
	echo "#undef PBOUT" >> linkage.h
	echo "#define PBOUT(c) ssl_putchar (c)" >> linkage.h
	echo "#undef PSOUT" >> linkage.h
	echo "#define PSOUT(s) ssl_puts (s)" >> linkage.h
	echo "#undef PFLUSH" >> linkage.h
	echo "#define PFLUSH ssl_flush ()" >> linkage.h
	echo '#define IMAPSPECIALCAP "STARTTLS"' >> linkage.h
	echo '#define POP3SPECIALCAP "STLS"' >> linkage.h
	echo "#define SPECIALCAP(s) ssl_start_tls (s)" >> linkage.h
	echo "  ssl_onceonlyinit ();" >> linkage.c
