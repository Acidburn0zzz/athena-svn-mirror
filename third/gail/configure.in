dnl Process this file with autoconf to produce a configure script.

AC_INIT(ChangeLog)

AM_CONFIG_HEADER(config.h)


AM_INIT_AUTOMAKE(gail, 1.2.0)

# libtool versioning
LT_CURRENT=17
LT_REVISION=0
LT_AGE=0
LT_CURRENT_MINUS_AGE=`expr $LT_CURRENT - $LT_AGE`
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)
AC_SUBST(LT_CURRENT_MINUS_AGE)


AC_PROG_CC
AM_DISABLE_STATIC
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL

AC_MSG_CHECKING([for Win32])
case "$host" in
  *-*-mingw*)
    gail_native_win32=yes
    ;;
  *)
    gail_native_win32=no
    ;;
esac
AC_MSG_RESULT([$gail_native_win32])
AM_CONDITIONAL(OS_WIN32, test "$gail_native_win32" = "yes")

if test "$gail_native_win32" = "yes"; then
  AC_CHECK_PROG(ms_librarian, lib.exe, yes, no)
fi
AM_CONDITIONAL(MS_LIB_AVAILABLE, test x$ms_librarian = xyes)

dnl Cache $ACLOCAL_FLAGS
AC_CACHE_CHECK([for aclocal flags], ac_cv_atk_aclocal_flags,[
   ac_cv_atk_aclocal_flags="$ACLOCAL_FLAGS"
])
ACLOCAL="$ACLOCAL $ac_cv_atk_aclocal_flags"

AC_ARG_ENABLE(rebuilds, [  --disable-rebuilds	   disable all source autogeneration rules],,enable_rebuilds=yes)

AC_ARG_WITH(html-dir, [	 --with-html-dir=PATH	 path to installed docs ])

if test "x$with_html_dir" = "x" ; then
  HTML_DIR='${datadir}/gtk-doc/html'
else
  HTML_DIR=$with_html_dir
fi

AC_SUBST(HTML_DIR)

gtk_doc_min_version=0.9
AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)

if $GTKDOC ; then
    gtk_doc_version=`gtkdoc-mkdb --version`
    AC_MSG_CHECKING([gtk-doc version ($gtk_doc_version) >= $gtk_doc_min_version])
    IFS="${IFS=		}"; gail_save_IFS="$IFS"; IFS="."
    set $gtk_doc_version
    for min in $gtk_doc_min_version ; do
	cur=$1; shift
	if test -z $min ; then break; fi
	if test -z $cur ; then GTKDOC=false; break; fi
	if test $cur -gt $min ; then break ; fi
	if test $cur -lt $min ; then GTKDOC=false; break ; fi
    done
    IFS="$gail_save_IFS"

    if $GTKDOC ; then
	AC_MSG_RESULT(yes)
    else
      AC_MSG_RESULT(no)
    fi
fi

dnl Let people disable the gtk-doc stuff.
AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc  Use gtk-doc to build documentation [default=auto]], enable_gtk_doc="$enableval", enable_gtk_doc=auto)

if test x$enable_gtk_doc = xauto ; then
  if test x$GTKDOC = xtrue ; then
    enable_gtk_doc=yes
  else
    enable_gtk_doc=no
  fi
fi

dnl NOTE: We need to use a separate automake conditional for this
dnl	  to make this work with the tarballs.
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)

changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \ ]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

ATK_PACKAGES="atk"
GTK_PACKAGES="gtk+-2.0"
LIBGNOMECANVAS_PACKAGES="libgnomecanvas-2.0"
ATK_REQUIRED_VERSION=1.1.3
GTK_REQUIRED_VERSION=2.1.3
LIBGNOMECANVAS_REQUIRED_VERSION=2.0.0

PKG_CHECK_MODULES(DEPS, $ATK_PACKAGES >= $ATK_REQUIRED_VERSION \
	$GTK_PACKAGES >= $GTK_REQUIRED_VERSION \
	$LIBGNOMECANVAS_PACKAGES >= $LIBGNOMECANVAS_REQUIRED_VERSION)

old_LIBS="$LIBS"
dnl Checks for inet libraries:
AC_CHECK_FUNC(gethostent, , AC_CHECK_LIB(nsl, gethostent))
AC_CHECK_FUNC(setsockopt, , AC_CHECK_LIB(socket, setsockopt))
AC_CHECK_FUNC(connect, , AC_CHECK_LIB(inet, connect))

INET_LIBS="$LIBS"
AC_SUBST(INET_LIBS)

LIBS="$old_LIBS"

DEP_CFLAGS=`$PKG_CONFIG --cflags $ATK_PACKAGES $GTK_PACKAGES $LIBGNOMECANVAS_PACKAGES`
DEP_LIBS=`$PKG_CONFIG --libs $ATK_PACKAGES $GTK_PACKAGES $LIBGNOMECANVAS_PACKAGES`

AC_SUBST(DEP_CFLAGS)
AC_SUBST(DEP_LIBS)

AC_OUTPUT([
Makefile
gail.pc
libgail-util/Makefile
gail/Makefile
tests/Makefile
docs/Makefile
docs/reference/Makefile
docs/reference/libgail-util/Makefile
])
