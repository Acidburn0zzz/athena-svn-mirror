dnl Process this file with autoconf to produce a configure script.

AC_INIT(ChangeLog)

AM_CONFIG_HEADER(config.h)

GAIL_MAJOR_VERSION=0
GAIL_MINOR_VERSION=0
GAIL_MICRO_VERSION=17
GAIL_INTERFACE_AGE=0
GAIL_BINARY_AGE=0

## with 1.0 you'd insert MINOR_VERSION in here, i.e. 0.3->1.0.0->1.0.1->1.0.2
## note that micro version has to go in the libtool stuff below
GAIL_VERSION=$GAIL_MAJOR_VERSION.$GAIL_MICRO_VERSION
AM_INIT_AUTOMAKE(gail, $GAIL_VERSION)

AC_SUBST(GAIL_MAJOR_VERSION)
AC_SUBST(GAIL_MINOR_VERSION)
AC_SUBST(GAIL_MICRO_VERSION)
AC_SUBST(GAIL_VERSION)

# libtool versioning
LT_RELEASE=$GAIL_MAJOR_VERSION.$GAIL_MINOR_VERSION
LT_CURRENT=`expr $GAIL_MICRO_VERSION - $GAIL_INTERFACE_AGE`
LT_REVISION=$GAIL_INTERFACE_AGE
LT_AGE=`expr $GAIL_BINARY_AGE - $GAIL_INTERFACE_AGE`
LT_CURRENT_MINUS_AGE=`expr $LT_CURRENT - $LT_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)
AC_SUBST(LT_CURRENT_MINUS_AGE)


AC_PROG_CC
AM_DISABLE_STATIC
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL

AC_MSG_CHECKING([for Win32])
case "$host" in
  *-*-mingw*)
    gail_native_win32=yes
    ;;
  *)
    gail_native_win32=no
    ;;
esac
AC_MSG_RESULT([$gail_native_win32])
AM_CONDITIONAL(OS_WIN32, test "$gail_native_win32" = "yes")

if test "$gail_native_win32" = "yes"; then
  AC_CHECK_PROG(ms_librarian, lib.exe, yes, no)
fi
AM_CONDITIONAL(MS_LIB_AVAILABLE, test x$ms_librarian = xyes)

dnl Cache $ACLOCAL_FLAGS
AC_CACHE_CHECK([for aclocal flags], ac_cv_atk_aclocal_flags,[
   ac_cv_atk_aclocal_flags="$ACLOCAL_FLAGS"
])
ACLOCAL="$ACLOCAL $ac_cv_atk_aclocal_flags"

AC_ARG_ENABLE(rebuilds, [  --disable-rebuilds	   disable all source autogeneration rules],,enable_rebuilds=yes)


AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)

gtk_doc_min_version=0.6
if $GTKDOC ; then
    gtk_doc_version=`gtkdoc-mkdb --version`
    AC_MSG_CHECKING([gtk-doc version ($gtk_doc_version) >= $gtk_doc_min_version])
    if perl <<EOF ; then
	exit (("$gtk_doc_version" =~ /^[[0-9]]+\.[[0-9]]+$/) &&
            ("$gtk_doc_version" >= "$gtk_doc_min_version") ? 0 : 1);
EOF
      AC_MSG_RESULT(yes)
   else
      AC_MSG_RESULT(no)
	GTKDOC=false
   fi
fi

dnl Let people disable the gtk-doc stuff.
AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc  Use gtk-doc to build documentation [default=auto]], enable_gtk_doc="$enableval", enable_gtk_doc=auto)

if test x$enable_gtk_doc = xauto ; then
  if test x$GTKDOC = xtrue ; then
    enable_gtk_doc=yes
  else
    enable_gtk_doc=no
  fi
fi

dnl NOTE: We need to use a separate automake conditional for this
dnl	  to make this work with the tarballs.
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)

changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \ ]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

ATK_PACKAGES="atk"
GTK_PACKAGES="gtk+-2.0"
LIBGNOMECANVAS_PACKAGES="libgnomecanvas-2.0"
ATK_REQUIRED_VERSION=1.0.2
GTK_REQUIRED_VERSION=2.0.3
LIBGNOMECANVAS_REQUIRED_VERSION=1.117.0

PKG_CHECK_MODULES(DEPS, $ATK_PACKAGES >= $ATK_REQUIRED_VERSION \
	$GTK_PACKAGES >= $GTK_REQUIRED_VERSION \
	$LIBGNOMECANVAS_PACKAGES >= $LIBGNOMECANVAS_REQUIRED_VERSION)

old_LIBS="$LIBS"
dnl Checks for inet libraries:
AC_CHECK_FUNC(gethostent, , AC_CHECK_LIB(nsl, gethostent))
AC_CHECK_FUNC(setsockopt, , AC_CHECK_LIB(socket, setsockopt))
AC_CHECK_FUNC(connect, , AC_CHECK_LIB(inet, connect))

INET_LIBS="$LIBS"
AC_SUBST(INET_LIBS)

LIBS="$old_LIBS"

DEP_CFLAGS=`$PKG_CONFIG --cflags $ATK_PACKAGES $GTK_PACKAGES $LIBGNOMECANVAS_PACKAGES`
DEP_LIBS=`$PKG_CONFIG --libs $ATK_PACKAGES $GTK_PACKAGES $LIBGNOMECANVAS_PACKAGES`

AC_SUBST(DEP_CFLAGS)
AC_SUBST(DEP_LIBS)

AC_OUTPUT([
Makefile
gail.pc
libgail-util/Makefile
gail/Makefile
tests/Makefile
docs/Makefile
docs/reference/Makefile
docs/reference/libgail-util/Makefile
])
