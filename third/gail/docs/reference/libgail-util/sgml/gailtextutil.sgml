<refentry id="gail-libgail-util-GailTextUtil">
<refmeta>
<refentrytitle>GailTextUtil</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GAIL-LIBGAIL-UTIL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GailTextUtil</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



struct      <link linkend="GailTextUtil">GailTextUtil</link>;
struct      <link linkend="GailTextUtilClass">GailTextUtilClass</link>;
enum        <link linkend="GailOffsetType">GailOffsetType</link>;
<link linkend="GailTextUtil">GailTextUtil</link>* <link linkend="gail-text-util-new">gail_text_util_new</link>            (void);
void        <link linkend="gail-text-util-text-setup">gail_text_util_text_setup</link>       (<link linkend="GailTextUtil">GailTextUtil</link> *textutil,
                                             const <link linkend="gchar">gchar</link> *text);
void        <link linkend="gail-text-util-buffer-setup">gail_text_util_buffer_setup</link>     (<link linkend="GailTextUtil">GailTextUtil</link> *textutil,
                                             <link linkend="GtkTextBuffer">GtkTextBuffer</link> *buffer);
<link linkend="gchar">gchar</link>*      <link linkend="gail-text-util-get-text">gail_text_util_get_text</link>         (<link linkend="GailTextUtil">GailTextUtil</link> *textutil,
                                             <link linkend="gpointer">gpointer</link> layout,
                                             <link linkend="GailOffsetType">GailOffsetType</link> function,
                                             <link linkend="AtkTextBoundary">AtkTextBoundary</link> boundary_type,
                                             <link linkend="gint">gint</link> offset,
                                             <link linkend="gint">gint</link> *start_offset,
                                             <link linkend="gint">gint</link> *end_offset);
<link linkend="gchar">gchar</link>*      <link linkend="gail-text-util-get-substring">gail_text_util_get_substring</link>    (<link linkend="GailTextUtil">GailTextUtil</link> *textutil,
                                             <link linkend="gint">gint</link> start_pos,
                                             <link linkend="gint">gint</link> end_pos);


</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GailTextUtil">struct GailTextUtil</title>
<programlisting>struct GailTextUtil
{
  GObject parent;

  GtkTextBuffer *buffer;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GailTextUtilClass">struct GailTextUtilClass</title>
<programlisting>struct GailTextUtilClass;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GailOffsetType">enum GailOffsetType</title>
<programlisting>typedef enum
{
  GAIL_BEFORE_OFFSET,
  GAIL_AT_OFFSET,
  GAIL_AFTER_OFFSET
}GailOffsetType;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gail-text-util-new">gail_text_util_new ()</title>
<programlisting><link linkend="GailTextUtil">GailTextUtil</link>* gail_text_util_new            (void);</programlisting>
<para>
This function creates a new GailTextUtil object.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the GailTextUtil object
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gail-text-util-text-setup">gail_text_util_text_setup ()</title>
<programlisting>void        gail_text_util_text_setup       (<link linkend="GailTextUtil">GailTextUtil</link> *textutil,
                                             const <link linkend="gchar">gchar</link> *text);</programlisting>
<para>
This function initializes the GailTextUtil with the specified character string,</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>textutil</parameter>&nbsp;:</entry>
<entry> The <link linkend="GailTextUtil">GailTextUtil</link> to be initialized.
</entry></row>
<row><entry align="right"><parameter>text</parameter>&nbsp;:</entry>
<entry> A gchar* which points to the text to be stored in the GailTextUtil
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gail-text-util-buffer-setup">gail_text_util_buffer_setup ()</title>
<programlisting>void        gail_text_util_buffer_setup     (<link linkend="GailTextUtil">GailTextUtil</link> *textutil,
                                             <link linkend="GtkTextBuffer">GtkTextBuffer</link> *buffer);</programlisting>
<para>
This function initializes the GailTextUtil with the specified GtkTextBuffer</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>textutil</parameter>&nbsp;:</entry>
<entry> A <link linkend="GailTextUtil">GailTextUtil</link> to be initialized
</entry></row>
<row><entry align="right"><parameter>buffer</parameter>&nbsp;:</entry>
<entry> The <link linkend="GtkTextBuffer">GtkTextBuffer</link> which identifies the text to be stored in the GailUtil.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gail-text-util-get-text">gail_text_util_get_text ()</title>
<programlisting><link linkend="gchar">gchar</link>*      gail_text_util_get_text         (<link linkend="GailTextUtil">GailTextUtil</link> *textutil,
                                             <link linkend="gpointer">gpointer</link> layout,
                                             <link linkend="GailOffsetType">GailOffsetType</link> function,
                                             <link linkend="AtkTextBoundary">AtkTextBoundary</link> boundary_type,
                                             <link linkend="gint">gint</link> offset,
                                             <link linkend="gint">gint</link> *start_offset,
                                             <link linkend="gint">gint</link> *end_offset);</programlisting>
<para>
This function gets the requested substring from the text in the GtkTextUtil.
The layout is used only for getting the text on a line. The value is NULL 
for a GtkTextView which is not wrapped, is a GtkTextView for a GtkTextView 
which is wrapped and is a PangoLayout otherwise.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>textutil</parameter>&nbsp;:</entry>
<entry> A <link linkend="GailTextUtil">GailTextUtil</link>
</entry></row>
<row><entry align="right"><parameter>layout</parameter>&nbsp;:</entry>
<entry> A gpointer which is a PangoLayout, a GtkTreeView of NULL
</entry></row>
<row><entry align="right"><parameter>function</parameter>&nbsp;:</entry>
<entry> An enumeration specifying whether to return the text before, at, or
  after the offset.
</entry></row>
<row><entry align="right"><parameter>boundary_type</parameter>&nbsp;:</entry>
<entry> The boundary type.
</entry></row>
<row><entry align="right"><parameter>offset</parameter>&nbsp;:</entry>
<entry> The offset of the text in the GailTextUtil 
</entry></row>
<row><entry align="right"><parameter>start_offset</parameter>&nbsp;:</entry>
<entry> Address of location in which the start offset is returned
</entry></row>
<row><entry align="right"><parameter>end_offset</parameter>&nbsp;:</entry>
<entry> Address of location in which the end offset is returned
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the substring requested
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gail-text-util-get-substring">gail_text_util_get_substring ()</title>
<programlisting><link linkend="gchar">gchar</link>*      gail_text_util_get_substring    (<link linkend="GailTextUtil">GailTextUtil</link> *textutil,
                                             <link linkend="gint">gint</link> start_pos,
                                             <link linkend="gint">gint</link> end_pos);</programlisting>
<para>
Gets the substring indicated by <parameter>start_pos</parameter> and <parameter>end_pos</parameter></para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>textutil</parameter>&nbsp;:</entry>
<entry> A <link linkend="GailTextUtil">GailTextUtil</link>
</entry></row>
<row><entry align="right"><parameter>start_pos</parameter>&nbsp;:</entry>
<entry> The start position of the substring
</entry></row>
<row><entry align="right"><parameter>end_pos</parameter>&nbsp;:</entry>
<entry> The end position of the substring.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the substring indicated by <parameter>start_pos</parameter> and <parameter>end_pos</parameter>
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
