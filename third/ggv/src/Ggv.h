/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef Ggv_H
#define Ggv_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 19
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C"
{
#endif				/* __cplusplus */

/** typedefs **/
#include <bonobo/Bonobo.h>
#if !defined(_GNOME_GGV_Orientation_defined)
#define _GNOME_GGV_Orientation_defined 1
   typedef enum
   {
      GNOME_GGV_ORIENTATION_PORTRAIT,
      GNOME_GGV_ORIENTATION_LANDSCAPE,
      GNOME_GGV_ORIENTATION_UPSIDEDOWN,
      GNOME_GGV_ORIENTATION_SEASCAPE
   }
   GNOME_GGV_Orientation;
#if !defined(TC_IMPL_TC_GNOME_GGV_Orientation_0)
#define TC_IMPL_TC_GNOME_GGV_Orientation_0 'G'
#define TC_IMPL_TC_GNOME_GGV_Orientation_1 'g'
#define TC_IMPL_TC_GNOME_GGV_Orientation_2 'v'
#ifdef ORBIT_IDL_C_IMODULE_Ggv
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_GGV_Orientation_struct;
#define TC_GNOME_GGV_Orientation ((CORBA_TypeCode)&TC_GNOME_GGV_Orientation_struct)
#endif
#endif
#if !defined(_GNOME_GGV_Size_defined)
#define _GNOME_GGV_Size_defined 1
   typedef CORBA_string GNOME_GGV_Size;
#define GNOME_GGV_Size_marshal(x,y,z) CORBA_string_marshal((x),(y),(z))
#define GNOME_GGV_Size_demarshal(x,y,z,i) CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_GGV_Size_0)
#define TC_IMPL_TC_GNOME_GGV_Size_0 'G'
#define TC_IMPL_TC_GNOME_GGV_Size_1 'g'
#define TC_IMPL_TC_GNOME_GGV_Size_2 'v'
#ifdef ORBIT_IDL_C_IMODULE_Ggv
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_GGV_Size_struct;
#define TC_GNOME_GGV_Size ((CORBA_TypeCode)&TC_GNOME_GGV_Size_struct)
#endif
#define GNOME_GGV_Size__alloc() ((GNOME_GGV_Size *)ORBit_small_alloc (TC_CORBA_string))
#define GNOME_GGV_Size__freekids(m,d) ORBit_small_freekids (TC_CORBA_string,(m),(d))
#endif
#if !defined(_GNOME_GGV_PageName_defined)
#define _GNOME_GGV_PageName_defined 1
   typedef CORBA_string GNOME_GGV_PageName;
#define GNOME_GGV_PageName_marshal(x,y,z) CORBA_string_marshal((x),(y),(z))
#define GNOME_GGV_PageName_demarshal(x,y,z,i) CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_GGV_PageName_0)
#define TC_IMPL_TC_GNOME_GGV_PageName_0 'G'
#define TC_IMPL_TC_GNOME_GGV_PageName_1 'g'
#define TC_IMPL_TC_GNOME_GGV_PageName_2 'v'
#ifdef ORBIT_IDL_C_IMODULE_Ggv
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_GGV_PageName_struct;
#define TC_GNOME_GGV_PageName ((CORBA_TypeCode)&TC_GNOME_GGV_PageName_struct)
#endif
#define GNOME_GGV_PageName__alloc() ((GNOME_GGV_PageName *)ORBit_small_alloc (TC_CORBA_string))
#define GNOME_GGV_PageName__freekids(m,d) ORBit_small_freekids (TC_CORBA_string,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'G'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'g'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'v'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
   typedef struct
   {
      CORBA_unsigned_long _maximum,
       _length;
      CORBA_string *_buffer;
      CORBA_boolean _release;
   }
   CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'G'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'g'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'v'
#ifdef ORBIT_IDL_C_IMODULE_Ggv
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_GNOME_GGV_PageName)
#define ORBIT_DECL_CORBA_sequence_GNOME_GGV_PageName 1
#define ORBIT_IMPL_CORBA_sequence_GNOME_GGV_PageName_0 'G'
#define ORBIT_IMPL_CORBA_sequence_GNOME_GGV_PageName_1 'g'
#define ORBIT_IMPL_CORBA_sequence_GNOME_GGV_PageName_2 'v'
#if !defined(_CORBA_sequence_GNOME_GGV_PageName_defined)
#define _CORBA_sequence_GNOME_GGV_PageName_defined 1
   typedef CORBA_sequence_CORBA_string CORBA_sequence_GNOME_GGV_PageName;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_GNOME_GGV_PageName_0)
#define TC_IMPL_TC_CORBA_sequence_GNOME_GGV_PageName_0 'G'
#define TC_IMPL_TC_CORBA_sequence_GNOME_GGV_PageName_1 'g'
#define TC_IMPL_TC_CORBA_sequence_GNOME_GGV_PageName_2 'v'
#ifdef ORBIT_IDL_C_IMODULE_Ggv
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct
      TC_CORBA_sequence_GNOME_GGV_PageName_struct;
#define TC_CORBA_sequence_GNOME_GGV_PageName ((CORBA_TypeCode)&TC_CORBA_sequence_GNOME_GGV_PageName_struct)
#endif
#define CORBA_sequence_GNOME_GGV_PageName__alloc CORBA_sequence_CORBA_string__alloc
#define CORBA_sequence_GNOME_GGV_PageName__freekids CORBA_sequence_CORBA_string__freekids
#define CORBA_sequence_GNOME_GGV_PageName_allocbuf CORBA_sequence_CORBA_string_allocbuf
#define CORBA_sequence_GNOME_GGV_PageName_marshal(x,y,z) CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define CORBA_sequence_GNOME_GGV_PageName_demarshal(x,y,z,i) CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#endif
#if !defined(_GNOME_GGV_PageNameList_defined)
#define _GNOME_GGV_PageNameList_defined 1
   typedef CORBA_sequence_GNOME_GGV_PageName GNOME_GGV_PageNameList;
#define GNOME_GGV_PageNameList_marshal(x,y,z) CORBA_sequence_GNOME_GGV_PageName_marshal((x),(y),(z))
#define GNOME_GGV_PageNameList_demarshal(x,y,z,i) CORBA_sequence_GNOME_GGV_PageName_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_GGV_PageNameList_0)
#define TC_IMPL_TC_GNOME_GGV_PageNameList_0 'G'
#define TC_IMPL_TC_GNOME_GGV_PageNameList_1 'g'
#define TC_IMPL_TC_GNOME_GGV_PageNameList_2 'v'
#ifdef ORBIT_IDL_C_IMODULE_Ggv
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_GGV_PageNameList_struct;
#define TC_GNOME_GGV_PageNameList ((CORBA_TypeCode)&TC_GNOME_GGV_PageNameList_struct)
#endif
#define GNOME_GGV_PageNameList__alloc() ((GNOME_GGV_PageNameList *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_GGV_PageName))
#define GNOME_GGV_PageNameList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_GGV_PageName,(m),(d))
#define GNOME_GGV_PageNameList_allocbuf(l) ((GNOME_GGV_PageName*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_GGV_PageName, (l)))
#endif
#if !defined(_GNOME_GGV_Page_defined)
#define _GNOME_GGV_Page_defined 1
   typedef CORBA_long GNOME_GGV_Page;
#define GNOME_GGV_Page_marshal(x,y,z) CORBA_long_marshal((x),(y),(z))
#define GNOME_GGV_Page_demarshal(x,y,z,i) CORBA_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_GGV_Page_0)
#define TC_IMPL_TC_GNOME_GGV_Page_0 'G'
#define TC_IMPL_TC_GNOME_GGV_Page_1 'g'
#define TC_IMPL_TC_GNOME_GGV_Page_2 'v'
#ifdef ORBIT_IDL_C_IMODULE_Ggv
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_GGV_Page_struct;
#define TC_GNOME_GGV_Page ((CORBA_TypeCode)&TC_GNOME_GGV_Page_struct)
#endif
#define GNOME_GGV_Page__alloc() ((GNOME_GGV_Page *)ORBit_small_alloc (TC_CORBA_long))
#define GNOME_GGV_Page__freekids(m,d) ORBit_small_freekids (TC_CORBA_long,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_long)
#define ORBIT_DECL_CORBA_sequence_CORBA_long 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_0 'G'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_1 'g'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_2 'v'
#if !defined(_CORBA_sequence_CORBA_long_defined)
#define _CORBA_sequence_CORBA_long_defined 1
   typedef struct
   {
      CORBA_unsigned_long _maximum,
       _length;
      CORBA_long *_buffer;
      CORBA_boolean _release;
   }
   CORBA_sequence_CORBA_long;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_long_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_0 'G'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_1 'g'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_2 'v'
#ifdef ORBIT_IDL_C_IMODULE_Ggv
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_long_struct;
#define TC_CORBA_sequence_CORBA_long ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_long_struct)
#endif
#define CORBA_sequence_CORBA_long__alloc() ((CORBA_sequence_CORBA_long *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_long))
#define CORBA_sequence_CORBA_long__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_long,(m),(d))
#define CORBA_sequence_CORBA_long_allocbuf(l) ((CORBA_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_long, (l)))
#define CORBA_sequence_CORBA_long_allocbuf(l) ((CORBA_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_long, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_GNOME_GGV_Page)
#define ORBIT_DECL_CORBA_sequence_GNOME_GGV_Page 1
#define ORBIT_IMPL_CORBA_sequence_GNOME_GGV_Page_0 'G'
#define ORBIT_IMPL_CORBA_sequence_GNOME_GGV_Page_1 'g'
#define ORBIT_IMPL_CORBA_sequence_GNOME_GGV_Page_2 'v'
#if !defined(_CORBA_sequence_GNOME_GGV_Page_defined)
#define _CORBA_sequence_GNOME_GGV_Page_defined 1
   typedef CORBA_sequence_CORBA_long CORBA_sequence_GNOME_GGV_Page;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_GNOME_GGV_Page_0)
#define TC_IMPL_TC_CORBA_sequence_GNOME_GGV_Page_0 'G'
#define TC_IMPL_TC_CORBA_sequence_GNOME_GGV_Page_1 'g'
#define TC_IMPL_TC_CORBA_sequence_GNOME_GGV_Page_2 'v'
#ifdef ORBIT_IDL_C_IMODULE_Ggv
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_GNOME_GGV_Page_struct;
#define TC_CORBA_sequence_GNOME_GGV_Page ((CORBA_TypeCode)&TC_CORBA_sequence_GNOME_GGV_Page_struct)
#endif
#define CORBA_sequence_GNOME_GGV_Page__alloc CORBA_sequence_CORBA_long__alloc
#define CORBA_sequence_GNOME_GGV_Page__freekids CORBA_sequence_CORBA_long__freekids
#define CORBA_sequence_GNOME_GGV_Page_allocbuf CORBA_sequence_CORBA_long_allocbuf
#define CORBA_sequence_GNOME_GGV_Page_marshal(x,y,z) CORBA_sequence_CORBA_long_marshal((x),(y),(z))
#define CORBA_sequence_GNOME_GGV_Page_demarshal(x,y,z,i) CORBA_sequence_CORBA_long_demarshal((x),(y),(z),(i))
#endif
#if !defined(_GNOME_GGV_PageList_defined)
#define _GNOME_GGV_PageList_defined 1
   typedef CORBA_sequence_GNOME_GGV_Page GNOME_GGV_PageList;
#define GNOME_GGV_PageList_marshal(x,y,z) CORBA_sequence_GNOME_GGV_Page_marshal((x),(y),(z))
#define GNOME_GGV_PageList_demarshal(x,y,z,i) CORBA_sequence_GNOME_GGV_Page_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_GGV_PageList_0)
#define TC_IMPL_TC_GNOME_GGV_PageList_0 'G'
#define TC_IMPL_TC_GNOME_GGV_PageList_1 'g'
#define TC_IMPL_TC_GNOME_GGV_PageList_2 'v'
#ifdef ORBIT_IDL_C_IMODULE_Ggv
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_GGV_PageList_struct;
#define TC_GNOME_GGV_PageList ((CORBA_TypeCode)&TC_GNOME_GGV_PageList_struct)
#endif
#define GNOME_GGV_PageList__alloc() ((GNOME_GGV_PageList *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_GGV_Page))
#define GNOME_GGV_PageList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_GGV_Page,(m),(d))
#define GNOME_GGV_PageList_allocbuf(l) ((GNOME_GGV_Page*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_GGV_Page, (l)))
#endif
#undef ex_GNOME_GGV_DocumentError
#define ex_GNOME_GGV_DocumentError "IDL:GNOME/GGV/DocumentError:1.0"
#if !defined(_GNOME_GGV_DocumentError_defined)
#define _GNOME_GGV_DocumentError_defined 1
   typedef struct GNOME_GGV_DocumentError_type GNOME_GGV_DocumentError;
   struct GNOME_GGV_DocumentError_type
   {
      CORBA_string moreInfo;
   };

#if !defined(TC_IMPL_TC_GNOME_GGV_DocumentError_0)
#define TC_IMPL_TC_GNOME_GGV_DocumentError_0 'G'
#define TC_IMPL_TC_GNOME_GGV_DocumentError_1 'g'
#define TC_IMPL_TC_GNOME_GGV_DocumentError_2 'v'
#ifdef ORBIT_IDL_C_IMODULE_Ggv
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_GGV_DocumentError_struct;
#define TC_GNOME_GGV_DocumentError ((CORBA_TypeCode)&TC_GNOME_GGV_DocumentError_struct)
#endif
#define GNOME_GGV_DocumentError__alloc() ((GNOME_GGV_DocumentError *)ORBit_small_alloc (TC_GNOME_GGV_DocumentError))
#define GNOME_GGV_DocumentError__freekids(m,d) ORBit_small_freekids (TC_GNOME_GGV_DocumentError,(m),(d))
#endif
#if !defined(ORBIT_DECL_GNOME_GGV_PostScriptView) && !defined(_GNOME_GGV_PostScriptView_defined)
#define ORBIT_DECL_GNOME_GGV_PostScriptView 1
#define _GNOME_GGV_PostScriptView_defined 1
#define GNOME_GGV_PostScriptView__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_GGV_PostScriptView;
   extern CORBA_unsigned_long GNOME_GGV_PostScriptView__classid;
#if !defined(TC_IMPL_TC_GNOME_GGV_PostScriptView_0)
#define TC_IMPL_TC_GNOME_GGV_PostScriptView_0 'G'
#define TC_IMPL_TC_GNOME_GGV_PostScriptView_1 'g'
#define TC_IMPL_TC_GNOME_GGV_PostScriptView_2 'v'
#ifdef ORBIT_IDL_C_IMODULE_Ggv
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_GGV_PostScriptView_struct;
#define TC_GNOME_GGV_PostScriptView ((CORBA_TypeCode)&TC_GNOME_GGV_PostScriptView_struct)
#endif
#endif

/** POA structures **/
#ifndef _defined_POA_GNOME_GGV_PostScriptView
#define _defined_POA_GNOME_GGV_PostScriptView 1
   typedef struct
   {
      void *_private;
       CORBA_string(*getDocument) (PortableServer_Servant _servant,
				   CORBA_Environment * ev);
       CORBA_string(*getPages) (PortableServer_Servant _servant,
				const GNOME_GGV_PageList * pages,
				CORBA_Environment * ev);
      void (*reload) (PortableServer_Servant _servant,
		      CORBA_Environment * ev);
      void (*close) (PortableServer_Servant _servant, CORBA_Environment * ev);
   }
   POA_GNOME_GGV_PostScriptView__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_GGV_PostScriptView__epv *GNOME_GGV_PostScriptView_epv;
   }
   POA_GNOME_GGV_PostScriptView__vepv;
   typedef struct
   {
      void *_private;
      POA_GNOME_GGV_PostScriptView__vepv *vepv;
   }
   POA_GNOME_GGV_PostScriptView;
   extern void POA_GNOME_GGV_PostScriptView__init(PortableServer_Servant
						  servant,
						  CORBA_Environment * ev);
   extern void POA_GNOME_GGV_PostScriptView__fini(PortableServer_Servant
						  servant,
						  CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_GGV_PostScriptView */

/** skel prototypes **/
   void
      _ORBIT_skel_small_GNOME_GGV_PostScriptView_getDocument
      (POA_GNOME_GGV_PostScriptView * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       CORBA_string(*_impl_getDocument) (PortableServer_Servant _servant,
					 CORBA_Environment * ev));
   void
      _ORBIT_skel_small_GNOME_GGV_PostScriptView_getPages
      (POA_GNOME_GGV_PostScriptView * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       CORBA_string(*_impl_getPages) (PortableServer_Servant _servant,
				      const GNOME_GGV_PageList * pages,
				      CORBA_Environment * ev));
   void
      _ORBIT_skel_small_GNOME_GGV_PostScriptView_reload
      (POA_GNOME_GGV_PostScriptView * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       void (*_impl_reload) (PortableServer_Servant _servant,
			     CORBA_Environment * ev));
   void
      _ORBIT_skel_small_GNOME_GGV_PostScriptView_close
      (POA_GNOME_GGV_PostScriptView * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       void (*_impl_close) (PortableServer_Servant _servant,
			    CORBA_Environment * ev));

/** stub prototypes **/
#define GNOME_GGV_PostScriptView_ref Bonobo_Unknown_ref
#define GNOME_GGV_PostScriptView_unref Bonobo_Unknown_unref
#define GNOME_GGV_PostScriptView_queryInterface Bonobo_Unknown_queryInterface
   CORBA_string GNOME_GGV_PostScriptView_getDocument(GNOME_GGV_PostScriptView
						     _obj,
						     CORBA_Environment * ev);
   CORBA_string GNOME_GGV_PostScriptView_getPages(GNOME_GGV_PostScriptView
						  _obj,
						  const GNOME_GGV_PageList *
						  pages,
						  CORBA_Environment * ev);
   void GNOME_GGV_PostScriptView_reload(GNOME_GGV_PostScriptView _obj,
					CORBA_Environment * ev);
   void GNOME_GGV_PostScriptView_close(GNOME_GGV_PostScriptView _obj,
				       CORBA_Environment * ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_Ggv
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_GGV_PostScriptView__iinterface;
#define GNOME_GGV_PostScriptView_IMETHODS_LEN 4
#ifdef ORBIT_IDL_C_IMODULE_Ggv
   static
#else
   extern
#endif
   ORBit_IMethod
      GNOME_GGV_PostScriptView__imethods
      [GNOME_GGV_PostScriptView_IMETHODS_LEN];
#ifdef __cplusplus
}
#endif				/* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif				/* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
