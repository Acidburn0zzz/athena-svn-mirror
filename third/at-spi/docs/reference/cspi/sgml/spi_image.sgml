<refentry id="at-spi-cspi-AccessibleImage-Interface">
<refmeta>
<refentrytitle>AccessibleImage Interface</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>AT-SPI-CSPI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>AccessibleImage Interface</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



void        <link linkend="AccessibleImage-ref">AccessibleImage_ref</link>             (<link linkend="AccessibleImage">AccessibleImage</link> *obj);
void        <link linkend="AccessibleImage-unref">AccessibleImage_unref</link>           (<link linkend="AccessibleImage">AccessibleImage</link> *obj);
char*       <link linkend="AccessibleImage-getImageDescription">AccessibleImage_getImageDescription</link>
                                            (<link linkend="AccessibleImage">AccessibleImage</link> *obj);
void        <link linkend="AccessibleImage-getImageSize">AccessibleImage_getImageSize</link>    (<link linkend="AccessibleImage">AccessibleImage</link> *obj,
                                             <link linkend="long-int">long int</link> *width,
                                             <link linkend="long-int">long int</link> *height);
void        <link linkend="AccessibleImage-getImagePosition">AccessibleImage_getImagePosition</link>
                                            (<link linkend="AccessibleImage">AccessibleImage</link> *obj,
                                             <link linkend="long-int">long int</link> *x,
                                             <link linkend="long-int">long int</link> *y,
                                             <link linkend="AccessibleCoordType">AccessibleCoordType</link> ctype);
void        <link linkend="AccessibleImage-getImageExtents">AccessibleImage_getImageExtents</link> (<link linkend="AccessibleImage">AccessibleImage</link> *obj,
                                             <link linkend="long-int">long int</link> *x,
                                             <link linkend="long-int">long int</link> *y,
                                             <link linkend="long-int">long int</link> *width,
                                             <link linkend="long-int">long int</link> *height,
                                             <link linkend="AccessibleCoordType">AccessibleCoordType</link> ctype);
</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="AccessibleImage-ref">AccessibleImage_ref ()</title>
<programlisting>void        AccessibleImage_ref             (<link linkend="AccessibleImage">AccessibleImage</link> *obj);</programlisting>
<para>
Increment the reference count for an <link linkend="AccessibleImage">AccessibleImage</link> object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleImage">AccessibleImage</link> implementor on which to operate.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="AccessibleImage-unref">AccessibleImage_unref ()</title>
<programlisting>void        AccessibleImage_unref           (<link linkend="AccessibleImage">AccessibleImage</link> *obj);</programlisting>
<para>
Decrement the reference count for an <link linkend="AccessibleImage">AccessibleImage</link> object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleImage">AccessibleImage</link> implementor on which to operate.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="AccessibleImage-getImageDescription">AccessibleImage_getImageDescription ()</title>
<programlisting>char*       AccessibleImage_getImageDescription
                                            (<link linkend="AccessibleImage">AccessibleImage</link> *obj);</programlisting>
<para>
Get the description of the image displayed in an <link linkend="AccessibleImage">AccessibleImage</link> object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleImage">AccessibleImage</link> implementor on which to operate.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a UTF-8 string describing the image.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="AccessibleImage-getImageSize">AccessibleImage_getImageSize ()</title>
<programlisting>void        AccessibleImage_getImageSize    (<link linkend="AccessibleImage">AccessibleImage</link> *obj,
                                             <link linkend="long-int">long int</link> *width,
                                             <link linkend="long-int">long int</link> *height);</programlisting>
<para>
Get the size of the image displayed in a specified <link linkend="AccessibleImage">AccessibleImage</link> object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleImage">AccessibleImage</link> to query.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="long">long</link> into which the x extents (width) will be returned.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="long">long</link> into which the y extents (height) will be returned.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="AccessibleImage-getImagePosition">AccessibleImage_getImagePosition ()</title>
<programlisting>void        AccessibleImage_getImagePosition
                                            (<link linkend="AccessibleImage">AccessibleImage</link> *obj,
                                             <link linkend="long-int">long int</link> *x,
                                             <link linkend="long-int">long int</link> *y,
                                             <link linkend="AccessibleCoordType">AccessibleCoordType</link> ctype);</programlisting>
<para>
Get the minimum x and y coordinates of the image displayed in a
        specified <link linkend="AccessibleImage">AccessibleImage</link> implementor.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleImage">AccessibleImage</link> implementor to query.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="long">long</link> into which the minimum x coordinate will be returned.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="long">long</link> into which the minimum y coordinate will be returned.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ctype</parameter>&nbsp;:</term>
<listitem><simpara> the desired coordinate system into which to return the results,
        (e.g. SPI_COORD_TYPE_WINDOW, SPI_COORD_TYPE_SCREEN).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="AccessibleImage-getImageExtents">AccessibleImage_getImageExtents ()</title>
<programlisting>void        AccessibleImage_getImageExtents (<link linkend="AccessibleImage">AccessibleImage</link> *obj,
                                             <link linkend="long-int">long int</link> *x,
                                             <link linkend="long-int">long int</link> *y,
                                             <link linkend="long-int">long int</link> *width,
                                             <link linkend="long-int">long int</link> *height,
                                             <link linkend="AccessibleCoordType">AccessibleCoordType</link> ctype);</programlisting>
<para>
Get the bounding box of the image displayed in a
        specified <link linkend="AccessibleImage">AccessibleImage</link> implementor.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleImage">AccessibleImage</link> implementor to query.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="long">long</link> into which the minimum x coordinate will be returned.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="long">long</link> into which the minimum y coordinate will be returned.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="long">long</link> into which the image x extent will be returned.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to a <link linkend="long">long</link> into which the image y extent will be returned.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ctype</parameter>&nbsp;:</term>
<listitem><simpara> the desired coordinate system into which to return the results,
        (e.g. SPI_COORD_TYPE_WINDOW, SPI_COORD_TYPE_SCREEN).
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
