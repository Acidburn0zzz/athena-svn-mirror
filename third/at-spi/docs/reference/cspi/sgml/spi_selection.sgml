<refentry id="at-spi-cspi-AccessibleSelection-Interface">
<refmeta>
<refentrytitle>AccessibleSelection Interface</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>AT-SPI-CSPI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>AccessibleSelection Interface</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



void        <link linkend="AccessibleSelection-ref">AccessibleSelection_ref</link>         (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj);
void        <link linkend="AccessibleSelection-unref">AccessibleSelection_unref</link>       (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj);
<link linkend="long">long</link>        <link linkend="AccessibleSelection-getNSelectedChildren">AccessibleSelection_getNSelectedChildren</link>
                                            (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj);
<link linkend="Accessible">Accessible</link>* <link linkend="AccessibleSelection-getSelectedChild">AccessibleSelection_getSelectedChild</link>
                                            (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj,
                                             <link linkend="long-int">long int</link> selectedChildIndex);
<link linkend="SPIBoolean">SPIBoolean</link>  <link linkend="AccessibleSelection-selectChild">AccessibleSelection_selectChild</link> (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj,
                                             <link linkend="long-int">long int</link> childIndex);
<link linkend="SPIBoolean">SPIBoolean</link>  <link linkend="AccessibleSelection-isChildSelected">AccessibleSelection_isChildSelected</link>
                                            (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj,
                                             <link linkend="long-int">long int</link> childIndex);
<link linkend="SPIBoolean">SPIBoolean</link>  <link linkend="AccessibleSelection-deselectSelectedChild">AccessibleSelection_deselectSelectedChild</link>
                                            (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj,
                                             <link linkend="long-int">long int</link> selectedChildIndex);
<link linkend="SPIBoolean">SPIBoolean</link>  <link linkend="AccessibleSelection-clearSelection">AccessibleSelection_clearSelection</link>
                                            (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj);
<link linkend="SPIBoolean">SPIBoolean</link>  <link linkend="AccessibleSelection-selectAll">AccessibleSelection_selectAll</link>   (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj);
</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="AccessibleSelection-ref">AccessibleSelection_ref ()</title>
<programlisting>void        AccessibleSelection_ref         (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj);</programlisting>
<para>
Increment the reference count for an <link linkend="AccessibleSelection">AccessibleSelection</link> object.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleSelection">AccessibleSelection</link> implementor on which to operate.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="AccessibleSelection-unref">AccessibleSelection_unref ()</title>
<programlisting>void        AccessibleSelection_unref       (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj);</programlisting>
<para>
Decrement the reference count for an <link linkend="Accessible">Accessible</link> object.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleSelection">AccessibleSelection</link> implementor on which to operate. 
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="AccessibleSelection-getNSelectedChildren">AccessibleSelection_getNSelectedChildren ()</title>
<programlisting><link linkend="long">long</link>        AccessibleSelection_getNSelectedChildren
                                            (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj);</programlisting>
<para>
Get the number of children of an <link linkend="AccessibleSelection">AccessibleSelection</link> implementor which are
       currently selected.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleSelection">AccessibleSelection</link> implementor on which to operate.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> a <link linkend="long">long</link> indicating the number of <link linkend="Accessible">Accessible</link> children
       of the <link linkend="AccessibleSelection">AccessibleSelection</link> implementor which are currently selected.

</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="AccessibleSelection-getSelectedChild">AccessibleSelection_getSelectedChild ()</title>
<programlisting><link linkend="Accessible">Accessible</link>* AccessibleSelection_getSelectedChild
                                            (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj,
                                             <link linkend="long-int">long int</link> selectedChildIndex);</programlisting>
<para>
Get the i-th selected <link linkend="Accessible">Accessible</link> child of an <link linkend="AccessibleSelection">AccessibleSelection</link>.
     Note that <parameter>childIndex</parameter> refers to the index in the list of 'selected'
     children and generally differs from that used in
     #<link linkend="Accessible-getChildAtIndex">Accessible_getChildAtIndex</link>() or returned by
     #<link linkend="Accessible-getIndexInParent">Accessible_getIndexInParent</link>(). <parameter>selectedChildIndex</parameter> must lie between 0
     and #<link linkend="AccessibleSelection-getNSelectedChildren">AccessibleSelection_getNSelectedChildren</link>()-1, inclusive.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleSelection">AccessibleSelection</link> on which to operate.
</entry></row>
<row><entry align="right"><parameter>selectedChildIndex</parameter>&nbsp;:</entry>
<entry> a <link linkend="long">long</link> indicating which of the selected
     children is specified.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> a pointer to a selected <link linkend="Accessible">Accessible</link> child object,
         specified by <parameter>childIndex</parameter>.

</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="AccessibleSelection-selectChild">AccessibleSelection_selectChild ()</title>
<programlisting><link linkend="SPIBoolean">SPIBoolean</link>  AccessibleSelection_selectChild (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj,
                                             <link linkend="long-int">long int</link> childIndex);</programlisting>
<para>
Add a child to the selected children list of an <link linkend="AccessibleSelection">AccessibleSelection</link>.
        For <link linkend="AccessibleSelection">AccessibleSelection</link> implementors that only allow
        single selections, this may replace the (single) current
        selection.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleSelection">AccessibleSelection</link> on which to operate.
</entry></row>
<row><entry align="right"><parameter>childIndex</parameter>&nbsp;:</entry>
<entry> a <link linkend="long">long</link> indicating which child of the <link linkend="Accessible">Accessible</link>
             is to be selected.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> <link linkend="TRUE-CAPS">TRUE</link> if the child was successfully selected, <link linkend="FALSE-CAPS">FALSE</link> otherwise.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="AccessibleSelection-isChildSelected">AccessibleSelection_isChildSelected ()</title>
<programlisting><link linkend="SPIBoolean">SPIBoolean</link>  AccessibleSelection_isChildSelected
                                            (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj,
                                             <link linkend="long-int">long int</link> childIndex);</programlisting>
<para>
Determine whether a particular child of an <link linkend="AccessibleSelection">AccessibleSelection</link> implementor
       is currently selected.  Note that <parameter>childIndex</parameter> is the index into the
       standard <link linkend="Accessible">Accessible</link> container's list of children.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleSelection">AccessibleSelection</link> implementor on which to operate.
</entry></row>
<row><entry align="right"><parameter>childIndex</parameter>&nbsp;:</entry>
<entry> an index into the <link linkend="AccessibleSelection">AccessibleSelection</link>'s list of children.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> <link linkend="TRUE-CAPS">TRUE</link> if the specified child is currently selected,
         <link linkend="FALSE-CAPS">FALSE</link> otherwise.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="AccessibleSelection-deselectSelectedChild">AccessibleSelection_deselectSelectedChild ()</title>
<programlisting><link linkend="SPIBoolean">SPIBoolean</link>  AccessibleSelection_deselectSelectedChild
                                            (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj,
                                             <link linkend="long-int">long int</link> selectedChildIndex);</programlisting>
<para>
Remove a child to the selected children list of an <link linkend="AccessibleSelection">AccessibleSelection</link>.
         Note that <parameter>childIndex</parameter> is the index in the selected-children list,
         not the index in the parent container.  <parameter>selectedChildIndex</parameter> in this
         method, and <parameter>childIndex</parameter> in <link linkend="AccessibleSelection-selectChild">AccessibleSelection_selectChild</link>
         are asymmettric.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleSelection">AccessibleSelection</link> on which to operate.
</entry></row>
<row><entry align="right"><parameter>selectedChildIndex</parameter>&nbsp;:</entry>
<entry> a <link linkend="long">long</link> indicating which of the selected children
             of the <link linkend="Accessible">Accessible</link> is to be selected.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> <link linkend="TRUE-CAPS">TRUE</link> if the child was successfully deselected, <link linkend="FALSE-CAPS">FALSE</link> otherwise.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="AccessibleSelection-clearSelection">AccessibleSelection_clearSelection ()</title>
<programlisting><link linkend="SPIBoolean">SPIBoolean</link>  AccessibleSelection_clearSelection
                                            (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj);</programlisting>
<para>
Clear the current selection, removing all selected children from the
      specified <link linkend="AccessibleSelection">AccessibleSelection</link> implementor's selection list.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleSelection">AccessibleSelection</link> implementor on which to operate.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> <link linkend="TRUE-CAPS">TRUE</link> if successful, <link linkend="FALSE-CAPS">FALSE</link> otherwise.

</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="AccessibleSelection-selectAll">AccessibleSelection_selectAll ()</title>
<programlisting><link linkend="SPIBoolean">SPIBoolean</link>  AccessibleSelection_selectAll   (<link linkend="AccessibleSelection">AccessibleSelection</link> *obj);</programlisting>
<para>
Attempt to select all of the children of an <link linkend="AccessibleSelection">AccessibleSelection</link> implementor.
Not all <link linkend="AccessibleSelection">AccessibleSelection</link> implementors support this operation.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleSelection">AccessibleSelection</link> implementor on which to operate.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> <link linkend="TRUE-CAPS">TRUE</link> if successful, <link linkend="FALSE-CAPS">FALSE</link> otherwise.

</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
