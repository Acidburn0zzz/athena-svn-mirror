<refentry id="at-spi-cspi-AccessibleHypertext-Interface">
<refmeta>
<refentrytitle>AccessibleHypertext Interface</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>AT-SPI-CSPI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>AccessibleHypertext Interface</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



void        <link linkend="AccessibleHypertext-ref">AccessibleHypertext_ref</link>         (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj);
void        <link linkend="AccessibleHypertext-unref">AccessibleHypertext_unref</link>       (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj);
<link linkend="long">long</link>        <link linkend="AccessibleHypertext-getNLinks">AccessibleHypertext_getNLinks</link>   (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj);
<link linkend="AccessibleHyperlink">AccessibleHyperlink</link>* <link linkend="AccessibleHypertext-getLink">AccessibleHypertext_getLink</link>
                                            (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj,
                                             <link linkend="long-int">long int</link> linkIndex);
<link linkend="long">long</link>        <link linkend="AccessibleHypertext-getLinkIndex">AccessibleHypertext_getLinkIndex</link>
                                            (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj,
                                             <link linkend="long-int">long int</link> characterOffset);
</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="AccessibleHypertext-ref">AccessibleHypertext_ref ()</title>
<programlisting>void        AccessibleHypertext_ref         (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj);</programlisting>
<para>
Increment the reference count for an <link linkend="AccessibleHypertext">AccessibleHypertext</link> object.
      Since AccessibleHypertext is derived from AccessibleText,
      this is the same as <link linkend="AccessibleText-unref">AccessibleText_unref</link>().</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleHypertext">AccessibleHypertext</link> object on which to operate.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="AccessibleHypertext-unref">AccessibleHypertext_unref ()</title>
<programlisting>void        AccessibleHypertext_unref       (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj);</programlisting>
<para>
Decrement the reference count for an <link linkend="AccessibleHypertext">AccessibleHypertext</link> object.
      Since AccessibleHypertext is derived from AccessibleText,
      this is the same as <link linkend="AccessibleText-unref">AccessibleText_unref</link>().</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleHypertext">AccessibleHypertext</link> object on which to operate.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="AccessibleHypertext-getNLinks">AccessibleHypertext_getNLinks ()</title>
<programlisting><link linkend="long">long</link>        AccessibleHypertext_getNLinks   (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj);</programlisting>
<para>
Get the total number of <link linkend="AccessibleHyperlinks">AccessibleHyperlinks</link> which an
       <link linkend="AccessibleHypertext">AccessibleHypertext</link> implementor has.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleHypertext">AccessibleHypertext</link> implementor on which to operate.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a <link linkend="long">long</link> indicating the number of <link linkend="AccessibleHyperlinks">AccessibleHyperlinks</link>
       of the <link linkend="AccessibleHypertext">AccessibleHypertext</link> implementor, or -1 if
       the number cannot be determined (for example, if the
       <link linkend="AccessibleHypertext">AccessibleHypertext</link> object is so large that it is not
       all currently in the memory cache).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="AccessibleHypertext-getLink">AccessibleHypertext_getLink ()</title>
<programlisting><link linkend="AccessibleHyperlink">AccessibleHyperlink</link>* AccessibleHypertext_getLink
                                            (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj,
                                             <link linkend="long-int">long int</link> linkIndex);</programlisting>
<para>
Get the <link linkend="AccessibleHyperlink">AccessibleHyperlink</link> object at a specified index.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleHypertext">AccessibleHypertext</link> implementor on which to operate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>linkIndex</parameter>&nbsp;:</term>
<listitem><simpara> a (zero-index) long integer indicating which hyperlink to query.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the <link linkend="AccessibleHyperlink">AccessibleHyperlink</link> object specified by <link linkend="linkIndex">linkIndex</link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="AccessibleHypertext-getLinkIndex">AccessibleHypertext_getLinkIndex ()</title>
<programlisting><link linkend="long">long</link>        AccessibleHypertext_getLinkIndex
                                            (<link linkend="AccessibleHypertext">AccessibleHypertext</link> *obj,
                                             <link linkend="long-int">long int</link> characterOffset);</programlisting>
<para>
Get the index of the <link linkend="AccessibleHyperlink">AccessibleHyperlink</link> object at a specified
       character offset.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleHypertext">AccessibleHypertext</link> implementor on which to operate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>characterOffset</parameter>&nbsp;:</term>
<listitem><simpara> an integer specifying the character offset to query.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the linkIndex of the <link linkend="AccessibleHyperlink">AccessibleHyperlink</link> active at
       character offset <parameter>characterOffset</parameter>, or -1 if there is
       no hyperlink at the specified character offset.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
