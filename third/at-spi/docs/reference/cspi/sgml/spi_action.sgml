<refentry id="at-spi-cspi-AccessibleAction-Interface">
<refmeta>
<refentrytitle>AccessibleAction Interface</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>AT-SPI-CSPI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>AccessibleAction Interface</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



void        <link linkend="AccessibleAction-ref">AccessibleAction_ref</link>            (<link linkend="AccessibleAction">AccessibleAction</link> *obj);
void        <link linkend="AccessibleAction-unref">AccessibleAction_unref</link>          (<link linkend="AccessibleAction">AccessibleAction</link> *obj);
<link linkend="long">long</link>        <link linkend="AccessibleAction-getNActions">AccessibleAction_getNActions</link>    (<link linkend="AccessibleAction">AccessibleAction</link> *obj);
<link linkend="SPIBoolean">SPIBoolean</link>  <link linkend="AccessibleAction-doAction">AccessibleAction_doAction</link>       (<link linkend="AccessibleAction">AccessibleAction</link> *obj,
                                             <link linkend="long-int">long int</link> i);
char*       <link linkend="AccessibleAction-getKeyBinding">AccessibleAction_getKeyBinding</link>  (<link linkend="AccessibleAction">AccessibleAction</link> *obj,
                                             <link linkend="long-int">long int</link> i);
char*       <link linkend="AccessibleAction-getName">AccessibleAction_getName</link>        (<link linkend="AccessibleAction">AccessibleAction</link> *obj,
                                             <link linkend="long-int">long int</link> i);
char*       <link linkend="AccessibleAction-getDescription">AccessibleAction_getDescription</link> (<link linkend="AccessibleAction">AccessibleAction</link> *obj,
                                             <link linkend="long-int">long int</link> i);
</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="AccessibleAction-ref">AccessibleAction_ref ()</title>
<programlisting>void        AccessibleAction_ref            (<link linkend="AccessibleAction">AccessibleAction</link> *obj);</programlisting>
<para>
Increment the reference count for an <link linkend="AccessibleAction">AccessibleAction</link>.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleAction">AccessibleAction</link> on which to operate.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="AccessibleAction-unref">AccessibleAction_unref ()</title>
<programlisting>void        AccessibleAction_unref          (<link linkend="AccessibleAction">AccessibleAction</link> *obj);</programlisting>
<para>
Decrement the reference count for an <link linkend="AccessibleAction">AccessibleAction</link>.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleAction">AccessibleAction</link> on which to operate.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="AccessibleAction-getNActions">AccessibleAction_getNActions ()</title>
<programlisting><link linkend="long">long</link>        AccessibleAction_getNActions    (<link linkend="AccessibleAction">AccessibleAction</link> *obj);</programlisting>
<para>
Get the number of actions invokable on an <link linkend="AccessibleAction">AccessibleAction</link> implementor.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleAction">AccessibleAction</link> to query.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> a <link linkend="long">long</link> integer indicatin the number of invokable actions.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="AccessibleAction-doAction">AccessibleAction_doAction ()</title>
<programlisting><link linkend="SPIBoolean">SPIBoolean</link>  AccessibleAction_doAction       (<link linkend="AccessibleAction">AccessibleAction</link> *obj,
                                             <link linkend="long-int">long int</link> i);</programlisting>
<para>
Invoke the action indicated by <link linkend="index">index</link>.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleAction">AccessibleAction</link> to query.
</entry></row>
<row><entry align="right"><parameter>i</parameter>&nbsp;:</entry>
<entry> an integer specifying which action to invoke.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> <link linkend="TRUE-CAPS">TRUE</link> if the action is successfully invoked, otherwise <link linkend="FALSE-CAPS">FALSE</link>.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="AccessibleAction-getKeyBinding">AccessibleAction_getKeyBinding ()</title>
<programlisting>char*       AccessibleAction_getKeyBinding  (<link linkend="AccessibleAction">AccessibleAction</link> *obj,
                                             <link linkend="long-int">long int</link> i);</programlisting>
<para>
Get the keybindings for the <parameter>i</parameter>-th action invokable on an
     object implementing <link linkend="AccessibleAction">AccessibleAction</link>, if any are defined.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleAction">AccessibleAction</link> implementor to query.
</entry></row>
<row><entry align="right"><parameter>i</parameter>&nbsp;:</entry>
<entry> a long integer indicating which action to query.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> a UTF-8 string which can be parsed to determine the <parameter>i</parameter>-th
      invokable action's keybindings.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="AccessibleAction-getName">AccessibleAction_getName ()</title>
<programlisting>char*       AccessibleAction_getName        (<link linkend="AccessibleAction">AccessibleAction</link> *obj,
                                             <link linkend="long-int">long int</link> i);</programlisting>
<para>
Get the name of the '<parameter>i</parameter>-th' action invokable on an
     object implementing <link linkend="AccessibleAction">AccessibleAction</link>.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleAction">AccessibleAction</link> implementor to query.
</entry></row>
<row><entry align="right"><parameter>i</parameter>&nbsp;:</entry>
<entry> a long integer indicating which action to query.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the 'event type' name of the action, as a UTF-8 string.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="AccessibleAction-getDescription">AccessibleAction_getDescription ()</title>
<programlisting>char*       AccessibleAction_getDescription (<link linkend="AccessibleAction">AccessibleAction</link> *obj,
                                             <link linkend="long-int">long int</link> i);</programlisting>
<para>
Get the description of '<parameter>i</parameter>-th' action invokable on an
     object implementing <link linkend="AccessibleAction">AccessibleAction</link>.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>obj</parameter>&nbsp;:</entry>
<entry> a pointer to the <link linkend="AccessibleAction">AccessibleAction</link> implementor to query.
</entry></row>
<row><entry align="right"><parameter>i</parameter>&nbsp;:</entry>
<entry> a long integer indicating which action to query.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> a UTF-8 string describing the '<parameter>i</parameter>-th' invokable action.
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
