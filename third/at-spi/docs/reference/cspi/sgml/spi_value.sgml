<refentry id="at-spi-cspi-AccessibleValue-Interface">
<refmeta>
<refentrytitle>AccessibleValue Interface</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>AT-SPI-CSPI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>AccessibleValue Interface</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



void        <link linkend="AccessibleValue-ref">AccessibleValue_ref</link>             (<link linkend="AccessibleValue">AccessibleValue</link> *obj);
void        <link linkend="AccessibleValue-unref">AccessibleValue_unref</link>           (<link linkend="AccessibleValue">AccessibleValue</link> *obj);
<link linkend="double">double</link>      <link linkend="AccessibleValue-getCurrentValue">AccessibleValue_getCurrentValue</link> (<link linkend="AccessibleValue">AccessibleValue</link> *obj);
<link linkend="double">double</link>      <link linkend="AccessibleValue-getMaximumValue">AccessibleValue_getMaximumValue</link> (<link linkend="AccessibleValue">AccessibleValue</link> *obj);
<link linkend="double">double</link>      <link linkend="AccessibleValue-getMinimumValue">AccessibleValue_getMinimumValue</link> (<link linkend="AccessibleValue">AccessibleValue</link> *obj);
<link linkend="SPIBoolean">SPIBoolean</link>  <link linkend="AccessibleValue-setCurrentValue">AccessibleValue_setCurrentValue</link> (<link linkend="AccessibleValue">AccessibleValue</link> *obj,
                                             <link linkend="double">double</link> newValue);
</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="AccessibleValue-ref">AccessibleValue_ref ()</title>
<programlisting>void        AccessibleValue_ref             (<link linkend="AccessibleValue">AccessibleValue</link> *obj);</programlisting>
<para>
Increment the reference count for an <link linkend="AccessibleValue">AccessibleValue</link> object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleValue">AccessibleValue</link> implementor on which to operate.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="AccessibleValue-unref">AccessibleValue_unref ()</title>
<programlisting>void        AccessibleValue_unref           (<link linkend="AccessibleValue">AccessibleValue</link> *obj);</programlisting>
<para>
Decrement the reference count for an <link linkend="AccessibleValue">AccessibleValue</link> object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleValue">AccessibleValue</link> implementor on which to operate. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="AccessibleValue-getCurrentValue">AccessibleValue_getCurrentValue ()</title>
<programlisting><link linkend="double">double</link>      AccessibleValue_getCurrentValue (<link linkend="AccessibleValue">AccessibleValue</link> *obj);</programlisting>
<para>
Get the current value for an <link linkend="AccessibleValue">AccessibleValue</link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleValue">AccessibleValue</link> implementor on which to operate. 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the current value for this object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="AccessibleValue-getMaximumValue">AccessibleValue_getMaximumValue ()</title>
<programlisting><link linkend="double">double</link>      AccessibleValue_getMaximumValue (<link linkend="AccessibleValue">AccessibleValue</link> *obj);</programlisting>
<para>
Get the maximum allowed value for an <link linkend="AccessibleValue">AccessibleValue</link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleValue">AccessibleValue</link> implementor on which to operate. 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the maximum allowed value for this object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="AccessibleValue-getMinimumValue">AccessibleValue_getMinimumValue ()</title>
<programlisting><link linkend="double">double</link>      AccessibleValue_getMinimumValue (<link linkend="AccessibleValue">AccessibleValue</link> *obj);</programlisting>
<para>
Get the minimum allowed value for an <link linkend="AccessibleValue">AccessibleValue</link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleValue">AccessibleValue</link> implementor on which to operate. 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the minimum allowed value for this object.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="AccessibleValue-setCurrentValue">AccessibleValue_setCurrentValue ()</title>
<programlisting><link linkend="SPIBoolean">SPIBoolean</link>  AccessibleValue_setCurrentValue (<link linkend="AccessibleValue">AccessibleValue</link> *obj,
                                             <link linkend="double">double</link> newValue);</programlisting>
<para>
Set the current value of an <link linkend="AccessibleValue">AccessibleValue</link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara> a pointer to the <link linkend="AccessibleValue">AccessibleValue</link> implementor on which to operate.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>newValue</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="float">float</link> value which is the desired new value of the object.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <link linkend="TRUE-CAPS">TRUE</link> if the value could be assigned the specified value,
         <link linkend="FALSE-CAPS">FALSE</link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
