# Makefile.in generated by automake 1.7.9 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BONOBO_ACTIVATION_LT_VERSION_INFO = @BONOBO_ACTIVATION_LT_VERSION_INFO@
BONOBO_MAJOR_VERSION = @BONOBO_MAJOR_VERSION@
BONOBO_MICRO_VERSION = @BONOBO_MICRO_VERSION@
BONOBO_MINOR_VERSION = @BONOBO_MINOR_VERSION@
BONOBO_SLAY = @BONOBO_SLAY@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DATADIRNAME = @DATADIRNAME@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_GTK_DOC_FALSE = @ENABLE_GTK_DOC_FALSE@
ENABLE_GTK_DOC_TRUE = @ENABLE_GTK_DOC_TRUE@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GTK_DOC_USE_LIBTOOL_FALSE = @GTK_DOC_USE_LIBTOOL_FALSE@
GTK_DOC_USE_LIBTOOL_TRUE = @GTK_DOC_USE_LIBTOOL_TRUE@
HTML_DIR = @HTML_DIR@
IF_BSD_PS = @IF_BSD_PS@
IF_POSIX_PS = @IF_POSIX_PS@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_CAVES_RULE = @INTLTOOL_CAVES_RULE@
INTLTOOL_DESKTOP_RULE = @INTLTOOL_DESKTOP_RULE@
INTLTOOL_DIRECTORY_RULE = @INTLTOOL_DIRECTORY_RULE@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_KBD_RULE = @INTLTOOL_KBD_RULE@
INTLTOOL_KEYS_RULE = @INTLTOOL_KEYS_RULE@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_OAF_RULE = @INTLTOOL_OAF_RULE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_PONG_RULE = @INTLTOOL_PONG_RULE@
INTLTOOL_PROP_RULE = @INTLTOOL_PROP_RULE@
INTLTOOL_SCHEMAS_RULE = @INTLTOOL_SCHEMAS_RULE@
INTLTOOL_SERVER_RULE = @INTLTOOL_SERVER_RULE@
INTLTOOL_SHEET_RULE = @INTLTOOL_SHEET_RULE@
INTLTOOL_SOUNDLIST_RULE = @INTLTOOL_SOUNDLIST_RULE@
INTLTOOL_THEME_RULE = @INTLTOOL_THEME_RULE@
INTLTOOL_UI_RULE = @INTLTOOL_UI_RULE@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_XAM_RULE = @INTLTOOL_XAM_RULE@
INTLTOOL_XML_RULE = @INTLTOOL_XML_RULE@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LFLAGS = @LFLAGS@
LIBBONOBO_CFLAGS = @LIBBONOBO_CFLAGS@
LIBBONOBO_LIBS = @LIBBONOBO_LIBS@
LIBBONOBO_LT_VERSION_INFO = @LIBBONOBO_LT_VERSION_INFO@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORBIT_IDL = @ORBIT_IDL@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PATH_TO_XRDB = @PATH_TO_XRDB@
PERL_PATH = @PERL_PATH@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POPT_LIBS = @POPT_LIBS@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
PS_PATH = @PS_PATH@
RANLIB = @RANLIB@
SERVER_CFLAGS = @SERVER_CFLAGS@
SERVER_LIBS = @SERVER_LIBS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WARN_CFLAGS = @WARN_CFLAGS@
XGETTEXT = @XGETTEXT@
YACC = @YACC@
ac_ct_AR = @ac_ct_AR@
ac_ct_AS = @ac_ct_AS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DLLTOOL = @ac_ct_DLLTOOL@
ac_ct_F77 = @ac_ct_F77@
ac_ct_OBJDUMP = @ac_ct_OBJDUMP@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
gnomelocaledir = @gnomelocaledir@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
NULL = 

lib_LTLIBRARIES = libbonobo-activation.la

INCLUDES = \
	-I$(top_srcdir)				\
	-I$(top_builddir)			\
	-DSERVER_LIBEXECDIR=\""$(libexecdir)\"" \
        -DBONOBO_ACTIVATION_LOCALEDIR=\""${prefix}/${DATADIRNAME}/locale"\" \
	$(LIBBONOBO_CFLAGS)			\
	-DVERSION=\"$(VERSION)\"		\
	-DG_DISABLE_DEPRECATED			\
	-DG_LOG_DOMAIN=\"Bonobo-Activation\"	\
	$(NULL)


AM_LDFLAGS = \
	$(LIBBONOBO_LIBS)			\
	$(BONOBO_ACTIVATION_LT_VERSION_INFO)	\
	-no-undefined				\
	$(NULL)


bonobo_activationincludedir = $(includedir)/bonobo-activation-2.0/bonobo-activation

bonobo_activationinclude_HEADERS = \
	Bonobo_Unknown.h			\
	Bonobo_GenericFactory.h			\
	Bonobo_Activation_types.h		\
	bonobo-activation.h			\
	bonobo-activation-async.h		\
	bonobo-activation-activate.h		\
	bonobo-activation-init.h		\
	bonobo-activation-shlib.h		\
	bonobo-activation-register.h		\
	bonobo-activation-server-info.h		\
	bonobo-activation-async.h		\
	bonobo-activation-version.h		\
	$(NULL)


libbonobo_activation_la_SOURCES = \
	$(BUILT_SOURCES)			\
	bonobo-activation-get-language-list.c	\
	bonobo-activation-client.c		\
	bonobo-activation-client.h		\
	bonobo-activation-id.h			\
	bonobo-activation-id.c			\
	bonobo-activation-private.h		\
	bonobo-activation-shlib.c		\
	bonobo-activation-activate.c		\
	bonobo-activation-activate-private.h	\
	bonobo-activation-base-service.h	\
	bonobo-activation-base-service.c	\
	bonobo-activation-register.c		\
	bonobo-activation-server-info.c		\
	bonobo-activation-i18n.h		\
	bonobo-activation-fork-server.c		\
	bonobo-activation-init.c		\
	$(NULL)


IDL_FLAGS = -I$(top_srcdir)/idl
IDL_DIR = $(top_srcdir)/idl/
IDL_FILES = Bonobo_Unknown.idl			\
	    Bonobo_GenericFactory.idl		\
	    Bonobo_Activation_types.idl		\
	    Bonobo_ObjectDirectory.idl		\
	    Bonobo_ActivationContext.idl	\
	    $(NULL)


IDL_HEADER_FILES = $(IDL_FILES:.idl=.h)
IDL_COMMONS = $(IDL_FILES:.idl=-common.c)
IDL_SKELS = $(IDL_FILES:.idl=-skels.c)
IDL_STUBS = $(IDL_FILES:.idl=-stubs.c)

BUILT_SOURCES = $(IDL_HEADER_FILES) $(IDL_COMMONS) $(IDL_SKELS) $(IDL_STUBS) \
	$(NULL)


@MAINTAINER_MODE_TRUE@DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)
@MAINTAINER_MODE_TRUE@IDL_DEP_FILES = $(IDL_FILES:%.idl=.deps/%.idl.P)

CLEANFILES = \
	$(BUILT_SOURCES)			\
	$(NULL)


pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = bonobo-activation-2.0.pc

EXTRA_DIST = $(pkgconfig_DATA) bonobo-activation-2.0-uninstalled.pc.in AUTHORS
subdir = bonobo-activation
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = bonobo-activation-2.0.pc \
	bonobo-activation-2.0-uninstalled.pc \
	bonobo-activation-version.h
LTLIBRARIES = $(lib_LTLIBRARIES)

libbonobo_activation_la_LDFLAGS =
libbonobo_activation_la_LIBADD =
am__objects_1 =
am__objects_2 = $(am__objects_1)
am__objects_3 = $(am__objects_2)
am__objects_4 = Bonobo_Unknown-common.lo Bonobo_GenericFactory-common.lo \
	Bonobo_Activation_types-common.lo \
	Bonobo_ObjectDirectory-common.lo \
	Bonobo_ActivationContext-common.lo $(am__objects_1)
am__objects_5 = $(am__objects_4)
am__objects_6 = Bonobo_Unknown-skels.lo Bonobo_GenericFactory-skels.lo \
	Bonobo_Activation_types-skels.lo \
	Bonobo_ObjectDirectory-skels.lo \
	Bonobo_ActivationContext-skels.lo $(am__objects_1)
am__objects_7 = $(am__objects_6)
am__objects_8 = Bonobo_Unknown-stubs.lo Bonobo_GenericFactory-stubs.lo \
	Bonobo_Activation_types-stubs.lo \
	Bonobo_ObjectDirectory-stubs.lo \
	Bonobo_ActivationContext-stubs.lo $(am__objects_1)
am__objects_9 = $(am__objects_8)
am__objects_10 = $(am__objects_3) $(am__objects_5) $(am__objects_7) \
	$(am__objects_9) $(am__objects_1)
am_libbonobo_activation_la_OBJECTS = $(am__objects_10) \
	bonobo-activation-get-language-list.lo \
	bonobo-activation-client.lo bonobo-activation-id.lo \
	bonobo-activation-shlib.lo bonobo-activation-activate.lo \
	bonobo-activation-base-service.lo bonobo-activation-register.lo \
	bonobo-activation-server-info.lo \
	bonobo-activation-fork-server.lo bonobo-activation-init.lo \
	$(am__objects_1)
libbonobo_activation_la_OBJECTS = $(am_libbonobo_activation_la_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/Bonobo_ActivationContext-common.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Bonobo_ActivationContext-skels.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Bonobo_ActivationContext-stubs.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Bonobo_Activation_types-common.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Bonobo_Activation_types-skels.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Bonobo_Activation_types-stubs.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Bonobo_GenericFactory-common.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Bonobo_GenericFactory-skels.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Bonobo_GenericFactory-stubs.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Bonobo_ObjectDirectory-common.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Bonobo_ObjectDirectory-skels.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Bonobo_ObjectDirectory-stubs.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Bonobo_Unknown-common.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Bonobo_Unknown-skels.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Bonobo_Unknown-stubs.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/bonobo-activation-activate.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/bonobo-activation-base-service.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/bonobo-activation-client.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/bonobo-activation-fork-server.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/bonobo-activation-get-language-list.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/bonobo-activation-id.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/bonobo-activation-init.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/bonobo-activation-register.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/bonobo-activation-server-info.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/bonobo-activation-shlib.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libbonobo_activation_la_SOURCES)
DATA = $(pkgconfig_DATA)

HEADERS = $(bonobo_activationinclude_HEADERS)

DIST_COMMON = $(bonobo_activationinclude_HEADERS) $(srcdir)/Makefile.in \
	AUTHORS Makefile.am bonobo-activation-2.0-uninstalled.pc.in \
	bonobo-activation-2.0.pc.in bonobo-activation-version.h.in
SOURCES = $(libbonobo_activation_la_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  bonobo-activation/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
bonobo-activation-2.0.pc: $(top_builddir)/config.status bonobo-activation-2.0.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
bonobo-activation-2.0-uninstalled.pc: $(top_builddir)/config.status bonobo-activation-2.0-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
bonobo-activation-version.h: $(top_builddir)/config.status bonobo-activation-version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libbonobo-activation.la: $(libbonobo_activation_la_OBJECTS) $(libbonobo_activation_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libbonobo_activation_la_LDFLAGS) $(libbonobo_activation_la_OBJECTS) $(libbonobo_activation_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bonobo_ActivationContext-common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bonobo_ActivationContext-skels.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bonobo_ActivationContext-stubs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bonobo_Activation_types-common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bonobo_Activation_types-skels.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bonobo_Activation_types-stubs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bonobo_GenericFactory-common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bonobo_GenericFactory-skels.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bonobo_GenericFactory-stubs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bonobo_ObjectDirectory-common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bonobo_ObjectDirectory-skels.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bonobo_ObjectDirectory-stubs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bonobo_Unknown-common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bonobo_Unknown-skels.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bonobo_Unknown-stubs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bonobo-activation-activate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bonobo-activation-base-service.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bonobo-activation-client.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bonobo-activation-fork-server.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bonobo-activation-get-language-list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bonobo-activation-id.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bonobo-activation-init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bonobo-activation-register.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bonobo-activation-server-info.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bonobo-activation-shlib.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
pkgconfigDATA_INSTALL = $(INSTALL_DATA)
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgconfigdir)
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgconfigDATA_INSTALL) $$d$$p $(DESTDIR)$(pkgconfigdir)/$$f"; \
	  $(pkgconfigDATA_INSTALL) $$d$$p $(DESTDIR)$(pkgconfigdir)/$$f; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgconfigdir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgconfigdir)/$$f; \
	done
bonobo_activationincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-bonobo_activationincludeHEADERS: $(bonobo_activationinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bonobo_activationincludedir)
	@list='$(bonobo_activationinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(bonobo_activationincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(bonobo_activationincludedir)/$$f"; \
	  $(bonobo_activationincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(bonobo_activationincludedir)/$$f; \
	done

uninstall-bonobo_activationincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(bonobo_activationinclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(bonobo_activationincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(bonobo_activationincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(pkgconfigdir) $(DESTDIR)$(bonobo_activationincludedir)
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-local distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-bonobo_activationincludeHEADERS \
	install-pkgconfigDATA

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-bonobo_activationincludeHEADERS \
	uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-local distclean-tags distdir dvi dvi-am info info-am \
	install install-am install-bonobo_activationincludeHEADERS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-libLTLIBRARIES install-man \
	install-pkgconfigDATA install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am \
	uninstall-bonobo_activationincludeHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-pkgconfigDATA


$(libbonobo_activation_la_OBJECTS): $(BUILT_SOURCES)

%.h %-stubs.c %-skels.c %-common.c %-imodule.c %-skelimpl.c: $(IDL_DIR)%.idl $(ORBIT_IDL)
	echo "top_srcdir: $(top_srcdir)"
	echo "IDL_DIR: $(IDL_DIR)"
	echo "IDL file: $<"
	-(rm -f $(*).h $(*)-stubs.c $(*)-skels.c $(*)-common.c $(*)-imodule.c $(*)-skelimpl.c || true) > /dev/null
	$(ORBIT_IDL) $(IDL_FLAGS) "-D__$(*)_COMPILATION" --deps $(*D)/.deps/$(*F).idl.P $<
@MAINTAINER_MODE_TRUE@-include $(IDL_DEP_FILES)
@MAINTAINER_MODE_TRUE@distclean-local:
@MAINTAINER_MODE_TRUE@	-rm -rf .deps

dist-hook:
	cd $(distdir) ; rm -f $(CLEANFILES)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
