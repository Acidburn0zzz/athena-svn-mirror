# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AS = @AS@
BONOBO_ACTIVATION_IDL_DIR = @BONOBO_ACTIVATION_IDL_DIR@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
DATADIRNAME = @DATADIRNAME@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EXEEXT = @EXEEXT@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GTKDOC = @GTKDOC@
HTML_DIR = @HTML_DIR@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_CAVES_RULE = @INTLTOOL_CAVES_RULE@
INTLTOOL_DESKTOP_RULE = @INTLTOOL_DESKTOP_RULE@
INTLTOOL_DIRECTORY_RULE = @INTLTOOL_DIRECTORY_RULE@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_KEYS_RULE = @INTLTOOL_KEYS_RULE@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_OAF_RULE = @INTLTOOL_OAF_RULE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_PONG_RULE = @INTLTOOL_PONG_RULE@
INTLTOOL_PROP_RULE = @INTLTOOL_PROP_RULE@
INTLTOOL_SCHEMAS_RULE = @INTLTOOL_SCHEMAS_RULE@
INTLTOOL_SERVER_RULE = @INTLTOOL_SERVER_RULE@
INTLTOOL_SHEET_RULE = @INTLTOOL_SHEET_RULE@
INTLTOOL_SOUNDLIST_RULE = @INTLTOOL_SOUNDLIST_RULE@
INTLTOOL_THEME_RULE = @INTLTOOL_THEME_RULE@
INTLTOOL_UI_RULE = @INTLTOOL_UI_RULE@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_XML_RULE = @INTLTOOL_XML_RULE@
LIBBONOBO_CFLAGS = @LIBBONOBO_CFLAGS@
LIBBONOBO_LIBS = @LIBBONOBO_LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKINSTALLDIRS = @MKINSTALLDIRS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORBIT_IDL = @ORBIT_IDL@
PACKAGE = @PACKAGE@
PATH_TO_XRDB = @PATH_TO_XRDB@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
RANLIB = @RANLIB@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WARN_CFLAGS = @WARN_CFLAGS@
YACC = @YACC@
cxxflags_set = @cxxflags_set@
gnomelocaledir = @gnomelocaledir@

INCLUDES =  	-I$(top_srcdir) 					-I$(top_builddir) 					$(WARN_CFLAGS)						$(LIBBONOBO_CFLAGS)				        -DBONOBO_LIBDIR=\""$(libdir)"\" 		        -DBONOBO_DATADIR=\""$(datadir)"\" 		        -DBONOBO_PIXMAPDIR=\""$(datadir)/pixmaps"\"	        -DBONOBO_BINDIR=\""$(bindir)"\" 		        -DBONOBO_LOCALSTATEDIR=\""$(localstatedir)"\" 	        -DBONOBO_LOCALEDIR=\""$(gnomelocaledir)"\" 		-DG_DISABLE_DEPRECATED					-DG_LOG_DOMAIN=\"Bonobo\"				-DVERSION=\"$(VERSION)\"


LDFLAGS = @LT_VERSION_INFO@

CORBA_SOURCE =  	Bonobo.h			Bonobo-common.c			Bonobo-stubs.c			Bonobo-skels.c


idls =  	$(top_srcdir)/idl/Bonobo.idl				$(top_srcdir)/idl/Bonobo_Canvas.idl			$(top_srcdir)/idl/Bonobo_Context.idl			$(top_srcdir)/idl/Bonobo_Control.idl			$(top_srcdir)/idl/Bonobo_Embeddable.idl			$(top_srcdir)/idl/Bonobo_Gdk.idl			$(top_srcdir)/idl/Bonobo_ItemContainer.idl		$(top_srcdir)/idl/Bonobo_Listener.idl			$(top_srcdir)/idl/Bonobo_Moniker.idl			$(top_srcdir)/idl/Bonobo_Persist.idl			$(top_srcdir)/idl/Bonobo_Print.idl			$(top_srcdir)/idl/Bonobo_Property.idl			$(top_srcdir)/idl/Bonobo_Storage.idl			$(top_srcdir)/idl/Bonobo_UI.idl				$(top_srcdir)/idl/Bonobo_Zoomable.idl			$(top_srcdir)/idl/Bonobo_Exception.idl			$(top_srcdir)/idl/Bonobo_Clipboard.idl


idl_flags = -I$(top_srcdir)/idl -I $(BONOBO_ACTIVATION_IDL_DIR) -D__Bonobo_COMPILATION

lib_LTLIBRARIES = libbonobo-2.la

libbonobo_2_la_LIBADD =  	$(LIBBONOBO_LIBS)


libbonoboincludedir = $(includedir)/libbonobo-2.0/bonobo

libbonoboinclude_HEADERS =  	Bonobo.h				bonobo-arg.h				bonobo-context.h			bonobo-event-source.h			bonobo-exception.h			bonobo-generic-factory.h		bonobo-item-container.h			bonobo-item-handler.h			bonobo-listener.h			bonobo-main.h				bonobo-macros.h				bonobo-moniker-extender.h		bonobo-moniker-simple.h			bonobo-moniker-util.h			bonobo-moniker.h			bonobo-object.h				bonobo-persist-file.h			bonobo-persist-stream.h			bonobo-persist.h			bonobo-persist-client.h			bonobo-property-bag.h			bonobo-property-bag-client.h		bonobo-shlib-factory.h			bonobo-storage.h			bonobo-stream.h				bonobo-stream-client.h			bonobo-stream-memory.h			bonobo-storage-memory.h			bonobo-xobject.h			bonobo-i18n.h				bonobo-types.h


noinst_HEADERS =  	bonobo-moniker-context.h		bonobo-running-context.h		bonobo-shutdown.h			bonobo-marshal.h


libbonobo_src =  	bonobo-moniker-context.c		bonobo-arg.c				bonobo-context.c			bonobo-event-source.c			bonobo-exception.c			bonobo-generic-factory.c		bonobo-item-container.c			bonobo-item-handler.c			bonobo-listener.c			bonobo-main.c				bonobo-moniker.c			bonobo-moniker-extender.c		bonobo-moniker-simple.c			bonobo-moniker-util.c			bonobo-object.c				bonobo-persist-file.c			bonobo-persist-stream.c			bonobo-persist.c			bonobo-persist-client.c			bonobo-property-bag.c			bonobo-property-bag-client.c		bonobo-shlib-factory.c			bonobo-storage.c			bonobo-stream-client.c			bonobo-stream-memory.c			bonobo-storage-memory.c			bonobo-running-context.c		bonobo-types.c				bonobo-debug.c				bonobo-debug.h


libbonobo_2_la_SOURCES =  	$(libbonoboinclude_HEADERS)		$(libbonobo_src)			$(CORBA_SOURCE)


marshal_sources =  	bonobo-marshal.c 	bonobo-marshal.h


EXTRA_DIST = libbonobo-2.0.pc.in bonobo-marshal.list
CLEANFILES = $(marshal_sources)

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libbonobo-2.0.pc

DONT_DIST_SOURCE = $(CORBA_SOURCE) $(marshal_sources)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES =  libbonobo-2.0.pc
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
LIBS = @LIBS@
libbonobo_2_la_LDFLAGS = 
libbonobo_2_la_DEPENDENCIES = 
libbonobo_2_la_OBJECTS =  bonobo-moniker-context.lo bonobo-arg.lo \
bonobo-context.lo bonobo-event-source.lo bonobo-exception.lo \
bonobo-generic-factory.lo bonobo-item-container.lo \
bonobo-item-handler.lo bonobo-listener.lo bonobo-main.lo \
bonobo-moniker.lo bonobo-moniker-extender.lo bonobo-moniker-simple.lo \
bonobo-moniker-util.lo bonobo-object.lo bonobo-persist-file.lo \
bonobo-persist-stream.lo bonobo-persist.lo bonobo-persist-client.lo \
bonobo-property-bag.lo bonobo-property-bag-client.lo \
bonobo-shlib-factory.lo bonobo-storage.lo bonobo-stream-client.lo \
bonobo-stream-memory.lo bonobo-storage-memory.lo \
bonobo-running-context.lo bonobo-types.lo bonobo-debug.lo \
Bonobo-common.lo Bonobo-stubs.lo Bonobo-skels.lo
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DATA =  $(pkgconfig_DATA)

HEADERS =  $(libbonoboinclude_HEADERS) $(noinst_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in libbonobo-2.0.pc.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libbonobo_2_la_SOURCES)
OBJECTS = $(libbonobo_2_la_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps bonobo/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

libbonobo-2.0.pc: $(top_builddir)/config.status libbonobo-2.0.pc.in
	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libbonobo-2.la: $(libbonobo_2_la_OBJECTS) $(libbonobo_2_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libbonobo_2_la_LDFLAGS) $(libbonobo_2_la_OBJECTS) $(libbonobo_2_la_LIBADD) $(LIBS)

install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgconfigdir)
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(pkgconfigdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(pkgconfigdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(pkgconfigdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(pkgconfigdir)/$$p; \
	  fi; fi; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	list='$(pkgconfig_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(pkgconfigdir)/$$p; \
	done

install-libbonoboincludeHEADERS: $(libbonoboinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libbonoboincludedir)
	@list='$(libbonoboinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libbonoboincludedir)/$$p"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libbonoboincludedir)/$$p; \
	done

uninstall-libbonoboincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	list='$(libbonoboinclude_HEADERS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libbonoboincludedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = bonobo

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-hook
bonobo-arg.lo bonobo-arg.o : bonobo-arg.c ../config.h bonobo-main.h \
	Bonobo.h bonobo-exception.h bonobo-arg.h
Bonobo-common.lo Bonobo-common.o : Bonobo-common.c Bonobo.h
bonobo-context.lo bonobo-context.o : bonobo-context.c ../config.h \
	bonobo-object.h Bonobo.h bonobo-macros.h bonobo-context.h \
	bonobo-shutdown.h bonobo-running-context.h \
	bonobo-moniker-context.h
bonobo-debug.lo bonobo-debug.o : bonobo-debug.c bonobo-debug.h
bonobo-event-source.lo bonobo-event-source.o : bonobo-event-source.c \
	../config.h bonobo-listener.h bonobo-arg.h Bonobo.h \
	bonobo-object.h bonobo-macros.h bonobo-exception.h \
	bonobo-event-source.h bonobo-running-context.h
bonobo-exception.lo bonobo-exception.o : bonobo-exception.c ../config.h \
	bonobo-i18n.h bonobo-object.h Bonobo.h bonobo-macros.h \
	bonobo-shutdown.h bonobo-exception.h
bonobo-generic-factory.lo bonobo-generic-factory.o : \
	bonobo-generic-factory.c ../config.h Bonobo.h bonobo-main.h \
	bonobo-types.h bonobo-object.h bonobo-macros.h bonobo-arg.h \
	bonobo-marshal.h bonobo-exception.h bonobo-generic-factory.h \
	bonobo-i18n.h bonobo-context.h bonobo-running-context.h
bonobo-item-container.lo bonobo-item-container.o : \
	bonobo-item-container.c ../config.h bonobo-exception.h Bonobo.h \
	bonobo-main.h bonobo-object.h bonobo-macros.h \
	bonobo-item-container.h bonobo-moniker.h bonobo-marshal.h \
	bonobo-types.h bonobo-arg.h
bonobo-item-handler.lo bonobo-item-handler.o : bonobo-item-handler.c \
	../config.h bonobo-main.h Bonobo.h bonobo-object.h \
	bonobo-macros.h bonobo-exception.h bonobo-types.h bonobo-arg.h \
	bonobo-marshal.h bonobo-item-handler.h
bonobo-listener.lo bonobo-listener.o : bonobo-listener.c ../config.h \
	bonobo-exception.h Bonobo.h bonobo-listener.h bonobo-arg.h \
	bonobo-object.h bonobo-macros.h bonobo-marshal.h bonobo-types.h
bonobo-main.lo bonobo-main.o : bonobo-main.c ../config.h \
	bonobo-exception.h Bonobo.h bonobo-main.h bonobo-object.h \
	bonobo-macros.h bonobo-context.h bonobo-shutdown.h
bonobo-moniker-context.lo bonobo-moniker-context.o : \
	bonobo-moniker-context.c ../config.h bonobo-exception.h \
	Bonobo.h bonobo-moniker-util.h bonobo-moniker-extender.h \
	bonobo-moniker.h bonobo-object.h bonobo-macros.h \
	bonobo-moniker-context.h
bonobo-moniker-extender.lo bonobo-moniker-extender.o : \
	bonobo-moniker-extender.c ../config.h bonobo-exception.h \
	Bonobo.h bonobo-moniker.h bonobo-object.h bonobo-macros.h \
	bonobo-moniker-util.h bonobo-moniker-extender.h
bonobo-moniker-simple.lo bonobo-moniker-simple.o : \
	bonobo-moniker-simple.c ../config.h bonobo-moniker.h \
	bonobo-object.h Bonobo.h bonobo-macros.h \
	bonobo-moniker-simple.h bonobo-types.h bonobo-arg.h \
	bonobo-marshal.h
bonobo-moniker-util.lo bonobo-moniker-util.o : bonobo-moniker-util.c \
	../config.h bonobo-i18n.h bonobo-object.h Bonobo.h \
	bonobo-macros.h bonobo-exception.h bonobo-moniker-util.h
bonobo-moniker.lo bonobo-moniker.o : bonobo-moniker.c ../config.h \
	bonobo-i18n.h bonobo-exception.h Bonobo.h bonobo-moniker.h \
	bonobo-object.h bonobo-macros.h bonobo-moniker-util.h \
	bonobo-moniker-extender.h
bonobo-object.lo bonobo-object.o : bonobo-object.c ../config.h Bonobo.h \
	bonobo-exception.h bonobo-main.h bonobo-object.h \
	bonobo-macros.h bonobo-shlib-factory.h bonobo-generic-factory.h \
	bonobo-i18n.h bonobo-running-context.h bonobo-marshal.h \
	bonobo-types.h bonobo-arg.h bonobo-shutdown.h bonobo-debug.h
bonobo-persist-client.lo bonobo-persist-client.o : \
	bonobo-persist-client.c bonobo-persist-client.h bonobo-object.h \
	Bonobo.h bonobo-macros.h bonobo-exception.h \
	bonobo-stream-client.h bonobo-moniker-util.h
bonobo-persist-file.lo bonobo-persist-file.o : bonobo-persist-file.c \
	../config.h bonobo-exception.h Bonobo.h bonobo-persist-file.h \
	bonobo-persist.h bonobo-object.h bonobo-macros.h
bonobo-persist-stream.lo bonobo-persist-stream.o : \
	bonobo-persist-stream.c ../config.h bonobo-exception.h Bonobo.h \
	bonobo-persist-stream.h bonobo-persist.h bonobo-object.h \
	bonobo-macros.h
bonobo-persist.lo bonobo-persist.o : bonobo-persist.c ../config.h \
	bonobo-persist.h bonobo-object.h Bonobo.h bonobo-macros.h
bonobo-property-bag-client.lo bonobo-property-bag-client.o : \
	bonobo-property-bag-client.c ../config.h bonobo-arg.h Bonobo.h \
	bonobo-shutdown.h bonobo-exception.h bonobo-moniker-util.h \
	bonobo-property-bag-client.h bonobo-property-bag.h \
	bonobo-object.h bonobo-macros.h bonobo-event-source.h \
	bonobo-listener.h
bonobo-property-bag.lo bonobo-property-bag.o : bonobo-property-bag.c \
	../config.h Bonobo.h bonobo-exception.h bonobo-property-bag.h \
	bonobo-object.h bonobo-macros.h bonobo-arg.h \
	bonobo-event-source.h bonobo-listener.h bonobo-marshal.h \
	bonobo-types.h
bonobo-running-context.lo bonobo-running-context.o : \
	bonobo-running-context.c ../config.h bonobo-context.h \
	bonobo-object.h Bonobo.h bonobo-macros.h bonobo-exception.h \
	bonobo-event-source.h bonobo-listener.h bonobo-arg.h \
	bonobo-moniker-util.h bonobo-running-context.h \
	bonobo-shutdown.h bonobo-main.h bonobo-debug.h
bonobo-shlib-factory.lo bonobo-shlib-factory.o : bonobo-shlib-factory.c \
	../config.h Bonobo.h bonobo-main.h bonobo-exception.h \
	bonobo-shlib-factory.h bonobo-object.h bonobo-macros.h \
	bonobo-generic-factory.h bonobo-i18n.h bonobo-running-context.h
Bonobo-skels.lo Bonobo-skels.o : Bonobo-skels.c Bonobo.h
bonobo-storage-memory.lo bonobo-storage-memory.o : \
	bonobo-storage-memory.c ../config.h bonobo-storage-memory.h \
	bonobo-storage.h bonobo-object.h Bonobo.h bonobo-macros.h \
	bonobo-stream-memory.h bonobo-exception.h
bonobo-storage.lo bonobo-storage.o : bonobo-storage.c ../config.h \
	bonobo-storage.h bonobo-object.h Bonobo.h bonobo-macros.h \
	bonobo-exception.h
bonobo-stream-client.lo bonobo-stream-client.o : bonobo-stream-client.c \
	../config.h Bonobo.h bonobo-object.h bonobo-macros.h \
	bonobo-exception.h bonobo-stream-client.h
bonobo-stream-memory.lo bonobo-stream-memory.o : bonobo-stream-memory.c \
	../config.h bonobo-stream-memory.h bonobo-storage.h \
	bonobo-object.h Bonobo.h bonobo-macros.h bonobo-exception.h
Bonobo-stubs.lo Bonobo-stubs.o : Bonobo-stubs.c Bonobo.h
bonobo-types.lo bonobo-types.o : bonobo-types.c ../config.h \
	bonobo-types.h bonobo-object.h Bonobo.h bonobo-macros.h \
	bonobo-arg.h bonobo-marshal.h bonobo-marshal.c

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES
install-exec: install-exec-am

install-data-am: install-pkgconfigDATA install-libbonoboincludeHEADERS
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES uninstall-pkgconfigDATA \
		uninstall-libbonoboincludeHEADERS
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(pkgconfigdir) \
		$(DESTDIR)$(libbonoboincludedir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool uninstall-pkgconfigDATA install-pkgconfigDATA \
uninstall-libbonoboincludeHEADERS install-libbonoboincludeHEADERS tags \
mostlyclean-tags distclean-tags clean-tags maintainer-clean-tags \
distdir info-am info dvi-am dvi check check-am installcheck-am \
installcheck install-exec-am install-exec install-data-am install-data \
install-am install uninstall-am uninstall all-redirect all-am all \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


$(CORBA_SOURCE): $(idls) $(ORBIT_IDL)
	$(ORBIT_IDL) $(idl_flags) $(top_srcdir)/idl/Bonobo.idl

$(libbonobo_2_la_OBJECTS): Bonobo.h $(marshal_sources)

bonobo-marshal.h: bonobo-marshal.list $(GLIB_GENMARSHAL)
	$(GLIB_GENMARSHAL) $< --header --prefix=bonobo_marshal > $@
bonobo-marshal.c: bonobo-marshal.list $(GLIB_GENMARSHAL)
	$(GLIB_GENMARSHAL) $< --body --prefix=bonobo_marshal > $@

dist-hook:
	for file in $(DONT_DIST_SOURCE) ; do \
	    rm -f $(distdir)/$$file ; \
	done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
