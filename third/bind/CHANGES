
	--- 9.1.3 released ---

	--- 9.1.3rc3 released ---

 911.	[bug]		Fail gracefully with multiple hint zones. [RT #1433]

 910.	[port]		Some pre-RFC2133 IPv6 implementations do not define
			IN6ADDR_ANY_INIT. [RT #1416]

	--- 9.1.3rc2 released ---

 904.	[bug]		The server would leak memory if attempting to use
			an expired TSIG key. [RT #1406]

 903.	[bug]		dig should not crash when receiving a TCP packet
			of length 0.

 902.	[bug]		The -d option was ignored if both -t and -g were also
			specified.

 901.	[cleanup]	The man pages no longer have empty lines outside of
			literal blocks.

 898.	[bug]		"dig" failed to set a nonzero exit status
			on UDP query timeout. [RT #1323]

 894.	[bug]		When using the DNSSEC tools, a message intended to warn
			when the keyboard was being used because of the lack
			of a suitable random device was not being printed.

 892.	[bug]		The server could attempt to refresh a zone that
			was being loaded, causing an assertion failure.
			[RT #1335]

 891.	[bug]		Return an error when a SIG(0) signed response to
			an unsigned query is seen.  This should actually
			do the verification, but it's not currently
			possible. [RT #1391]

 888.	[bug]		Don't die when using TKEY to delete a nonexistent
			TSIG key. [RT #1392]

 860.	[interop]	Drop cross class glue in zone transfers.

 852.	[bug]		Handle responses from servers which do not
			now about IXFR.

 850.	[bug]		dns_rbt_findnode() would not find nodes that were
			split on a bitstring label somewhere other than in
			the last label of the node. [RT #1351]

 705.	[port]		Work out resource limit type for use where rlim_t is
			not available. [RT #695]

 704.	[port]		RLIMIT_NOFILE is not available on all platforms.

 703.	[port]		sys/select.h is needed on older platforms. [RT #695]

	--- 9.1.3rc1 released ---

 831.	[bug]		The configure script tried to determine
			endianness before making its final decision on
			which C compiler to use, causing Solaris/x86
			systems with gcc to be incorrectly identified
			as big-endian. [RT #1315]

 827.	[bug]		When an IXFR protocol error occurs, the slave
			should retry with AXFR.

 826.	[bug]		Some IXFR protocol errors were not detected.

 825.	[bug]		zone.c:ns_query() detached from the wrong zone
			reference. [RT #1264] 

 824.	[bug]		Correct line numbers reported by dns_master_load().
			[RT #1263]

 822.	[bug]		Sending nxrrset prerequisites would crash nsupdate.
			[RT #1248]

 806.	[bug]		DNS_R_SEENINCLUDE was failing to propagate back up
			the calling stack to the zone maintence level, causing
			zones to not reload when an included file was touched
			but the top-level zone file was not.

 771.	[cleanup]	TSIG errors related to unsynchronized clocks
			are logged better. [RT #919]

 734.	[bug]		An attempt to re-lock the zone lock could occur if
			the server was shutdown during a zone tranfer.
			[RT #830]

 712.	[bug]		Sending a large signed update message caused an
			assertion failure. [RT #718]

 669.	[bug]		dnssec-keygen now makes the public key file
			non-world-readable for symmetric keys. [RT #403]

	--- 9.1.2 released ---

	--- 9.1.2rc1 released ---

 820.	[bug]		Name server address lookups failed to follow
			A6 chains into the glue of local authoritative
			zones.

 819.	[bug]		In certain cases, the resolver's attempts to
			restart an address lookup at the root could cause
			the fetch to deadlock (with itself) instead of
			restarting. [RT #1225]

 818.	[bug]		Certain pathological responses to ANY queries could
			cause an assertion failure. [RT #1218]

 816.	[bug]		Report potential problems with log file accessibility
			at configuration time, since such problems can't
			reliably be reported at the time they actually occur.

 815.	[bug]		If a log file was specified with a path separator
			character (i.e. "/") in its name and the directory
			did not exist, the log file's name was treated as
			though it were the directory name. [RT #1189]

 814.	[bug]		Socket objects left over from accept() failures
			were incorrectly destroyed, causing corruption
			of socket manager data structures.

 813.	[bug]		File descriptors exceeding FD_SETSIZE were handled
			badly. [RT #1192]

 812.	[bug]		dig sometimes printed incomplete IXFR responses
			due to an uninitialized variable. [RT #1188]

 811.	[bug]		Parentheses were not quoted in zone dumps. [RT #1194]

 810.	[bug]		The signer name in SIG records was not properly
			downcased when signing/verifying records. [RT #1186]

 807.	[bug]		When setting up TCP connections for incoming zone
			transfers, the transfer-source port was not
			ignored like it should be.

 804.	[bug]		Attempting to obtain entropy could fail in some
			situations.  This would be most common on systems
			with user-space threads. [RT #1131]

 802.	[bug]		DNSSEC key tags were computed incorrectly in almost
			all cases. [RT #1146]

 801.	[bug]		nsupdate should treat lines beginning with ';' as
			comments. [RT #1139]

 800.	[bug]		dnssec-signzone produced incorrect statistics for
			large zones. [RT #1133]

 799.	[bug]		The ADB didn't find AAAA glue in a zone unless A6
			glue was also present.

	--- 9.1.1 released ---

	--- 9.1.1rc7 released ---

 791.	[bug]		The command channel now works over IPv6.

 790.	[bug]		Wildcards created using dynamic update or IXFR
			could fail to match. [RT #1111]

 787.	[bug]		The DNSSEC tools failed to downcase domain
			names when mapping them into file names.

 786.	[bug]		When DNSSEC signing/verifying data, owner names were
			not properly downcased.

	--- 9.1.1rc6 released ---

 785.	[bug]		A race condition in the resolver could cause
			an assertion failure. [RT #673, #872, #1048]

 784.	[bug]		nsupdate and other programs would not quit properly
			if some signals were blocked by the caller. [RT #1081]

 783.	[bug]		Following CNAMEs could cause an assertion failure
			when either using an sdb database or under very
			rare conditions.

 780.	[bug]		Error handling code dealing with out of memory or
			other rare errors could lead to assertion failures
			by calling functions on unitialized names. [RT #1065]

	--- 9.1.1rc5 released ---

 778.	[bug]		When starting cache cleaning, cleaning_timer_action()
			returned without first pausing the iterator, which
			could cause deadlock. [RT #998]

 777.	[bug]		An empty forwarders list in a zone failed to override
			global forwarders. [RT #995]

 775.	[bug]		Address match lists with invalid netmasks caused
			the configuration parser to abort with an assertion
			failure. [RT #996]

 772.	[bug]		Owner names could be incorrectly omitted from cache
			dumps in the presence of negative caching entries.
			[RT #991]

 686.	[bug]		dig and nslookup can now be properly aborted during
			blocking operations. [RT #568]

	--- 9.1.1rc4 released ---

 767.	[bug]		The configuration parser handled invalid ports badly.
			[RT #961]

 766.	[bug]		A few cases in query_find() could leak fname.
			This would trigger the mpctx->allocated == 0
			assertion when the server exited.
			[RT #739, #776, #798, #812, #818, #821, #845,
			#892, #935, #966]

 759.	[bug]		The resolver didn't turn off "avoid fetches" mode
			when restarting, possibly causing resolution
			to fail when it should not.  This bug only affected
			platforms which support both IPv4 and IPv6. [RT #927]

 758.	[bug]		The "avoid fetches" code did not treat negative
			cache entries correctly, causing fetches that would
			be useful to be avoided.  This bug only affected
			platforms which support both IPv4 and IPv6. [RT #927]

 756.	[bug]		dns_zone_load() could "return" success when no master
			file was configured.

 755.	[bug]		Fix incorrectly formatted log messages in zone.c.

 709.	[bug]		ANY or SIG queries for data with a TTL of 0
			would return SERVFAIL. [RT #620]

	--- 9.1.1rc3 released ---

 754.	[bug]		Certain failure conditions sending UDP packets
			could cause the server to retry the transmission
			indefinitely. [RT #902]

 753.	[bug]		dig, host, and nslookup would fail to contact a
			remote server if getaddrinfo() returned an IPv6
			address on a system that doesn't support IPv6.
			[RT #917]

 750.	[bug]		A query should not match a DNAME whose trust level
			is pending. [RT #916]

 749.	[bug]		When a query matched a DNAME in a secure zone, the
			server did not return the signature of the DNAME.
			[RT #915]

 747.	[bug]		The code to determine whether an IXFR was possible
			did not properly check for a database that could
			not have a journal. [RT #865, #908]

 746.	[bug]		The sdb didn't clone rdatasets properly, causing
			a crash when the server followed delegations. [RT #905]

 744.	[bug]		When returning DNS_R_CNAME or DNS_R_DNAME as the
			result of an ANY or SIG query, the resolver failed
			to setup the return event's rdatasets, causing an
			assertion failure in the query code. [RT #881]

 743.	[bug]		Receiving a large number of certain malformed
			answers could cause named to stop responding.
			[RT #861]

 742.	[bug]		dig +domain did not work. [RT #850]

 738.	[bug]		If a non-threadsafe sdb driver supported AXFR and
			received an AXFR request, it would deadlock or die
			with an assertion failure. [RT #852]

 737.	[port]		stdtime.c failed to compile on certain platforms.

 648.	[port]		Add support for pre-RFC2133 IPv6 implementations.

	--- 9.1.1rc2 released ---

 733.	[bug]		Reference counts of dns_acl_t objects need to be
			locked but were not. [RT #801, #821]

 708.	[bug]		When building with --with-openssl, the openssl headers
			included with BIND 9 should not be used. [RT #702]

	--- 9.1.1rc1 released ---

 729.	[port]		pthread_setconcurrency() needs to be called on Solaris.

 727.	[port]		Work around OS bug where accept() succeeds but
			fails to fill in the peer address of the accepted
			connection, by treating it as an error rather than
			an assertion failure. [RT #809]

 723.	[bug]		Referrals whose NS RRs had a 0 TTL caused the resolver
			to return DNS_R_SERVFAIL. [RT #783]

 720.	[bug]		Server could enter infinite loop in
			dispatch.c:do_cancel(). [RT #733]

 719.	[bug]		Rapid reloads could trigger an assertion failure.
			[RT #743, #763]

 717.	[bug]		Certain TKEY processing failure modes could
			reference an uninitialized variable, causing the
			server to crash. [RT #750]

 716.	[bug]		The first line of a $INCLUDE master file was lost if
			an origin was specified. [RT #744]

 715.	[bug]		Resolving some A6 chains could cause an assertion
			failure in adb.c. [RT #738]

 711.	[bug]		The libisc and liblwres implementations of
			inet_ntop contained an off by one error.

 706.	[bug]		Zones with an explicit "allow-update { none; };"
			were considered dynamic and therefore not reloaded
			on SIGHUP or "rndc reload".

 700.	[bug]		$GENERATE range check was wrong. [RT #688]

 698.	[bug]		Aborting nsupdate with ^C would lead to several
			race conditions.

 699.	[bug]		The lexer mishandled empty quoted strings. [RT #694]

 694.	[bug]		$GENERATE did not produce the last entry.
			[RT #682, #683]

 693.	[bug]		An empty lwres statement in named.conf caused
			the server to crash while loading.

 692.	[bug]		Deal with systems that have getaddrinfo() but not
			gai_strerror(). [RT #679]

 691.	[bug]		Configuring per-view forwarders caused an assertion
			failure. [RT #675, #734]

	--- 9.1.0 released ---

 687.	[bug]		Only say we have IPv6, with sufficent functionality,
			if it has actually been tested. [RT #586]

 685.	[bug]		nslookup should use the search list/domain options
			from resolv.conf by default. [RT #405, #630]

 684.	[bug]		Memory leak with view forwarders. [RT #656]

 683.	[bug]		File descriptor leak in isc_lex_openfile().

 682.	[bug]		nslookup displayed SOA records incorrectly. [RT #665]

 681.	[bug]		$GENERATE specifying output format was broken. [RT #653]

 680.	[bug]		dns_rdata_fromstruct() mishandled options bigger
			than 255 octets.

 652.	[bug]		zone_saveunique() did not report the new name.
			[RT #668]

 650.	[bug]		SIG(0) records were being generated and verified
			incorrectly. [RT #606]

	--- 9.1.0rc1 released ---

 679.	[bug]		$INCLUDE could leak memory and file descriptors on
			reload. [RT #639]

 678.	[bug]		"transfer-format one-answer;" could trigger an assertion
			failure. [RT #646]

 677.	[bug]		dnssec-signzone would occasionally use the wrong ttl
			for database operations and fail. [RT #643]

 676.	[bug]		Log messages about lame servers to category
			'lame-servers' rather than 'resolver', so as not
			to be gratuitously incompatible with BIND 8.

 675.	[bug]		TKEY queries could cause the server to leak
			memory.

 672.	[bug]		The wrong time was in the "time signed" field when
			replying with BADTIME error.

 670.	[bug]		The lwres replacements for getaddrinfo and
			getipnodebyname didn't properly check for the
			existence of the sockaddr sa_len field.

 667.	[bug]		On Linux, running named with the -u option and a
			non-world-readable configuration file didn't work.
			[RT #626]

	--- 9.1.0b3 released ---

 666.	[bug]		If a request sent by dig is longer than 512 bytes,
			use TCP.

 664.	[bug]		The t_tasks and t_timers module tests are now skipped
			when building without threads, since they require
			threads.

 661.	[bug]		Certain UDP IXFR requests caused an assertion failure
			(mpctx->allocated == 0). [RT #355, #394, #623]

 659.	[performance]	Rewrite the name compression code to be much faster.

 658.	[cleanup]	Remove all vestiges of 16 bit global compression.

 657.	[bug]		When a listen-on statement in an lwres block does not
			specify a port, use 921, not 53.  Also update the
			listen-on documentation. [RT #616]

 654.	[bug]		Origin was being forgotten in TCP retries in dig.
			[RT #574]

 653.	[bug]		+defname option in dig was reversed in sense.
			[RT #549]

 649.	[bug]		It was possible to join to an already running fctx
			after it had "cloned" its events, but before it sent
			them.  In this case, the event of the newly joined
			fetch would not contain the answer, and would
			trigger the INSIST() in fctx_sendevents().  In
			BIND 9.0, this bug did not trigger an INSIST(), but
			caused the fetch to fail with a SERVFAIL result.
			[RT #588, #597, #605, #607]

 647.	[bug]		Resolver queries sent after following multiple
			referrals had excessively long retransmission
			timeouts due to incorrectly counting the referrals
			as "restarts".

 646.	[bug]		The UnixWare ISC_PLATFORM_FIXIN6INADDR fix in isc/net.h
			didn't _cleanly_ fix the problem it was trying to fix.

 645.	[port]		BSD/OS 3.0 needs pthread_init(). [RT #603]

 644.	[bug]		#622 needed more work. [RT #562]

 642.	[bug]		Break the exit_check() race in the zone module.
			[RT #598]

	--- 9.1.0b2 released ---

 641.	[bug]		$GENERATE caused a uninitialized link to be used.
			[RT #595]

 640.	[bug]		Memory leak in error path could cause
			"mpctx->allocated == 0" failure. [RT #584]

 639.	[bug]		Reading entropy from the keyboard would sometimes fail.
			[RT #591]

 638.	[port]		lib/isc/random.c needed to explicitly include time.h
			to get a prototype for time() when pthreads was not
			being used. [RT #592]

 637.	[port]		Use isc_u?int64_t instead of (unsigned) long long in
			lib/isc/print.c.  Also allow lib/isc/print.c to
			be compiled even if the platform does not need it.
			[RT #592]

 636.	[port]		Shut up MSVC++ about a possible loss of precision
			in the ISC__BUFFER_PUTUINT*() macros. [RT #592]

 635.	[bug]		Reloading a server with a configured blackhole list
			would cause an assertion. [RT #590]

 634.	[bug]		A log file will completely stop being written when
			it reaches the maximum size in all cases, not just
			when versioning is also enabled. [RT #570]

 633.	[port]		Cope with rlim_t missing on BSD/OS systems. [RT #575]

 632.	[bug]		The index array of the journal file was 
			corrupted as it was written to disk.

 631.	[port]		Build without thread support on systems without
			pthreads.

 630.	[bug]		Locking failure in zone code. [RT #582]

 629.	[bug]		9.1.0b1 dereferenced a null pointer and crashed
			when responding to a UDP IXFR request.

 628.	[bug]		If the root hints contained only AAAA addresses,
			named would be unable to perform resolution.

 627.	[bug]		The EDNS0 blackhole detection code of change 324
			waited for three retransmissions to each server,
			which takes much too long when a domain has many
			name servers and all of them drop EDNS0 queries.
			Now we retry without EDNS0 after three consecutive
			timeouts, even if they are all from different
			servers. [RT #143]

 626.	[bug]		The lightweight resolver daemon no longer crashes
			when asked for a SIG rrset. [RT #558]

 625.	[func]		Zones now inherit their class from the enclosing view.

 624.	[bug]		The zone object could get timer events after it had
			been destroyed, causing a server crash. [RT #571]

 623.	[func]		Added "named-checkconf" and "named-checkzone" program
			for syntax checking named.conf files and zone files,
			respectively.

 622.	[bug]		A canceled request could be destroyed before
			dns_request_destroy() was called. [RT #562]

 621.	[port]		Disable IPv6 at runtime if IPv6 sockets are unusable.
			This mostly affects Red Hat Linux 7.0, which has
			conflicts between libc and the kernel.

 620.	[bug]		dns_master_load*inc() now require 'task' and 'load'
			to be non-null.	 Also 'done' will not be called if
			dns_master_load*inc() fails immediately. [RT #565]

 618.	[bug]		Queries to a signed zone could sometimes cause
			an assertion failure.

 617.	[bug]		When using dynamic update to add a new RR to an
			existing RRset with a different TTL, the journal
			entries generated from the update did not include
			explicit deletions and re-additions of the existing
			RRs to update their TTL to the new value.

 616.	[func]		dnssec-signzone -t output now includes performance
			statistics.

 615.	[bug]		dnssec-signzone did not like child keysets signed 
			by multiple keys.

 614.	[bug]		Checks for uninitialized link fields were prone
			to false positives, causing assertion failures.
			The checks are now disabled by default and may
			be re-enabled by defining ISC_LIST_CHECKINIT.

 613.	[bug]		"rndc reload zone" now reloads primary zones.
			It previously only updated slave and stub zones,
			if an SOA query indicated an out of date serial.

 612.	[cleanup]	Shutup a ridiculously noisy HP-UX compiler that
			complains relentlessly about how its treatment
			of 'const' has changed as well as how casting
			sometimes tightens alignment constraints.

 611.	[func]		allow-notify can be used to permit processing of
			notify messages from hosts other than a slave's
			masters.

 610.	[func]		rndc dumpdb is now supported.

 609.	[bug]		getrrsetbyname() would crash lwresd if the server
			found more SIGs than answers. [RT #554]

 608.	[func]		dnssec-signzone now adds a comment to the zone
			with the time the file was signed.

 607.	[bug]		nsupdate would fail if it encountered a CNAME or
			DNAME in a response to an SOA query. [RT #515]

 606.	[bug]		Compiling with --disable-threads failed due
			to isc_thread_self() being incorrectly defined
			as an integer rather than a function.

 605.	[func]		New function isc_lex_getlasttokentext().

 604.	[bug]		The named.conf parser could print incorrect line
			numbers when long comments were present.

 603.	[bug]		Make dig handle multiple types or classes on the same
			query more correctly.

 602.	[func]		Cope automatically with UnixWare's broken
			IN6_IS_ADDR_* macros. [RT #539]

 601.	[func]		Return a non-zero exit code if an update fails
			in nsupdate.

 600.	[bug]		Reverse lookups sometimes failed in dig, etc...

 599.	[func]		Added four new functions to the libisc log API to
			support i18n messages.	isc_log_iwrite(),
			isc_log_ivwrite(), isc_log_iwrite1() and
			isc_log_ivwrite1() were added.

 598.	[bug]		An update-policy statement would cause the server
			to assert while loading. [RT #536]

 597.	[func]		dnssec-signzone is now multithreaded.

 596.	[bug]		DNS_RDATASLAB_FORCE and DNS_RDATASLAB_EXACT are
			not mutually exclusive.

 595.	[port]		On Linux 2.2, socket() returns EINVAL when it
			should return EAFNOSUPPORT.  Work around this.
			[RT #531]

 594.	[func]		sdb drivers are now assumed to not be thread-safe
			unless the DNS_SDBFLAG_THREADSAFE flag is supplied.

 593.	[bug]		If a secure zone was missing all its NXTs and
			a dynamic update was attempted, the server entered
			an infinite loop.

 592.	[bug]		The sig-validity-interval option now specifies a
			number of days, not seconds.  This matches the
			documentation. [RT #529]

	--- 9.1.0b1 released ---

 591.	[bug]		Work around non-reentrancy in openssl by disabling
			precomputation in keys.

 590.	[doc]		There are now man pages for the lwres library in
			doc/man/lwres.

 589.	[bug]		The server could deadlock if a zone was updated 
			while being transferred out.

 588.	[bug]		ctx->in_use was not being correctly initalised when
			when pushing a file for $INCLUDE. [RT #523]

 587.	[func]		A warning is now printed if the "allow-update"
			option allows updates based on the source IP
			address, to alert users to the fact that this
			is insecure and becoming increasingly so as
			servers capable of update forwarding are being
			deployed.

 586.	[bug]		multiple views with the same name were fatal. [RT #516]

 585.	[func]		dns_db_addrdataset() and and dns_rdataslab_merge()
			now support 'exact' additions in a similar manner to
			dns_db_subtractrdataset() and dns_rdataslab_subtract().

 584.	[func]		You can now say 'notify explicit'; to suppress
			notification of the servers listed in NS records
			and notify only those servers listed in the
			'also-notify' option.

 583.	[func]		"rndc querylog" will now toggle logging of
			queries, like "ndc querylog" in BIND 8.

 582.	[bug]		dns_zone_idetach() failed to lock the zone.
			[RT #199, #463]

 581.	[bug]		log severity was not being correctly processed.
			[RT #485]

 580.	[func]		Ignore trailing garbage on incoming DNS packets,
			for interoperability with broken server
			implementations. [RT #491]

 579.	[bug]		nsupdate did not take a filename to read update from.
			[RT #492]

 578.	[func]		New config option "notify-source", to specify the
			source address for notify messages.

 577.	[func]		Log illegal RDATA combinations. e.g. multiple
			singlton types, cname and other data.

 576.	[doc]		isc_log_create() description did not match reality.

 575.	[bug]		isc_log_create() was not setting internal state
			correctly to reflect the default channels created.

 574.	[bug]		TSIG signed queries sent by the resolver would fail to
			have their responses validated and would leak memory.

 573.	[bug]		The journal files of IXFRed slave zones were
			inadvertantly discarded on server reload, causing
			"journal out of sync with zone" errors on subsequent
			reloads. [RT #482]

 572.	[bug]		Quoted strings were not accepted as key names in
			address match lists.

 571.	[bug]		It was possible to create an rdataset of singleton
			type which had more than one rdata. [RT #154]
			[RT #279]

 570.	[bug]		rbtdb.c allowed zones containing nodes which had
			both a CNAME and "other data". [RT #154]

 569.	[func]		The DNSSEC AD bit will not be set on queries which
			have not requested a DNSSEC response.

 568.	[func]		Add sample simple database drivers in contrib/sdb.

 567.	[bug]		Setting the zone transfer timeout to zero caused an
			assertion failure. [RT #302]

 566.	[func]		New public function dns_timer_setidle().

 565.	[func]		Log queries more like BIND 8: query logging is now
			done to category "queries", level "info". [RT #169]

 564.	[func]		Add sortlist support to lwresd.

 563.	[func]		New public functions dns_rdatatype_format() and
			dns_rdataclass_format(), for convenient formatting
			of rdata type/class mnemonics in log messages.

 562.	[cleanup]	Moved lib/dns/*conf.c to bin/named where they belong.

 561.	[func]		The 'datasize', 'stacksize', 'coresize' and 'files'
			clauses of the options{} statement are now implemented.

 560.	[bug]		dns_name_split did not properly the resulting prefix
			when a maximal length bitstring label was split which
			was preceded by another bitstring label. [RT #429]

 559.	[bug]		dns_name_split did not properly create the suffix
			when splitting within a maximal length bitstring label.

 558.	[func]		New functions, isc_resource_getlimit and
			isc_resource_setlimit.

 557.	[func]		Symbolic constants for libisc integral types.

 556.	[func]		The DNSSEC OK bit in the EDNS extended flags
			is now implemented.  Responses to queries without
			this bit set will not contain any DNSSEC records.

 555.	[bug]		A slave server attempting a zone transfer could 
			crash with an assertion failure on certain
			malformed responses from the master. [RT #457]

 554.	[bug]		In some cases, not all of the dnssec tools were
			properly installed.

 553.	[bug]		Incoming zone transfers deferred due to quota 
			were not started when quota was increased but 
			only when a transfer in progress finished. [RT #456]

 552.	[bug]		We were not correctly detecting the end of all c-style
			comments. [RT #455]

 551.	[func]		Implemented the 'sortlist' option.

 550.	[func]		Support unknown rdata types and classes.

 549.	[bug]		"make" did not immediately abort the build when a
			subdirectory make failed [RT #450].

 548.	[func]		The lexer now ungets tokens more correctly.

 546.	[func]		Option 'lame-ttl' is now implemented.

 545.	[func]		Name limit and counting options removed from dig;
			they didn't work properly, and cannot be correctly
			implemented without significant changes.

 544.	[func]		Add statistics option, enable statistics-file option,
			add RNDC option "dump-statistics" to write out a
			query statistics file.

 543.	[doc]		The 'port' option is now documented.

 542.	[func]		Add support for update forwarding as required for
			full compliance with RFC2136.  It is turned off
			by default and can be enabled using the
			'allow-update-forwarding' option.

 541.	[func]		Add bogus server support.

 540.	[func]		Add dialup support.

 539.	[func]		Support the blackhole option.

 538.	[bug]		fix buffer overruns by 1 in lwres_getnameinfo().

 536.	[func]		Use transfer-source{-v6} when sending refresh queries.
			Transfer-source{-v6} now take a optional port
			parameter for setting the UDP source port.  The port
			parameter is ignored for TCP.

 535.	[func]		Use transfer-source{-v6} when forwarding update
			requests.

 534.	[func]		Ancestors have been removed from RBT chains.  Ancestor
			information can be discerned via node parent pointers.

 533.	[func]		Incorporated name hashing into the RBT database to
			improve search speed.

 532.	[func]		Implement DNS UPDATE pseudo records using
			DNS_RDATA_UPDATE flag.

 531.	[func]		Rdata really should be initalized before being assigned
			to (dns_rdata_fromwire(), dns_rdata_fromtext(),
			dns_rdata_clone(), dns_rdata_fromregion()),
			check that it is.

 530.	[func]		New function dns_rdata_invalidate().

 529.	[bug]		521 contained a bug which caused zones to always
			reload.	 [RT #410]
	
 528.	[func]		The ISC_LIST_XXXX macros now perform sanity checks
			on their arguements.  ISC_LIST_XXXXUNSAFE can be use
			to skip the checks however use with caution.

 527.	[func]		New function dns_rdata_clone().

 526.	[bug]		nsupdate incorrectly refused to add RRs with a TTL
			of 0.

 525.	[func]		New arguments 'options' for dns_db_subtractrdataset(),
			and 'flags' for dns_rdataslab_subtract() allowing you
			to request that the RR's must exist prior to deletion.
			DNS_R_NOTEXACT is returned if the condition is not met.

 524.	[func]		The 'forward' and 'forwarders' statement in
			non-forward zones should work now.

 523.	[doc]		The source to the Administrator Reference Manual is
			now an XML file using the DocBook DTD, and is included
			in the distribution.  The plain text version of the
			ARM is temporarily unavailable while we figure out
			how to generate readable plain text from the XML.

 522.	[func]		The lightweight resolver daemon can now use
			a real configuration file, and its functionality
			can be provided by a name server.  Also, the -p and -P
			options to lwresd have been reversed.

 521.	[bug]		Detect master files which contain $INCLUDE and always
			reload. [RT #196]

 520.	[bug]		Upgraded libtool to 1.3.5, which makes shared
			library builds almost work on AIX (and possibly 
			others).

 519.	[bug]		dns_name_split() would improperly split some bitstring
			labels, zeroing a few of the least signficant bits in
			the prefix part.  When such an improperly created
			prefix was returned to the RBT database, the bogus
			label was dutifully stored, corrupting the tree.
			[RT #369]

 518.	[bug]		The resolver did not realize that a DNAME which was
			"the answer" to the client's query was "the answer",
			and such queries would fail. [RT #399]

 517.	[bug]		The resolver's DNAME code would trigger an assertion
			if there was more than one DNAME in the chain.
			[RT #399]

 516.	[bug]		Cache lookups which had a NULL node pointer, e.g.
			those by dns_view_find(), and which would match a
			DNAME, would trigger an INSIST(!search.need_cleanup)
			assertion. [RT #399]

 515.	[bug]		The ssu table was not being attached / detached
			by dns_zone_[sg]etssutable. [RT#397]

 514.	[func]		Retry refresh and notify queries if they timeout.
			[RT #388]

 513.	[func]		New functionality added to rdnc and server to allow
			individual zones to be refreshed or reloaded.

 512.	[bug]		The zone transfer code could throw an execption with
			an invalid IXFR stream.

 511.	[bug]		The message code could throw an assertion on an
			out of memory failure. [RT #392]

 510.	[bug]		Remove spurious view notify warning. [RT #376]

 509.	[func]		Add support for write of zone files on shutdown.

 508.	[func]		dns_message_parse() can now do a best-effort
			attempt, which should allow dig to print more invalid
			messages.

 507.	[func]		New functions dns_zone_flush(), dns_zt_flushanddetach()
			and dns_view_flushanddetach().

 506.	[func]		Do not fail to start on errors in zone files.

 505.	[bug]		nsupdate was printing "unknown result code". [RT #373]

 504.	[bug]		The zone was not being marked as dirty when updated via
			IXFR.

 503.	[bug]		dumptime was not being set along with
			DNS_ZONEFLG_NEEDDUMP.

 502.	[func]		On a SERVFAIL reply, DiG will now try the next server
			in the list, unless the +fail option is specified.

 501.	[bug]		Incorrect port numbers were being displayed by
			nslookup. [RT #352]

 500.	[func]		Nearly useless +details option removed from DiG.

 499.	[func]		In DiG, specifying a class with -c or type with -t
			changes command-line parsing so that classes and
			types are only recognized if following -c or -t.
			This allows hosts with the same name as a class or
			type to be looked up.

 498.	[doc]		There is now a man page for "dig" 
			in doc/man/bin/dig.1.

 497.	[bug]		The error messages printed when an IP match list
			contained a network address with a nonzero host
			part where not sufficiently detailed. [RT #365]

 496.	[bug]		named didn't sanity check numeric parameters. [RT #361]

 495.	[bug]		nsupdate was unable to handle large records. [RT #368]

 494.	[func]		Do not cache NXDOMAIN responses for SOA queries.

 493.	[func]		Return non-cachable (ttl = 0) NXDOMAIN responses
			for SOA queries.  This makes it easier to locate
			the containing zone without polluting intermediate
			caches.

 492.	[bug]		attempting to reload a zone caused the server fail
			to shutdown cleanly. [RT #360]

 491.	[bug]		nsupdate would segfault when sending certain
			prerequisites with empty RDATA. [RT #356]

 490.	[func]		When a slave/stub zone has not yet successfully
			obtained an SOA containing the zone's configured
			retry time, perform the SOA query retries using
			exponential backoff. [RT #337]

 489.	[func]		The zone manager now has a "i/o" queue.

 488.	[bug]		Locks weren't properly destroyed in some cases.

 487.	[port]		flockfile() is not defined on all systems.

 486.	[bug]		nslookup: "set all" and "server" commands showed
			the incorrect port number if a port other than 53
			was specified. [RT #352]

 485.	[func]		When dig had more than one server to query, it would
			send all of the messages at the same time.  Add
			rate limiting of the transmitted messages.

 484.	[bug]		When the server was reloaded after removing addresses 
			from the named.conf "listen-on" statement, sockets
			were still listening on the removed addresses due
			to reference count loops. [RT #325]

 483.	[bug]		nslookup: "set all" showed a "search" option but it 
			was not settable.

 482.	[bug]		nslookup: a plain "server" or "lserver" should be
			treated as a lookup.

 481.	[bug]		nslookup:get_next_command() stack size could exceed
			per thread limit.

 480.	[bug]		strtok() is not thread safe. [RT #349]

 479.	[func]		The test suite can now be run by typing "make check"
			or "make test" at the top level.

 478.	[bug]		"make install" failed if the directory specified with
			--prefix did not already exist.

 477.	[bug]		The the isc-config.sh script could be installed before
			its directory was created. [RT #324]

 476.	[bug]		A zone could expire while a zone transfer was in
			progress triggering a INSIST failure. [RT #329]

 475.	[bug]		query_getzonedb() sometimes returned a non-null version
			on failure.  This caused assertion failures when
			generating query responses where names subject to
			additional section processing pointed to a zone
			to which access had been denied by means of the
			allow-query option. [RT #336]

 474.	[bug]		The mnemonic of the CHAOS class is CH according to
			RFC1035, but it was printed and read only as CHAOS.
			We now accept both forms as input, and print it
			as CH. [RT #305]

 473.	[bug]		nsupdate overran the end of the list of name servers
			when no servers could be reached, typically causing 
			it to print the error message "dns_request_create:
			not implemented".

 472.	[bug]		Off-by-one error caused isc_time_add() to sometimes
			produce invalid time values.

 471.	[bug]		nsupdate didn't compile on HP/UX 10.20

 470.	[func]		$GENERATE is now supported.  See also
			doc/misc/migration.

 469.	[bug]		"query-source address * port 53;" now works.

 468.	[bug]		dns_master_load*() failed to report file and line
			number in certain error conditions.

 467.	[bug]		dns_master_load*() failed to log an error if
			pushfile() failed.

 466.	[bug]		dns_master_load*() could return success when it failed.

 465.	[cleanup]	Allow 0 to be set as an omapi_value_t value by
			omapi_value_storeint().

 464.	[cleanup]	Build with openssl's RSA code instead of dnssafe.

 463.	[bug]		nsupdate sent malformed SOA queries to the second
			and subsequent name servers in resolv.conf if the
			query sent to the first one failed.

 462.	[bug]		--disable-ipv6 should work now.

 461.	[bug]		Specifying an unknown key in the "keys" clause of the
			"controls" statement caused a NULL pointer dereference.
			[RT #316]

 460.	[bug]		Much of the DNSSEC code only worked with class IN.

 459.	[bug]		Nslookup processed the "set" command incorrectly.

 458.	[bug]		Nslookup didn't properly check class and type values.
			[RT #305]

 457.	[bug]		Dig/host/hslookup didn't properly handle connect
			timeouts in certain situations, causing an 
			unnecessary warning message to be printed.

 456.	[bug]		Stub zones were not resetting the refresh and expire
			counters, loadtime or clearing the DNS_ZONE_REFRESH
			(refresh in progress) flag upon successful update.
			This disabled further refreshing of the stub zone,
			causing it to eventually expire. [RT #300]

 455.	[doc]		Document IPv4 prefix notation does not require a
			dotted decimal quad but may be just dotted decimal.

 454.	[bug]		Enforce dotted decimal and dotted decimal quad where
			documented as such in named.conf. [RT #304, RT #311]

 453.	[bug]		Warn if the obsolete option "maintain-ixfr-base"
			is specified in named.conf. [RT #306]

 452.	[bug]		Warn if the unimplemented option "statistics-file"
			is specified in named.conf. [RT #301]

 451.	[func]		Update forwarding implememted.

 450.	[func]		New function ns_client_sendraw().

 449.	[bug]		isc_bitstring_copy() only works correctly if the
			two bitstrings have the same lsb0 value, but this
			requirement was not documented, nor was there a
			REQUIRE for it.

 448.	[bug]		Host output formatting change, to match v8. [RT #255]

 447.	[bug]		Dig didn't properly retry in TCP mode after
			a truncated reply. [RT #277]

 446.	[bug]		Confusing notify log message. [RT #298]

 445.	[bug]		Doing a 0 bit isc_bitstring_copy() of an lsb0
			bitstring triggered a REQUIRE statement.  The REQUIRE
			statement was incorrect. [RT #297]

 444.	[func]		"recursion denied" messages are always logged at
			debug level 1, now, rather than sometimes at ERROR.
			This silences these warnings in the usual case, where
			some clients set the RD bit in all queries.

 443.	[bug]		When loading a master file failed because of an
			unrecognized RR type name, the error message
			did not include the file name and line number. 
			[RT #285]

 442.	[bug]		TSIG signed messages that did not match any view
			crashed the server. [RT #290]

 441.	[bug]		Nodes obscured by a DNAME were inaccessible even
			when DNS_DBFIND_GLUEOK was set.

 440.	[func]		New function dns_zone_forwardupdate().

 439.	[func]		New function dns_request_createraw().

 438.	[func]		New function dns_message_getrawmessage().

 437.	[func]		Log NOTIFY activity to the notify channel.

 436.	[bug]		If recvmsg() returned EHOSTUNREACH or ENETUNREACH,
			which sometimes happens on Linux, named would enter
			a busy loop.  Also, unexpected socket errors were
			not logged at a high enough logging level to be
			useful in diagnosing this situation. [RT #275]

 435.	[bug]		dns_zone_dump() overwrote existing zone files 
			rather than writing to a temporary file and
			renaming.  This could lead to empty or partial
			zone files being left around in certain error
			conditions involving the initial transfer of a
			slave zone, interfering with subsequent server
			startup. [RT #282]

 434.	[func]		New function isc_file_isabsolute().

 433.	[func]		isc_base64_decodestring() now accepts newlines
			within the base64 data.	 This makes it possible 
			to break up the key data in a "trusted-keys"
			statement into multiple lines. [RT #284]

 432.	[func]		Added refresh/retry jitter.  The actual refresh/
			retry time is now a random value between 75% and
			100% of the configured value.

 431.	[func]		Log at ISC_LOG_INFO when a zone is successfully
			loaded.

 430.	[bug]		Rewrote the lightweight resolver client management
			code to handle shutdown correctly and general
			cleanup.

 429.	[bug]		The space reserved for a TSIG record in a response
			was 2 bytes too short, leading to message
			generation failures.

 428.	[bug]		rbtdb.c:find_closest_nxt() erroneously returned
			DNS_R_BADDB for nodes which had neither NXT nor SIG NXT
			(e.g. glue).  This could cause SERVFAILs when
			generating negative responses in a secure zone.

 427.	[bug]		Avoid going into an infinite loop when the validator
			gets a negative response to a key query where the
			records are signed by the missing key.

 426.	[bug]		Attempting to generate an oversized RSA key could
			cause dnssec-keygen to dump core.

 425.	[bug]		Warn about the auth-nxdomain default value change
			if there is no auth-nxdomain statement in the
			config file. [RT #287]

 424.	[bug]		notify_createmessage() could trigger an assertion
			failure when creating the notify message failed,
			e.g. due to corrupt zones with multiple SOA records.
			[RT #279]

 423.	[bug]		When responding to a recusive query, errors that occur
			after following a CNAME should cause the query to fail.
			[RT #274]

 422.	[func]		get rid of isc_random_t, and make isc_random_get()
			and isc_random_jitter() use rand() internally
			instead of local state.	 Note that isc_random_*()
			functions are only for weak, non-critical "randomness"
			such as timing jitter and such.

 421.	[bug]		nslookup would exit when given a blank line as input.

 420.	[bug]		nslookup failed to implement the "exit" command.

 419.	[bug]		The certificate type PKIX was misspelled as SKIX.

 418.	[bug]		At debug levels >= 10, getting an unexpected
			socket receive error would crash the server
			while trying to log the error message.

 417.	[func]		Add isc_app_block() and isc_app_unblock(), which
			allow an application to handle signals while
			blocking.		

 416.	[bug]		Slave zones with no master file tried to use a
			NULL pointer for a journal file name when they
			received an IXFR. [RT #273]

 415.	[bug]		The logging code leaked file descriptors.

 414.	[bug]		Server did not shut down until all incoming zone 
			transfers were finished.

 413.	[bug]		Notify could attempt to use the zone database after
			it had been unloaded. [RT#267]

 412.	[bug]		named -v didn't print the version.

 411.	[bug]		A typo in the HS A code caused an assertion failure.

 410.	[bug]		lwres_gethostbyname() and company set lwres_h_errno
			to a random value on success.

 409.	[bug]		If named was shut down early in the startup
			process, ns_omapi_shutdown() would attempt to lock
			an unintialized mutex. [RT #262]

 408.	[bug]		stub zones could leak memory and reference counts if
			all the masters were unreachable.

 407.	[bug]		isc_rwlock_lock() would needlessly block
			readers when it reached the read quota even
			if no writers were waiting.

 406.	[bug]		Log messages were occasionally lost or corrupted
			due to a race condition in isc_log_doit().

 405.	[func]		Add support for selective forwarding (forward zones)

 404.	[bug]		The request library didn't completely work with IPv6.

 403.	[bug]		"host" did not use the search list.

 402.	[bug]		Treat undefined acls as errors, rather than
			warning and then later throwing an assertion.
			[RT #252]

 401.	[func]		Added simple database API.

 400.	[bug]		SIG(0) signing and verifying was done incorrectly.
			[RT #249]

 399.	[bug]		When reloading the server with a config file
			containing a syntax error, it could catch an
			assertion failure trying to perform zone
			maintenance on, or sending notifies from,
			tentatively created zones whose	views were
			never fully configured and lacked an address 
			database and request manager.

 398.	[bug]		"dig" sometimes caught an assertion failure when
			using TSIG, depending on the key length.

 397.	[func]		Added utility functions dns_view_gettsig() and
			dns_view_getpeertsig().

 396.	[doc]		There is now a man page for "nsupdate" 
			in doc/man/bin/nsupdate.8.

 395.	[bug]		nslookup printed incorrect RR type mnemonics
			for RRs of type >= 21 [RT #237].

 394.	[bug]		Current name was not propagated via $INCLUDE.

 393.	[func]		Initial answer while loading (awl) support.
			Entry points: dns_master_loadfileinc(),
			dns_master_loadstreaminc(), dns_master_loadbufferinc().
			Note: calls to dns_master_load*inc() should be rate
			be rate limited so as to not use up all file
			descriptors.

 392.	[func]		Add ISC_R_FAMILYNOSUPPORT.  Returned when OS does
			not support the given address family requested. 

 391.	[clarity]	ISC_R_FAMILY -> ISC_R_FAMILYMISMATCH.

 390.	[func]		The function dns_zone_setdbtype() now takes
			an argc/argv style vector of words and sets 
			both the zone database type and its arguments,
			making the functions dns_zone_adddbarg()
			and dns_zone_cleardbargs() unnecessary.

 389.	[bug]		Attempting to send a reqeust over IPv6 using 
			dns_request_create() on a system without IPv6
			support caused an assertion failure [RT #235].

 388.	[func]		dig and host can now do reverse ipv6 lookups.

 387.	[func]		Add dns_byaddr_createptrname(), which converts
			an address into the name used by a PTR query.

 386.	[bug]		Missing strdup() of ACL name caused random
			ACL matching failures [RT #228].

 385.	[cleanup]	Removed functions dns_zone_equal(), dns_zone_print(),
			and dns_zt_print().

 384.	[bug]		nsupdate was incorrectly limiting TTLs to 65535 instead
			of 2147483647.

 383.	[func]		When writing a master file, print the SOA and NS
			records (and their SIGs) before other records.

 382.	[bug]		named -u failed on many Linux systems where the
			libc provided kernel headers do not match
			the current kernel.

 381.	[bug]		Check for IPV6_RECVPKTINFO and use it instead of
			IPV6_PKTINFO if found. [RT #229]

 380.	[bug]		nsupdate didn't work with IPv6.

 379.	[func]		New library function isc_sockaddr_anyofpf().

 378.	[func]		named and lwresd will log the command line arguments
			they were started with in the "starting ..." message.

 377.	[bug]		When additional data lookups were refused due to 
			"allow-query", the databases were still being
			attached causing reference leaks.

 376.	[bug]		The server should always use good entropy when
			performing cryptographic functions needing entropy.

 375.	[bug]		Per-zone "allow-query" did not properly override the
			view/global one for CNAME targets and additional
			data [RT #220].

 374.	[bug]		SOA in authoritative negative responses had wrong TTL.

 373.	[func]		nslookup is now installed by "make install".

 372.	[bug]		Deal with Microsoft DNS servers appending two bytes of
			garbage to zone transfer requests.

 371.	[bug]		At high debug levels, doing an outgoing zone transfer
			of a very large RRset could cause an assertion failure
			during logging.

 370.	[bug]		The error messages for rollforward failures were
			overly terse.

 369.	[func]		Support new named.conf options, view and zone 
			statements: 

				max-retry-time, min-retry-time, 
				max-refresh-time, min-refresh-time.

 368.	[func]		Restructure the internal ".bind" view so that more
			zones can be added to it.

 367.	[bug]		Allow proper selection of server on nslookup command
			line.

 366.	[func]		Allow use of '-' batch file in dig for stdin.

 365.	[bug]		nsupdate -k leaked memory.

 364.	[func]		Added additional-from-{cache,auth}

 362.	[bug]		rndc no longer aborts if the configuration file is
			missing an options statement. [RT #209]

 361.	[func]		When the RBT find or chain functions set the name and
			origin for a node that stores the root label
			the name is now set to an empty name, instead of ".",
			to simplify later use of the name and origin by
			dns_name_concatenate(), dns_name_totext() or
			dns_name_format().

 360.	[func]		dns_name_totext() and dns_name_format() now allow
			an empty name to be passed, which is formatted as "@".

 359.	[bug]		dnssec-signzone occasionally signed glue records.

 358.	[cleanup]	Rename the intermediate files used by the dnssec
			programs.

 357.	[bug]		The zone file parser crashed if the argument
			to $INCLUDE was a quoted string.

 356.	[cleanup]	isc_task_send no longer requires event->sender to
			be non-null.

 355.	[func]		Added isc_dir_createunique(), similar to mkdtemp().

 354.	[doc]		Man pages for the dnssec tools are now included in
			the distribution, in doc/man/dnssec.

 353.	[bug]		double increment in lwres/gethost.c:copytobuf().
			[RT# 187]

 352.	[bug]		Race condition in dns_client_t startup could cause
			an assertion failure.

 351.	[bug]		Constructing a response with rcode SERVFAIL to a TSIG
			signed query could crash the server.

 350.	[bug]		Also-notify lists specified in the global options
			block were not correctly reference counted, causing
			a memory leak.

 349.	[bug]		Processing a query with the CD bit set now works
			as expected.

 348.	[func]		New boolean named.conf options 'additional-from-auth'
			and 'additional-from-cache' now supported in view and
			global options statement.

 347.	[bug]		Don't crash if an argument is left off options in dig.

 346.	[func]		Add support for .digrc config file, in the
			user's current directory

 345.	[bug]		Large-scale changes/cleanups to dig:
			* Significantly improve structure handling
			* Don't pre-load entire batch files
			* Add name/rr counting/limiting
			* Fix SIGINT handling
			* Shorten timeouts to match v8's behavior

 344.	[bug]		When shutting down, lwresd sometimes tried
			to shut down its client tasks twice,
			triggering an assertion.

 343.	[bug]		Although zone maintenance SOA queries and
			notify requests were signed with TSIG keys
			when configured for the server in case,
			the TSIG was not verified on the response.

 342.	[bug]		The wrong name was being passed to
			dns_name_dup() when generating a TSIG
			key using TKEY.

 341.	[func]		Support 'key' clause in named.conf zone masters
			statement to allow authentication via TSIG keys:

				masters {
					10.0.0.1 port 5353 key "foo";
					10.0.0.2 ;
				};

 340.	[bug]		The top-level COPYRIGHT file was missing from
			the distribution.

 339.	[bug]		DNSSEC validation of the response to an ANY
			query at a name with a CNAME RR in a secure
			zone triggered an assertion failure.

 338.	[bug]		lwresd logged to syslog as named, not lwresd.

 337.	[bug]		"dig" did not recognize "nsap-ptr" as an RR type
			on the command line.

 336.	[bug]		"dig -f" used 64 k of memory for each line in
			the file.  It now uses much less, though still
			proportionally to the file size.

 335.	[bug]		named would occasionally attempt recursion when
			it was disallowed or undesired.

 334.	[func]		Added hmac-md5 to libisc.

 333.	[bug]		The resolver incorrectly accepted referrals to
			domains that were not parents of the query name,
			causing assertion failures.

 332.	[func]		New function dns_name_reset().

 331.	[bug]		Only log "recursion denied" if RD is set. [RT #178]

 330.	[bug]		Many debugging messages were partially formatted
			even when debugging was turned off, causing a
			significant decrease in query performance.

 329.	[func]		omapi_auth_register() now takes a size_t argument for
			the length of a key's secret data.  Previously
			OMAPI only stored secrets up to the first NUL byte.

 328.	[func]		Added isc_base64_decodestring().

 327.	[bug]		rndc.conf parser wasn't correctly recognising an IP
			address where a host specification was required.

 326.	[func]		'keys' in an 'inet' control statement is now
			required and must have at least one item in it.
			A "not supported" warning is now issued if a 'unix'
			control channel is defined.

 325.	[bug]		isc_lex_gettoken was processing octal strings when
			ISC_LEXOPT_CNUMBER was not set.

 324.	[func]		In the resolver, turn EDNS0 off if there is no
			response after a number of retransmissions.
			This is to allow queries some chance of succeeding
			even if all the authoritative servers of a zone
			silently discard EDNS0 requests instead of
			sending an error response like they ought to.

 323.	[bug]		dns_rbt_findname() did not ignore empty rbt nodes.
			Because of this, servers authoritative for a parent
			and grandchild zone but not authoritative for the
			intervening child zone did not correctly issue
			referrals to the servers of the child zone.

 322.	[bug]		Queries for KEY RRs are now sent to the parent
			server before the authoritative one, making
			DNSSEC insecurity proofs work in many cases
			where they previously didn't.

 321.	[bug]		When synthesizing a CNAME RR for a DNAME
			response, query_addcname() failed to intitialize
			the type and class of the CNAME dns_rdata_t,
			causing random failures.

 320.	[func]		Multiple rndc changes: parses an rndc.conf file,
			uses authentication to talk to named, command
			line syntax changed.  This will all be described
			in the ARM.

 319.	[func]		The named.conf "controls" statement is now used
			to configure the OMAPI command channel.

 318.	[func]		dns_c_ndcctx_destroy() could never return anything
			except ISC_R_SUCCESS; made it have void return instead.

 317.	[func]		Use callbacks from libomapi to determine if a
			new connection is valid, and if a key requested
			to be used with that connection is valid.

 316.	[bug]		Generate a warning if we detect an unexpected <eof>
			but treat as <eol><eof>.

 315.	[bug]		Handle non-empty blanks lines. [RT #163]

 314.	[func]		The named.conf controls statement can now have
			more than one key specified for the inet clause.

 313.	[bug]		When parsing resolv.conf, don't terminate on an
			error.	Instead, parse as much as possible, but
			still return an error if one was found.

 312.	[bug]		Increase the number of allowed elements in the
			resolv.conf search path from 6 to 8.  If there
			are more than this, ignore the remainder rather
			than returning a failure in lwres_conf_parse.

 311.	[bug]		lwres_conf_parse failed when the first line of
			resolv.conf was empty or a comment.

 310.	[func]		Changes to named.conf "controls" statement (inet
			subtype only)

			  - support "keys" clause

				controls {
				   inet * port 1024
					allow { any; } keys { "foo"; }
				}

			  - allow "port xxx" to be left out of statement,
			    in which case it defaults to omapi's default port
			    of 953.

 309.	[bug]		When sending a referral, the server did not look
			for name server addresses as glue in the zone
			holding the NS RRset in the case where this zone
			was not the same as the one where it looked for
			name server addresses as authoritative data.

 308.	[bug]		Treat a SOA record not at top of zone as an error
			when loading a zone. [RT #154]

 307.	[bug]		When canceling a query, the resolver didn't check for
			isc_socket_sendto() calls that did not yet have their
			completion events posted, so it could (rarely) end up
			destroying the query context and then want to use
			it again when the send event posted, triggering an
			assertion as it tried to cancel an already-canceled
			query.	[RT #77]

 306.	[bug]		Reading HMAC-MD5 private key files didn't work.

 305.	[bug]		When reloading the server with a config file
			containing a syntax error, it could catch an
			assertion failure trying to perform zone
			maintenance on tentatively created zones whose
			views were never fully configured and lacked
			an address database.

 304.	[bug]		If more than LWRES_CONFMAXNAMESERVERS servers
			are listed in resolv.conf, silently ignore them
			instead of returning failure.

 303.	[bug]		Add additional sanity checks to differentiate a AXFR
			response vs a IXFR response. [RT #157]

 302.	[bug]		In dig, host, and nslookup, MXNAME should be large
			enough to hold any legal domain name in presentation
			format + terminating NULL.

 301.	[bug]		Uninitalised pointer in host:printmessage(). [RT #159]

 300.	[bug]		Using both <isc/net.h> and <lwres/net.h> didn't work
			on platforms lacking IPv6 because each included their
			own ipv6 header file for the missing definitions.  Now
			each library's ipv6.h defines the wrapper symbol of
			the other (ISC_IPV6_H and LWRES_IPV6_H).

 299.	[cleanup]	Get the user and group information before changing the
			root directory, so the administrator does not need to
			keep a copy of the user and group databases in the
			chroot'ed environment.	Suggested by Hakan Olsson.

 298.	[bug]		A mutex deadlock occurred during shutdown of the
			interface manager under certain conditions.
			Digital Unix systems were the most affected.

 297.	[bug]		Specifying a key name that wasn't fully qualified
			in certain parts of the config file could cause
			an assertion failure.

 296.	[bug]		"make install" from a separate build directory
			failed unless configure had been run in the source
			directory, too.

 295.	[bug]		When invoked with type==CNAME and a message
			not constructed by dns_message_parse(),
			dns_message_findname() failed to find anything
			due to checking for attribute bits that are set
			only in dns_message_parse().   This caused an
			infinite loop when constructing the response to
			an ANY query at a CNAME in a secure zone.

 294.	[bug]		If we run out of space in while processing glue
			when reading a master file and commit "current name"
			reverts to "name_current" instead of staying as
			"name_glue".

 293.	[port]		Add support for FreeBSD 4.0 system tests.

 292.	[bug]		Due to problems with the way some operating systems
			handle simultaneous listening on IPv4 and IPv6
			addresses, the server no longer listens on IPv6
			addresses by default.  To revert to the previous
			behavior, specify "listen-on-v6 { any; };" in
			the config file.

 291.	[func]		Caching servers no longer send outgoing queries
			over TCP just because the incoming recursive query
			was a TCP one.

 290.	[cleanup]	+twiddle option to dig (for testing only) removed.

 289.	[cleanup]	dig is now installed in $bindir instead of $sbindir.
			host is now installed in $bindir.  (Be sure to remove
			any $sbindir/dig from a previous release.)

 288.	[func]		rndc is now installed by "make install" into $sbindir.

 287.	[bug]		rndc now works again as "rndc 127.1 reload" (for
			only that task).  Parsing its configuration file and
			using digital signatures for authentication has been
			disabled until named supports the "controls" statement,
			post-9.0.0.

 286.	[bug]		On Solaris 2, when named inherited a signal state
			where SIGHUP had the SIG_IGN action, SIGHUP would
			be ignored rather than causing the server to reload
			its configuration.

 285.	[bug]		A change made to the dst API for beta4 inadvertently
			broke OMAPI's creation of a dst key from an incoming
			message, causing an assertion to be triggered.	Fixed.

 284.	[func]		The DNSSEC key generation and signing tools now
			generate randomness from keyboard input on systems
			that lack /dev/random.

 283.	[cleanup]	The 'lwresd' program is now a link to 'named'.

 282.	[bug]		The lexer now returns ISC_R_RANGE if parsed integer is
			too big for an unsigned long.

 281.	[bug]		Fixed list of recognized config file category names.

 280.	[func]		Add isc-config.sh, which can be used to more
			easily build applications that link with
			our libraries.

 279.	[bug]		Private omapi function symbols shared between
			two or more files in libomapi.a were not namespace
			protected using the ISC convention of starting with
			the library name and two underscores ("omapi__"...)

 278.	[bug]		bin/named/logconf.c:category_fromconf() didn't take
			note of when isc_log_categorybyname() wasn't able
			to find the category name and would then apply the
			channel list of the unknown category to all categories.

 277.	[bug]		isc_log_categorybyname() and isc_log_modulebyname()
			would fail to find the first member of any category
			or module array apart from the internal defaults.
			Thus, for example, the "notify" category was improperly
			configured by named.

 276.	[bug]		dig now supports maximum sized TCP messages.

 275.	[bug]		The definition of lwres_gai_strerror() was missing
			the lwres_ prefix.

 274.	[bug]		TSIG AXFR verify failed when talking to a BIND 8
			server.

 273.	[func]		The default for the 'transfer-format' option is
			now 'many-answers'.  This will break zone transfers
			to BIND 4.9.5 and older unless there is an explicit
			'one-answer' configuration.

 272.	[bug]		The sending of large TCP responses was canceled
			in mid-transmission due to a race condition
			caused by the failure to set the client object's
			"newstate" variable correctly when transitioning
			to the "working" state.

 271.	[func]		Attempt to probe the number of cpus in named
			if unspecified rather than defaulting to 1.

 270.	[func]		Allow maximum sized TCP answers.

 269.	[bug]		Failed DNSSEC validations could cause an assertion
			failure by causing clone_results() to be called with
			with hevent->node == NULL.

 268.	[doc]		A plain text version of the Administrator
			Reference Manual is now included in the distribution,
			as doc/arm/Bv9ARM.txt.

 267.	[func]		Nsupdate is now provided in the distribution.

 266.	[bug]		zone.c:save_nsrrset() node was not initalized.

 265.	[bug]		dns_request_create() now works for TCP.

 264.	[func]		Dispatch can not take TCP sockets in connecting
			state.	Set DNS_DISPATCHATTR_CONNECTED when calling
			dns_dispatch_createtcp() for connected TCP sockets
			or call dns_dispatch_starttcp() when the socket is
			connected.

 263.	[func]		New logging channel type 'stderr'

				channel some-name {
					stderr;
					severity error;
				}

 262.	[bug]		'master' was not initalized in zone.c:stub_callback().

 261.	[func]		Add dns_zone_markdirty().

 260.	[bug]		Running named as a non-root user failed on Linux
			kernels new enough to support retaining capabilities
			after setuid().

 259.	[func]		New random-device and random-seed-file statements
			for global options block of named.conf. Both accept
			a single string argument.

 258.	[bug]		Fixed printing of lwres_addr_t.address field.

 257.	[bug]		The server detached the last zone manager reference
			too early, while it could still be in use by queries.
			This manifested itself as assertion failures during the
			shutdown process for busy name servers [RT #133].

 256.	[func]		isc_ratelimiter_t now has attach/detach semantics, and
			isc_ratelimiter_shutdown guarantees that the rate
			limiter is detached from its task.

 255.	[func]		New function dns_zonemgr_attach().

 254.	[bug]		Suppress "query denied" messages on additional data
			lookups.

	--- 9.0.0b4 released ---

 253.	[func]		resolv.conf parser now recognises ';' and '#' as
			comments (anywhere in line, not just as the beginning).

 252.	[bug]		resolv.conf parser mishandled masks on sortlists.
			It also aborted when an unrecognized keyword was seen,
			now it silently ignores the entire line.

 251.	[bug]		lwresd caught an assertion failure on startup.

 250.	[bug]		fixed handling of size+unit when value would be too
			large for internal representation.

 249.	[cleanup]	max-cache-size config option now takes a size-spec
			like 'datasize', except 'default' is not allowed.

 248.	[bug]		global lame-ttl option was not being printed when
			config structures were written out.

 247.	[cleanup]	Rename cache-size config option to max-cache-size.

 246.	[func]		Rename global option cachesize to cache-size and
			add corresponding option to view statement.

 245.	[bug]		If an uncompressed name will take more than 255
			bytes and the buffer is sufficiently long,
			dns_name_fromwire should return DNS_R_FORMERR,
			not ISC_R_NOSPACE.  This bug caused cause the
			server to catch an assertion failure when it
			received a query for a name longer than 255
			bytes.

 244.	[bug]		empty named.conf file and empty options statement are
			now parsed properly.

 243.	[func]		new cachesize option for named.conf

 242.	[cleanup]	fixed incorrect warning about auth-nxdomain usage.

 241.	[cleanup]	nscount and soacount have been removed from the
			dns_master_*() arguement lists.

 240.	[func]		databases now come in three flavours: zone, cache
			and stub.

 239.	[func]		If ISC_MEM_DEBUG is enabled, the variable
			isc_mem_debugging controls whether messages
			are printed or not.

 238.	[cleanup]	A few more compilation warnings have been quieted:
			+ missing sigwait prototype on BSD/OS 4.0/4.0.1.
			+ PTHREAD_ONCE_INIT unbraced initializer warnings on
				Solaris 2.8.
			+ IN6ADDR_ANY_INIT unbraced initializer warnings on
				BSD/OS 4.*, Linux and Solaris 2.8.

 237.	[bug]		If connect() returned ENOBUFS when the resolver was
			initiating a TCP query, the socket didn't get
			destroyed, and the server did not shut down cleanly.

 236.	[func]		Added new listen-on-v6 config file statement.

 235.	[func]		Consider it a config file error if a listen-on
			statement has an IPv6 address in it, or a
			listen-on-v6 statement has an IPv4 address in it.

 234.	[bug]		Allow a trusted-key's first field (domain-name) be
			either a quoted or an unquoted string, instead of
			requiring a quoted string.

 233.	[cleanup]	Convert all config structure integer values to unsigned
			integer (isc_uint32_t) to match grammer.

 232.	[bug]		Allow slave zones to not have a file.

 231.	[func]		Support new 'port' clause in config file options
			section. Causes 'listen-on', 'masters' and
			'also-notify' statements to use its value instead of
			default (53).

 230.	[func]		Replace the dst sign/verify API with a cleaner one.

 229.	[func]		Support config file sig-validity-interval statement
			in options, views and zone statements (master
			zones only).

 228.	[cleanup]	Logging messages in config module stripped of
			trailing period.

 227.	[cleanup]	The enumerated identifiers dns_rdataclass_*,
			dns_rcode_*, dns_opcode_*, and dns_trust_* are
			also now cast to their appropriate types, as with
			dns_rdatatype_* in item number 225 below.

 226.	[func]		dns_name_totext() now always prints the root name as
			'.', even when omit_final_dot is true.

 225.	[cleanup]	The enumerated dns_rdatatype_* identifiers are now
			cast to dns_rdatatype_t via macros of their same name
			so that they are of the proper integral type wherever
			a dns_rdatatype_t is needed.

 224.	[cleanup]	The entire project builds cleanly with gcc's
			-Wcast-qual and -Wwrite-strings warnings enabled,
			which is now the default when using gcc.  (Warnings
			from confparser.c, because of yacc's code, are
			unfortunately to be expected.)

 223.	[func]		Several functions were reprototyped to qualify one
			or more of their arguments with "const".  Similarly,
			several functions that return pointers now have
			those pointers qualified with const.

 222.	[bug]		The global 'also-notify' option was ignored.

 221.	[bug]		An uninitialized variable was sometimes passed to
			dns_rdata_freestruct() when loading a zone, causing
			an assertion failure.

 220.	[cleanup]	Set the default outgoing port in the view, and
			set it in sockaddrs returned from the ADB.
			[31-May-2000 explorer]

 219.	[bug]		Signed truncated messages more correctly follow
			the respective specs.

 218.	[func]		When an rdataset is signed, its ttl is normalized
			based on the signature validity period.

 217.	[func]		Also-notify and trusted-keys can now be used in
			the 'view' statement.

 216.	[func]		The 'max-cache-ttl' and 'max-ncache-ttl' options
			now work.

 215.	[bug]		Failures at certain points in request processing
			could cause the assertion INSIST(client->lockview
			== NULL) to be triggered.

 214.	[func]		New public function isc_netaddr_format(), for
			formatting network addresses in log messages.

 213.	[bug]		Don't leak memory when reloading the zone if
			an update-policy clause was present in the old zone.

 212.	[func]		Added dns_message_get/settsigkey, to make TSIG
			key management reasonable.

 211.	[func]		The 'key' and 'server' statements can now occur
			inside 'view' statements.

 210.	[bug]		The 'allow-transfer' option was ignored for slave
			zones, and the 'transfers-per-ns' option was
			was ignored for all zones.

 209.	[cleanup]	Upgraded openssl files to new version 0.9.5a

 208.	[func]		Added ISC_OFFSET_MAXIMUM for the maximum value
			of an isc_offset_t.

 207.	[func]		The dnssec tools properly use the logging subsystem.

 206.	[cleanup]	dst now stores the key name as a dns_name_t, not
			a char *.

 205.	[cleanup]	On IRIX, turn off the mostly harmless warnings 1692
			("prototyped function redeclared without prototype")
			and 1552 ("variable ... set but not used") when
			compiling in the lib/dns/sec/{dnssafe,openssl}
			directories, which contain code imported from outside
			sources.

 204.	[cleanup]	On HP/UX, pass +vnocompatwarnings to the linker
			to quiet the warnings that "The linked output may not
			run on a PA 1.x system."

 203.	[func]		notify and zone soa queries are now tsig signed when
			appropriate.

 202.	[func]		isc_lex_getsourceline() changed from returning int
			to returning unsigned long, the type of its underlying
			counter.

 201.	[cleanup]	Removed the test/sdig program, it has been
			replaced by bin/dig/dig.


	--- 9.0.0b3 released ---

 200.	[bug]		Failures in sending query responses to clients
			(e.g., running out of network buffers) were
			not logged.

 199.	[bug]		isc_heap_delete() sometimes violated the heap
			invariant, causing timer events not to be posted
			when due.

 198.	[func]		Dispatch managers hold memory pools which
			any managed dispatcher may use.	 This allows
			us to avoid dipping into the memory context for
			most allocations. [19-May-2000 explorer]

 197.	[bug]		When an incoming AXFR or IXFR completes, the
			zone's internal state is refreshed from the
			SOA data. [19-May-2000 explorer]

 196.	[func]		Dispatchers can be shared easily between views
			and/or interfaces. [19-May-2000 explorer]

 195.	[bug]		Including the NXT record of the root domain
			in a negative response caused an assertion
			failure.

 194.	[doc]		The PDF version of the Administrator's Reference
			Manual is no longer included in the ISC BIND9
			distribution.

 193.	[func]		changed dst_key_free() prototype.

 192.	[bug]		Zone configuration validation is now done at end
			of config file parsing, and before loading
			callbacks.

 191.	[func]		Patched to compile on UnixWare 7.x.  This platform
			is not directly supported by the ISC.

 190.	[cleanup]	The DNSSEC tools have been moved to a separate
			directory dnssec/ and given the following new,
			more descriptive names:

			      dnssec-keygen
			      dnssec-signzone
			      dnssec-signkey
			      dnssec-makekeyset

			Their command line arguments have also been changed to
			be more consistent.  dnssec-keygen now prints the
			name of the generated key files (sans extension)
			on standard output to simplify its use in automated
			scripts.

 189.	[func]		isc_time_secondsastimet(), a new function, will ensure
			that the number of seconds in an isc_time_t does not
			exceed the range of a time_t, or return ISC_R_RANGE.
			Similarly, isc_time_now(), isc_time_nowplusinterval(),
			isc_time_add() and isc_time_subtract() now check the
			range for overflow/underflow.  In the case of
			isc_time_subtract, this changed a calling requirement
			(ie, something that could generate an assertion)
			into merely a condition that returns an error result.
			isc_time_add() and isc_time_subtract() were void-
			valued before but now return isc_result_t.

 188.	[func]		Log a warning message when an incoming zone transfer
			contains out-of-zone data.

 187.	[func]		isc_ratelimter_enqueue() has an additional arguement
			'task'.

 186.	[func]		dns_request_getresponse() has an additional arguement
			'preserve_order'.

 185.	[bug]		Fixed up handling of ISC_MEMCLUSTER_LEGACY.  Several
			public functions did not have an isc__ prefix, and
			referred to functions that had previously been
			renamed.

 184.	[cleanup]	Variables/functions which began with two leading
			underscores were made to conform to the ANSI/ISO
			standard, which says that such names are reserved.

 183.	[func]		ISC_LOG_PRINTTAG option for log channels.  Useful
			for logging the program name or other identifier.

 182.	[cleanup]	New commandline parameters for dnssec tools

 181.	[func]		Added dst_key_buildfilename and dst_key_parsefilename

 180.	[func]		New isc_result_t ISC_R_RANGE.  Supersedes DNS_R_RANGE.

 179.	[func]		options named.conf statement *must* now come
			before any zone or view statements.

 178.	[func]		Post-load of named.conf check verifies a slave zone
			has non-empty list of masters defined.

 177.	[func]		New per-zone boolean:

				enable-zone yes | no ;

			intended to let a zone be disabled without having
			to comment out the entire zone statement.

 176.	[func]		New global and per-view option:

				max-cache-ttl number

 175.	[func]		New global and per-view option:

				additional-data internal | minimal | maximal;

 174.	[func]		New public function isc_sockaddr_format(), for
			formatting socket addresses in log messages.

 173.	[func]		Keep a queue of zones waiting for zone transfer
			quota so that a new transfer can be dispatched
			immediately whenever quota becomes available.

 172.	[bug]		$TTL directive was sometimes missing from dumped
			master files because totext_ctx_init() failed to
			initialize ctx->current_ttl_valid.

 171.	[cleanup]	On NetBSD systems, the mit-pthreads or
			unproven-pthreads library is now always used
			unless --with-ptl2 is explicitly specified on
			the configure command line.  The
			--with-mit-pthreads option is no longer needed
			and has been removed.

 170.	[cleanup]	Remove inter server consistancy checks from zone,
			these should return as a seperate module in 9.1.
			dns_zone_checkservers(), dns_zone_checkparents(),
			dns_zone_checkchildren(), dns_zone_checkglue().

			Remove dns_zone_setadb(), dns_zone_setresolver(),
			dns_zone_setrequestmgr() these should now be found
			via the view.

 169.	[func]		ratelimiter can now process N events per interval.

 168.	[bug]		include statements in named.conf caused syntax errors
			due to not consuming the semicolon ending the include
			statement before switching input streams.

 167.	[bug]		Make lack of masters for a slave zone a soft error.

 166.	[bug]		Keygen was overwriting existing keys if key_id
			conflicted, now it will retry, and non-null keys
			with key_id == 0 are not generated anymore.  Key
			was not able to generate NOAUTHCONF DSA key,
			increased RSA key size to 2048 bits.

 165.	[cleanup]	Silence "end-of-loop condition not reached" warnings
			from Solaris compiler.

 164.	[func]		Added functions isc_stdio_open(), isc_stdio_close(),
			isc_stdio_seek(), isc_stdio_read(), isc_stdio_write(),
			isc_stdio_flush(), isc_stdio_sync(), isc_file_remove()
			to encapsulate nonportable usage of errno and sync.

 163.	[func]		Added result codes ISC_R_FILENOTFOUND and
			ISC_R_FILEEXISTS.

 162.	[bug]		Ensure proper range for arguments to ctype.h functions.

 161.	[cleanup]	error in yyparse prototype that only HPUX caught.

 160.	[cleanup]	getnet*() are not going to be implemented at this
			stage.

 159.	[func]		Redefinition of config file elements is now an
			error (instead of a warning).

 158.	[bug]		Log channel and category list copy routines
			weren't assigning properly to output parameter.

 157.	[port]		Fix missing prototype for getopt().

 156.	[func]		Support new 'database' statement in zone.

				database "quoted-string";

 155.	[bug]		ns_notify_start() was not detaching the found zone.

 154.	[func]		The signer now logs libdns warnings to stderr even when
			not verbose, and in a nicer format.

 153.	[func]		dns_rdata_tostruct() 'mctx' is now optional.  If 'mctx'
			is NULL then you need to preserve the 'rdata' until
			you have finished using the structure as there may be
			references to the associated memory.  If 'mctx' is
			non-NULL it is guaranteed that there are no references
			to memory associated with 'rdata'.

			dns_rdata_freestruct() must be called if 'mctx' was
			non-NULL and may safely be called if 'mctx' was NULL.

 152.	[bug]		keygen dumped core if domain name argument was omitted
			from command line.

 151.	[func]		Support 'disabled' statement in zone config (causes
			zone to be parsed and then ignored). Currently must
			come after the 'type' clause.

 150.	[func]		Support optional ports in masters and also-notify
			statements:

				masters [ port xxx ] { y.y.y.y [ port zzz ] ; }

 149.	[cleanup]	Removed usused argument 'olist' from
			dns_c_view_unsetordering().

 148.	[cleanup]	Stop issuing some warnings about some configuration
			file statements that were not implemented, but now are.

 147.	[bug]		Changed yacc union size to be smaller for yaccs that
			put yacc-stack on the real stack.

 146.	[cleanup]	More general redundant header file cleanup.  Rather
			than continuing to itemize every header which changed,
			this changelog entry just notes that if a header file
			did not need another header file that it was including
			in order to provide its advertized functionality, the
			inclusion of the other header file was removed.	 See
			util/check-includes for how this was tested.

 145.	[cleanup]	Added <isc/lang.h> and ISC_LANG_BEGINDECLS/
			ISC_LANG_ENDDECLS to header files that had function
			prototypes, and removed it from those that did not.

 144.	[cleanup]	libdns header files too numerous to name were made
			to conform to the same style for multiple inclusion
			protection.

 143.	[func]		Added function dns_rdatatype_isknown().

 142.	[cleanup]	<isc/stdtime.h> does not need <time.h> or
			<isc/result.h>.

 141.	[bug]		Corrupt requests with multiple questions could
			cause an assertion failure.

 140.	[cleanup]	<isc/time.h> does not need <time.h> or <isc/result.h>.

 139.	[cleanup]	<isc/net.h> now includes <isc/types.h> instead of
			<isc/int.h> and <isc/result.h>.

 138.	[cleanup]	isc_strtouq moved from str.[ch] to string.[ch] and
			renamed isc_string_touint64.  isc_strsep moved from
			strsep.c to string.c and renamed isc_string_separate.

 137.	[cleanup]	<isc/commandline.h>, <isc/mem.h>, <isc/print.h>
			<isc/serial.h>, <isc/string.h> and <isc/offset.h>
			made to conform to the same style for multiple
			inclusion protection.

 136.	[cleanup]	<isc/commandline.h>, <isc/interfaceiter.h>,
			<isc/net.h> and Win32's <isc/thread.h> needed
			ISC_LANG_BEGINDECLS/ISC_LANG_ENDDECLS.

 135.	[cleanup]	Win32's <isc/condition.h> did not need <isc/result.h>
			or <isc/boolean.h>, now uses <isc/types.h> in place
			of <isc/time.h>, and needed ISC_LANG_BEGINDECLS
			and ISC_LANG_ENDDECLS.

 134.	[cleanup]	<isc/dir.h> does not need <limits.h>.

 133.	[cleanup]	<isc/ipv6.h> needs <isc/platform.h>.

 132.	[cleanup]	<isc/app.h> does not need <isc/task.h>, but does
			need <isc/eventclass.h>.

 131.	[cleanup]	<isc/mutex.h> and <isc/util.h> need <isc/result.h>
			for ISC_R_* codes used in macros.

 130.	[cleanup]	<isc/condition.h> does not need <pthread.h> or
			<isc/boolean.h>, and now includes <isc/types.h>
			instead of <isc/time.h>.

 129.	[bug]		The 'default_debug' log channel was not set up when
			'category default' was present in the config file

 128.	[cleanup]	<isc/dir.h> had ISC_LANG_BEGINDECLS instead of
			ISC_LANG_ENDDECLS at end of header.

 127.	[cleanup]	The contracts for the comparision routines
			dns_name_fullcompare(), dns_name_compare(),
			dns_name_rdatacompare(), and dns_rdata_compare() now
			specify that the order value returned is < 0, 0, or > 0
			instead of -1, 0, or 1.

 126.	[cleanup]	<isc/quota.h> and <isc/taskpool.h> need <isc/lang.h>.

 125.	[cleanup]	<isc/eventclass.h>, <isc/ipv6.h>, <isc/magic.h>,
			<isc/mutex.h>, <isc/once.h>, <isc/region.h>, and
			<isc/resultclass.h> do not need <isc/lang.h>.

 124.	[func]		signer now imports parent's zone key signature
			and creates null keys/sets zone status bit for
			children when necessary

 123.	[cleanup]	<isc/event.h> does not need <stddef.h>.

 122.	[cleanup]	<isc/task.h> does not need <isc/mem.h> or
			<isc/result.h>.

 121.	[cleanup]	<isc/symtab.h> does not need <isc/mem.h> or
			<isc/result.h>.	 Multiple inclusion protection
			symbol fixed from ISC_SYMBOL_H to ISC_SYMTAB_H.
			isc_symtab_t moved to <isc/types.h>.

 120.	[cleanup]	<isc/socket.h> does not need <isc/boolean.h>,
			<isc/bufferlist.h>, <isc/task.h>, <isc/mem.h> or
			<isc/net.h>.

 119.	[cleanup]	structure definitions for generic rdata stuctures do
			not have _generic_ in their names.

 118.	[cleanup]	libdns.a is now namespace-clean, on NetBSD, excepting
			YACC crust (yyparse, etc) [2000-apr-27 explorer]

 117.	[cleanup]	libdns.a changes:
			dns_zone_clearnotify() and dns_zone_addnotify()
			are replaced by dns_zone_setnotifyalso().
			dns_zone_clearmasters() and dns_zone_addmaster()
			are replaced by dns_zone_setmasters().

 116.	[func]		Added <isc/offset.h> for isc_offset_t (aka off_t
			on Unix systems).

 115.	[port]		Shut up the -Wmissing-declarations warning about
			<stdio.h>'s __sputaux on BSD/OS pre-4.1.

 114.	[cleanup]	<isc/sockaddr.h> does not need <isc/buffer.h> or
			<isc/list.h>.

 113.	[func]		Utility programs dig and host added.

 112.	[cleanup]	<isc/serial.h> does not need <isc/boolean.h>.

 111.	[cleanup]	<isc/rwlock.h> does not need <isc/result.h> or
			<isc/mutex.h>.

 110.	[cleanup]	<isc/result.h> does not need <isc/boolean.h> or
			<isc/list.h>.

 109.	[bug]		"make depend" did nothing for
			bin/tests/{db,mem,sockaddr,tasks,timers}/.

 108.	[cleanup]	DNS_SETBIT/DNS_GETBIT/DNS_CLEARBIT moved from
			<dns/types.h> to <dns/bit.h> and renamed to
			DNS_BIT_SET/DNS_BIT_GET/DNS_BIT_CLEAR.

 107.	[func]		Add keysigner and keysettool.

 106.	[func]		Allow dnssec verifications to ignore the validity
			period.	 Used by several of the dnssec tools.

 105.	[doc]		doc/dev/coding.html expanded with other
			implicit conventions the developers have used.

 104.	[bug]		Made compress_add and compress_find static to
			lib/dns/compress.c.

 103.	[func]		libisc buffer API changes for <isc/buffer.h>:
			Added:
				isc_buffer_base(b)	    (pointer)
				isc_buffer_current(b)	    (pointer)
				isc_buffer_active(b)	    (pointer)
				isc_buffer_used(b)	    (pointer)
				isc_buffer_length(b)		(int)
				isc_buffer_usedlength(b)	(int)
				isc_buffer_consumedlength(b)	(int)
				isc_buffer_remaininglength(b)	(int)
				isc_buffer_activelength(b)	(int)
				isc_buffer_availablelength(b)	(int)
			Removed:
				ISC_BUFFER_USEDCOUNT(b)
				ISC_BUFFER_AVAILABLECOUNT(b)
				isc_buffer_type(b)
			Changed names:
				isc_buffer_used(b, r) ->
					isc_buffer_usedregion(b, r)
				isc_buffer_available(b, r) ->
					isc_buffer_available_region(b, r)
				isc_buffer_consumed(b, r) ->
					isc_buffer_consumedregion(b, r)
				isc_buffer_active(b, r) ->
					isc_buffer_activeregion(b, r)
				isc_buffer_remaining(b, r) ->
					isc_buffer_remainingregion(b, r)

			Buffer types were removed, so the ISC_BUFFERTYPE_*
			macros are no more, and the type argument to
			isc_buffer_init and isc_buffer_allocate were removed.
			isc_buffer_putstr is now void (instead of isc_result_t)
			and requires that the caller ensure that there
			is enough available buffer space for the string.

 102.	[port]		Correctly detect inet_aton, inet_pton and inet_ptop
			on BSD/OS 4.1.

 101.	[cleanup]	Quieted EGCS warnings from lib/isc/print.c.

 100.	[cleanup]	<isc/random.h> does not need <isc/int.h> or
			<isc/mutex.h>.	isc_random_t moved to <isc/types.h>.

  99.	[cleanup]	Rate limiter now has separate shutdown() and
			destroy() functions, and it guarantees that all
			queued events are delivered even in the shutdown case.

  98.	[cleanup]	<isc/print.h> does not need <stdarg.h> or <stddef.h>
			unless ISC_PLATFORM_NEEDVSNPRINTF is defined.

  97.	[cleanup]	<isc/ondestroy.h> does not need <stddef.h> or
			<isc/event.h>.

  96.	[cleanup]	<isc/mutex.h> does not need <isc/result.h>.

  95.	[cleanup]	<isc/mutexblock.h> does not need <isc/result.h>.

  94.	[cleanup]	Some installed header files did not compile as C++.

  93.	[cleanup]	<isc/msgcat.h> does not need <isc/result.h>.

  92.	[cleanup]	<isc/mem.h> does not need <stddef.h>, <isc/boolean.h>,
			or <isc/result.h>.

  91.	[cleanup]	<isc/log.h> does not need <sys/types.h> or
			<isc/result.h>.

  90.	[cleanup]	Removed unneeded ISC_LANG_BEGINDECLS/ISC_LANG_ENDDECLS
			from <named/listenlist.h>.

  89.	[cleanup]	<isc/lex.h> does not need <stddef.h>.

  88.	[cleanup]	<isc/interfaceiter.h> does not need <isc/result.h> or
			<isc/mem.h>.  isc_interface_t and isc_interfaceiter_t
			moved to <isc/types.h>.

  87.	[cleanup]	<isc/heap.h> does not need <isc/boolean.h>,
			<isc/mem.h> or <isc/result.h>.

  86.	[cleanup]	isc_bufferlist_t moved from <isc/bufferlist.h> to
			<isc/types.h>.

  85.	[cleanup]	<isc/bufferlist.h> does not need <isc/buffer.h>,
			<isc/list.h>, <isc/mem.h>, <isc/region.h> or
			<isc/int.h>.

  84.	[func]		allow-query ACL checks now apply to all data
			added to a response.

  83.	[func]		If the server is authoritative for both a
			delegating zone and its (nonsecure) delegatee, and
			a query is made for a KEY RR at the top of the
			delegatee, then the server will look for a KEY
			in the delegator if it is not found in the delegatee.

  82.	[cleanup]	<isc/buffer.h> does not need <isc/list.h>.

  81.	[cleanup]	<isc/int.h> and <isc/boolean.h> do not need
			<isc/lang.h>.

  80.	[cleanup]	<isc/print.h> does not need <stdio.h> or <stdlib.h>.

  79.	[cleanup]	<dns/callbacks.h> does not need <stdio.h>.

  78.	[cleanup]	lwres_conftest renamed to lwresconf_test for
			consistency with other *_test programs.

  77.	[cleanup]	typedef of isc_time_t and isc_interval_t moved from
			<isc/time.h> to <isc/types.h>.

  76.	[cleanup]	Rewrote keygen.

  75.	[func]		Don't load a zone if its database file is older
			than the last time the zone was loaded.

  74.	[cleanup]	Removed mktemplate.o and ufile.o from libisc.a,
			subsumed by file.o.

  73.	[func]		New "file" API in libisc, including new function
			isc_file_getmodtime, isc_mktemplate renamed to
			isc_file_mktemplate and isc_ufile renamed to
			isc_file_openunique.  By no means an exhaustive API,
			it is just what's needed for now.

  72.	[func]		DNS_RBTFIND_NOPREDECESSOR and DNS_RBTFIND_NOOPTIONS
			added for dns_rbt_findnode, the former to disable the
			setting of the chain to the predecessor, and the
			latter to make clear when no options are set.

  71.	[cleanup]	Made explicit the implicit REQUIREs of
			isc_time_seconds, isc_time_nanoseconds, and
			isc_time_subtract.

  70.	[func]		isc_time_set() added.

  69.	[bug]		The zone object's master and also-notify lists grew
			longer with each server reload.

  68.	[func]		Partial support for SIG(0) on incoming messages.

  67.	[performance]	Allow use of alternate (compile-time supplied)
			OpenSSL libraries/headers.

  66.	[func]		Data in authoritative zones should have a trust level
			beyond secure.

  65.	[cleanup]	Removed obsolete typedef of dns_zone_callbackarg_t
			from <dns/types.h>.

  64.	[func]		The RBT, DB, and zone table APIs now allow the
			caller find the most-enclosing superdomain of
			a name.

  63	[func]		Generate NOTIFY messages.

  62.	[func]		Add UDP refresh support.

  61.	[cleanup]	Use single quotes consistently in log messages.

  60.	[func]		Catch and disallow singleton types on message
			parse.

  59.	[bug]		Cause net/host unreachable to be a hard error
			when sending and receiving.

  58.	[bug]		bin/named/query.c could sometimes trigger the
			(client->query.attributes & NS_QUERYATTR_NAMEBUFUSED)
			== 0 assertion in query_newname().

  57.	[func]		Added dns_nxt_typepresent()

  56.	[bug]		SIG records were not properly returned in cached
			negative answers.

  55.	[bug]		Responses containing multiple names in the authority
			section were not negatively cached.

  54.	[bug]		If a fetch with sigrdataset==NULL joined one with
			sigrdataset!=NULL or vice versa, the resolver
			could catch an assertion or lose signature data,
			respectively.

  53.	[port]		freebsd 4.0: lib/isc/unix/socket.c requires
			<sys/param.h>.

  52.	[bug]		rndc: taskmgr and socketmgr were not initialized
			to NULL.

  51.	[cleanup]	dns/compress.h and dns/zt.h did not need to include
			dns/rbt.h; it was needed only by compress.c and zt.c.

  50.	[func]		RBT deletion no longer requires a valid chain to work,
			and dns_rbt_deletenode was added.

  49.	[func]		Each cache now has its own mctx.

  48.	[func]		isc_task_create() no longer takes an mctx.
			isc_task_mem() has been eliminated.

  47.	[func]		A number of modules now use memory context reference
			counting.

  46.	[func]		Memory contexts are now reference counted.
			Added isc_mem_inuse() and isc_mem_preallocate().
			Renamed isc_mem_destroy_check() to
			isc_mem_setdestroycheck().

  45.	[bug]		The trusted-key statement incorrectly loaded keys.

  44.	[bug]		Don't include authority data if it would force us
			to unset the AD bit in the message.

  43.	[bug]		DNSSEC verification of cached rdatasets was failing.

  42.	[cleanup]	Simplified logging of messages with embedded domain
			names by introducing a new convenience function
			dns_name_format().

  41.	[func]		Use PR_SET_KEEPCAPS on Linux 2.3.99-pre3 and later
			to allow 'named' to run as a non-root user while
			retaining the ability to bind() to privileged
			ports.

  40.	[func]		Introduced new logging category "dnssec" and
			logging module "dns/validator".

  39.	[cleanup]	Moved the typedefs for isc_region_t, isc_textregion_t,
			and isc_lex_t to <isc/types.h>.

  38.	[bug]		TSIG signed incoming zone transfers work now.

  37.	[bug]		If the first RR in an incoming zone transfer was
			not an SOA, the server died with an assertion failure
			instead of just reporting an error.

  36.	[cleanup]	Change DNS_R_SUCCESS (and others) to ISC_R_SUCCESS

  35.	[performance]	Log messages which are of a level too high to be
			logged by any channel in the logging configuration
			will not cause the log mutex to be locked.

  34.	[bug]		Recursion was allowed even with 'recursion no'.

  33.	[func]		The RBT now maintains a parent pointer at each node.

  32.	[cleanup]	bin/lwresd/client.c needs <string.h> for memset()
			prototype.

  31.	[bug]		Use ${LIBTOOL} to compile bin/named/main.@O@.

  30.	[func]		config file grammer change to support optional
			class type for a view.

  29.	[func]		support new config file view options:

				auth-nxdomain recursion query-source
				query-source-v6 transfer-source
				transfer-source-v6 max-transfer-time-out
				max-transfer-idle-out transfer-format
				request-ixfr provide-ixfr cleaning-interval
				fetch-glue notify rfc2308-type1 lame-ttl
				max-ncache-ttl min-roots

  28.	[func]		support lame-ttl, min-roots and serial-queries
			config global options.

  27.	[bug]		Only include <netinet6/in6.h> on BSD/OS 4.[01]*.
			Including it on other platforms (eg, NetBSD) can
			cause a forced #error from the C preprocessor.

  26.	[func]		new match-clients statement in config file view.

  25.	[bug]		make install failed to install <isc/log.h> and
			<isc/ondestroy.h>.

  24.	[cleanup]	Eliminate some unnecessary #includes of header
			files from header files.

  23.	[cleanup]	Provide more context in log messages about client
			requests, using a new function ns_client_log().

  22.	[bug]		SIGs weren't returned in the answer section when
			the query resulted in a fetch.

  21.	[port]		Look at STD_CINCLUDES after CINCLUDES during
			compilation, so additional system include directories
			can be searched but header files in the bind9 source
			tree with conflicting names take precedence.  This
			avoids issues with installed versions of dnssafe and
			openssl.

  20.	[func]		Configuration file post-load validation of zones
			failed if there were no zones.

  19.	[bug]		dns_zone_notifyreceive() failed to unlock the zone
			lock in certain error cases.

  18.	[bug]		Use AC_TRY_LINK rather than AC_TRY_COMPILE in
			configure.in to check for presence of in6addr_any.

  17.	[func]		Do configuration file post-load validation of zones.

  16.	[bug]		put quotes around key names on config file
			output to avoid possible keyword clashes.

  15.	[func]		Add dns_name_dupwithoffsets().	This function is
			improves comparison performance for duped names.

  14.	[bug]		free_rbtdb() could have 'put' unallocated memory in
			an unlikely error path.

  13.	[bug]		lib/dns/master.c and lib/dns/xfrin.c didn't ignore
			out-of-zone data.

  12.	[bug]		Fixed possible unitialized variable error.

  11.	[bug]		axfr_rrstream_first() didn't check the result code of
			db_rr_iterator_first(), possibly causing an assertion
			to be triggered later.

  10.	[bug]		A bug in the code which makes EDNS0 OPT records in
			bin/named/client.c and lib/dns/resolver.c could
			trigger an assertion.

   9.	[cleanup]	replaced bit-setting code in confctx.c and replaced
			repeated code with macro calls.

   8.	[bug]		Shutdown of incoming zone transfer accessed
			freed memory.

   7.	[cleanup]	removed 'listen-on' from view statement.

   6.	[bug]		quote RR names when generating config file to
			prevent possible clash with config file keywords
			(such as 'key').

   5.	[func]		syntax change to named.conf file: new ssu grant/deny
			statements must now be enclosed by an 'update-policy'
			block.

   4.	[port]		bin/named/unix/os.c didn't compile on systems with
			linux 2.3 kernel includes due to conflicts between
			C library includes and the kernel includes.  We now
			get only what we need from <linux/capability.h>, and
			avoid pulling in other linux kernel .h files.

   3.	[bug]		TKEYs go in the answer section of responses, not
			the additional section.

   2.	[bug]		Generating cryptographic randomness failed on
			systems without /dev/random.

   1.	[bug]		The installdirs rule in
			lib/isc/unix/include/isc/Makefile.in had a typo which
			prevented the isc directory from being created if it
			didn't exist.

	--- 9.0.0b2 released ---

# This tells Emacs to use hard tabs in this file.
# Local Variables:
# indent-tabs-mode: t
# End:
