.\" Copyright (C) 2000, 2001  Internet Software Consortium.
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND INTERNET SOFTWARE CONSORTIUM
.\" DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL
.\" INTERNET SOFTWARE CONSORTIUM BE LIABLE FOR ANY SPECIAL, DIRECT,
.\" INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
.\" FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
.\" NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
.\" WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.\" $Id: lwres_getipnode.3,v 1.1.1.1 2001-10-22 13:06:12 ghudson Exp $
.\"
.Dd Jun 30, 2000
.Dt LWRES_GETIPNODE 3
.Os BIND9 9
.ds vT BIND9 Programmer's Manual
.Sh NAME
.Nm lwres_getipnodebyname ,
.Nm lwres_getipnodebyaddr ,
.Nm lwres_freehostent
.Nd lightweight resolver nodename / address translation API
.Sh SYNOPSIS
.Fd #include <lwres/netdb.h>
.Fd
.Ft struct hostent *
.Fo lwres_getipnodebyname
.Fa "const char *name"
.Fa "int af"
.Fa "int flags"
.Fa "int *error_num"
.Fc
.Ft struct hostent *
.Fo lwres_getipnodebyaddr
.Fa "const void *src"
.Fa "size_t len"
.Fa "int af"
.Fa "int *error_num"
.Fc
.Ft void
.Fo lwres_freehostent
.Fa "struct hostent *he"
.Fc
.Sh DESCRIPTION
These functions perform thread safe, protocol independent
nodename-to-address and address-to-nodename 
translation as defined in RFC2553.
.Pp
They use a
.Dv "struct hostent"
which is defined in
.Pa namedb.h :
.Bd -literal
struct	hostent {
	char	*h_name;	/* official name of host */
	char	**h_aliases;	/* alias list */
	int	h_addrtype;	/* host address type */
	int	h_length;	/* length of address */
	char	**h_addr_list;	/* list of addresses from name server */
};
#define	h_addr  h_addr_list[0]	/* address, for backward compatibility */
.Ed
.Pp
The members of this structure are:
.Bl -tag -width h_addr_list
.It Li h_name
The official (canonical) name of the host.
.It Li h_aliases
A NULL-terminated array of alternate names (nicknames) for the host.
.It Li h_addrtype
The type of address being returned - usually
.Dv PF_INET
or
.Dv PF_INET6 .
.It Li h_length
The length of the address in bytes.
.It Li h_addr_list
A
.Dv NULL
terminated array of network addresses for the host.
Host addresses are returned in network byte order.
.El
.Pp
.Fn lwres_getipnodebyname
looks up addresses of protocol family
.Fa af 
for the hostname
.Fa name .
The
.Fa flags
parameter contains ORed flag bits to 
specify the types of addresses that are searched
for, and the types of addresses that are returned. 
The flag bits are:
.Bl -tag -width AI_ADDRCONFIG
.It Li AI_V4MAPPED
This is used with an
.Fa af
of AF_INET6, and causes IPv4 addresses to be returned as IPv4-mapped
IPv6 addresses.
.It Li AI_ALL
This is used with an
.Fa af
of AF_INET6, and causes all known addresses (IPv6 and IPv4) to be returned.
If AI_V4MAPPED is also set, the IPv4 addresses are return as mapped
IPv6 addresses.
.It Li AI_ADDRCONFIG
Only return an IPv6 or IPv4 address if here is an active network
interface of that type.  This is not currently implemented
in the BIND 9 lightweight resolver, and the flag is ignored.
.It Li AI_DEFAULT
This default sets the
.Li AI_V4MAPPED
and
.Li AI_ADDRCONFIG
flag bits.
.El
.Pp
.Fn lwres_getipnodebyaddr
performs a reverse lookup
of address
.Fa src
which is
.Fa len
bytes long.
.Fa af
denotes the protocol family, typically
.Dv PF_INET
or
.Dv PF_INET6 .
.Pp
.Fn lwres_freehostent
releases all the memory associated with
the
.Dv "struct hostent"
pointer
.Fa he .
Any memory allocated for the
.Li h_name ,
.Li h_addr_list
and
.Li h_aliases
is freed, as is the memory for the
.Dv hostent
structure itself.
.Sh RETURN VALUES
If an error occurs,
.Fn lwres_getipnodebyname
and
.Fn lwres_getipnodebyaddr
set
.Fa *error_num
to an approriate error code and the function returns a
.Dv NULL
pointer.
The error codes and their meanings are defined in
.Pa <lwres/netdb.h> :
.Bl -tag -width HOST_NOT_FOUND
.It Li HOST_NOT_FOUND
No such host is known.
.It Li NO_ADDRESS
The server recognised the request and the name but no address is
available.  Another type of request to the name server for the
domain might return an answer.
.It Li TRY_AGAIN
A temporary and possibly transient error occurred, such as a
failure of a server to respond.  The request may succeed if
retried.
.It Li NO_RECOVERY
An unexpected failure occurred, and retrying the request
is pointless.
.El
.Pp
.Xr lwres_hstrerror 3
translates these error codes to suitable error messages.
.Sh SEE ALSO
.Xr RFC2553 ,
.Xr lwres 3 ,
.Xr lwres_gethostent 3 ,
.Xr lwres_getaddrinfo 3 ,
.Xr lwres_getnameinfo 3 ,
.Xr lwres_hstrerror 3 .
