<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libwnck-wnck-enum-types">
<refmeta>
<refentrytitle>wnck-enum-types</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBWNCK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>wnck-enum-types</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



<link linkend="GType">GType</link>       <link linkend="wnck-pager-display-mode-get-type">wnck_pager_display_mode_get_type</link>
                                            (void);
#define     <link linkend="WNCK-TYPE-PAGER-DISPLAY-MODE-CAPS">WNCK_TYPE_PAGER_DISPLAY_MODE</link>
<link linkend="GType">GType</link>       <link linkend="wnck-tasklist-grouping-type-get-type">wnck_tasklist_grouping_type_get_type</link>
                                            (void);
#define     <link linkend="WNCK-TYPE-TASKLIST-GROUPING-TYPE-CAPS">WNCK_TYPE_TASKLIST_GROUPING_TYPE</link>
<link linkend="GType">GType</link>       <link linkend="wnck-window-state-get-type">wnck_window_state_get_type</link>      (void);
#define     <link linkend="WNCK-TYPE-WINDOW-STATE-CAPS">WNCK_TYPE_WINDOW_STATE</link>
<link linkend="GType">GType</link>       <link linkend="wnck-window-actions-get-type">wnck_window_actions_get_type</link>    (void);
#define     <link linkend="WNCK-TYPE-WINDOW-ACTIONS-CAPS">WNCK_TYPE_WINDOW_ACTIONS</link>
<link linkend="GType">GType</link>       <link linkend="wnck-window-type-get-type">wnck_window_type_get_type</link>       (void);
#define     <link linkend="WNCK-TYPE-WINDOW-TYPE-CAPS">WNCK_TYPE_WINDOW_TYPE</link>
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="wnck-pager-display-mode-get-type"/>wnck_pager_display_mode_get_type ()</title>
<indexterm><primary>wnck_pager_display_mode_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>       wnck_pager_display_mode_get_type
                                            (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="WNCK-TYPE-PAGER-DISPLAY-MODE-CAPS"/>WNCK_TYPE_PAGER_DISPLAY_MODE</title>
<indexterm><primary>WNCK_TYPE_PAGER_DISPLAY_MODE</primary></indexterm><programlisting>#define WNCK_TYPE_PAGER_DISPLAY_MODE (wnck_pager_display_mode_get_type())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="wnck-tasklist-grouping-type-get-type"/>wnck_tasklist_grouping_type_get_type ()</title>
<indexterm><primary>wnck_tasklist_grouping_type_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>       wnck_tasklist_grouping_type_get_type
                                            (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="WNCK-TYPE-TASKLIST-GROUPING-TYPE-CAPS"/>WNCK_TYPE_TASKLIST_GROUPING_TYPE</title>
<indexterm><primary>WNCK_TYPE_TASKLIST_GROUPING_TYPE</primary></indexterm><programlisting>#define WNCK_TYPE_TASKLIST_GROUPING_TYPE (wnck_tasklist_grouping_type_get_type())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="wnck-window-state-get-type"/>wnck_window_state_get_type ()</title>
<indexterm><primary>wnck_window_state_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>       wnck_window_state_get_type      (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="WNCK-TYPE-WINDOW-STATE-CAPS"/>WNCK_TYPE_WINDOW_STATE</title>
<indexterm><primary>WNCK_TYPE_WINDOW_STATE</primary></indexterm><programlisting>#define WNCK_TYPE_WINDOW_STATE (wnck_window_state_get_type())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="wnck-window-actions-get-type"/>wnck_window_actions_get_type ()</title>
<indexterm><primary>wnck_window_actions_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>       wnck_window_actions_get_type    (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="WNCK-TYPE-WINDOW-ACTIONS-CAPS"/>WNCK_TYPE_WINDOW_ACTIONS</title>
<indexterm><primary>WNCK_TYPE_WINDOW_ACTIONS</primary></indexterm><programlisting>#define WNCK_TYPE_WINDOW_ACTIONS (wnck_window_actions_get_type())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="wnck-window-type-get-type"/>wnck_window_type_get_type ()</title>
<indexterm><primary>wnck_window_type_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>       wnck_window_type_get_type       (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="WNCK-TYPE-WINDOW-TYPE-CAPS"/>WNCK_TYPE_WINDOW_TYPE</title>
<indexterm><primary>WNCK_TYPE_WINDOW_TYPE</primary></indexterm><programlisting>#define WNCK_TYPE_WINDOW_TYPE (wnck_window_type_get_type())
</programlisting>
<para>

</para></refsect2>

</refsect1>




</refentry>
