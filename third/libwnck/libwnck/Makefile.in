# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AS = @AS@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
DATADIRNAME = @DATADIRNAME@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EXEEXT = @EXEEXT@
GDK_PIXBUF_CSOURCE = @GDK_PIXBUF_CSOURCE@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
INSTOBJEXT = @INSTOBJEXT@
INTLDEPS = @INTLDEPS@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
LIBTOOL = @LIBTOOL@
LIBWNCK_AGE = @LIBWNCK_AGE@
LIBWNCK_CFLAGS = @LIBWNCK_CFLAGS@
LIBWNCK_CURRENT = @LIBWNCK_CURRENT@
LIBWNCK_LIBS = @LIBWNCK_LIBS@
LIBWNCK_REVISION = @LIBWNCK_REVISION@
LN_S = @LN_S@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKINSTALLDIRS = @MKINSTALLDIRS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POSUB = @POSUB@
RANLIB = @RANLIB@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
wncklocaledir = @wncklocaledir@

INCLUDES = @LIBWNCK_CFLAGS@ -DG_LOG_DOMAIN=\"Wnck\" -I$(top_srcdir) \
	-DWNCK_I_KNOW_THIS_IS_UNSTABLE -DWNCK_LOCALEDIR=\"$(wncklocaledir)\"


lib_LTLIBRARIES = libwnck-1.la

libwnckincludedir = $(includedir)/libwnck-1.0/libwnck
wnck_headers = \
	libwnck.h		\
	pager.h			\
	application.h		\
	screen.h		\
	tasklist.h		\
	util.h			\
	window.h 		\
	window-action-menu.h	\
	window-menu.h		\
	workspace.h


wnck_built_installed_headers = wnck-enum-types.h

libwnckinclude_HEADERS = \
	$(wnck_headers)			\
	$(wnck_built_installed_headers)


wnck_built_headers = $(wnck_built_installed_headers) wnck-marshal.h
wnck_built_cfiles = wnck-enum-types.c  wnck-marshal.c

wnck_accessibility_files = \
	pager-accessible.c			\
	pager-accessible.h			\
	pager-accessible-factory.c		\
	pager-accessible-factory.h		\
	workspace-accessible.c			\
	workspace-accessible.h			\
	workspace-accessible-factory.c		\
	workspace-accessible-factory.h


libwnck_1_la_SOURCES = \
	application.c		\
	inlinepixbufs.h		\
	pager.c			\
	private.h		\
	screen.c		\
	tasklist.c		\
	util.c			\
	window.c		\
	window-action-menu.c	\
	window-menu.c		\
	workspace.c		\
	xutils.c		\
	xutils.h		\
	$(wnck_built_headers)	\
	$(wnck_built_cfiles)	\
	$(wnck_accessibility_files)


test_wnck_SOURCES = \
	test-wnck.c


test_tasklist_SOURCES = \
	test-tasklist.c


test_pager_SOURCES = \
	test-pager.c


noinst_PROGRAMS = \
	test-pager		\
	test-wnck		\
	test-tasklist


libwnck_1_la_LDFLAGS = \
	-version-info $(LIBWNCK_CURRENT):$(LIBWNCK_REVISION):$(LIBWNCK_AGE) \
        -export-symbols-regex "^[^_].*"


libwnck_1_la_LIBADD = \
	@LIBWNCK_LIBS@


test_wnck_LDADD = @LIBWNCK_LIBS@ libwnck-1.la
test_tasklist_LDADD = @LIBWNCK_LIBS@ libwnck-1.la
test_pager_LDADD = @LIBWNCK_LIBS@ libwnck-1.la

IMAGES = default_icon.png
VARIABLES = default_icon_data $(srcdir)/default_icon.png

noinst_DATA = inlinepixbufs.h
CLEANFILES =  $(noinst_DATA)

EXTRA_DIST = \
	wnck-marshal.list	\
	$(IMAGES)

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
libwnck_1_la_DEPENDENCIES = 
libwnck_1_la_OBJECTS =  application.lo pager.lo screen.lo tasklist.lo \
util.lo window.lo window-action-menu.lo window-menu.lo workspace.lo \
xutils.lo wnck-enum-types.lo wnck-marshal.lo pager-accessible.lo \
pager-accessible-factory.lo workspace-accessible.lo \
workspace-accessible-factory.lo
noinst_PROGRAMS =  test-pager$(EXEEXT) test-wnck$(EXEEXT) \
test-tasklist$(EXEEXT)
PROGRAMS =  $(noinst_PROGRAMS)

test_pager_OBJECTS =  test-pager.$(OBJEXT)
test_pager_DEPENDENCIES =  libwnck-1.la
test_pager_LDFLAGS = 
test_wnck_OBJECTS =  test-wnck.$(OBJEXT)
test_wnck_DEPENDENCIES =  libwnck-1.la
test_wnck_LDFLAGS = 
test_tasklist_OBJECTS =  test-tasklist.$(OBJEXT)
test_tasklist_DEPENDENCIES =  libwnck-1.la
test_tasklist_LDFLAGS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DATA =  $(noinst_DATA)

HEADERS =  $(libwnckinclude_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libwnck_1_la_SOURCES) $(test_pager_SOURCES) $(test_wnck_SOURCES) $(test_tasklist_SOURCES)
OBJECTS = $(libwnck_1_la_OBJECTS) $(test_pager_OBJECTS) $(test_wnck_OBJECTS) $(test_tasklist_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps libwnck/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libwnck-1.la: $(libwnck_1_la_OBJECTS) $(libwnck_1_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libwnck_1_la_LDFLAGS) $(libwnck_1_la_OBJECTS) $(libwnck_1_la_LIBADD) $(LIBS)

mostlyclean-noinstPROGRAMS:

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

distclean-noinstPROGRAMS:

maintainer-clean-noinstPROGRAMS:

test-pager$(EXEEXT): $(test_pager_OBJECTS) $(test_pager_DEPENDENCIES)
	@rm -f test-pager$(EXEEXT)
	$(LINK) $(test_pager_LDFLAGS) $(test_pager_OBJECTS) $(test_pager_LDADD) $(LIBS)

test-wnck$(EXEEXT): $(test_wnck_OBJECTS) $(test_wnck_DEPENDENCIES)
	@rm -f test-wnck$(EXEEXT)
	$(LINK) $(test_wnck_LDFLAGS) $(test_wnck_OBJECTS) $(test_wnck_LDADD) $(LIBS)

test-tasklist$(EXEEXT): $(test_tasklist_OBJECTS) $(test_tasklist_DEPENDENCIES)
	@rm -f test-tasklist$(EXEEXT)
	$(LINK) $(test_tasklist_LDFLAGS) $(test_tasklist_OBJECTS) $(test_tasklist_LDADD) $(LIBS)

install-libwnckincludeHEADERS: $(libwnckinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libwnckincludedir)
	@list='$(libwnckinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libwnckincludedir)/$$p"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libwnckincludedir)/$$p; \
	done

uninstall-libwnckincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	list='$(libwnckinclude_HEADERS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libwnckincludedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = libwnck

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
application.lo application.o : application.c application.h screen.h \
	private.h ../config.h screen.h window.h workspace.h xutils.h \
	pager.h
pager-accessible-factory.lo pager-accessible-factory.o : \
	pager-accessible-factory.c pager-accessible-factory.h \
	pager-accessible.h pager.h screen.h screen.h
pager-accessible.lo pager-accessible.o : pager-accessible.c libwnck.h \
	application.h screen.h util.h window.h workspace.h \
	wnck-enum-types.h pager.h tasklist.h window-menu.h \
	pager-accessible.h pager.h screen.h pager-accessible-factory.h \
	workspace-accessible.h workspace.h private.h ../config.h \
	window.h application.h xutils.h
pager.lo pager.o : pager.c pager.h screen.h workspace.h window.h \
	window-action-menu.h window.h xutils.h \
	pager-accessible-factory.h workspace-accessible-factory.h
screen.lo screen.o : screen.c screen.h window.h screen.h workspace.h \
	application.h xutils.h private.h ../config.h pager.h
tasklist.lo tasklist.o : tasklist.c tasklist.h screen.h window.h \
	window-action-menu.h window.h workspace.h application.h \
	xutils.h
test-pager.o: test-pager.c libwnck.h application.h screen.h util.h \
	window.h workspace.h wnck-enum-types.h pager.h tasklist.h \
	window-menu.h
test-tasklist.o: test-tasklist.c libwnck.h application.h screen.h util.h \
	window.h workspace.h wnck-enum-types.h pager.h tasklist.h \
	window-menu.h
test-wnck.o: test-wnck.c libwnck.h application.h screen.h util.h \
	window.h workspace.h wnck-enum-types.h pager.h tasklist.h \
	window-menu.h
util.lo util.o : util.c util.h xutils.h private.h ../config.h screen.h \
	window.h screen.h workspace.h application.h pager.h
window-action-menu.lo window-action-menu.o : window-action-menu.c \
	window-action-menu.h window.h screen.h private.h ../config.h \
	screen.h window.h workspace.h application.h xutils.h pager.h
window-menu.lo window-menu.o : window-menu.c window-menu.h window.h \
	screen.h
window.lo window.o : window.c window.h screen.h xutils.h private.h \
	../config.h screen.h workspace.h application.h pager.h \
	wnck-enum-types.h wnck-marshal.h
wnck-enum-types.lo wnck-enum-types.o : wnck-enum-types.c libwnck.h \
	application.h screen.h util.h window.h workspace.h \
	wnck-enum-types.h pager.h tasklist.h window-menu.h
wnck-marshal.lo wnck-marshal.o : wnck-marshal.c libwnck.h application.h \
	screen.h util.h window.h workspace.h wnck-enum-types.h pager.h \
	tasklist.h window-menu.h
workspace-accessible-factory.lo workspace-accessible-factory.o : \
	workspace-accessible-factory.c workspace-accessible-factory.h \
	workspace-accessible.h workspace.h screen.h pager-accessible.h \
	pager.h screen.h
workspace-accessible.lo workspace-accessible.o : workspace-accessible.c \
	libwnck.h application.h screen.h util.h window.h workspace.h \
	wnck-enum-types.h pager.h tasklist.h window-menu.h \
	workspace-accessible.h workspace.h pager-accessible.h pager.h \
	screen.h
workspace.lo workspace.o : workspace.c ../config.h workspace.h screen.h \
	xutils.h private.h screen.h window.h application.h pager.h
xutils.lo xutils.o : xutils.c ../config.h xutils.h screen.h window.h \
	screen.h private.h workspace.h application.h pager.h \
	inlinepixbufs.h

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES
install-exec: install-exec-am

install-data-am: install-libwnckincludeHEADERS
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES uninstall-libwnckincludeHEADERS
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(libwnckincludedir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-noinstPROGRAMS \
		mostlyclean-tags mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool \
		clean-noinstPROGRAMS clean-tags clean-generic \
		mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-noinstPROGRAMS \
		distclean-tags distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-noinstPROGRAMS maintainer-clean-tags \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool mostlyclean-noinstPROGRAMS \
distclean-noinstPROGRAMS clean-noinstPROGRAMS \
maintainer-clean-noinstPROGRAMS uninstall-libwnckincludeHEADERS \
install-libwnckincludeHEADERS tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info-am info dvi-am dvi check \
check-am installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


$(libwnck_1_la_OBJECTS): inlinepixbufs.h

regenerate-built-sources:
	echo "Building wnck-enum-types.h" \
	&& glib-mkenums --fhead "#ifndef __WNCK_ENUM_TYPES_H__\n#define __WNCK_ENUM_TYPES_H__\n" --fprod "/* enumerations from \"@filename@\" */\n" --vhead "GType @enum_name@_get_type (void);\n#define WNCK_TYPE_@ENUMSHORT@ (@enum_name@_get_type())\n" --ftail "#endif /* __WNCK_ENUM_TYPES_H__ */" $(wnck_headers) > wnck-enum-types.h \
	&& echo "Building wnck-enum-types.c"	\
	&& glib-mkenums --fhead "#include <libwnck/libwnck.h>" --fprod "\n/* enumerations from \"@filename@\" */" --vhead "GType\n@enum_name@_get_type (void)\n{\n  static GType etype = 0;\n  if (etype == 0) {\n    static const G@Type@Value values[] = {" --vprod "      { @VALUENAME@, \"@VALUENAME@\", \"@valuenick@\" }," --vtail "      { 0, NULL, NULL }\n    };\n    etype = g_@type@_register_static (\"@EnumName@\", values);\n  }\n  return etype;\n}\n" $(wnck_headers) > wnck-enum-types.c \
	&& echo "Building wnck-marshal.h" \
	&& @GLIB_GENMARSHAL@ --prefix=_wnck_marshal wnck-marshal.list --header > wnck-marshal.h \
	&& echo "Building wnck-marshal.c" \
	&& echo "#include <libwnck/libwnck.h>" > wnck-marshal.c \
        && @GLIB_GENMARSHAL@ --prefix=_wnck_marshal wnck-marshal.list --body >> wnck-marshal.c

inlinepixbufs.h: $(IMAGES)
	$(GDK_PIXBUF_CSOURCE) --raw --build-list $(VARIABLES) >$(srcdir)/inlinepixbufs.h

$(OBJECTS): inlinepixbufs.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
