# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AR = @AR@
AS = @AS@
BZ2_LIBS = @BZ2_LIBS@
CC = @CC@
CXX = @CXX@
CXXCPP = @CXXCPP@
DB2HTML = @DB2HTML@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GTKDOC = @GTKDOC@
HAVE_LIB = @HAVE_LIB@
HTML_DIR = @HTML_DIR@
LIB = @LIB@
LIBGSF_CFLAGS = @LIBGSF_CFLAGS@
LIBGSF_GNOME_CFLAGS = @LIBGSF_GNOME_CFLAGS@
LIBGSF_GNOME_LIBS = @LIBGSF_GNOME_LIBS@
LIBGSF_LIBS = @LIBGSF_LIBS@
LIBGSF_MAJOR_VERSION = @LIBGSF_MAJOR_VERSION@
LIBGSF_MICRO_VERSION = @LIBGSF_MICRO_VERSION@
LIBGSF_MINOR_VERSION = @LIBGSF_MINOR_VERSION@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIB = @LTLIB@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
RC = @RC@
STRIP = @STRIP@
VERSION = @VERSION@
VERSION_INFO = @VERSION_INFO@
WARN_CFLAGS = @WARN_CFLAGS@
WARN_CXXFLAGS = @WARN_CXXFLAGS@
Z_LIBS = @Z_LIBS@

@PLATFORM_WIN32_TRUE@no_undefined = -no-undefined

INCLUDES = -I$(top_srcdir) $(LIBGSF_CFLAGS)

lib_LTLIBRARIES = libgsf-1.la

libgsf_1_la_LIBADD = $(LIBGSF_LIBS) $(Z_LIBS) $(BZ2_LIBS)
libgsf_1_la_LDFLAGS = -version-info $(VERSION_INFO) $(no_undefined)
libgsf_1_la_SOURCES =  	gsf-utils.c			gsf-libxml.c			gsf-msole-impl.h		gsf-msole-utils.c		gsf-timestamp.c			gsf-zip-impl.h			gsf-zip-utils.c				gsf-input.c			gsf-input-impl.h		gsf-input-memory.c 		gsf-input-stdio.c 		gsf-input-textline.c 		gsf-input-gzip.c 		gsf-input-bzip.c		gsf-input-iochannel.c			gsf-infile.c 			gsf-infile-impl.h 		gsf-infile-msole.c 		gsf-infile-msvba.c 		gsf-infile-zip.c			gsf-output.c 			gsf-output-impl.h		gsf-output-iochannel.c		gsf-output-memory.c		gsf-output-stdio.c		gsf-output-gzip.c 		gsf-output-bzip.c			gsf-outfile.c 			gsf-outfile-impl.h 		gsf-outfile-msole.c 		gsf-outfile-zip.c			gsf-shared-memory.c		gsf-shared-memory.h		gsf-structured-blob.c

#	gsf-output-transaction.c	\
#	gsf-command-context.c	\
#	gsf-io-context.c

libgsf_1_includedir = $(includedir)/libgsf-1/gsf
libgsf_1_include_HEADERS =  	gsf.h				gsf-utils.h			gsf-libxml.h			gsf-doc-meta-data.h		gsf-impl-utils.h		gsf-msole-utils.h		gsf-timestamp.h				gsf-input.h			gsf-input-memory.h 		gsf-input-stdio.h 		gsf-input-textline.h 		gsf-input-gzip.h 		gsf-input-bzip.h		gsf-input-iochannel.h			gsf-infile.h 			gsf-infile-msole.h 		gsf-infile-msvba.h 		gsf-infile-zip.h			gsf-output.h			gsf-output-iochannel.h		gsf-output-memory.h		gsf-output-stdio.h		gsf-output-gzip.h 		gsf-output-bzip.h			gsf-outfile.h 			gsf-outfile-msole.h		gsf-outfile-zip.h       		gsf-structured-blob.h

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../gsf-config.h
CONFIG_CLEAN_FILES =  version.c
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
libgsf_1_la_DEPENDENCIES = 
libgsf_1_la_OBJECTS =  gsf-utils.lo gsf-libxml.lo gsf-msole-utils.lo \
gsf-timestamp.lo gsf-zip-utils.lo gsf-input.lo gsf-input-memory.lo \
gsf-input-stdio.lo gsf-input-textline.lo gsf-input-gzip.lo \
gsf-input-bzip.lo gsf-input-iochannel.lo gsf-infile.lo \
gsf-infile-msole.lo gsf-infile-msvba.lo gsf-infile-zip.lo gsf-output.lo \
gsf-output-iochannel.lo gsf-output-memory.lo gsf-output-stdio.lo \
gsf-output-gzip.lo gsf-output-bzip.lo gsf-outfile.lo \
gsf-outfile-msole.lo gsf-outfile-zip.lo gsf-shared-memory.lo \
gsf-structured-blob.lo
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
HEADERS =  $(libgsf_1_include_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in version.c.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
SOURCES = $(libgsf_1_la_SOURCES)
OBJECTS = $(libgsf_1_la_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps gsf/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

version.c: $(top_builddir)/config.status version.c.in
	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libgsf-1.la: $(libgsf_1_la_OBJECTS) $(libgsf_1_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libgsf_1_la_LDFLAGS) $(libgsf_1_la_OBJECTS) $(libgsf_1_la_LIBADD) $(LIBS)

install-libgsf_1_includeHEADERS: $(libgsf_1_include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libgsf_1_includedir)
	@list='$(libgsf_1_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libgsf_1_includedir)/$$p"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libgsf_1_includedir)/$$p; \
	done

uninstall-libgsf_1_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	list='$(libgsf_1_include_HEADERS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libgsf_1_includedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags -o $$here/TAGS $(ETAGS_ARGS) $$tags  $$unique $(LISP))

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = gsf

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
gsf-infile-msole.lo gsf-infile-msole.o : gsf-infile-msole.c \
	../gsf-config.h gsf-infile-impl.h gsf.h gsf-input-impl.h \
	gsf-input.h gsf-output.h gsf-infile.h gsf-infile-msole.h \
	gsf-impl-utils.h gsf-utils.h gsf-msole-impl.h
gsf-infile-msvba.lo gsf-infile-msvba.o : gsf-infile-msvba.c \
	../gsf-config.h gsf-infile-impl.h gsf.h gsf-input-impl.h \
	gsf-input.h gsf-output.h gsf-infile.h gsf-infile-msole.h \
	gsf-infile-msvba.h gsf-input-memory.h gsf-impl-utils.h \
	gsf-utils.h
gsf-infile-zip.lo gsf-infile-zip.o : gsf-infile-zip.c ../gsf-config.h \
	gsf-infile-impl.h gsf.h gsf-input-impl.h gsf-input.h \
	gsf-output.h gsf-infile.h gsf-infile-zip.h gsf-impl-utils.h \
	gsf-utils.h gsf-zip-impl.h
gsf-infile.lo gsf-infile.o : gsf-infile.c ../gsf-config.h \
	gsf-infile-impl.h gsf.h gsf-input-impl.h gsf-input.h \
	gsf-output.h gsf-infile.h gsf-impl-utils.h
gsf-input-bzip.lo gsf-input-bzip.o : gsf-input-bzip.c ../gsf-config.h \
	gsf-input-bzip.h gsf-input-memory.h gsf-input.h gsf.h \
	gsf-output.h gsf-output-memory.h gsf-output.h
gsf-input-gzip.lo gsf-input-gzip.o : gsf-input-gzip.c ../gsf-config.h \
	gsf-input-gzip.h gsf-input.h gsf.h gsf-output.h \
	gsf-input-impl.h gsf-impl-utils.h gsf-utils.h
gsf-input-iochannel.lo gsf-input-iochannel.o : gsf-input-iochannel.c \
	../gsf-config.h gsf-input-iochannel.h gsf-input-memory.h \
	gsf-input.h gsf.h gsf-output.h
gsf-input-memory.lo gsf-input-memory.o : gsf-input-memory.c \
	../gsf-config.h gsf-input-memory.h gsf-input.h gsf.h \
	gsf-output.h gsf-input-impl.h gsf-impl-utils.h gsf-utils.h \
	gsf-shared-memory.h
gsf-input-stdio.lo gsf-input-stdio.o : gsf-input-stdio.c ../gsf-config.h \
	gsf-input-stdio.h gsf-input.h gsf.h gsf-output.h \
	gsf-input-impl.h gsf-impl-utils.h gsf-utils.h
gsf-input-textline.lo gsf-input-textline.o : gsf-input-textline.c \
	../gsf-config.h gsf-input-textline.h gsf-input.h gsf.h \
	gsf-output.h gsf-input-impl.h gsf-impl-utils.h
gsf-input.lo gsf-input.o : gsf-input.c ../gsf-config.h gsf-input-impl.h \
	gsf.h gsf-input.h gsf-output.h gsf-input-gzip.h \
	gsf-impl-utils.h
gsf-libxml.lo gsf-libxml.o : gsf-libxml.c ../gsf-config.h gsf-libxml.h \
	gsf.h gsf-input.h gsf-output.h gsf-input-gzip.h \
	gsf-impl-utils.h gsf-utils.h
gsf-msole-utils.lo gsf-msole-utils.o : gsf-msole-utils.c ../gsf-config.h \
	gsf-msole-utils.h gsf.h gsf-input.h gsf-output.h gsf-utils.h \
	gsf-timestamp.h
gsf-outfile-msole.lo gsf-outfile-msole.o : gsf-outfile-msole.c \
	../gsf-config.h gsf-outfile-impl.h gsf.h gsf-output-impl.h \
	gsf-output.h gsf-outfile.h gsf-outfile-msole.h gsf-impl-utils.h \
	gsf-msole-impl.h gsf-utils.h
gsf-outfile-zip.lo gsf-outfile-zip.o : gsf-outfile-zip.c ../gsf-config.h \
	gsf-outfile-impl.h gsf.h gsf-output-impl.h gsf-output.h \
	gsf-outfile.h gsf-outfile-zip.h gsf-impl-utils.h gsf-utils.h \
	gsf-zip-impl.h
gsf-outfile.lo gsf-outfile.o : gsf-outfile.c ../gsf-config.h \
	gsf-outfile-impl.h gsf.h gsf-output-impl.h gsf-output.h \
	gsf-outfile.h gsf-impl-utils.h
gsf-output-bzip.lo gsf-output-bzip.o : gsf-output-bzip.c ../gsf-config.h \
	gsf-output-bzip.h gsf-output.h gsf.h gsf-output-impl.h \
	gsf-impl-utils.h gsf-utils.h
gsf-output-gzip.lo gsf-output-gzip.o : gsf-output-gzip.c ../gsf-config.h \
	gsf-output-gzip.h gsf-output.h gsf.h gsf-output-impl.h \
	gsf-impl-utils.h gsf-utils.h
gsf-output-iochannel.lo gsf-output-iochannel.o : gsf-output-iochannel.c \
	../gsf-config.h gsf-output-iochannel.h gsf-output.h gsf.h \
	gsf-output-impl.h gsf-impl-utils.h
gsf-output-memory.lo gsf-output-memory.o : gsf-output-memory.c \
	../gsf-config.h gsf-output-memory.h gsf-output.h gsf.h \
	gsf-output-impl.h gsf-impl-utils.h
gsf-output-stdio.lo gsf-output-stdio.o : gsf-output-stdio.c \
	../gsf-config.h gsf-output-stdio.h gsf-output.h gsf.h \
	gsf-output-impl.h gsf-impl-utils.h gsf-utils.h
gsf-output.lo gsf-output.o : gsf-output.c ../gsf-config.h \
	gsf-output-impl.h gsf.h gsf-output.h gsf-impl-utils.h
gsf-shared-memory.lo gsf-shared-memory.o : gsf-shared-memory.c \
	../gsf-config.h gsf-shared-memory.h gsf.h gsf-impl-utils.h
gsf-structured-blob.lo gsf-structured-blob.o : gsf-structured-blob.c \
	../gsf-config.h gsf-structured-blob.h gsf.h gsf-impl-utils.h \
	gsf-infile-impl.h gsf-input-impl.h gsf-input.h gsf-output.h \
	gsf-infile.h gsf-outfile.h gsf-shared-memory.h
gsf-timestamp.lo gsf-timestamp.o : gsf-timestamp.c ../gsf-config.h \
	gsf-timestamp.h gsf.h
gsf-utils.lo gsf-utils.o : gsf-utils.c ../gsf-config.h gsf-utils.h gsf.h \
	gsf-input.h gsf-output.h
gsf-zip-utils.lo gsf-zip-utils.o : gsf-zip-utils.c ../gsf-config.h gsf.h \
	gsf-zip-impl.h

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES
install-exec: install-exec-am

install-data-am: install-libgsf_1_includeHEADERS install-data-local
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES uninstall-libgsf_1_includeHEADERS \
		uninstall-local
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(libgsf_1_includedir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool uninstall-libgsf_1_includeHEADERS \
install-libgsf_1_includeHEADERS tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info-am info dvi-am dvi check \
check-am installcheck-am installcheck install-exec-am install-exec \
install-data-local install-data-am install-data install-am install \
uninstall-local uninstall-am uninstall all-redirect all-am all \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


@OS_WIN32_TRUE@install-libtool-import-lib:
@OS_WIN32_TRUE@	$(INSTALL) .libs/libgsf-1.dll.a $(DESTDIR)$(libdir)

@OS_WIN32_TRUE@uninstall-libtool-import-lib:
@OS_WIN32_TRUE@	-rm $(DESTDIR)$(libdir)/libgsf-1.dll.a
@OS_WIN32_FALSE@install-libtool-import-lib:
@OS_WIN32_FALSE@uninstall-libtool-import-lib:
#	gsf-command-context.h	\
#	gsf-io-context.h

install-data-local: install-libtool-import-lib

uninstall-local: uninstall-libtool-import-lib

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
