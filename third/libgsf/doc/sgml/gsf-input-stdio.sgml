<refentry id="gsf-gsf-input-stdio">
<refmeta>
<refentrytitle>gsf-input-stdio</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GSF Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gsf-input-stdio</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



#define     <link linkend="GSF-INPUT-STDIO-TYPE-CAPS">GSF_INPUT_STDIO_TYPE</link>
#define     <link linkend="GSF-INPUT-STDIO-CAPS">GSF_INPUT_STDIO</link>                 (o)
struct      <link linkend="GsfInputStdio">GsfInputStdio</link>;
<link linkend="GType">GType</link>       <link linkend="gsf-input-stdio-get-type">gsf_input_stdio_get_type</link>        (void);
<link linkend="GsfInputStdio">GsfInputStdio</link>* <link linkend="gsf-input-stdio-new">gsf_input_stdio_new</link>          (<link linkend="char">char</link> const *filename,
                                             <link linkend="GError">GError</link> **err);
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GSF-INPUT-STDIO-TYPE-CAPS">GSF_INPUT_STDIO_TYPE</title>
<indexterm><primary>GSF_INPUT_STDIO_TYPE</primary></indexterm><programlisting>#define GSF_INPUT_STDIO_TYPE        (gsf_input_stdio_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GSF-INPUT-STDIO-CAPS">GSF_INPUT_STDIO()</title>
<indexterm><primary>GSF_INPUT_STDIO</primary></indexterm><programlisting>#define GSF_INPUT_STDIO(o)          (G_TYPE_CHECK_INSTANCE_CAST ((o), GSF_INPUT_STDIO_TYPE, GsfInputStdio))
</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>o</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GsfInputStdio">struct GsfInputStdio</title>
<indexterm><primary>GsfInputStdio</primary></indexterm><programlisting>struct GsfInputStdio;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gsf-input-stdio-get-type">gsf_input_stdio_get_type ()</title>
<indexterm><primary>gsf_input_stdio_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>       gsf_input_stdio_get_type        (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-input-stdio-new">gsf_input_stdio_new ()</title>
<indexterm><primary>gsf_input_stdio_new</primary></indexterm><programlisting><link linkend="GsfInputStdio">GsfInputStdio</link>* gsf_input_stdio_new          (<link linkend="char">char</link> const *filename,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> in utf8.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> optionally NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>a new file or NULL.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
