# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
ACLOCAL_AMFLAGS = @ACLOCAL_AMFLAGS@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AWK = @AWK@
BONOBO_ACTIVATION_REQUIRED = @BONOBO_ACTIVATION_REQUIRED@
BONOBO_IDLDIR = @BONOBO_IDLDIR@
BONOBO_REQUIRED = @BONOBO_REQUIRED@
BZ2_LIBS = @BZ2_LIBS@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CDDA_LIBS = @CDDA_LIBS@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
DATADIRNAME = @DATADIRNAME@
DEPDIR = @DEPDIR@
DISABLE_DEPRECATED = @DISABLE_DEPRECATED@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EGREP = @EGREP@
ENABLE_PROFILER = @ENABLE_PROFILER@
F77 = @F77@
FAM_LIBS = @FAM_LIBS@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GCONFTOOL = @GCONFTOOL@
GCONF_REQUIRED = @GCONF_REQUIRED@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GLIB_REQUIRED = @GLIB_REQUIRED@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOME_VFS_DIR = @GNOME_VFS_DIR@
HOWL_CFLAGS = @HOWL_CFLAGS@
HOWL_LIBS = @HOWL_LIBS@
HTML_DIR = @HTML_DIR@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_CAVES_RULE = @INTLTOOL_CAVES_RULE@
INTLTOOL_DESKTOP_RULE = @INTLTOOL_DESKTOP_RULE@
INTLTOOL_DIRECTORY_RULE = @INTLTOOL_DIRECTORY_RULE@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_KBD_RULE = @INTLTOOL_KBD_RULE@
INTLTOOL_KEYS_RULE = @INTLTOOL_KEYS_RULE@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_OAF_RULE = @INTLTOOL_OAF_RULE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_PONG_RULE = @INTLTOOL_PONG_RULE@
INTLTOOL_PROP_RULE = @INTLTOOL_PROP_RULE@
INTLTOOL_SCHEMAS_RULE = @INTLTOOL_SCHEMAS_RULE@
INTLTOOL_SERVER_RULE = @INTLTOOL_SERVER_RULE@
INTLTOOL_SHEET_RULE = @INTLTOOL_SHEET_RULE@
INTLTOOL_SOUNDLIST_RULE = @INTLTOOL_SOUNDLIST_RULE@
INTLTOOL_THEME_RULE = @INTLTOOL_THEME_RULE@
INTLTOOL_UI_RULE = @INTLTOOL_UI_RULE@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_XAM_RULE = @INTLTOOL_XAM_RULE@
INTLTOOL_XML_RULE = @INTLTOOL_XML_RULE@
KRB5_CONFIG = @KRB5_CONFIG@
LDFLAGS = @LDFLAGS@
LIBEFS_CFLAGS = @LIBEFS_CFLAGS@
LIBEFS_LIBS = @LIBEFS_LIBS@
LIBGNOMEVFSDAEMON_CFLAGS = @LIBGNOMEVFSDAEMON_CFLAGS@
LIBGNOMEVFSDAEMON_LIBS = @LIBGNOMEVFSDAEMON_LIBS@
LIBGNOMEVFS_AGE = @LIBGNOMEVFS_AGE@
LIBGNOMEVFS_CFLAGS = @LIBGNOMEVFS_CFLAGS@
LIBGNOMEVFS_CURRENT = @LIBGNOMEVFS_CURRENT@
LIBGNOMEVFS_LIBS = @LIBGNOMEVFS_LIBS@
LIBGNOMEVFS_REVISION = @LIBGNOMEVFS_REVISION@
LIBGNOMEVFS_VERSION = @LIBGNOMEVFS_VERSION@
LIBGNUTLS_CFLAGS = @LIBGNUTLS_CFLAGS@
LIBGNUTLS_CONFIG = @LIBGNUTLS_CONFIG@
LIBGNUTLS_LIBS = @LIBGNUTLS_LIBS@
LIBIDL_REQUIRED = @LIBIDL_REQUIRED@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAINT = @MAINT@
MKINSTALLDIRS = @MKINSTALLDIRS@
MODULES_CFLAGS = @MODULES_CFLAGS@
MODULES_FILE_CFLAGS = @MODULES_FILE_CFLAGS@
MODULES_FILE_LIBS = @MODULES_FILE_LIBS@
MODULES_GCONF_CFLAGS = @MODULES_GCONF_CFLAGS@
MODULES_GCONF_LIBS = @MODULES_GCONF_LIBS@
MODULES_LIBS = @MODULES_LIBS@
MODULES_XML_CFLAGS = @MODULES_XML_CFLAGS@
MODULES_XML_GCONF_CFLAGS = @MODULES_XML_GCONF_CFLAGS@
MODULES_XML_GCONF_LIBS = @MODULES_XML_GCONF_LIBS@
MODULES_XML_LIBS = @MODULES_XML_LIBS@
MONIKERS_CFLAGS = @MONIKERS_CFLAGS@
MONIKERS_LIBS = @MONIKERS_LIBS@
NEONOBJS = @NEONOBJS@
NEON_BUILD_BUNDLED = @NEON_BUILD_BUNDLED@
NEON_CFLAGS = @NEON_CFLAGS@
NEON_EXTRAOBJS = @NEON_EXTRAOBJS@
NEON_LIBS = @NEON_LIBS@
NEON_LINK_FLAGS = @NEON_LINK_FLAGS@
NEON_LTLIBS = @NEON_LTLIBS@
NEON_OBJEXT = @NEON_OBJEXT@
NEON_SUPPORTS_DAV = @NEON_SUPPORTS_DAV@
NEON_SUPPORTS_ZLIB = @NEON_SUPPORTS_ZLIB@
NEON_TARGET = @NEON_TARGET@
OBJDUMP = @OBJDUMP@
ORBIT_IDL = @ORBIT_IDL@
ORBIT_REQUIRED = @ORBIT_REQUIRED@
PACKAGE = @PACKAGE@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POPT_LIBS = @POPT_LIBS@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
RANLIB = @RANLIB@
RC = @RC@
REBUILD = @REBUILD@
SAMBA_CFLAGS = @SAMBA_CFLAGS@
SAMBA_LIBS = @SAMBA_LIBS@
SSH_PROGRAM = @SSH_PROGRAM@
STRIP = @STRIP@
TEST_CFLAGS = @TEST_CFLAGS@
TEST_LIBS = @TEST_LIBS@
TOP_BUILDDIR = @TOP_BUILDDIR@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
VFS_CFLAGS = @VFS_CFLAGS@
VFS_INCLUDEDIR = @VFS_INCLUDEDIR@
VFS_LIBDIR = @VFS_LIBDIR@
VFS_LIBS = @VFS_LIBS@
VFS_OFFSET = @VFS_OFFSET@
VFS_OFFSET_IS = @VFS_OFFSET_IS@
VFS_OFFSET_PRINTF = @VFS_OFFSET_PRINTF@
VFS_SIZE = @VFS_SIZE@
VFS_SIZE_IS = @VFS_SIZE_IS@
VFS_SIZE_PRINTF = @VFS_SIZE_PRINTF@
WARN_CFLAGS = @WARN_CFLAGS@
WARN_CXXFLAGS = @WARN_CXXFLAGS@
XML_REQUIRED = @XML_REQUIRED@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
NULL = 

INCLUDES = \
	-I$(top_srcdir)				\
	-I$(top_builddir)			\
	$(LIBGNOMEVFS_CFLAGS)			\
	$(LIBGNOMEVFSDAEMON_CFLAGS)		\
	$(VFS_CFLAGS)				\
	$(MONIKERS_CFLAGS)			\
	-DXDG_PREFIX=_gnome_vfs_xdg		\
	-D_FILE_OFFSET_BITS=64			\
	-D_BSD_SOURCE				\
	-D_GNU_SOURCE				\
	-D_LARGEFILE64_SOURCE                   \
	-D_POSIX_PTHREAD_SEMANTICS		\
	-D_REENTRANT				\
	-DG_DISABLE_DEPRECATED			\
	-DDATADIR=\"$(datadir)\"		\
	-DLIBDIR=\"$(libdir)\"			\
	-DPREFIX=\"$(prefix)\"			\
	-DGNOMEVFS_LOCALEDIR=\"$(prefix)/@DATADIRNAME@/locale\" \
	-DSYSCONFDIR=\"$(sysconfdir)\"		\
	-DG_LOG_DOMAIN=\"libgnomevfs\"		\
	$(NULL)


libgnomevfs_headers_to_scan_for_enums = \
	gnome-vfs-address.h			\
	gnome-vfs-application-registry.h	\
	gnome-vfs-async-ops.h			\
	gnome-vfs-cancellation.h		\
	gnome-vfs-context.h			\
	gnome-vfs-directory.h			\
	gnome-vfs-drive.h					\
	gnome-vfs-file-info.h			\
	gnome-vfs-file-size.h			\
	gnome-vfs-find-directory.h		\
	gnome-vfs-handle.h			\
	gnome-vfs-init.h			\
	gnome-vfs-job-limit.h			\
	gnome-vfs-mime.h			\
	gnome-vfs-mime-handlers.h		\
	gnome-vfs-mime-info-cache.h		\
	gnome-vfs-mime-monitor.h		\
	gnome-vfs-mime-utils.h			\
	gnome-vfs-module-callback.h		\
	gnome-vfs-monitor.h			\
	gnome-vfs-ops.h				\
	gnome-vfs-resolve.h			\
	gnome-vfs-result.h			\
	gnome-vfs-standard-callbacks.h		\
	gnome-vfs-types.h			\
	gnome-vfs-utils.h			\
	gnome-vfs-volume.h		\
	gnome-vfs-volume-monitor.h	\
	gnome-vfs-xfer.h			\
	gnome-vfs.h				\
	$(NULL)


libgnomevfs_headers = \
	$(libgnomevfs_headers_to_scan_for_enums) \
	gnome-vfs-dns-sd.h			\
	gnome-vfs-uri.h				\
	$(NULL)


# Generate the enums source code, with glib-mkenums:
# This is based on the same Makefile.am stuff in pango:
libgnomevfs_built_headers = gnome-vfs-enum-types.h
libgnomevfs_built_cfiles = gnome-vfs-enum-types.c


# %.c %.h: %.gob
#	$(top_srcdir)/gob/src/gob2 $<
#
# GOB_SRCLIST = 					\
#	gnome-vfs-metadata.c			\
#	gnome-vfs-metadata.h			\
#	gnome-vfs-metadata-private.h		\
#	$(NULL)
# GOB_FILES =					\
#	gnome-vfs-metadata.gob			\
#	$(NULL)
lib_LTLIBRARIES = libgnomevfs-2.la

noinst_LTLIBRARIES = libgnomevfsdaemon-2.la

libgnomevfs_2_la_LIBADD = \
	$(LIBGNOMEVFS_LIBS)			\
	$(NULL)


libgnomevfs_2_la_LDFLAGS = \
	-version-info $(LIBGNOMEVFS_CURRENT):$(LIBGNOMEVFS_REVISION):$(LIBGNOMEVFS_AGE) \
	-no-undefined \
	$(NULL)


libgnomevfsdaemon_2_la_LIBADD = \
	$(LIBGNOMEVFS_LIBS)			\
	libgnomevfs-2.la			\
	$(LIBGNOMEVFSDAEMON_LIBS)		\
	$(NULL)


libgnomevfsincludedir = $(includedir)/gnome-vfs-2.0/libgnomevfs

libgnomevfsmoduleincludedir = $(includedir)/gnome-vfs-module-2.0/libgnomevfs

# mime-sniff-buffers and cancellabe-ops are used by modules
noinst_HEADERS = \
	eggdesktopentries.h			\
	eggdirfuncs.h				\
	gnome-vfs-async-job-map.h		\
	gnome-vfs-backend.h			\
	gnome-vfs-cancellable-ops.h		\
	gnome-vfs-cancellation-private.h	\
	gnome-vfs-cdrom.h			\
	gnome-vfs-client-call.h			\
	gnome-vfs-client.h			\
	gnome-vfs-configuration.h		\
	gnome-vfs-daemon-method.h		\
	gnome-vfs-filesystem-type.h		\
	gnome-vfs-handle-private.h		\
	gnome-vfs-hal-mounts.h			\
	gnome-vfs-i18n.h			\
	gnome-vfs-iso9660.h			\
	gnome-vfs-job-queue.h			\
	gnome-vfs-job-slave.h			\
	gnome-vfs-job.h				\
	gnome-vfs-mime-magic.h			\
	gnome-vfs-mime-private.h		\
	gnome-vfs-mime-sniff-buffer-private.h	\
	gnome-vfs-mime-sniff-buffer.h		\
	gnome-vfs-module-callback-private.h	\
	gnome-vfs-monitor-private.h		\
	gnome-vfs-private-utils.h		\
	gnome-vfs-private.h			\
	gnome-vfs-process.h			\
	gnome-vfs-ssl-private.h			\
	gnome-vfs-thread-pool.h			\
	gnome-vfs-unix-mounts.h 		\
	gnome-vfs-volume-monitor-client.h	\
	gnome-vfs-volume-monitor-daemon.h	\
	gnome-vfs-volume-monitor-private.h 	\
	xdgmime.h				\
	xdgmimeglob.h				\
	xdgmimemagic.h				\
	xdgmimeint.h				\
	$(NULL)


libgnomevfsmoduleinclude_HEADERS = \
	gnome-vfs-cancellable-ops.h		\
	gnome-vfs-inet-connection.h		\
	gnome-vfs-method.h			\
	gnome-vfs-mime.h			\
	gnome-vfs-mime-info.h			\
	gnome-vfs-module-callback-module-api.h	\
	gnome-vfs-module-shared.h		\
	gnome-vfs-module.h			\
	gnome-vfs-parse-ls.h			\
	gnome-vfs-ssl.h				\
	gnome-vfs-transform.h			\
	gnome-vfs-socket-buffer.h		\
	gnome-vfs-socket.h			\
	$(NULL)


libgnomevfsinclude_HEADERS = \
	gnome-vfs-application-registry.h	\
	gnome-vfs-address.h			\
	gnome-vfs-async-ops.h			\
	gnome-vfs-cancellation.h		\
	gnome-vfs-context.h			\
	gnome-vfs-directory.h			\
	gnome-vfs-dns-sd.h			\
	gnome-vfs-drive.h			\
	gnome-vfs-enum-types.h			\
	gnome-vfs-file-info.h			\
	gnome-vfs-file-size.h			\
	gnome-vfs-find-directory.h		\
	gnome-vfs-handle.h			\
	gnome-vfs-init.h			\
	gnome-vfs-job-limit.h			\
	gnome-vfs-mime-handlers.h		\
	gnome-vfs-mime-info-cache.h		\
	gnome-vfs-mime-monitor.h		\
	gnome-vfs-mime-utils.h			\
	gnome-vfs-module-callback.h		\
	gnome-vfs-monitor.h			\
	gnome-vfs-ops.h				\
	gnome-vfs-resolve.h			\
	gnome-vfs-result.h			\
	gnome-vfs-standard-callbacks.h		\
	gnome-vfs-types.h			\
	gnome-vfs-uri.h				\
	gnome-vfs-utils.h			\
	gnome-vfs-volume-monitor.h		\
	gnome-vfs-volume.h			\
	gnome-vfs-xfer.h			\
	gnome-vfs.h				\
	$(NULL)


CORBA_SOURCE = \
	GNOME_VFS_Daemon.h		\
	GNOME_VFS_Daemon-common.c	\
	GNOME_VFS_Daemon-stubs.c	\
	GNOME_VFS_Daemon-skels.c


libgnomevfs_2_la_SOURCES = \
	$(CORBA_SOURCE)				\
	eggdesktopentries.c			\
	eggdirfuncs.c				\
	gnome-vfs-application-registry.c	\
	gnome-vfs-address.c			\
	gnome-vfs-async-job-map.c		\
	gnome-vfs-async-ops.c			\
	gnome-vfs-cancellable-ops.c	 	\
	gnome-vfs-cancellation.c		\
	gnome-vfs-cdrom.c			\
	gnome-vfs-client-call.c			\
	gnome-vfs-client.c			\
	gnome-vfs-configuration.c		\
	gnome-vfs-context.c			\
	gnome-vfs-daemon-method.c		\
	gnome-vfs-directory.c			\
	gnome-vfs-dns-sd.c			\
	gnome-vfs-drive.c			\
	gnome-vfs-file-info.c			\
	gnome-vfs-filesystem-type.c		\
	gnome-vfs-find-directory.c		\
	gnome-vfs-handle.c			\
	gnome-vfs-i18n.c			\
	gnome-vfs-inet-connection.c		\
	gnome-vfs-init.c			\
	gnome-vfs-job-queue.c			\
	gnome-vfs-job-slave.c			\
	gnome-vfs-job.c				\
	gnome-vfs-method.c			\
	gnome-vfs-mime-handlers.c		\
	gnome-vfs-mime-info.c			\
	gnome-vfs-mime-info-cache.c		\
	gnome-vfs-mime-monitor.c		\
	gnome-vfs-mime-sniff-buffer.c		\
	gnome-vfs-mime.c			\
	gnome-vfs-mime-magic.c			\
	gnome-vfs-module-callback-marshall.c	\
	gnome-vfs-module-callback-module-api.c	\
	gnome-vfs-module-callback-private.c	\
	gnome-vfs-module-callback.c		\
	gnome-vfs-module-shared.c		\
	gnome-vfs-module.c			\
	gnome-vfs-monitor.c			\
	gnome-vfs-open-fd.c			\
	gnome-vfs-ops.c				\
	gnome-vfs-parse-ls.c			\
	gnome-vfs-private-utils.c		\
	gnome-vfs-private.c			\
	gnome-vfs-process.c			\
	gnome-vfs-resolve.c			\
	gnome-vfs-result.c			\
	gnome-vfs-socket-buffer.c		\
	gnome-vfs-socket.c			\
	gnome-vfs-ssl.c				\
	gnome-vfs-thread-pool.c			\
	gnome-vfs-transform.c			\
	gnome-vfs-uri.c				\
	gnome-vfs-utils.c			\
	gnome-vfs-volume-monitor-client.c	\
	gnome-vfs-volume-monitor.c		\
	gnome-vfs-volume-ops.c			\
	gnome-vfs-volume.c			\
	gnome-vfs-xfer.c			\
	xdgmimemagic.c				\
	xdgmime.c				\
	xdgmimeglob.c				\
	xdgmimeint.c				\
	$(libgnomevfs_built_cfiles)		\
	$(NULL)



#	$(GOB_SRCLIST)				\
#	$(GOB_FILES)				\
# BUILT_SOURCES = $(GOB_SRCLIST)
# CLEANFILES = $(BUILT_SOURCES)
libgnomevfsdaemon_2_la_SOURCES = \
	gnome-vfs-hal-mounts.c			\
	gnome-vfs-volume-monitor-daemon.c	\
	gnome-vfs-volume-monitor.c	 	\
	gnome-vfs-unix-mounts.c			\
	$(NULL)


# Platform specific includes
libgnomevfsplatformincludedir = $(libdir)/gnome-vfs-2.0/include
libgnomevfsplatforminclude_HEADERS = \
	gnome-vfs-file-size.h


# Hack for now
BONOBO_ACTIVATION_IDL_DIR = `pkg-config --variable=idldir bonobo-activation-2.0`

idls = GNOME_VFS_Daemon.idl
idl_flags = -I $(BONOBO_ACTIVATION_IDL_DIR)

# TESTS = check-headers.pl
EXTRA_DIST = check-headers.pl $(idls)

BUILT_SOURCES = $(CORBA_SOURCE) \
	gnome-vfs-enum-types.h			\
	s-enum-types-h				\
	gnome-vfs-enum-types.c			\
	s-enum-types-c

CLEANFILES = $(BUILT_SOURCES)
subdir = libgnomevfs
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = gnome-vfs-file-size.h
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)

libgnomevfs_2_la_DEPENDENCIES =
am__objects_1 = GNOME_VFS_Daemon-common.lo GNOME_VFS_Daemon-stubs.lo \
	GNOME_VFS_Daemon-skels.lo
am__objects_2 = gnome-vfs-enum-types.lo
am__objects_3 =
am_libgnomevfs_2_la_OBJECTS = $(am__objects_1) eggdesktopentries.lo \
	eggdirfuncs.lo gnome-vfs-application-registry.lo \
	gnome-vfs-address.lo gnome-vfs-async-job-map.lo \
	gnome-vfs-async-ops.lo gnome-vfs-cancellable-ops.lo \
	gnome-vfs-cancellation.lo gnome-vfs-cdrom.lo \
	gnome-vfs-client-call.lo gnome-vfs-client.lo \
	gnome-vfs-configuration.lo gnome-vfs-context.lo \
	gnome-vfs-daemon-method.lo gnome-vfs-directory.lo \
	gnome-vfs-dns-sd.lo gnome-vfs-drive.lo gnome-vfs-file-info.lo \
	gnome-vfs-filesystem-type.lo gnome-vfs-find-directory.lo \
	gnome-vfs-handle.lo gnome-vfs-i18n.lo \
	gnome-vfs-inet-connection.lo gnome-vfs-init.lo \
	gnome-vfs-job-queue.lo gnome-vfs-job-slave.lo gnome-vfs-job.lo \
	gnome-vfs-method.lo gnome-vfs-mime-handlers.lo \
	gnome-vfs-mime-info.lo gnome-vfs-mime-info-cache.lo \
	gnome-vfs-mime-monitor.lo gnome-vfs-mime-sniff-buffer.lo \
	gnome-vfs-mime.lo gnome-vfs-mime-magic.lo \
	gnome-vfs-module-callback-marshall.lo \
	gnome-vfs-module-callback-module-api.lo \
	gnome-vfs-module-callback-private.lo \
	gnome-vfs-module-callback.lo gnome-vfs-module-shared.lo \
	gnome-vfs-module.lo gnome-vfs-monitor.lo gnome-vfs-open-fd.lo \
	gnome-vfs-ops.lo gnome-vfs-parse-ls.lo \
	gnome-vfs-private-utils.lo gnome-vfs-private.lo \
	gnome-vfs-process.lo gnome-vfs-resolve.lo gnome-vfs-result.lo \
	gnome-vfs-socket-buffer.lo gnome-vfs-socket.lo gnome-vfs-ssl.lo \
	gnome-vfs-thread-pool.lo gnome-vfs-transform.lo \
	gnome-vfs-uri.lo gnome-vfs-utils.lo \
	gnome-vfs-volume-monitor-client.lo gnome-vfs-volume-monitor.lo \
	gnome-vfs-volume-ops.lo gnome-vfs-volume.lo gnome-vfs-xfer.lo \
	xdgmimemagic.lo xdgmime.lo xdgmimeglob.lo xdgmimeint.lo \
	$(am__objects_2) $(am__objects_3)
libgnomevfs_2_la_OBJECTS = $(am_libgnomevfs_2_la_OBJECTS)
libgnomevfsdaemon_2_la_LDFLAGS =
libgnomevfsdaemon_2_la_DEPENDENCIES = libgnomevfs-2.la
am_libgnomevfsdaemon_2_la_OBJECTS = gnome-vfs-hal-mounts.lo \
	gnome-vfs-volume-monitor-daemon.lo gnome-vfs-volume-monitor.lo \
	gnome-vfs-unix-mounts.lo $(am__objects_3)
libgnomevfsdaemon_2_la_OBJECTS = $(am_libgnomevfsdaemon_2_la_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/GNOME_VFS_Daemon-common.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/GNOME_VFS_Daemon-skels.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/GNOME_VFS_Daemon-stubs.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/eggdesktopentries.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/eggdirfuncs.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-address.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-application-registry.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-async-job-map.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-async-ops.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-cancellable-ops.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-cancellation.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-cdrom.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-client-call.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-client.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-configuration.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-context.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-daemon-method.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-directory.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-dns-sd.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-drive.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-enum-types.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-file-info.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-filesystem-type.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-find-directory.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-hal-mounts.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-handle.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-i18n.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-inet-connection.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-init.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-job-queue.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-job-slave.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-job.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-method.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-mime-handlers.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-mime-info-cache.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-mime-info.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-mime-magic.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-mime-monitor.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-mime-sniff-buffer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-mime.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-module-callback-marshall.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-module-callback-module-api.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-module-callback-private.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-module-callback.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-module-shared.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-module.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-monitor.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-open-fd.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-ops.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-parse-ls.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-private-utils.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-private.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-process.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-resolve.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-result.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-socket-buffer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-socket.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-ssl.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-thread-pool.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-transform.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-unix-mounts.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-uri.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-utils.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-volume-monitor-client.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-volume-monitor-daemon.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-volume-monitor.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-volume-ops.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-volume.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/gnome-vfs-xfer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/xdgmime.Plo ./$(DEPDIR)/xdgmimeglob.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/xdgmimeint.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/xdgmimemagic.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libgnomevfs_2_la_SOURCES) \
	$(libgnomevfsdaemon_2_la_SOURCES)
HEADERS = $(libgnomevfsinclude_HEADERS) \
	$(libgnomevfsmoduleinclude_HEADERS) \
	$(libgnomevfsplatforminclude_HEADERS) $(noinst_HEADERS)

DIST_COMMON = $(libgnomevfsinclude_HEADERS) \
	$(libgnomevfsmoduleinclude_HEADERS) \
	$(libgnomevfsplatforminclude_HEADERS) $(noinst_HEADERS) \
	Makefile.am Makefile.in gnome-vfs-file-size.h.in
SOURCES = $(libgnomevfs_2_la_SOURCES) $(libgnomevfsdaemon_2_la_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  libgnomevfs/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
gnome-vfs-file-size.h: $(top_builddir)/config.status gnome-vfs-file-size.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgnomevfs-2.la: $(libgnomevfs_2_la_OBJECTS) $(libgnomevfs_2_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libgnomevfs_2_la_LDFLAGS) $(libgnomevfs_2_la_OBJECTS) $(libgnomevfs_2_la_LIBADD) $(LIBS)
libgnomevfsdaemon-2.la: $(libgnomevfsdaemon_2_la_OBJECTS) $(libgnomevfsdaemon_2_la_DEPENDENCIES) 
	$(LINK)  $(libgnomevfsdaemon_2_la_LDFLAGS) $(libgnomevfsdaemon_2_la_OBJECTS) $(libgnomevfsdaemon_2_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GNOME_VFS_Daemon-common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GNOME_VFS_Daemon-skels.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GNOME_VFS_Daemon-stubs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eggdesktopentries.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eggdirfuncs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-address.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-application-registry.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-async-job-map.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-async-ops.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-cancellable-ops.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-cancellation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-cdrom.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-client-call.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-client.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-configuration.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-context.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-daemon-method.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-directory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-dns-sd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-drive.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-enum-types.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-file-info.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-filesystem-type.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-find-directory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-hal-mounts.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-handle.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-i18n.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-inet-connection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-job-queue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-job-slave.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-job.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-method.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-mime-handlers.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-mime-info-cache.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-mime-info.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-mime-magic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-mime-monitor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-mime-sniff-buffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-mime.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-module-callback-marshall.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-module-callback-module-api.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-module-callback-private.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-module-callback.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-module-shared.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-module.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-monitor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-open-fd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-ops.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-parse-ls.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-private-utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-private.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-process.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-resolve.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-result.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-socket-buffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-socket.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-ssl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-thread-pool.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-transform.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-unix-mounts.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-uri.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-volume-monitor-client.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-volume-monitor-daemon.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-volume-monitor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-volume-ops.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-volume.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnome-vfs-xfer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xdgmime.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xdgmimeglob.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xdgmimeint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xdgmimemagic.Plo@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CCDEPMODE = @CCDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
libgnomevfsincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-libgnomevfsincludeHEADERS: $(libgnomevfsinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libgnomevfsincludedir)
	@list='$(libgnomevfsinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libgnomevfsincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(libgnomevfsincludedir)/$$f"; \
	  $(libgnomevfsincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(libgnomevfsincludedir)/$$f; \
	done

uninstall-libgnomevfsincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libgnomevfsinclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libgnomevfsincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(libgnomevfsincludedir)/$$f; \
	done
libgnomevfsmoduleincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-libgnomevfsmoduleincludeHEADERS: $(libgnomevfsmoduleinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libgnomevfsmoduleincludedir)
	@list='$(libgnomevfsmoduleinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libgnomevfsmoduleincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(libgnomevfsmoduleincludedir)/$$f"; \
	  $(libgnomevfsmoduleincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(libgnomevfsmoduleincludedir)/$$f; \
	done

uninstall-libgnomevfsmoduleincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libgnomevfsmoduleinclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libgnomevfsmoduleincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(libgnomevfsmoduleincludedir)/$$f; \
	done
libgnomevfsplatformincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-libgnomevfsplatformincludeHEADERS: $(libgnomevfsplatforminclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libgnomevfsplatformincludedir)
	@list='$(libgnomevfsplatforminclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libgnomevfsplatformincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(libgnomevfsplatformincludedir)/$$f"; \
	  $(libgnomevfsplatformincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(libgnomevfsplatformincludedir)/$$f; \
	done

uninstall-libgnomevfsplatformincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libgnomevfsplatforminclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libgnomevfsplatformincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(libgnomevfsplatformincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(libgnomevfsincludedir) $(DESTDIR)$(libgnomevfsmoduleincludedir) $(DESTDIR)$(libgnomevfsplatformincludedir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-libgnomevfsincludeHEADERS \
	install-libgnomevfsmoduleincludeHEADERS \
	install-libgnomevfsplatformincludeHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libgnomevfsincludeHEADERS \
	uninstall-libgnomevfsmoduleincludeHEADERS \
	uninstall-libgnomevfsplatformincludeHEADERS

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
	distclean distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-libgnomevfsincludeHEADERS \
	install-libgnomevfsmoduleincludeHEADERS \
	install-libgnomevfsplatformincludeHEADERS install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-libgnomevfsincludeHEADERS \
	uninstall-libgnomevfsmoduleincludeHEADERS \
	uninstall-libgnomevfsplatformincludeHEADERS


# Don't build the library until we have built the header that it needs:
$(OBJECTS) $(libgnomevfs_2_la_OBJECTS): $(libgnomevfs_built_headers)

gnome-vfs-enum-types.h: s-enum-types-h
	@true

s-enum-types-h: @REBUILD@ $(libgnomevfs_headers_to_scan_for_enums) Makefile
	( cd $(srcdir) && glib-mkenums \
			--fhead "#ifndef __LIBGNOMEVFS_ENUM_TYPES_H__\n#define __LIBGNOMEVFS_ENUM_TYPES_H__\n\n#include <glib-object.h>\n\nG_BEGIN_DECLS\n" \
			--fprod "/* enumerations from \"@filename@\" */\n" \
			--vhead "GType @enum_name@_get_type (void);\n#define GNOME_VFS_TYPE_@ENUMSHORT@ (@enum_name@_get_type())\n" 	\
			--ftail "G_END_DECLS\n\n#endif /* __LIBGNOMEVFS_ENUM_TYPES_H__ */" \
		$(libgnomevfs_headers_to_scan_for_enums) ) > tmp-gnome-vfs-enum-types.h \
	&& (cmp -s tmp-gnome-vfs-enum-types.h $(srcdir)/gnome-vfs-enum-types.h || cp tmp-gnome-vfs-enum-types.h $(srcdir)/gnome-vfs-enum-types.h ) \
	&& rm -f tmp-gnome-vfs-enum-types.h	\
	&& echo timestamp > $(@F)

gnome-vfs-enum-types.c: s-enum-types-c
	@true

s-enum-types-c: @REBUILD@ $(libgnomevfs_headers_to_scan_for_enums) Makefile
	( cd $(srcdir) && glib-mkenums \
			--fhead "#include <libgnomevfs/gnome-vfs.h>\n" \
			--fhead "#include <libgnomevfs/gnome-vfs-mime-handlers.h>\n" \
			--fhead "#include <glib-object.h>" \
      --fprod "\n/* enumerations from \"@filename@\" */" \
			--vhead "GType\n@enum_name@_get_type (void)\n{\n  static GType etype = 0;\n  if (etype == 0) {\n    static const G@Type@Value values[] = {" 	\
			--vprod "      { @VALUENAME@, \"@VALUENAME@\", \"@valuenick@\" }," \
			--vtail "      { 0, NULL, NULL }\n    };\n    etype = g_@type@_register_static (\"@EnumName@\", values);\n  }\n  return etype;\n}\n" \
		$(libgnomevfs_headers_to_scan_for_enums) ) > tmp-gnome-vfs-enum-types.c \
	&& (cmp -s tmp-gnome-vfs-enum-types.c $(srcdir)/gnome-vfs-enum-types.c || cp tmp-gnome-vfs-enum-types.c $(srcdir)/gnome-vfs-enum-types.c ) \
	&& rm -f tmp-gnome-vfs-enum-types.c \
	&& echo timestamp > $(@F)

$(test_authentication_OBJECTS): GNOME_VFS_Daemon.h

$(CORBA_SOURCE): $(idls) $(ORBIT_IDL)
	$(ORBIT_IDL) $(idl_flags) $(srcdir)/$(idls)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
