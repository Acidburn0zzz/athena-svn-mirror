<refentry id="gnome-vfs-gnome-vfs-socket">
<refmeta>
<refentrytitle>gnome-vfs-socket</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GNOME-VFS Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gnome-vfs-socket</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



<link linkend="GnomeVFSResult">GnomeVFSResult</link> (<link linkend="GnomeVFSSocketReadFunc">*GnomeVFSSocketReadFunc</link>)    (<link linkend="gpointer">gpointer</link> connection,
                                             <link linkend="gpointer">gpointer</link> buffer,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> bytes,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> *bytes_read);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> (<link linkend="GnomeVFSSocketWriteFunc">*GnomeVFSSocketWriteFunc</link>)   (<link linkend="gpointer">gpointer</link> connection,
                                             <link linkend="gconstpointer">gconstpointer</link> buffer,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> bytes,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> *bytes_written);
void        (<link linkend="GnomeVFSSocketCloseFunc">*GnomeVFSSocketCloseFunc</link>)      (<link linkend="gpointer">gpointer</link> connection);
typedef     <link linkend="GnomeVFSSocketImpl">GnomeVFSSocketImpl</link>;
<link linkend="GnomeVFSSocket">GnomeVFSSocket</link>* <link linkend="gnome-vfs-socket-new">gnome_vfs_socket_new</link>        (<link linkend="GnomeVFSSocketImpl">GnomeVFSSocketImpl</link> *impl,
                                             void *connection);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-socket-write">gnome_vfs_socket_write</link>       (<link linkend="GnomeVFSSocket">GnomeVFSSocket</link> *socket,
                                             <link linkend="gconstpointer">gconstpointer</link> buffer,
                                             int bytes,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> *bytes_written);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-socket-close">gnome_vfs_socket_close</link>       (<link linkend="GnomeVFSSocket">GnomeVFSSocket</link> *socket);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-socket-read">gnome_vfs_socket_read</link>        (<link linkend="GnomeVFSSocket">GnomeVFSSocket</link> *socket,
                                             <link linkend="gpointer">gpointer</link> buffer,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> bytes,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> *bytes_read);
</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GnomeVFSSocketReadFunc"/>GnomeVFSSocketReadFunc ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> (*GnomeVFSSocketReadFunc)    (<link linkend="gpointer">gpointer</link> connection,
                                             <link linkend="gpointer">gpointer</link> buffer,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> bytes,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> *bytes_read);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bytes</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bytes_read</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GnomeVFSSocketWriteFunc"/>GnomeVFSSocketWriteFunc ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> (*GnomeVFSSocketWriteFunc)   (<link linkend="gpointer">gpointer</link> connection,
                                             <link linkend="gconstpointer">gconstpointer</link> buffer,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> bytes,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> *bytes_written);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bytes</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bytes_written</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GnomeVFSSocketCloseFunc"/>GnomeVFSSocketCloseFunc ()</title>
<programlisting>void        (*GnomeVFSSocketCloseFunc)      (<link linkend="gpointer">gpointer</link> connection);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GnomeVFSSocketImpl"/>GnomeVFSSocketImpl</title>
<programlisting>typedef struct {
  GnomeVFSSocketReadFunc read;
  GnomeVFSSocketWriteFunc write;
  GnomeVFSSocketCloseFunc close;
} GnomeVFSSocketImpl;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-socket-new"/>gnome_vfs_socket_new ()</title>
<programlisting><link linkend="GnomeVFSSocket">GnomeVFSSocket</link>* gnome_vfs_socket_new        (<link linkend="GnomeVFSSocketImpl">GnomeVFSSocketImpl</link> *impl,
                                             void *connection);</programlisting>
<para>
Creates a new GnomeVFS Socket using the specific implementation
<parameter>impl</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>impl</parameter>&nbsp;:</term>
<listitem><simpara> an implementation of a socket, e.g. GnomeVFSSSL
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara> pointer to a connection object used by <parameter>impl</parameter> to track
state (the exact nature of <parameter>connection</parameter> varies from implementation to
implementation)
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a newly created socket
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-socket-write"/>gnome_vfs_socket_write ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_socket_write       (<link linkend="GnomeVFSSocket">GnomeVFSSocket</link> *socket,
                                             <link linkend="gconstpointer">gconstpointer</link> buffer,
                                             int bytes,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> *bytes_written);</programlisting>
<para>
Write <parameter>bytes</parameter> bytes of data from <parameter>buffer</parameter> to <parameter>socket</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>socket</parameter>&nbsp;:</term>
<listitem><simpara> socket to write data to
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> data to write to the socket
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bytes</parameter>&nbsp;:</term>
<listitem><simpara> number of bytes from <parameter>buffer</parameter> to write to <parameter>socket</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bytes_written</parameter>&nbsp;:</term>
<listitem><simpara> pointer to a GnomeVFSFileSize, will contain
the number of bytes actually written to the socket on return.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> GnomeVFSResult indicating the success of the operation
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-socket-close"/>gnome_vfs_socket_close ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_socket_close       (<link linkend="GnomeVFSSocket">GnomeVFSSocket</link> *socket);</programlisting>
<para>
Close <parameter>socket</parameter>, freeing any resources it may be using.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>socket</parameter>&nbsp;:</term>
<listitem><simpara> the socket to be closed
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> GnomeVFSResult indicating the success of the operation
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-socket-read"/>gnome_vfs_socket_read ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_socket_read        (<link linkend="GnomeVFSSocket">GnomeVFSSocket</link> *socket,
                                             <link linkend="gpointer">gpointer</link> buffer,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> bytes,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> *bytes_read);</programlisting>
<para>
Read <parameter>bytes</parameter> bytes of data from the <parameter>socket</parameter> into <parameter>buffer</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>socket</parameter>&nbsp;:</term>
<listitem><simpara> socket to read data from
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> allocated buffer of at least <parameter>bytes</parameter> bytes to be read into
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bytes</parameter>&nbsp;:</term>
<listitem><simpara> number of bytes to read from <parameter>socket</parameter> into <parameter>buffer</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bytes_read</parameter>&nbsp;:</term>
<listitem><simpara> pointer to a GnomeVFSFileSize, will contain
the number of bytes actually read from the socket on return.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> GnomeVFSResult indicating the success of the operation
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
