<refentry id="gnome-vfs-gnome-vfs-socket-buffer">
<refmeta>
<refentrytitle>gnome-vfs-socket-buffer</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GNOME-VFS Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gnome-vfs-socket-buffer</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



<link linkend="GnomeVFSSocketBuffer">GnomeVFSSocketBuffer</link>* <link linkend="gnome-vfs-socket-buffer-new">gnome_vfs_socket_buffer_new</link>
                                            (<link linkend="GnomeVFSSocket">GnomeVFSSocket</link> *socket);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-socket-buffer-destroy">gnome_vfs_socket_buffer_destroy</link>
                                            (<link linkend="GnomeVFSSocketBuffer">GnomeVFSSocketBuffer</link> *socket_buffer,
                                             <link linkend="gboolean">gboolean</link> close_socket);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-socket-buffer-read">gnome_vfs_socket_buffer_read</link> (<link linkend="GnomeVFSSocketBuffer">GnomeVFSSocketBuffer</link> *socket_buffer,
                                             <link linkend="gpointer">gpointer</link> buffer,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> bytes,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> *bytes_read);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-socket-buffer-peekc">gnome_vfs_socket_buffer_peekc</link>
                                            (<link linkend="GnomeVFSSocketBuffer">GnomeVFSSocketBuffer</link> *socket_buffer,
                                             char *character);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-socket-buffer-write">gnome_vfs_socket_buffer_write</link>
                                            (<link linkend="GnomeVFSSocketBuffer">GnomeVFSSocketBuffer</link> *socket_buffer,
                                             <link linkend="gconstpointer">gconstpointer</link> buffer,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> bytes,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> *bytes_written);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-socket-buffer-flush">gnome_vfs_socket_buffer_flush</link>
                                            (<link linkend="GnomeVFSSocketBuffer">GnomeVFSSocketBuffer</link> *socket_buffer);
</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="gnome-vfs-socket-buffer-new"/>gnome_vfs_socket_buffer_new ()</title>
<programlisting><link linkend="GnomeVFSSocketBuffer">GnomeVFSSocketBuffer</link>* gnome_vfs_socket_buffer_new
                                            (<link linkend="GnomeVFSSocket">GnomeVFSSocket</link> *socket);</programlisting>
<para>
Create a socket buffer around <parameter>socket</parameter>. A buffered
socket allows data to be poked at without reading it
as it will be buffered. A future read will retrieve
the data again.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>socket</parameter>&nbsp;:</term>
<listitem><simpara> socket to be buffered
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a newly allocated GnomeVFSSocketBuffer
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-socket-buffer-destroy"/>gnome_vfs_socket_buffer_destroy ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_socket_buffer_destroy
                                            (<link linkend="GnomeVFSSocketBuffer">GnomeVFSSocketBuffer</link> *socket_buffer,
                                             <link linkend="gboolean">gboolean</link> close_socket);</programlisting>
<para>
Free the socket buffer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>socket_buffer</parameter>&nbsp;:</term>
<listitem><simpara> buffered socket to destray
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>close_socket</parameter>&nbsp;:</term>
<listitem><simpara> if <literal>TRUE</literal> the socket being buffered will be closed too
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> GnomeVFSResult indicating the success of the operation
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-socket-buffer-read"/>gnome_vfs_socket_buffer_read ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_socket_buffer_read (<link linkend="GnomeVFSSocketBuffer">GnomeVFSSocketBuffer</link> *socket_buffer,
                                             <link linkend="gpointer">gpointer</link> buffer,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> bytes,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> *bytes_read);</programlisting>
<para>
Read <parameter>bytes</parameter> bytes of data from the <parameter>socket</parameter> into <parameter>socket_buffer</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>socket_buffer</parameter>&nbsp;:</term>
<listitem><simpara> buffered socket to read data from
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> allocated buffer of at least <parameter>bytes</parameter> bytes to be read into
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bytes</parameter>&nbsp;:</term>
<listitem><simpara> number of bytes to read from <parameter>socket</parameter> into <parameter>socket_buffer</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bytes_read</parameter>&nbsp;:</term>
<listitem><simpara> pointer to a GnomeVFSFileSize, will contain
the number of bytes actually read from the socket on return.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> GnomeVFSResult indicating the success of the operation
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-socket-buffer-peekc"/>gnome_vfs_socket_buffer_peekc ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_socket_buffer_peekc
                                            (<link linkend="GnomeVFSSocketBuffer">GnomeVFSSocketBuffer</link> *socket_buffer,
                                             char *character);</programlisting>
<para>
Peek at the next character in <parameter>socket_buffer</parameter> without actually reading
the character in. The next read will retrieve <parameter>c</parameter> (as well as any following
data if requested).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>socket_buffer</parameter>&nbsp;:</term>
<listitem><simpara> the socket buffer to read from
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>character</parameter>&nbsp;:</term>
<listitem><simpara> pointer to a char, will contain a character on return from
a successful "peek"
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> GnomeVFSResult indicating the success of the operation
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-socket-buffer-write"/>gnome_vfs_socket_buffer_write ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_socket_buffer_write
                                            (<link linkend="GnomeVFSSocketBuffer">GnomeVFSSocketBuffer</link> *socket_buffer,
                                             <link linkend="gconstpointer">gconstpointer</link> buffer,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> bytes,
                                             <link linkend="GnomeVFSFileSize">GnomeVFSFileSize</link> *bytes_written);</programlisting>
<para>
Write <parameter>bytes</parameter> bytes of data from <parameter>buffer</parameter> to <parameter>socket_buffer</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>socket_buffer</parameter>&nbsp;:</term>
<listitem><simpara> buffered socket to write data to
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> data to write to the socket
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bytes</parameter>&nbsp;:</term>
<listitem><simpara> number of bytes from <parameter>buffer</parameter> to write to <parameter>socket_buffer</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bytes_written</parameter>&nbsp;:</term>
<listitem><simpara> pointer to a GnomeVFSFileSize, will contain
the number of bytes actually written to the socket on return.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> GnomeVFSResult indicating the success of the operation
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-socket-buffer-flush"/>gnome_vfs_socket_buffer_flush ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_socket_buffer_flush
                                            (<link linkend="GnomeVFSSocketBuffer">GnomeVFSSocketBuffer</link> *socket_buffer);</programlisting>
<para>
Write all outstanding data to <parameter>socket_buffer</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>socket_buffer</parameter>&nbsp;:</term>
<listitem><simpara> buffer to flush
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> GnomeVFSResult indicating the success of the operation
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
