<refentry id="gnome-vfs-gnome-vfs-directory-list-ops">
<refmeta>
<refentrytitle>
Listing Directory Contents</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GNOME-VFS Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>
Listing Directory Contents</refname><refpurpose>
Listing the contents of directories.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



enum        <link linkend="GnomeVFSDirectoryVisitOptions">GnomeVFSDirectoryVisitOptions</link>;
<link linkend="gboolean">gboolean</link>    (<link linkend="GnomeVFSDirectoryVisitFunc">*GnomeVFSDirectoryVisitFunc</link>)   (const <link linkend="gchar">gchar</link> *rel_path,
                                             <link linkend="GnomeVFSFileInfo">GnomeVFSFileInfo</link> *info,
                                             <link linkend="gboolean">gboolean</link> recursing_will_loop,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="gboolean">gboolean</link> *recurse);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-directory-open">gnome_vfs_directory_open</link>     (<link linkend="GnomeVFSDirectoryHandle">GnomeVFSDirectoryHandle</link> **handle,
                                             const <link linkend="gchar">gchar</link> *text_uri,
                                             <link linkend="GnomeVFSFileInfoOptions">GnomeVFSFileInfoOptions</link> options);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-directory-open-from-uri">gnome_vfs_directory_open_from_uri</link>
                                            (<link linkend="GnomeVFSDirectoryHandle">GnomeVFSDirectoryHandle</link> **handle,
                                             <link linkend="GnomeVFSURI">GnomeVFSURI</link> *uri,
                                             <link linkend="GnomeVFSFileInfoOptions">GnomeVFSFileInfoOptions</link> options);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-directory-read-next">gnome_vfs_directory_read_next</link>
                                            (<link linkend="GnomeVFSDirectoryHandle">GnomeVFSDirectoryHandle</link> *handle,
                                             <link linkend="GnomeVFSFileInfo">GnomeVFSFileInfo</link> *file_info);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-directory-close">gnome_vfs_directory_close</link>    (<link linkend="GnomeVFSDirectoryHandle">GnomeVFSDirectoryHandle</link> *handle);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-directory-visit">gnome_vfs_directory_visit</link>    (const <link linkend="gchar">gchar</link> *uri,
                                             <link linkend="GnomeVFSFileInfoOptions">GnomeVFSFileInfoOptions</link> info_options,
                                             <link linkend="GnomeVFSDirectoryVisitOptions">GnomeVFSDirectoryVisitOptions</link> visit_options,
                                             <link linkend="GnomeVFSDirectoryVisitFunc">GnomeVFSDirectoryVisitFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> data);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-directory-visit-uri">gnome_vfs_directory_visit_uri</link>
                                            (<link linkend="GnomeVFSURI">GnomeVFSURI</link> *uri,
                                             <link linkend="GnomeVFSFileInfoOptions">GnomeVFSFileInfoOptions</link> info_options,
                                             <link linkend="GnomeVFSDirectoryVisitOptions">GnomeVFSDirectoryVisitOptions</link> visit_options,
                                             <link linkend="GnomeVFSDirectoryVisitFunc">GnomeVFSDirectoryVisitFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> data);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-directory-visit-files">gnome_vfs_directory_visit_files</link>
                                            (const <link linkend="gchar">gchar</link> *text_uri,
                                             <link linkend="GList">GList</link> *file_list,
                                             <link linkend="GnomeVFSFileInfoOptions">GnomeVFSFileInfoOptions</link> info_options,
                                             <link linkend="GnomeVFSDirectoryVisitOptions">GnomeVFSDirectoryVisitOptions</link> visit_options,
                                             <link linkend="GnomeVFSDirectoryVisitFunc">GnomeVFSDirectoryVisitFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> data);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-directory-visit-files-at-uri">gnome_vfs_directory_visit_files_at_uri</link>
                                            (<link linkend="GnomeVFSURI">GnomeVFSURI</link> *uri,
                                             <link linkend="GList">GList</link> *file_list,
                                             <link linkend="GnomeVFSFileInfoOptions">GnomeVFSFileInfoOptions</link> info_options,
                                             <link linkend="GnomeVFSDirectoryVisitOptions">GnomeVFSDirectoryVisitOptions</link> visit_options,
                                             <link linkend="GnomeVFSDirectoryVisitFunc">GnomeVFSDirectoryVisitFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> data);
<link linkend="GnomeVFSResult">GnomeVFSResult</link> <link linkend="gnome-vfs-directory-list-load">gnome_vfs_directory_list_load</link>
                                            (<link linkend="GList">GList</link> **list,
                                             const <link linkend="gchar">gchar</link> *text_uri,
                                             <link linkend="GnomeVFSFileInfoOptions">GnomeVFSFileInfoOptions</link> options);
</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GnomeVFSDirectoryVisitOptions"/>enum GnomeVFSDirectoryVisitOptions</title>
<programlisting>typedef enum {
	GNOME_VFS_DIRECTORY_VISIT_DEFAULT = 0,
	GNOME_VFS_DIRECTORY_VISIT_SAMEFS = 1 &lt;&lt; 0,
	GNOME_VFS_DIRECTORY_VISIT_LOOPCHECK = 1 &lt;&lt; 1
} GnomeVFSDirectoryVisitOptions;
</programlisting>
<para>
This options control the way in which directories are visited.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><literal>GNOME_VFS_DIRECTORY_VISIT_DEFAULT</literal></term>
<listitem><simpara> 
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GNOME_VFS_DIRECTORY_VISIT_SAMEFS</literal></term>
<listitem><simpara> Visit only directories on the same 
file system as the parent
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>GNOME_VFS_DIRECTORY_VISIT_LOOPCHECK</literal></term>
<listitem><simpara> Loop prevention
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GnomeVFSDirectoryVisitFunc"/>GnomeVFSDirectoryVisitFunc ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    (*GnomeVFSDirectoryVisitFunc)   (const <link linkend="gchar">gchar</link> *rel_path,
                                             <link linkend="GnomeVFSFileInfo">GnomeVFSFileInfo</link> *info,
                                             <link linkend="gboolean">gboolean</link> recursing_will_loop,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="gboolean">gboolean</link> *recurse);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>rel_path</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>info</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recursing_will_loop</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recurse</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-directory-open"/>gnome_vfs_directory_open ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_directory_open     (<link linkend="GnomeVFSDirectoryHandle">GnomeVFSDirectoryHandle</link> **handle,
                                             const <link linkend="gchar">gchar</link> *text_uri,
                                             <link linkend="GnomeVFSFileInfoOptions">GnomeVFSFileInfoOptions</link> options);</programlisting>
<para>
Open directory <parameter>text_uri</parameter> for reading.  On return, @*handle will point to
a <literal>GnomeVFSDirectoryHandle</literal> object which can be used to read the directory
entries one by one.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> A pointer to a pointer to a GnomeVFSDirectoryHandle object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text_uri</parameter>&nbsp;:</term>
<listitem><simpara> String representing the URI to open
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>options</parameter>&nbsp;:</term>
<listitem><simpara> Options for reading file information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> An integer representing the result of the operation
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-directory-open-from-uri"/>gnome_vfs_directory_open_from_uri ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_directory_open_from_uri
                                            (<link linkend="GnomeVFSDirectoryHandle">GnomeVFSDirectoryHandle</link> **handle,
                                             <link linkend="GnomeVFSURI">GnomeVFSURI</link> *uri,
                                             <link linkend="GnomeVFSFileInfoOptions">GnomeVFSFileInfoOptions</link> options);</programlisting>
<para>
Open directory <parameter>text_uri</parameter> for reading.  On return, @*handle will point to
a <literal>GnomeVFSDirectoryHandle</literal> object which can be used to read the directory
entries one by one.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> A pointer to a pointer to a GnomeVFSDirectoryHandle object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> URI to open
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>options</parameter>&nbsp;:</term>
<listitem><simpara> Options for reading file information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> An integer representing the result of the operation.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-directory-read-next"/>gnome_vfs_directory_read_next ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_directory_read_next
                                            (<link linkend="GnomeVFSDirectoryHandle">GnomeVFSDirectoryHandle</link> *handle,
                                             <link linkend="GnomeVFSFileInfo">GnomeVFSFileInfo</link> *file_info);</programlisting>
<para>
Read the next directory entry from <parameter>handle</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> A directory handle
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>file_info</parameter>&nbsp;:</term>
<listitem><simpara> Pointer to a <literal>GnomeVFSFileInfo</literal> struct where the data about
the entry will be stored
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> An integer value representing the result of the operation.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-directory-close"/>gnome_vfs_directory_close ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_directory_close    (<link linkend="GnomeVFSDirectoryHandle">GnomeVFSDirectoryHandle</link> *handle);</programlisting>
<para>
Close <parameter>handle</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> A directory handle.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> An integer representing the result of the operation.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-directory-visit"/>gnome_vfs_directory_visit ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_directory_visit    (const <link linkend="gchar">gchar</link> *uri,
                                             <link linkend="GnomeVFSFileInfoOptions">GnomeVFSFileInfoOptions</link> info_options,
                                             <link linkend="GnomeVFSDirectoryVisitOptions">GnomeVFSDirectoryVisitOptions</link> visit_options,
                                             <link linkend="GnomeVFSDirectoryVisitFunc">GnomeVFSDirectoryVisitFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
Visit <parameter>uri</parameter>, retrieving information as specified by <parameter>info_options</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> URI to start from
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>info_options</parameter>&nbsp;:</term>
<listitem><simpara> Options specifying what kind of file information must be
retrieved
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>visit_options</parameter>&nbsp;:</term>
<listitem><simpara> Options specifying the type of visit
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> Callback to be called for every visited file
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> Data to be passed to <parameter>callback</parameter> at each iteration
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-directory-visit-uri"/>gnome_vfs_directory_visit_uri ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_directory_visit_uri
                                            (<link linkend="GnomeVFSURI">GnomeVFSURI</link> *uri,
                                             <link linkend="GnomeVFSFileInfoOptions">GnomeVFSFileInfoOptions</link> info_options,
                                             <link linkend="GnomeVFSDirectoryVisitOptions">GnomeVFSDirectoryVisitOptions</link> visit_options,
                                             <link linkend="GnomeVFSDirectoryVisitFunc">GnomeVFSDirectoryVisitFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
Visit <parameter>uri</parameter>, retrieving information as specified by <parameter>info_options</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> URI to start from
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>info_options</parameter>&nbsp;:</term>
<listitem><simpara> Options specifying what kind of file information must be
retrieved
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>visit_options</parameter>&nbsp;:</term>
<listitem><simpara> Options specifying the type of visit
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> Callback to be called for every visited file
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> Data to be passed to <parameter>callback</parameter> at each iteration
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A result code indicating whether the operation succeeded. 

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-directory-visit-files"/>gnome_vfs_directory_visit_files ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_directory_visit_files
                                            (const <link linkend="gchar">gchar</link> *text_uri,
                                             <link linkend="GList">GList</link> *file_list,
                                             <link linkend="GnomeVFSFileInfoOptions">GnomeVFSFileInfoOptions</link> info_options,
                                             <link linkend="GnomeVFSDirectoryVisitOptions">GnomeVFSDirectoryVisitOptions</link> visit_options,
                                             <link linkend="GnomeVFSDirectoryVisitFunc">GnomeVFSDirectoryVisitFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
Fetches information about a list of files in a base URI <parameter>uri</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>text_uri</parameter>&nbsp;:</term>
<listitem><simpara> string representing the URI of a directory to "visit" the files in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>file_list</parameter>&nbsp;:</term>
<listitem><simpara> GList of char *s of file names in <parameter>uri</parameter> to visit
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>info_options</parameter>&nbsp;:</term>
<listitem><simpara> bitmask controlling the type of information to fetch
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>visit_options</parameter>&nbsp;:</term>
<listitem><simpara> options controlling e.g. loop prevention, and filesystem checks.
Affects the way visiting is done.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> function to call with the file info structs
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> data to pass to <parameter>callback</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a GnomeVFSResult indication the success of the operation
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-directory-visit-files-at-uri"/>gnome_vfs_directory_visit_files_at_uri ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_directory_visit_files_at_uri
                                            (<link linkend="GnomeVFSURI">GnomeVFSURI</link> *uri,
                                             <link linkend="GList">GList</link> *file_list,
                                             <link linkend="GnomeVFSFileInfoOptions">GnomeVFSFileInfoOptions</link> info_options,
                                             <link linkend="GnomeVFSDirectoryVisitOptions">GnomeVFSDirectoryVisitOptions</link> visit_options,
                                             <link linkend="GnomeVFSDirectoryVisitFunc">GnomeVFSDirectoryVisitFunc</link> callback,
                                             <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
Fetches information about a list of files in a base URI <parameter>uri</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> URI of a directory to "visit" the files in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>file_list</parameter>&nbsp;:</term>
<listitem><simpara> GList of char *s of file names in <parameter>uri</parameter> to visit
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>info_options</parameter>&nbsp;:</term>
<listitem><simpara> bitmask controlling the type of information to fetch
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>visit_options</parameter>&nbsp;:</term>
<listitem><simpara> options controlling e.g. loop prevention, and filesystem checks.
Affects the way visiting is done.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> function to call with the file info structs
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> data to pass to <parameter>callback</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a GnomeVFSResult indication the success of the operation
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-vfs-directory-list-load"/>gnome_vfs_directory_list_load ()</title>
<programlisting><link linkend="GnomeVFSResult">GnomeVFSResult</link> gnome_vfs_directory_list_load
                                            (<link linkend="GList">GList</link> **list,
                                             const <link linkend="gchar">gchar</link> *text_uri,
                                             <link linkend="GnomeVFSFileInfoOptions">GnomeVFSFileInfoOptions</link> options);</programlisting>
<para>
Load a directory from <parameter>text_uri</parameter> with the specified <parameter>options</parameter>
into a list.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&nbsp;:</term>
<listitem><simpara> An address of a pointer to a list of GnomeVFSFileInfo
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>text_uri</parameter>&nbsp;:</term>
<listitem><simpara> A text URI
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>options</parameter>&nbsp;:</term>
<listitem><simpara> Options for loading the directory 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> An integer representing the result of the operation.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
