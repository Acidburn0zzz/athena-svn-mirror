<refentry id="libgnomeprint-gnome-font">
<refmeta>
<refentrytitle>gnome-font</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOMEPRINT Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gnome-font</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



struct      <link linkend="GnomeFont">GnomeFont</link>;
struct      <link linkend="GnomeFontFace">GnomeFontFace</link>;
#define     <link linkend="gnome-font-ref">gnome_font_ref</link>                  (f)
#define     <link linkend="gnome-font-unref">gnome_font_unref</link>                (f)
enum        <link linkend="GnomeFontWeight">GnomeFontWeight</link>;
const <link linkend="guchar">guchar</link>* <link linkend="gnome-font-get-name">gnome_font_get_name</link>           (const <link linkend="GnomeFont">GnomeFont</link> *font);
const <link linkend="guchar">guchar</link>* <link linkend="gnome-font-get-family-name">gnome_font_get_family_name</link>    (const <link linkend="GnomeFont">GnomeFont</link> *font);
const <link linkend="guchar">guchar</link>* <link linkend="gnome-font-get-species-name">gnome_font_get_species_name</link>   (const <link linkend="GnomeFont">GnomeFont</link> *font);
const <link linkend="guchar">guchar</link>* <link linkend="gnome-font-get-ps-name">gnome_font_get_ps_name</link>        (const <link linkend="GnomeFont">GnomeFont</link> *font);
<link linkend="gint">gint</link>        <link linkend="gnome-font-lookup-default">gnome_font_lookup_default</link>       (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gint">gint</link> unicode);
<link linkend="ArtPoint">ArtPoint</link>*   <link linkend="gnome-font-get-glyph-stdadvance">gnome_font_get_glyph_stdadvance</link> (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gint">gint</link> glyph,
                                             <link linkend="ArtPoint">ArtPoint</link> *advance);
<link linkend="ArtDRect">ArtDRect</link>*   <link linkend="gnome-font-get-glyph-stdbbox">gnome_font_get_glyph_stdbbox</link>    (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gint">gint</link> glyph,
                                             <link linkend="ArtDRect">ArtDRect</link> *bbox);
const <link linkend="ArtBpath">ArtBpath</link>* <link linkend="gnome-font-get-glyph-stdoutline">gnome_font_get_glyph_stdoutline</link>
                                            (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gint">gint</link> glyph);
<link linkend="ArtPoint">ArtPoint</link>*   <link linkend="gnome-font-get-glyph-stdkerning">gnome_font_get_glyph_stdkerning</link> (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gint">gint</link> glyph0,
                                             <link linkend="gint">gint</link> glyph1,
                                             <link linkend="ArtPoint">ArtPoint</link> *kerning);
<link linkend="GnomeFontFace">GnomeFontFace</link>* <link linkend="gnome-font-get-face">gnome_font_get_face</link>          (const <link linkend="GnomeFont">GnomeFont</link> *font);
<link linkend="gdouble">gdouble</link>     <link linkend="gnome-font-get-size">gnome_font_get_size</link>             (const <link linkend="GnomeFont">GnomeFont</link> *font);
#define     <link linkend="gnome-font-get-weight-code">gnome_font_get_weight_code</link>      (f)
#define     <link linkend="gnome-font-is-italic">gnome_font_is_italic</link>            (f)
#define     <link linkend="gnome-font-is-fixed-width">gnome_font_is_fixed_width</link>       (f)
<link linkend="gdouble">gdouble</link>     <link linkend="gnome-font-get-ascender">gnome_font_get_ascender</link>         (<link linkend="GnomeFont">GnomeFont</link> *font);
<link linkend="gdouble">gdouble</link>     <link linkend="gnome-font-get-descender">gnome_font_get_descender</link>        (<link linkend="GnomeFont">GnomeFont</link> *font);
<link linkend="gdouble">gdouble</link>     <link linkend="gnome-font-get-underline-position">gnome_font_get_underline_position</link>
                                            (<link linkend="GnomeFont">GnomeFont</link> *font);
<link linkend="gdouble">gdouble</link>     <link linkend="gnome-font-get-underline-thickness">gnome_font_get_underline_thickness</link>
                                            (<link linkend="GnomeFont">GnomeFont</link> *font);
<link linkend="gdouble">gdouble</link>     <link linkend="gnome-font-get-glyph-width">gnome_font_get_glyph_width</link>      (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gint">gint</link> glyph);
<link linkend="gdouble">gdouble</link>     <link linkend="gnome-font-get-glyph-kerning">gnome_font_get_glyph_kerning</link>    (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gint">gint</link> glyph1,
                                             <link linkend="gint">gint</link> glyph2);
<link linkend="GnomeFont">GnomeFont</link>*  <link linkend="gnome-font-find-closest-from-weight-slant">gnome_font_find_closest_from_weight_slant</link>
                                            (const <link linkend="guchar">guchar</link> *family,
                                             <link linkend="GnomeFontWeight">GnomeFontWeight</link> weight,
                                             <link linkend="gboolean">gboolean</link> italic,
                                             <link linkend="gdouble">gdouble</link> size);
<link linkend="GnomeFont">GnomeFont</link>*  <link linkend="gnome-font-find">gnome_font_find</link>                 (const <link linkend="guchar">guchar</link> *name,
                                             <link linkend="gdouble">gdouble</link> size);
<link linkend="GnomeFont">GnomeFont</link>*  <link linkend="gnome-font-find-closest">gnome_font_find_closest</link>         (const <link linkend="guchar">guchar</link> *name,
                                             <link linkend="gdouble">gdouble</link> size);
<link linkend="GnomeFont">GnomeFont</link>*  <link linkend="gnome-font-find-from-full-name">gnome_font_find_from_full_name</link>  (const <link linkend="guchar">guchar</link> *string);
<link linkend="GnomeFont">GnomeFont</link>*  <link linkend="gnome-font-find-closest-from-full-name">gnome_font_find_closest_from_full_name</link>
                                            (const <link linkend="guchar">guchar</link> *string);
<link linkend="GList">GList</link>*      <link linkend="gnome-font-list">gnome_font_list</link>                 (void);
void        <link linkend="gnome-font-list-free">gnome_font_list_free</link>            (<link linkend="GList">GList</link> *fontlist);
<link linkend="GList">GList</link>*      <link linkend="gnome-font-family-list">gnome_font_family_list</link>          (void);
void        <link linkend="gnome-font-family-list-free">gnome_font_family_list_free</link>     (<link linkend="GList">GList</link> *fontlist);
<link linkend="GList">GList</link>*      <link linkend="gnome-font-style-list">gnome_font_style_list</link>           (const <link linkend="guchar">guchar</link> *family);
void        <link linkend="gnome-font-style-list-free">gnome_font_style_list_free</link>      (<link linkend="GList">GList</link> *styles);
<link linkend="guchar">guchar</link>*     <link linkend="gnome-font-get-full-name">gnome_font_get_full_name</link>        (<link linkend="GnomeFont">GnomeFont</link> *font);
<link linkend="PangoFont">PangoFont</link>*  <link linkend="gnome-font-get-closest-pango-font">gnome_font_get_closest_pango_font</link>
                                            (const <link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="PangoFontMap">PangoFontMap</link> *map,
                                             <link linkend="gdouble">gdouble</link> dpi);
<link linkend="PangoFontDescription">PangoFontDescription</link>* <link linkend="gnome-font-get-pango-description">gnome_font_get_pango_description</link>
                                            (const <link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gdouble">gdouble</link> dpi);

</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GnomeFont">struct GnomeFont</title>
<programlisting>struct GnomeFont;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GnomeFontFace">struct GnomeFontFace</title>
<programlisting>struct GnomeFontFace;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gnome-font-ref">gnome_font_ref()</title>
<programlisting>#define     gnome_font_ref(f)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>f</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-unref">gnome_font_unref()</title>
<programlisting>#define     gnome_font_unref(f)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>f</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GnomeFontWeight">enum GnomeFontWeight</title>
<programlisting>typedef enum {
	GNOME_FONT_LIGHTEST = 100,
	GNOME_FONT_EXTRA_LIGHT = 100,
	GNOME_FONT_THIN = 200,
	GNOME_FONT_LIGHT = 300,
	GNOME_FONT_BOOK = 400,
	GNOME_FONT_REGULAR = 400,
	GNOME_FONT_MEDIUM = 500,
	GNOME_FONT_SEMI = 600,
	GNOME_FONT_DEMI = 600,
	GNOME_FONT_BOLD = 700,
	GNOME_FONT_HEAVY = 900,
	GNOME_FONT_EXTRABOLD = 900,
	GNOME_FONT_BLACK = 1000,
	GNOME_FONT_EXTRABLACK = 1100,
	GNOME_FONT_HEAVIEST = 1100
} GnomeFontWeight;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-name">gnome_font_get_name ()</title>
<programlisting>const <link linkend="guchar">guchar</link>* gnome_font_get_name           (const <link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-family-name">gnome_font_get_family_name ()</title>
<programlisting>const <link linkend="guchar">guchar</link>* gnome_font_get_family_name    (const <link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-species-name">gnome_font_get_species_name ()</title>
<programlisting>const <link linkend="guchar">guchar</link>* gnome_font_get_species_name   (const <link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-ps-name">gnome_font_get_ps_name ()</title>
<programlisting>const <link linkend="guchar">guchar</link>* gnome_font_get_ps_name        (const <link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-lookup-default">gnome_font_lookup_default ()</title>
<programlisting><link linkend="gint">gint</link>        gnome_font_lookup_default       (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gint">gint</link> unicode);</programlisting>
<para>
Get the glyph number corresponding to a given unicode</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>unicode</parameter>&nbsp;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> glyph number, -1 if it is not mapped
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-glyph-stdadvance">gnome_font_get_glyph_stdadvance ()</title>
<programlisting><link linkend="ArtPoint">ArtPoint</link>*   gnome_font_get_glyph_stdadvance (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gint">gint</link> glyph,
                                             <link linkend="ArtPoint">ArtPoint</link> *advance);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>advance</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-glyph-stdbbox">gnome_font_get_glyph_stdbbox ()</title>
<programlisting><link linkend="ArtDRect">ArtDRect</link>*   gnome_font_get_glyph_stdbbox    (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gint">gint</link> glyph,
                                             <link linkend="ArtDRect">ArtDRect</link> *bbox);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bbox</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-glyph-stdoutline">gnome_font_get_glyph_stdoutline ()</title>
<programlisting>const <link linkend="ArtBpath">ArtBpath</link>* gnome_font_get_glyph_stdoutline
                                            (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gint">gint</link> glyph);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-glyph-stdkerning">gnome_font_get_glyph_stdkerning ()</title>
<programlisting><link linkend="ArtPoint">ArtPoint</link>*   gnome_font_get_glyph_stdkerning (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gint">gint</link> glyph0,
                                             <link linkend="gint">gint</link> glyph1,
                                             <link linkend="ArtPoint">ArtPoint</link> *kerning);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph0</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kerning</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-face">gnome_font_get_face ()</title>
<programlisting><link linkend="GnomeFontFace">GnomeFontFace</link>* gnome_font_get_face          (const <link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-size">gnome_font_get_size ()</title>
<programlisting><link linkend="gdouble">gdouble</link>     gnome_font_get_size             (const <link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-weight-code">gnome_font_get_weight_code()</title>
<programlisting>#define     gnome_font_get_weight_code(f)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>f</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-is-italic">gnome_font_is_italic()</title>
<programlisting>#define     gnome_font_is_italic(f)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>f</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-is-fixed-width">gnome_font_is_fixed_width()</title>
<programlisting>#define     gnome_font_is_fixed_width(f)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>f</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-ascender">gnome_font_get_ascender ()</title>
<programlisting><link linkend="gdouble">gdouble</link>     gnome_font_get_ascender         (<link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
This works with the standard Adobe encoding and without kerning or
ligatures. When the text libs get written, this function will be
deprecated.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara> the GnomeFont to operate on
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The ascender of the font.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-descender">gnome_font_get_descender ()</title>
<programlisting><link linkend="gdouble">gdouble</link>     gnome_font_get_descender        (<link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
This works with the standard Adobe encoding and without kerning or
ligatures. When the text libs get written, this function will be
deprecated.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara> the GnomeFont to operate on
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The descender of the font.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-underline-position">gnome_font_get_underline_position ()</title>
<programlisting><link linkend="gdouble">gdouble</link>     gnome_font_get_underline_position
                                            (<link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
This works with the standard Adobe encoding and without kerning or
ligatures. When the text libs get written, this function will be
deprecated.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara> the GnomeFont to operate on
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The underline position of the font.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-underline-thickness">gnome_font_get_underline_thickness ()</title>
<programlisting><link linkend="gdouble">gdouble</link>     gnome_font_get_underline_thickness
                                            (<link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
This works with the standard Adobe encoding and without kerning or
ligatures. When the text libs get written, this function will be
deprecated.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara> the GnomeFont to operate on
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The underline thickness of the font.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-glyph-width">gnome_font_get_glyph_width ()</title>
<programlisting><link linkend="gdouble">gdouble</link>     gnome_font_get_glyph_width      (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gint">gint</link> glyph);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-glyph-kerning">gnome_font_get_glyph_kerning ()</title>
<programlisting><link linkend="gdouble">gdouble</link>     gnome_font_get_glyph_kerning    (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gint">gint</link> glyph1,
                                             <link linkend="gint">gint</link> glyph2);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyph2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-find-closest-from-weight-slant">gnome_font_find_closest_from_weight_slant ()</title>
<programlisting><link linkend="GnomeFont">GnomeFont</link>*  gnome_font_find_closest_from_weight_slant
                                            (const <link linkend="guchar">guchar</link> *family,
                                             <link linkend="GnomeFontWeight">GnomeFontWeight</link> weight,
                                             <link linkend="gboolean">gboolean</link> italic,
                                             <link linkend="gdouble">gdouble</link> size);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>family</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>weight</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>italic</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-find">gnome_font_find ()</title>
<programlisting><link linkend="GnomeFont">GnomeFont</link>*  gnome_font_find                 (const <link linkend="guchar">guchar</link> *name,
                                             <link linkend="gdouble">gdouble</link> size);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-find-closest">gnome_font_find_closest ()</title>
<programlisting><link linkend="GnomeFont">GnomeFont</link>*  gnome_font_find_closest         (const <link linkend="guchar">guchar</link> *name,
                                             <link linkend="gdouble">gdouble</link> size);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-find-from-full-name">gnome_font_find_from_full_name ()</title>
<programlisting><link linkend="GnomeFont">GnomeFont</link>*  gnome_font_find_from_full_name  (const <link linkend="guchar">guchar</link> *string);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>string</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-find-closest-from-full-name">gnome_font_find_closest_from_full_name ()</title>
<programlisting><link linkend="GnomeFont">GnomeFont</link>*  gnome_font_find_closest_from_full_name
                                            (const <link linkend="guchar">guchar</link> *string);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>string</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-list">gnome_font_list ()</title>
<programlisting><link linkend="GList">GList</link>*      gnome_font_list                 (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-list-free">gnome_font_list_free ()</title>
<programlisting>void        gnome_font_list_free            (<link linkend="GList">GList</link> *fontlist);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>fontlist</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-family-list">gnome_font_family_list ()</title>
<programlisting><link linkend="GList">GList</link>*      gnome_font_family_list          (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-family-list-free">gnome_font_family_list_free ()</title>
<programlisting>void        gnome_font_family_list_free     (<link linkend="GList">GList</link> *fontlist);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>fontlist</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-style-list">gnome_font_style_list ()</title>
<programlisting><link linkend="GList">GList</link>*      gnome_font_style_list           (const <link linkend="guchar">guchar</link> *family);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>family</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-style-list-free">gnome_font_style_list_free ()</title>
<programlisting>void        gnome_font_style_list_free      (<link linkend="GList">GList</link> *styles);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>styles</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-full-name">gnome_font_get_full_name ()</title>
<programlisting><link linkend="guchar">guchar</link>*     gnome_font_get_full_name        (<link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-closest-pango-font">gnome_font_get_closest_pango_font ()</title>
<programlisting><link linkend="PangoFont">PangoFont</link>*  gnome_font_get_closest_pango_font
                                            (const <link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="PangoFontMap">PangoFontMap</link> *map,
                                             <link linkend="gdouble">gdouble</link> dpi);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>map</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dpi</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-font-get-pango-description">gnome_font_get_pango_description ()</title>
<programlisting><link linkend="PangoFontDescription">PangoFontDescription</link>* gnome_font_get_pango_description
                                            (const <link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="gdouble">gdouble</link> dpi);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dpi</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
