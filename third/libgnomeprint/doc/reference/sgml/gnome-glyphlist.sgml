<refentry id="libgnomeprint-gnome-glyphlist">
<refmeta>
<refentrytitle>gnome-glyphlist</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOMEPRINT Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gnome-glyphlist</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



struct      <link linkend="GnomeGlyphList">GnomeGlyphList</link>;
<link linkend="GnomeGlyphList">GnomeGlyphList</link>* <link linkend="gnome-glyphlist-new">gnome_glyphlist_new</link>         (void);
<link linkend="GnomeGlyphList">GnomeGlyphList</link>* <link linkend="gnome-glyphlist-ref">gnome_glyphlist_ref</link>         (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl);
<link linkend="GnomeGlyphList">GnomeGlyphList</link>* <link linkend="gnome-glyphlist-unref">gnome_glyphlist_unref</link>       (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl);
<link linkend="GnomeGlyphList">GnomeGlyphList</link>* <link linkend="gnome-glyphlist-duplicate">gnome_glyphlist_duplicate</link>   (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl);
<link linkend="gboolean">gboolean</link>    <link linkend="gnome-glyphlist-check">gnome_glyphlist_check</link>           (const <link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gboolean">gboolean</link> rules);
<link linkend="GnomeGlyphList">GnomeGlyphList</link>* <link linkend="gnome-glyphlist-from-text-dumb">gnome_glyphlist_from_text_dumb</link>
                                            (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="guint32">guint32</link> color,
                                             <link linkend="gdouble">gdouble</link> kerning,
                                             <link linkend="gdouble">gdouble</link> letterspace,
                                             const <link linkend="guchar">guchar</link> *text);
<link linkend="GnomeGlyphList">GnomeGlyphList</link>* <link linkend="gnome-glyphlist-from-text-sized-dumb">gnome_glyphlist_from_text_sized_dumb</link>
                                            (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="guint32">guint32</link> color,
                                             <link linkend="gdouble">gdouble</link> kerning,
                                             <link linkend="gdouble">gdouble</link> letterspace,
                                             const <link linkend="guchar">guchar</link> *text,
                                             <link linkend="gint">gint</link> length);
void        <link linkend="gnome-glyphlist-advance">gnome_glyphlist_advance</link>         (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gboolean">gboolean</link> advance);
void        <link linkend="gnome-glyphlist-kerning">gnome_glyphlist_kerning</link>         (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gdouble">gdouble</link> kerning);
void        <link linkend="gnome-glyphlist-letterspace">gnome_glyphlist_letterspace</link>     (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gdouble">gdouble</link> letterspace);
void        <link linkend="gnome-glyphlist-font">gnome_glyphlist_font</link>            (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="GnomeFont">GnomeFont</link> *font);
void        <link linkend="gnome-glyphlist-color">gnome_glyphlist_color</link>           (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="guint32">guint32</link> color);
void        <link linkend="gnome-glyphlist-moveto">gnome_glyphlist_moveto</link>          (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gdouble">gdouble</link> x,
                                             <link linkend="gdouble">gdouble</link> y);
void        <link linkend="gnome-glyphlist-rmoveto">gnome_glyphlist_rmoveto</link>         (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gdouble">gdouble</link> x,
                                             <link linkend="gdouble">gdouble</link> y);
void        <link linkend="gnome-glyphlist-glyph">gnome_glyphlist_glyph</link>           (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gint">gint</link> glyph);
void        <link linkend="gnome-glyphlist-glyphs">gnome_glyphlist_glyphs</link>          (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gint">gint</link> *glyphs,
                                             <link linkend="gint">gint</link> num_glyphs);
void        <link linkend="gnome-glyphlist-text-dumb">gnome_glyphlist_text_dumb</link>       (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             const <link linkend="guchar">guchar</link> *text);
void        <link linkend="gnome-glyphlist-text-sized-dumb">gnome_glyphlist_text_sized_dumb</link> (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             const <link linkend="guchar">guchar</link> *text,
                                             <link linkend="gint">gint</link> length);
<link linkend="ArtDRect">ArtDRect</link>*   <link linkend="gnome-glyphlist-bbox">gnome_glyphlist_bbox</link>            (const <link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             const <link linkend="gdouble">gdouble</link> *transform,
                                             <link linkend="gint">gint</link> flags,
                                             <link linkend="ArtDRect">ArtDRect</link> *bbox);

</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GnomeGlyphList">struct GnomeGlyphList</title>
<programlisting>struct GnomeGlyphList;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-new">gnome_glyphlist_new ()</title>
<programlisting><link linkend="GnomeGlyphList">GnomeGlyphList</link>* gnome_glyphlist_new         (void);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-ref">gnome_glyphlist_ref ()</title>
<programlisting><link linkend="GnomeGlyphList">GnomeGlyphList</link>* gnome_glyphlist_ref         (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-unref">gnome_glyphlist_unref ()</title>
<programlisting><link linkend="GnomeGlyphList">GnomeGlyphList</link>* gnome_glyphlist_unref       (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-duplicate">gnome_glyphlist_duplicate ()</title>
<programlisting><link linkend="GnomeGlyphList">GnomeGlyphList</link>* gnome_glyphlist_duplicate   (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-check">gnome_glyphlist_check ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    gnome_glyphlist_check           (const <link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gboolean">gboolean</link> rules);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>rules</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-from-text-dumb">gnome_glyphlist_from_text_dumb ()</title>
<programlisting><link linkend="GnomeGlyphList">GnomeGlyphList</link>* gnome_glyphlist_from_text_dumb
                                            (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="guint32">guint32</link> color,
                                             <link linkend="gdouble">gdouble</link> kerning,
                                             <link linkend="gdouble">gdouble</link> letterspace,
                                             const <link linkend="guchar">guchar</link> *text);</programlisting>
<para>
See _from_text_sized_dumb</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>font</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>color</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>kerning</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>letterspace</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>text</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> 
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-from-text-sized-dumb">gnome_glyphlist_from_text_sized_dumb ()</title>
<programlisting><link linkend="GnomeGlyphList">GnomeGlyphList</link>* gnome_glyphlist_from_text_sized_dumb
                                            (<link linkend="GnomeFont">GnomeFont</link> *font,
                                             <link linkend="guint32">guint32</link> color,
                                             <link linkend="gdouble">gdouble</link> kerning,
                                             <link linkend="gdouble">gdouble</link> letterspace,
                                             const <link linkend="guchar">guchar</link> *text,
                                             <link linkend="gint">gint</link> length);</programlisting>
<para>
Appends utf8 text, converting it to glyphs and connecting it
as specified by rules. You cannot expect anything about
language-specific typesetting rules, so if the given script
does not use trivial placement, you should better avoid this</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>font</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>color</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>kerning</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>letterspace</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>text</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>length</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> 
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-advance">gnome_glyphlist_advance ()</title>
<programlisting>void        gnome_glyphlist_advance         (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gboolean">gboolean</link> advance);</programlisting>
<para>
Whether or not to move the pen position by the font standard
advance vector. Advancing happens immediately after glyph is
sent through pipeline.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>advance</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-kerning">gnome_glyphlist_kerning ()</title>
<programlisting>void        gnome_glyphlist_kerning         (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gdouble">gdouble</link> kerning);</programlisting>
<para>
Amount of kerning to add between glyphs connected by an advance
rule. It is specified as fraction of a full kerning value 
If a glyph is manually positioned, the kerning value is ignored
Kerning will be added immediately before placing a new glyph
FIXME: What does the last sentence mean? (Chema)</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>kerning</parameter>&nbsp;:</entry>
<entry>
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-letterspace">gnome_glyphlist_letterspace ()</title>
<programlisting>void        gnome_glyphlist_letterspace     (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gdouble">gdouble</link> letterspace);</programlisting>
<para>
Amount of white space to add between glyphs connected by
an advance rule. It is specified in font units (i.e. 12 for 12pt
font is the width of an em square). If glyph is manually positioned,
letterspace value will be ignored. Letterspace will be added
immediately before placing a new glyph
FIXME: what does the last sentence mean? (Chema)</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>letterspace</parameter>&nbsp;:</entry>
<entry>
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-font">gnome_glyphlist_font ()</title>
<programlisting>void        gnome_glyphlist_font            (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="GnomeFont">GnomeFont</link> *font);</programlisting>
<para>
Specify the font to be used for the glyphs that follow</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>font</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-color">gnome_glyphlist_color ()</title>
<programlisting>void        gnome_glyphlist_color           (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="guint32">guint32</link> color);</programlisting>
<para>
Specify the color as RRGGBBAA to be used for the glyphs
that follow</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>color</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-moveto">gnome_glyphlist_moveto ()</title>
<programlisting>void        gnome_glyphlist_moveto          (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gdouble">gdouble</link> x,
                                             <link linkend="gdouble">gdouble</link> y);</programlisting>
<para>
Position manually the glyph following</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>x</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>y</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-rmoveto">gnome_glyphlist_rmoveto ()</title>
<programlisting>void        gnome_glyphlist_rmoveto         (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gdouble">gdouble</link> x,
                                             <link linkend="gdouble">gdouble</link> y);</programlisting>
<para>
Position the glyph following relative to current pen position</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>x</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>y</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-glyph">gnome_glyphlist_glyph ()</title>
<programlisting>void        gnome_glyphlist_glyph           (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gint">gint</link> glyph);</programlisting>
<para>
Appends a single glyph to the glyphlist. It will be connected
to the previous glyphs by the previously defined rules</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>glyph</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-glyphs">gnome_glyphlist_glyphs ()</title>
<programlisting>void        gnome_glyphlist_glyphs          (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             <link linkend="gint">gint</link> *glyphs,
                                             <link linkend="gint">gint</link> num_glyphs);</programlisting>
<para>
Append a string of glyphs</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>glyphs</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>num_glyphs</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-text-dumb">gnome_glyphlist_text_dumb ()</title>
<programlisting>void        gnome_glyphlist_text_dumb       (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             const <link linkend="guchar">guchar</link> *text);</programlisting>
<para>
See _text_sized_dumb</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>text</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-text-sized-dumb">gnome_glyphlist_text_sized_dumb ()</title>
<programlisting>void        gnome_glyphlist_text_sized_dumb (<link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             const <link linkend="guchar">guchar</link> *text,
                                             <link linkend="gint">gint</link> length);</programlisting>
<para>
The 'dumb' versions of glyphlist creation
It just places glyphs one after another - no ligaturing etc.
text is utf8, of course</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>text</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>length</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-glyphlist-bbox">gnome_glyphlist_bbox ()</title>
<programlisting><link linkend="ArtDRect">ArtDRect</link>*   gnome_glyphlist_bbox            (const <link linkend="GnomeGlyphList">GnomeGlyphList</link> *gl,
                                             const <link linkend="gdouble">gdouble</link> *transform,
                                             <link linkend="gint">gint</link> flags,
                                             <link linkend="ArtDRect">ArtDRect</link> *bbox);</programlisting>
<para>
Get ink dimensions of transformed glyphlist
Flags are to specify user preferences, should be 0 for now</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gl</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>transform</parameter>&nbsp;:</entry>
<entry> 
</entry></row>
<row><entry align="right"><parameter>flags</parameter>&nbsp;:</entry>
<entry> should be 0 for now
</entry></row>
<row><entry align="right"><parameter>bbox</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> bbox, NULL on error
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
