AC_INIT(libgnomeprint)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(libgnomeprint,1.116.3)

AM_MAINTAINER_MODE

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_STDC_HEADERS
AM_PROG_LIBTOOL

GNOME_COMPILE_WARNINGS(maximum)
CFLAGS="$CFLAGS $warning_flags"

GETTEXT_PACKAGE=libgnomeprint-2.0
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE",[Gettext package])

ALL_LINGUAS="am ar az be bg ca cs es et fr he hi hu it ja ko lv ms nl nn no pl pt pt_BR ro ru sk sl sv ta tr uk vi wa zh_TW zh_CN"
AM_GLIB_GNU_GETTEXT

dnl
dnl pkg-config checks
dnl
glib_modules="glib-2.0 >= 1.3.10 gobject-2.0 >= 1.3.10 gmodule-2.0 >= 1.3.10"
libart_modules="libart-2.0 >= 2.3.7"
pango_modules="pango >= 0.21"
libxml2_modules="libxml-2.0 >= 2.4.7"
libbonobo_modules="libbonobo-2.0 >= 1.110.0"
PKG_CHECK_MODULES(GP, [ $glib_modules $libart_modules $pango_modules $libxml2_modules $libbonobo_modules ])

AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)

dnl =================================
dnl Checking for freetype2
dnl =================================
FREETYPE_LIBS=
FREETYPE_CFLAGS=
AC_PATH_PROG(FREETYPE_CONFIG, freetype-config, no)
if test "x$FREETYPE_CONFIG" = "xno" ; then
	AC_MSG_ERROR(You need FreeType2 for that version of gnome-print)
else
	FREETYPE_CFLAGS=`$FREETYPE_CONFIG --cflags`
	FREETYPE_LIBS=`$FREETYPE_CONFIG --libs`
fi
dnl =================================
dnl END: Checking for freetype2
dnl =================================

dnl ==========================================
dnl Checking for OMNi libraries
dnl ==========================================
have_omni_libs=false
have_omni_headers=false
AC_ARG_WITH(omni-libdir,
	[  --with-omni-libdir=DIR     the location of IBM OMNi libraries],
	if test "$withval" != "no"; then
		have_omni_libs=true
		OMNI_LIBDIR=$withval
	fi
)
AC_ARG_WITH(omni-includedir,
	[  --with-omni-includedir=DIR the location of IBM OMNi headers],
	if test "$withval" != "no"; then
		have_omni_headers=true
		OMNI_CFLAGS=-I$withval
	fi
)
have_omni=false
if $have_omni_libs AND $have_omni_headers ; then
	have_omni=true
	AC_SUBST(OMNI_LIBDIR)
	AC_SUBST(OMNI_CFLAGS)
fi
AM_CONDITIONAL(HAVE_OMNI, $have_omni)
dnl ==========================================
dnl END: Checking for OMNi libraries
dnl ==========================================

dnl ==========================================
dnl Fontmaps and font installation
dnl ==========================================
AC_ARG_ENABLE(font_install, [  --enable-font-install=[yes]/no whether or not to refresh the fontmap (s)],, enable_font_install="yes")
if test "x$enable_font_install" = "xyes" ; then
	echo "Will refresh fontmap(s)"
else
	echo "Will NOT refresh fontmap(s)"
fi
AM_CONDITIONAL(INSTALL_FONTS, test "x$enable_font_install" = "xyes")
FONTMAPDIR_STATIC=$datadir/gnome/libgnomeprint-2.0/fonts
FONTMAPDIR_DYNAMIC=$sysconfdir/gnome/libgnomeprint-2.0/fonts
AC_SUBST(FONTMAPDIR_STATIC)
AC_SUBST(FONTMAPDIR_DYNAMIC)
dnl ==========================================
dnl END: Fontmaps and font installation
dnl ==========================================

dnl ==========================================
dnl Checks for gtk-doc and docbook-tools
dnl ==========================================

AC_ARG_WITH(html-dir, [  --with-html-dir=PATH    path to installed docs ])

if test "x$with_html_dir" = "x" ; then
  HTML_DIR='${datadir}/gtk-doc/html'
else
  HTML_DIR=$with_html_dir
fi

AC_SUBST(HTML_DIR)

AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)
gtk_doc_min_version=0.10
if $GTKDOC ; then
    gtk_doc_version=`gtkdoc-mkdb --version`
    AC_MSG_CHECKING([gtk-doc version ($gtk_doc_version) >= $gtk_doc_min_version])

    IFS="${IFS= 	}"; gtk_save_IFS="$IFS"; IFS="."
    set $gtk_doc_version
    for min in $gtk_doc_min_version ; do
        cur=$1; shift
        if test -z $min ; then break; fi
        if test -z $cur ; then GTKDOC=false; break; fi
        if test $cur -gt $min ; then break ; fi
        if test $cur -lt $min ; then GTKDOC=false; break ; fi
    done
    IFS="$gtk_save_IFS"

    if $GTKDOC ; then
      AC_MSG_RESULT(yes)
    else
      AC_MSG_RESULT(no)
    fi
fi

AM_CONDITIONAL(HAVE_GTK_DOC, $GTKDOC)
AC_SUBST(HAVE_GTK_DOC)

AC_CHECK_PROG(DB2HTML, db2html, true, false)
AM_CONDITIONAL(HAVE_DOCBOOK, $DB2HTML)

dnl Make people enable the gtk-doc stuff explicitely.
AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc        use gtk-doc to build documentation [default=no]], enable_gtk_doc="$enableval", enable_gtk_doc=auto)

if test x$enable_gtk_doc = xyes ; then
  if test x$GTKDOC != xtrue ; then
    enable_gtk_doc=no 
  fi
fi

dnl NOTE: We need to use a separate automake conditional for this
dnl       to make this work with the tarballs.
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)
dnl ==========================================
dnl END: Checks for gtk-doc and docbook-tools
dnl ==========================================


LIBGNOMEPRINT_CFLAGS="$GP_CFLAGS $FREETYPE_CFLAGS"
LIBGNOMEPRINT_LIBS="$GP_LIBS $FREETYPE_LIBS"
AC_SUBST(LIBGNOMEPRINT_CFLAGS)
AC_SUBST(LIBGNOMEPRINT_LIBS)

AC_OUTPUT([
Makefile
po/Makefile.in
libgnomeprint/Makefile
libgnomeprint/gpa/Makefile
libgnomeprint/drivers/Makefile
libgnomeprint/transports/Makefile
libgnomeprint/libgnomeprint-2.0.pc
fonts/Makefile
installer/Makefile
data/Makefile
data/models/Makefile
data/printers/Makefile
tests/Makefile
doc/Makefile
doc/reference/Makefile
])

echo "
	Compiler:		${CC}
	Compiler flags:		${CFLAGS}"
	
if test "x$enable_font_install" = "xyes"; then
   echo "	Refresh fontmap:	yes"
else
   echo "	Refresh fontmap:	no"
fi
if test x$enable_gtk_doc = xyes ; then
   echo "	Enable gtk-doc:		Yes"
else
   echo "	Enable gtk-doc:		No"
fi

cat $srcdir/message-of-doom
