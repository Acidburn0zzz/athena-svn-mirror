-*- mode: m4 -*-
AC_PREREQ(2.52)
AC_INIT(libgnomeprint, 2.2.1.1,
	http://bugzilla.gnome.org/enter_bug.cgi?product=gnome-print)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(libgnomeprint, 2.2.1.1)

AM_MAINTAINER_MODE

AC_PROG_INTLTOOL

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_STDC_HEADERS
AM_PROG_LIBTOOL

AC_DEFINE(WE_ARE_LIBGNOMEPRINT_INTERNALS, 1, [Defined so that we can read our private headers])


dnl ====================================================
dnl FIXME: Does this really belong here?. See bug #80577
dnl ====================================================
AC_CHECK_FUNC(bind_textdomain_codeset,,[AC_CHECK_LIB(intl,bind_textdomain_codeset)])

dnl =============
dnl Warning flags
dnl =============
GNOME_COMPILE_WARNINGS(maximum)
CFLAGS="$CFLAGS $warning_flags"

dnl =======
dnl gettext
dnl =======
GETTEXT_PACKAGE=libgnomeprint-2.2
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE",[Gettext package])

ALL_LINGUAS="am ar az be bg ca cs da de el es et fi fr he hi hu it ja ko lv mn ms nl nn no pl pt pt_BR ro ru sk sl sv ta tr uk vi wa zh_TW zh_CN"
AM_GLIB_GNU_GETTEXT

dnl ==========================================
dnl Checks for gtk-doc and docbook-tools
dnl ==========================================
AC_ARG_WITH(html-dir, [  --with-html-dir=PATH    path to installed docs])
if test "x$with_html_dir" = "x" ; then
  HTML_DIR='${datadir}/gtk-doc/html'
else
  HTML_DIR=$with_html_dir
fi
AC_SUBST(HTML_DIR)

AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)
gtk_doc_min_version=0.9
if $GTKDOC ; then
    gtk_doc_version=`gtkdoc-mkdb --version`
    AC_MSG_CHECKING([gtk-doc version ($gtk_doc_version) >= $gtk_doc_min_version])

    IFS="${IFS= 	}"; gtk_save_IFS="$IFS"; IFS="."
    set $gtk_doc_version
    for min in $gtk_doc_min_version ; do
        cur=$1; shift
        if test -z $min ; then break; fi
        if test -z $cur ; then GTKDOC=false; break; fi
        if test $cur -gt $min ; then break ; fi
        if test $cur -lt $min ; then GTKDOC=false; break ; fi
    done
    IFS="$gtk_save_IFS"

    if $GTKDOC ; then
      AC_MSG_RESULT(yes)
    else
      AC_MSG_RESULT(no)
    fi
fi

AM_CONDITIONAL(HAVE_GTK_DOC, $GTKDOC)
AC_SUBST(HAVE_GTK_DOC)

AC_CHECK_PROG(DB2HTML, db2html, true, false)
AM_CONDITIONAL(HAVE_DOCBOOK, $DB2HTML)

dnl Let people disable the gtk-doc stuff.
AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc        use gtk-doc to build documentation [default=auto]], enable_gtk_doc="$enableval", enable_gtk_doc=no)

if test x$enable_gtk_doc = xyes ; then
  if test x$GTKDOC = xtrue ; then
    enable_gtk_doc=yes
  else
    enable_gtk_doc=no 
  fi
fi

dnl NOTE: We need to use a separate automake conditional for this
dnl       to make this work with the tarballs.
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)
dnl ==========================================
dnl END: Checks for gtk-doc and docbook-tools
dnl ==========================================
dnl =================
dnl pkg-config checks
dnl =================
glib_modules="glib-2.0 >= 1.3.10 gobject-2.0 >= 1.3.10 gmodule-2.0 >= 1.3.10"
libart_modules="libart-2.0 >= 2.3.7"
pango_modules="pango >= 0.21"
libxml2_modules="libxml-2.0 >= 2.4.23"
fontconfig_modules="fontconfig >= 1.0"
PKG_CHECK_MODULES(GP, [ $glib_modules $libart_modules $pango_modules $libxml2_modules $libbonobo_modules $fontconfig_modules ])

AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)

dnl =================================
dnl Checking for freetype2
dnl =================================
FREETYPE_LIBS=
FREETYPE_CFLAGS=
AC_PATH_PROG(FREETYPE_CONFIG, freetype-config, no)
if test "x$FREETYPE_CONFIG" = "xno" ; then
	AC_MSG_ERROR(You need FreeType2 (freetype-devel v 2.x package) for this version of libgnomeprint)
else
	FREETYPE_CFLAGS=`$FREETYPE_CONFIG --cflags`
	FREETYPE_LIBS=`$FREETYPE_CONFIG --libs`
fi

libgnomeprint_save_ldflags=$LDFLAGS
LDFLAGS="$LDFLAGS $FREETYPE_LIBS"

freetype_version=false
AC_MSG_CHECKING([For sufficiently new FreeType (at least 2.0.5)])
AC_CHECK_LIB(freetype, FT_Get_Postscript_Name, freetype_version=true, :)
if $freetype_version ; then
    AC_MSG_RESULT(yes)
else
    AC_MSG_ERROR(You need FreeType2 (freetype-devel 2.0.5 or greater package) for this version of libgnomeprint)
fi

LDFLAGS=$libgnomeprint_save_ldflags

dnl =================================
dnl END: Checking for freetype2
dnl =================================

dnl ==========================================
dnl Checking for CUPS libraries
dnl ==========================================
try_cups=yes
cups_msg=yes
AC_ARG_WITH(cups,
	[  --{with,without}-cups   Build the cups module],
	if test "x$withval" = "xno"; then
		try_cups=false
		cups_msg="Disabled by request"
	fi
)
if test "x$try_cups" = "xyes"; then
	AC_MSG_CHECKING(for CUPS libraries version >= 1.1.0)
	if cups-config --version --libs > /dev/null 2>&1; then
	    verstxt=`cups-config --version`
	    vers=`echo "$verstxt" | \
		awk -F. '{ printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
	    if test "$vers" -lt 1001000; then
		    AC_MSG_RESULT(Cups found but the version found is less than 1.1.0)
              cups_msg="Version requirement not satisfied"
	    else
		    CUPS_LIBS=`cups-config --libs`
		    CUPS_CFLAGS=`cups-config --cflags`
		    AC_MSG_RESULT(Found version $verstxt)
	    fi
	else
	   AC_MSG_RESULT("cups not found, make sure cups-config is in the path")
        cups_msg="cups-devel not installed (cups-config not found in the PATH)"
	fi
fi
AC_SUBST(CUPS_LIBS)
AC_SUBST(CUPS_CFLAGS)
AM_CONDITIONAL(HAVE_CUPS, test x"$cups_msg" = "xyes")
dnl ==========================================
dnl END: Checking for CUPS libraries
dnl ==========================================

dnl =========================================================================
dnl SET THE DIRECTORY PATHS, first: GNOME_PRINT_MODULES_DIR & GPA_MODULES_DIR
dnl =========================================================================
if test "x${prefix}" = "xNONE"; then
	GNOME_PRINT_MODULES_DIR='${ac_default_prefix}/lib/libgnomeprint/${VERSION}/modules'
else
	GNOME_PRINT_MODULES_DIR='${libdir}/libgnomeprint/${VERSION}/modules'
fi
AC_SUBST(GNOME_PRINT_MODULES_DIR, $GNOME_PRINT_MODULES_DIR)

dnl =========================
dnl Now, GNOME_PRINT_DATA_DIR
dnl =========================
if test "x${prefix}" = "xNONE"; then
	GNOME_PRINT_DATA_DIR='${ac_default_prefix}/${DATADIRNAME}/libgnomeprint/${VERSION}'
else
	GNOME_PRINT_DATA_DIR='${prefix}/${DATADIRNAME}/libgnomeprint/${VERSION}'
fi
AC_SUBST(GNOME_PRINT_DATA_DIR, $GNOME_PRINT_DATA_DIR)
dnl ============================
dnl END: SET THE DIRECTORY PATHS
dnl ============================

dnl ===============================
dnl LIBGNOMEPRINT_LIBS & CFLAGS
dnl ===============================
LIBGNOMEPRINT_CFLAGS="$GP_CFLAGS $FREETYPE_CFLAGS"
LIBGNOMEPRINT_LIBS="$GP_LIBS $FREETYPE_LIBS"
AC_SUBST(LIBGNOMEPRINT_CFLAGS)
AC_SUBST(LIBGNOMEPRINT_LIBS)

dnl =================================================
dnl Get the loadable module extension for this system
dnl =================================================
AC_LTDL_SHLIBEXT
LTDL_SHLIBEXT=$libltdl_cv_shlibext
AC_SUBST(LTDL_SHLIBEXT)

dnl =============================
dnl Used for tests/ & tests/tools
dnl =============================
PKG_CHECK_MODULES(TOOLS, "glib-2.0 gobject-2.0 libxml-2.0")
TOOLS_LIBS="$TOOLS_LIBS -lpopt"
AC_SUBST(TOOLS_CFLAGS)
AC_SUBST(TOOLS_LIBS)

AC_OUTPUT([
Makefile
po/Makefile.in
libgnomeprint/Makefile
libgnomeprint/gpa/Makefile
libgnomeprint/transports/Makefile
libgnomeprint/libgnomeprint-2.2.pc
libgnomeprint/modules/Makefile
libgnomeprint/modules/cups/Makefile
data/Makefile
data/models/Makefile
data/printers/Makefile
tests/Makefile
tests/files/Makefile
tests/output/Makefile
tests/tools/Makefile
doc/Makefile
doc/reference/Makefile
])

echo "
	Compiler:		${CC}
	Compiler flags:		${CFLAGS}"
if test "x$cups_msg" = "xyes"; then
   echo "	Cups module:		$cups_msg    [LIBS: $CUPS_LIBS]"
else
   echo "	Cups module:		$cups_msg"
fi
echo "	Data dir:   		`eval echo $GNOME_PRINT_DATA_DIR`"
if test x$enable_gtk_doc = xyes ; then
   echo "	Enable gtk-doc:		Yes"
else
   echo "	Enable gtk-doc:		No"
fi
echo
