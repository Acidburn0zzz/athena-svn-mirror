# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AS = @AS@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
COMPONENT_CFLAGS = @COMPONENT_CFLAGS@
COMPONENT_LIBS = @COMPONENT_LIBS@
CORE_CFLAGS = @CORE_CFLAGS@
CORE_IDL_INCLUDES = @CORE_IDL_INCLUDES@
CORE_LIBS = @CORE_LIBS@
CPP = @CPP@
DATADIRNAME = @DATADIRNAME@
DISABLE_DEPRECATED_CFLAGS = @DISABLE_DEPRECATED_CFLAGS@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EEL_REQUIRED = @EEL_REQUIRED@
ENABLE_PROFILER = @ENABLE_PROFILER@
EXEEXT = @EXEEXT@
GCONFTOOL = @GCONFTOOL@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GIMPHWRAPBOX_CFLAGS = @GIMPHWRAPBOX_CFLAGS@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOME_VFS_REQUIRED = @GNOME_VFS_REQUIRED@
HAVE_JW = @HAVE_JW@
INSTOBJEXT = @INSTOBJEXT@
INTLDEPS = @INTLDEPS@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
INTLTOOL_CAVES_RULE = @INTLTOOL_CAVES_RULE@
INTLTOOL_DESKTOP_RULE = @INTLTOOL_DESKTOP_RULE@
INTLTOOL_DIRECTORY_RULE = @INTLTOOL_DIRECTORY_RULE@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_KEYS_RULE = @INTLTOOL_KEYS_RULE@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_OAF_RULE = @INTLTOOL_OAF_RULE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_PONG_RULE = @INTLTOOL_PONG_RULE@
INTLTOOL_PROP_RULE = @INTLTOOL_PROP_RULE@
INTLTOOL_SCHEMAS_RULE = @INTLTOOL_SCHEMAS_RULE@
INTLTOOL_SERVER_RULE = @INTLTOOL_SERVER_RULE@
INTLTOOL_SHEET_RULE = @INTLTOOL_SHEET_RULE@
INTLTOOL_SOUNDLIST_RULE = @INTLTOOL_SOUNDLIST_RULE@
INTLTOOL_UI_RULE = @INTLTOOL_UI_RULE@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_XML_RULE = @INTLTOOL_XML_RULE@
JW = @JW@
LIBJPEG = @LIBJPEG@
LIBNAUTILUS_CFLAGS = @LIBNAUTILUS_CFLAGS@
LIBNAUTILUS_IDL_INCLUDES = @LIBNAUTILUS_IDL_INCLUDES@
LIBNAUTILUS_LIBS = @LIBNAUTILUS_LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MEDUSA_REQUIRED = @MEDUSA_REQUIRED@
MKINSTALLDIRS = @MKINSTALLDIRS@
MUSIC_COMPONENT_CFLAGS = @MUSIC_COMPONENT_CFLAGS@
MUSIC_COMPONENT_LIBS = @MUSIC_COMPONENT_LIBS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORBIT_CFLAGS = @ORBIT_CFLAGS@
ORBIT_CONFIG = @ORBIT_CONFIG@
ORBIT_IDL = @ORBIT_IDL@
ORBIT_LIBS = @ORBIT_LIBS@
PACKAGE = @PACKAGE@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POSUB = @POSUB@
RANLIB = @RANLIB@
RSVG_REQUIRED = @RSVG_REQUIRED@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XML_REQUIRED = @XML_REQUIRED@

NULL = 

lib_LTLIBRARIES = libnautilus-private.la

INCLUDES = \
	-I$(top_srcdir) 				\
	-I$(top_builddir) 				\
	$(CORE_CFLAGS)					\
	$(DISABLE_DEPRECATED_CFLAGS)			\
	-DDATADIR=\""$(datadir)"\" 			\
	-DNAUTILUS_DATADIR=\""$(datadir)/nautilus"\" 	\
	$(NULL)


dependency_static_libs = \
        $(top_builddir)/cut-n-paste-code/widgets/gimphwrapbox/libgtkhwrapbox.la \
	$(top_builddir)/libbackground/libbackground.la \
        $(NULL)


libnautilus_private_la_LDFLAGS = \
	-version-info 2:0:0		\
	$(dependency_static_libs)	\
	$(CORE_LIBS)			\
	$(NULL)


nautilus_metafile_server_idl_sources = \
	nautilus-metafile-server-stubs.c \
	nautilus-metafile-server-skels.c \
	nautilus-metafile-server.h \
	nautilus-metafile-server-common.c \
	$(NULL)


marshal_sources = \
	nautilus-marshal.h \
	nautilus-marshal-guts.c \
	$(NULL)


libnautilus_private_la_SOURCES = \
	$(nautilus_metafile_server_idl_sources)	\
	eggtreemultidnd.c \
	eggtreemultidnd.h \
	nautilus-audio-player.c \
	nautilus-audio-player.h \
	nautilus-authn-manager.c \
	nautilus-authn-manager.h \
	nautilus-bonobo-extensions.c \
	nautilus-bonobo-extensions.h \
	nautilus-bookmark.c \
	nautilus-bookmark.h \
	nautilus-cdrom-extensions.h \
	nautilus-customization-data.c \
	nautilus-customization-data.h \
	nautilus-default-file-icon.c \
	nautilus-default-file-icon.h \
	nautilus-directory-async.c \
	nautilus-directory-background.c \
	nautilus-directory-background.h \
	nautilus-directory-metafile-monitor.c \
	nautilus-directory-metafile-monitor.h \
	nautilus-directory-metafile.c \
	nautilus-directory-metafile.h \
	nautilus-directory-notify.h \
	nautilus-directory-private.h \
	nautilus-directory.c \
	nautilus-directory.h \
	nautilus-dnd.c \
	nautilus-dnd.h \
	nautilus-drag-window.c \
	nautilus-drag-window.h \
	nautilus-entry.c \
	nautilus-entry.h \
	nautilus-file-attributes.h \
	nautilus-file-changes-queue.c \
	nautilus-file-changes-queue.h \
	nautilus-file-dnd.c \
	nautilus-file-dnd.h \
	nautilus-file-operations-progress.c \
	nautilus-file-operations-progress.h \
	nautilus-file-operations-progress-icons.h \
	nautilus-file-operations.c \
	nautilus-file-operations.h \
	nautilus-file-private.h \
	nautilus-file-queue.c \
	nautilus-file-queue.h \
	nautilus-file-utilities.c \
	nautilus-file-utilities.h \
	nautilus-file.c \
	nautilus-file.h \
	nautilus-find-icon-image.c \
	nautilus-find-icon-image.h \
	nautilus-global-preferences.c \
	nautilus-global-preferences.h \
	nautilus-horizontal-splitter.c \
	nautilus-horizontal-splitter.h \
	nautilus-icon-canvas-item.c \
	nautilus-icon-canvas-item.h \
	nautilus-icon-container.c \
	nautilus-icon-container.h \
	nautilus-icon-dnd.c \
	nautilus-icon-dnd.h \
	nautilus-icon-factory-private.h \
	nautilus-icon-factory.c \
	nautilus-icon-factory.h \
	nautilus-icon-private.h \
	nautilus-iso9660.h \
	nautilus-keep-last-vertical-box.c \
	nautilus-keep-last-vertical-box.h \
	nautilus-lib-self-check-functions.c \
	nautilus-lib-self-check-functions.h \
	nautilus-link-desktop-file.c \
	nautilus-link-desktop-file.h \
	nautilus-link-historical.c \
	nautilus-link-historical.h \
	nautilus-link.c \
	nautilus-link.h \
	nautilus-marshal.c \
	nautilus-marshal.h \
	nautilus-medusa-support.c \
	nautilus-medusa-support.h \
	nautilus-merged-directory.c \
	nautilus-merged-directory.h \
	nautilus-metadata.h \
	nautilus-metafile-factory.c \
	nautilus-metafile-factory.h \
	nautilus-metafile.c \
	nautilus-metafile.h \
	nautilus-mime-actions.c \
	nautilus-mime-actions.h \
	nautilus-monitor.c \
	nautilus-monitor.h \
	nautilus-program-chooser.c \
	nautilus-program-chooser.h \
	nautilus-program-choosing.c \
	nautilus-program-choosing.h \
	nautilus-search-uri.c \
	nautilus-search-uri.h \
	nautilus-sidebar-functions.c \
	nautilus-sidebar-functions.h \
	nautilus-sound.c \
	nautilus-sound.h \
	nautilus-theme.c \
	nautilus-theme.h \
	nautilus-thumbnails-jpeg.c \
	nautilus-thumbnails-jpeg.h \
	nautilus-thumbnails.c \
	nautilus-thumbnails.h \
	nautilus-trash-directory.c \
	nautilus-trash-directory.h \
	nautilus-trash-file.c \
	nautilus-trash-file.h \
	nautilus-trash-monitor.c \
	nautilus-trash-monitor.h \
	nautilus-tree-view-drag-dest.c \
	nautilus-tree-view-drag-dest.h \
	nautilus-undo-context.c \
	nautilus-undo-context.h \
	nautilus-undo-manager.c \
	nautilus-undo-manager.h \
	nautilus-undo-signal-handlers.c \
	nautilus-undo-signal-handlers.h \
	nautilus-vfs-directory.c \
	nautilus-vfs-directory.h \
	nautilus-vfs-file.c \
	nautilus-vfs-file.h \
	nautilus-view-identifier.c \
	nautilus-view-identifier.h \
	nautilus-volume-monitor.c \
	nautilus-volume-monitor.h \
	$(NULL)


fsattributesdir = $(datadir)/nautilus
fsattributes_DATA = filesystem-attributes.xml

schemadir = $(GCONF_SCHEMA_FILE_DIR)
schema_DATA = apps_nautilus_preferences.schemas

EXTRA_DIST = \
	$(fsattributes_DATA)		\
	nautilus-metafile-server.idl	\
	nautilus-marshal.list		\
	$(schema_DATA)			\
	$(NULL)


CLEANFILES = \
	$(nautilus_metafile_server_idl_sources)		\
	nautilus_metafile_server_idl_stamp		\
	$(marshal_sources)				\
	$(NULL)

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
libnautilus_private_la_LIBADD = 
libnautilus_private_la_OBJECTS =  nautilus-metafile-server-stubs.lo \
nautilus-metafile-server-skels.lo nautilus-metafile-server-common.lo \
eggtreemultidnd.lo nautilus-audio-player.lo nautilus-authn-manager.lo \
nautilus-bonobo-extensions.lo nautilus-bookmark.lo \
nautilus-customization-data.lo nautilus-default-file-icon.lo \
nautilus-directory-async.lo nautilus-directory-background.lo \
nautilus-directory-metafile-monitor.lo nautilus-directory-metafile.lo \
nautilus-directory.lo nautilus-dnd.lo nautilus-drag-window.lo \
nautilus-entry.lo nautilus-file-changes-queue.lo nautilus-file-dnd.lo \
nautilus-file-operations-progress.lo nautilus-file-operations.lo \
nautilus-file-queue.lo nautilus-file-utilities.lo nautilus-file.lo \
nautilus-find-icon-image.lo nautilus-global-preferences.lo \
nautilus-horizontal-splitter.lo nautilus-icon-canvas-item.lo \
nautilus-icon-container.lo nautilus-icon-dnd.lo \
nautilus-icon-factory.lo nautilus-keep-last-vertical-box.lo \
nautilus-lib-self-check-functions.lo nautilus-link-desktop-file.lo \
nautilus-link-historical.lo nautilus-link.lo nautilus-marshal.lo \
nautilus-medusa-support.lo nautilus-merged-directory.lo \
nautilus-metafile-factory.lo nautilus-metafile.lo \
nautilus-mime-actions.lo nautilus-monitor.lo \
nautilus-program-chooser.lo nautilus-program-choosing.lo \
nautilus-search-uri.lo nautilus-sidebar-functions.lo nautilus-sound.lo \
nautilus-theme.lo nautilus-thumbnails-jpeg.lo nautilus-thumbnails.lo \
nautilus-trash-directory.lo nautilus-trash-file.lo \
nautilus-trash-monitor.lo nautilus-tree-view-drag-dest.lo \
nautilus-undo-context.lo nautilus-undo-manager.lo \
nautilus-undo-signal-handlers.lo nautilus-vfs-directory.lo \
nautilus-vfs-file.lo nautilus-view-identifier.lo \
nautilus-volume-monitor.lo
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DATA =  $(fsattributes_DATA) $(schema_DATA)

DIST_COMMON =  README Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libnautilus_private_la_SOURCES)
OBJECTS = $(libnautilus_private_la_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) $(top_srcdir)/Makefile.shared
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps libnautilus-private/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libnautilus-private.la: $(libnautilus_private_la_OBJECTS) $(libnautilus_private_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libnautilus_private_la_LDFLAGS) $(libnautilus_private_la_OBJECTS) $(libnautilus_private_la_LIBADD) $(LIBS)

install-fsattributesDATA: $(fsattributes_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(fsattributesdir)
	@list='$(fsattributes_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(fsattributesdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(fsattributesdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(fsattributesdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(fsattributesdir)/$$p; \
	  fi; fi; \
	done

uninstall-fsattributesDATA:
	@$(NORMAL_UNINSTALL)
	list='$(fsattributes_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(fsattributesdir)/$$p; \
	done

install-schemaDATA: $(schema_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(schemadir)
	@list='$(schema_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(schemadir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(schemadir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(schemadir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(schemadir)/$$p; \
	  fi; fi; \
	done

uninstall-schemaDATA:
	@$(NORMAL_UNINSTALL)
	list='$(schema_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(schemadir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = libnautilus-private

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-hook

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES
install-exec: install-exec-am

install-data-am: install-fsattributesDATA install-schemaDATA \
		install-data-local
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES uninstall-fsattributesDATA \
		uninstall-schemaDATA
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(DATA)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(fsattributesdir) \
		$(DESTDIR)$(schemadir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool uninstall-fsattributesDATA \
install-fsattributesDATA uninstall-schemaDATA install-schemaDATA tags \
mostlyclean-tags distclean-tags clean-tags maintainer-clean-tags \
distdir info-am info dvi-am dvi check check-am installcheck-am \
installcheck install-exec-am install-exec install-data-local \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


$(lib_LTLIBRARIES): $(dependency_static_libs)

$(nautilus_metafile_server_idl_sources): nautilus_metafile_server_idl_stamp
nautilus_metafile_server_idl_stamp: nautilus-metafile-server.idl $(ORBIT_IDL)
	$(ORBIT_IDL) -I$(top_srcdir) $(CORE_IDL_INCLUDES) $<
	touch $@

nautilus-marshal.h: nautilus-marshal.list $(GLIB_GENMARSHAL)
	$(GLIB_GENMARSHAL) $< --header --prefix=nautilus_marshal > $@
nautilus-marshal-guts.c: nautilus-marshal.list $(GLIB_GENMARSHAL)
	$(GLIB_GENMARSHAL) $< --body --prefix=nautilus_marshal > $@

$(libnautilus_private_la_OBJECTS): nautilus_metafile_server_idl_stamp $(marshal_sources)

# don't do this if we are building in eg. rpm
install-data-local:
	if test -z "$(DESTDIR)" ; then \
		for p in $(schema_DATA) ; do \
			GCONF_CONFIG_SOURCE=$(GCONF_SCHEMA_CONFIG_SOURCE) $(GCONFTOOL) --makefile-install-rule $(srcdir)/$$p; \
		done \
	fi

dist-hook:
	cd $(distdir); rm -f $(CLEANFILES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
