# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AS = @AS@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
COMPONENT_CFLAGS = @COMPONENT_CFLAGS@
COMPONENT_LIBS = @COMPONENT_LIBS@
CORE_CFLAGS = @CORE_CFLAGS@
CORE_IDL_INCLUDES = @CORE_IDL_INCLUDES@
CORE_LIBS = @CORE_LIBS@
CPP = @CPP@
DATADIRNAME = @DATADIRNAME@
DISABLE_DEPRECATED_CFLAGS = @DISABLE_DEPRECATED_CFLAGS@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EEL_REQUIRED = @EEL_REQUIRED@
EMBLEM_COMPONENT_CFLAGS = @EMBLEM_COMPONENT_CFLAGS@
EMBLEM_COMPONENT_LIBS = @EMBLEM_COMPONENT_LIBS@
ENABLE_PROFILER = @ENABLE_PROFILER@
EXEEXT = @EXEEXT@
GCONFTOOL = @GCONFTOOL@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GIMPHWRAPBOX_CFLAGS = @GIMPHWRAPBOX_CFLAGS@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOME_VFS_REQUIRED = @GNOME_VFS_REQUIRED@
HAVE_JW = @HAVE_JW@
INSTOBJEXT = @INSTOBJEXT@
INTLDEPS = @INTLDEPS@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
INTLTOOL_CAVES_RULE = @INTLTOOL_CAVES_RULE@
INTLTOOL_DESKTOP_RULE = @INTLTOOL_DESKTOP_RULE@
INTLTOOL_DIRECTORY_RULE = @INTLTOOL_DIRECTORY_RULE@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_KEYS_RULE = @INTLTOOL_KEYS_RULE@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_OAF_RULE = @INTLTOOL_OAF_RULE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_PONG_RULE = @INTLTOOL_PONG_RULE@
INTLTOOL_SCHEMAS_RULE = @INTLTOOL_SCHEMAS_RULE@
INTLTOOL_SERVER_RULE = @INTLTOOL_SERVER_RULE@
INTLTOOL_SHEET_RULE = @INTLTOOL_SHEET_RULE@
INTLTOOL_SOUNDLIST_RULE = @INTLTOOL_SOUNDLIST_RULE@
INTLTOOL_UI_RULE = @INTLTOOL_UI_RULE@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_XML_RULE = @INTLTOOL_XML_RULE@
JW = @JW@
LIBEGG_CFLAGS = @LIBEGG_CFLAGS@
LIBJPEG = @LIBJPEG@
LIBNAUTILUS_CFLAGS = @LIBNAUTILUS_CFLAGS@
LIBNAUTILUS_IDL_INCLUDES = @LIBNAUTILUS_IDL_INCLUDES@
LIBNAUTILUS_LIBS = @LIBNAUTILUS_LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MEDUSA_REQUIRED = @MEDUSA_REQUIRED@
MKINSTALLDIRS = @MKINSTALLDIRS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORBIT_IDL = @ORBIT_IDL@
PACKAGE = @PACKAGE@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POSUB = @POSUB@
RANLIB = @RANLIB@
RSVG_REQUIRED = @RSVG_REQUIRED@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XML_REQUIRED = @XML_REQUIRED@

NULL = 

SUBDIRS = file-manager

bin_PROGRAMS = \
	nautilus				\
	nautilus-file-management-properties     \
	nautilus-server-connect


INCLUDES = \
	-I$(top_srcdir) 					\
	-I$(top_srcdir)/cut-n-paste-code/widgets/gimphwrapbox 	\
	-I$(top_srcdir)/cut-n-paste-code			\
	-I$(top_builddir)/libnautilus-private 			\
	$(CORE_CFLAGS) 						\
	-DDATADIR=\""$(datadir)"\" 				\
	-DGNOMELOCALEDIR=\""$(prefix)/${DATADIRNAME}/locale"\"	\
	-DLIBDIR=\""$(libdir)"\" 				\
	-DNAUTILUS_DATADIR=\""$(datadir)/nautilus"\" 		\
	-DGLADEDIR=\""$(datadir)/nautilus/glade"\" 		\
	-DNAUTILUS_PIXMAPDIR=\""$(datadir)/pixmaps/nautilus"\" 	\
	-DPREFIX=\""$(prefix)"\" 				\
	-DSYSCONFDIR=\""$(sysconfdir)"\" 			\
	-DVERSION="\"$(VERSION)\"" 				\
	-DG_DISABLE_DEPRECATED 					\
	-DGDK_DISABLE_DEPRECATED 				\
	-DGDK_PIXBUF_DISABLE_DEPRECATED 			\
	-DGTK_DISABLE_DEPRECATED 				\
	-DGNOME_DISABLE_DEPRECATED 				\
	$(NULL)


LDADD = \
	$(top_builddir)/src/file-manager/libnautilus-file-manager.la \
	$(top_builddir)/libnautilus/libnautilus.la \
	$(top_builddir)/libnautilus-adapter/libnautilus-adapter.la \
	$(top_builddir)/libnautilus-private/libnautilus-private.la  \
	$(CORE_LIBS) \
	$(NULL)


nautilus_server_connect_SOURCES = nautilus-server-connect.c

desktop_in_files = nautilus-server-connect.desktop.in network-scheme.desktop.in
desktop_files = $(desktop_in_files:.desktop.in=.desktop)
desktopdir = $(datadir)/gnome/network/
desktop_DATA = nautilus-server-connect.desktop

schemedir = $(datadir)/applications
scheme_DATA = network-scheme.desktop

nautilus_shell_interface_idl_sources = \
	nautilus-shell-interface-stubs.c	\
	nautilus-shell-interface-skels.c	\
	nautilus-shell-interface.h		\
	nautilus-shell-interface-common.c


nautilus_SOURCES = \
	$(nautilus_shell_interface_idl_sources)	\
	nautilus-applicable-views.c		\
	nautilus-application.c			\
	nautilus-bookmark-list.c		\
	nautilus-bookmark-parsing.c		\
	nautilus-bookmarks-window.c		\
	nautilus-complex-search-bar.c		\
	nautilus-component-adapter-factory.c	\
	nautilus-desktop-window.c		\
	nautilus-first-time-druid.c		\
	nautilus-information-panel.c            \
	nautilus-location-bar.c         	\
	nautilus-main.c 			\
	nautilus-navigation-bar.c         	\
	nautilus-profiler.c			\
	nautilus-property-browser.c     	\
	nautilus-search-bar-criterion.c		\
	nautilus-search-bar.c			\
	nautilus-self-check-functions.c 	\
	nautilus-shell.c			\
	nautilus-side-pane.c                    \
	nautilus-sidebar-title.c		\
	nautilus-signaller.c			\
	nautilus-simple-search-bar.c		\
	nautilus-switchable-navigation-bar.c	\
	nautilus-switchable-search-bar.c	\
	nautilus-view-frame-corba.c		\
	nautilus-view-frame.c			\
	nautilus-window-manage-views.c		\
	nautilus-window-menus.c         	\
	nautilus-window-toolbars.c      	\
	nautilus-window.c			\
	nautilus-zoom-control.c			\
	nautilus-applicable-views.h		\
	nautilus-application.h			\
	nautilus-bookmark-list.h		\
	nautilus-bookmark-parsing.h		\
	nautilus-bookmarks-window.h		\
	nautilus-complex-search-bar.h		\
	nautilus-component-adapter-factory.h	\
	nautilus-desktop-window.h		\
	nautilus-first-time-druid.h		\
	nautilus-information-panel.h            \
	nautilus-location-bar.h			\
	nautilus-main.h				\
	nautilus-navigation-bar.h		\
	nautilus-profiler.h			\
	nautilus-property-browser.h		\
	nautilus-search-bar-criterion-private.h	\
	nautilus-search-bar-criterion.h		\
	nautilus-search-bar-private.h		\
	nautilus-search-bar.h			\
	nautilus-self-check-functions.h 	\
	nautilus-shell.h			\
	nautilus-side-pane.h			\
	nautilus-sidebar-title.h		\
	nautilus-signaller.h			\
	nautilus-simple-search-bar.h		\
	nautilus-switchable-navigation-bar.h	\
	nautilus-switchable-search-bar.h	\
	nautilus-view-frame-private.h		\
	nautilus-view-frame.h			\
	nautilus-window-manage-views.h		\
	nautilus-window-private.h		\
	nautilus-window.h			\
	nautilus-zoom-control.h			\
	nautilus-file-management-properties.c	\
	nautilus-file-management-properties.h	\
	$(NULL)


nautilus_file_management_properties_SOURCES = \
	nautilus-file-management-properties.c		\
	nautilus-file-management-properties.h		\
	nautilus-file-management-properties-main.c	\
	$(NULL)


TESTS = check-nautilus

serverdir = $(libdir)/bonobo/servers
server_in_files = Nautilus_shell.server.in
server_DATA = $(server_in_files:.server.in=.server)

uidir = $(datadir)/gnome-2.0/ui
ui_DATA = \
	nautilus-shell-ui.xml			\
	$(NULL)


gladedir = $(datadir)/nautilus/glade
glade_DATA = \
	nautilus-bookmarks-window.glade			\
	nautilus-file-management-properties.glade	\
	nautilus-server-connect.glade                   \
	$(NULL)


CLEANFILES = \
	$(nautilus_shell_interface_idl_sources)	\
	nautilus_shell_interface_idl_stamp	\
	$(NULL)


EXTRA_DIST = \
	$(server_in_files)			\
	$(server_DATA)				\
	$(glade_DATA)				\
	$(ui_DATA)				\
	check-nautilus				\
	nautilus-shell-interface.idl		\
	$(desktop_in_files) $(desktop_files)	\
	$(NULL)


BUILT_SOURCES = \
	$(nautilus_shell_interface_idl_sources) \
	$(NULL)

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
bin_PROGRAMS =  nautilus$(EXEEXT) \
nautilus-file-management-properties$(EXEEXT) \
nautilus-server-connect$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
nautilus_OBJECTS =  nautilus-shell-interface-stubs.$(OBJEXT) \
nautilus-shell-interface-skels.$(OBJEXT) \
nautilus-shell-interface-common.$(OBJEXT) \
nautilus-applicable-views.$(OBJEXT) nautilus-application.$(OBJEXT) \
nautilus-bookmark-list.$(OBJEXT) nautilus-bookmark-parsing.$(OBJEXT) \
nautilus-bookmarks-window.$(OBJEXT) \
nautilus-complex-search-bar.$(OBJEXT) \
nautilus-component-adapter-factory.$(OBJEXT) \
nautilus-desktop-window.$(OBJEXT) nautilus-first-time-druid.$(OBJEXT) \
nautilus-information-panel.$(OBJEXT) nautilus-location-bar.$(OBJEXT) \
nautilus-main.$(OBJEXT) nautilus-navigation-bar.$(OBJEXT) \
nautilus-profiler.$(OBJEXT) nautilus-property-browser.$(OBJEXT) \
nautilus-search-bar-criterion.$(OBJEXT) nautilus-search-bar.$(OBJEXT) \
nautilus-self-check-functions.$(OBJEXT) nautilus-shell.$(OBJEXT) \
nautilus-side-pane.$(OBJEXT) nautilus-sidebar-title.$(OBJEXT) \
nautilus-signaller.$(OBJEXT) nautilus-simple-search-bar.$(OBJEXT) \
nautilus-switchable-navigation-bar.$(OBJEXT) \
nautilus-switchable-search-bar.$(OBJEXT) \
nautilus-view-frame-corba.$(OBJEXT) nautilus-view-frame.$(OBJEXT) \
nautilus-window-manage-views.$(OBJEXT) nautilus-window-menus.$(OBJEXT) \
nautilus-window-toolbars.$(OBJEXT) nautilus-window.$(OBJEXT) \
nautilus-zoom-control.$(OBJEXT) \
nautilus-file-management-properties.$(OBJEXT)
nautilus_LDADD = $(LDADD)
nautilus_DEPENDENCIES =  \
$(top_builddir)/src/file-manager/libnautilus-file-manager.la \
$(top_builddir)/libnautilus/libnautilus.la \
$(top_builddir)/libnautilus-adapter/libnautilus-adapter.la \
$(top_builddir)/libnautilus-private/libnautilus-private.la
nautilus_LDFLAGS = 
nautilus_file_management_properties_OBJECTS =  \
nautilus-file-management-properties.$(OBJEXT) \
nautilus-file-management-properties-main.$(OBJEXT)
nautilus_file_management_properties_LDADD = $(LDADD)
nautilus_file_management_properties_DEPENDENCIES =  \
$(top_builddir)/src/file-manager/libnautilus-file-manager.la \
$(top_builddir)/libnautilus/libnautilus.la \
$(top_builddir)/libnautilus-adapter/libnautilus-adapter.la \
$(top_builddir)/libnautilus-private/libnautilus-private.la
nautilus_file_management_properties_LDFLAGS = 
nautilus_server_connect_OBJECTS =  nautilus-server-connect.$(OBJEXT)
nautilus_server_connect_LDADD = $(LDADD)
nautilus_server_connect_DEPENDENCIES =  \
$(top_builddir)/src/file-manager/libnautilus-file-manager.la \
$(top_builddir)/libnautilus/libnautilus.la \
$(top_builddir)/libnautilus-adapter/libnautilus-adapter.la \
$(top_builddir)/libnautilus-private/libnautilus-private.la
nautilus_server_connect_LDFLAGS = 
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DATA =  $(desktop_DATA) $(glade_DATA) $(scheme_DATA) $(server_DATA) \
$(ui_DATA)

DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(nautilus_SOURCES) $(nautilus_file_management_properties_SOURCES) $(nautilus_server_connect_SOURCES)
OBJECTS = $(nautilus_OBJECTS) $(nautilus_file_management_properties_OBJECTS) $(nautilus_server_connect_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) $(top_srcdir)/Makefile.shared
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps src/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

nautilus$(EXEEXT): $(nautilus_OBJECTS) $(nautilus_DEPENDENCIES)
	@rm -f nautilus$(EXEEXT)
	$(LINK) $(nautilus_LDFLAGS) $(nautilus_OBJECTS) $(nautilus_LDADD) $(LIBS)

nautilus-file-management-properties$(EXEEXT): $(nautilus_file_management_properties_OBJECTS) $(nautilus_file_management_properties_DEPENDENCIES)
	@rm -f nautilus-file-management-properties$(EXEEXT)
	$(LINK) $(nautilus_file_management_properties_LDFLAGS) $(nautilus_file_management_properties_OBJECTS) $(nautilus_file_management_properties_LDADD) $(LIBS)

nautilus-server-connect$(EXEEXT): $(nautilus_server_connect_OBJECTS) $(nautilus_server_connect_DEPENDENCIES)
	@rm -f nautilus-server-connect$(EXEEXT)
	$(LINK) $(nautilus_server_connect_LDFLAGS) $(nautilus_server_connect_OBJECTS) $(nautilus_server_connect_LDADD) $(LIBS)

install-desktopDATA: $(desktop_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(desktopdir)
	@list='$(desktop_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(desktopdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(desktopdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(desktopdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(desktopdir)/$$p; \
	  fi; fi; \
	done

uninstall-desktopDATA:
	@$(NORMAL_UNINSTALL)
	list='$(desktop_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(desktopdir)/$$p; \
	done

install-gladeDATA: $(glade_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(gladedir)
	@list='$(glade_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(gladedir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(gladedir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(gladedir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(gladedir)/$$p; \
	  fi; fi; \
	done

uninstall-gladeDATA:
	@$(NORMAL_UNINSTALL)
	list='$(glade_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(gladedir)/$$p; \
	done

install-schemeDATA: $(scheme_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(schemedir)
	@list='$(scheme_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(schemedir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(schemedir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(schemedir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(schemedir)/$$p; \
	  fi; fi; \
	done

uninstall-schemeDATA:
	@$(NORMAL_UNINSTALL)
	list='$(scheme_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(schemedir)/$$p; \
	done

install-serverDATA: $(server_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(serverdir)
	@list='$(server_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(serverdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(serverdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(serverdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(serverdir)/$$p; \
	  fi; fi; \
	done

uninstall-serverDATA:
	@$(NORMAL_UNINSTALL)
	list='$(server_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(serverdir)/$$p; \
	done

install-uiDATA: $(ui_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(uidir)
	@list='$(ui_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(uidir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(uidir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(uidir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(uidir)/$$p; \
	  fi; fi; \
	done

uninstall-uiDATA:
	@$(NORMAL_UNINSTALL)
	list='$(ui_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(uidir)/$$p; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.

@SET_MAKE@

all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive  \
check-recursive installcheck-recursive info-recursive dvi-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
	  rev="$$subdir $$rev"; \
	  test "$$subdir" != "." || dot_seen=yes; \
	done; \
	test "$$dot_seen" = "no" && rev=". $$rev"; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
   if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
   fi; \
	done; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(top_distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-hook

check-TESTS: $(TESTS)
	@failed=0; all=0; \
	srcdir=$(srcdir); export srcdir; \
	for tst in $(TESTS); do \
	  if test -f $$tst; then dir=.; \
	  else dir="$(srcdir)"; fi; \
	  if $(TESTS_ENVIRONMENT) $$dir/$$tst; then \
	    all=`expr $$all + 1`; \
	    echo "PASS: $$tst"; \
	  elif test $$? -ne 77; then \
	    all=`expr $$all + 1`; \
	    failed=`expr $$failed + 1`; \
	    echo "FAIL: $$tst"; \
	  fi; \
	done; \
	if test "$$failed" -eq 0; then \
	  banner="All $$all tests passed"; \
	else \
	  banner="$$failed of $$all tests failed"; \
	fi; \
	dashes=`echo "$$banner" | sed s/./=/g`; \
	echo "$$dashes"; \
	echo "$$banner"; \
	echo "$$dashes"; \
	test "$$failed" -eq 0
info-am:
info: info-recursive
dvi-am:
dvi: dvi-recursive
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
installcheck-am:
installcheck: installcheck-recursive
install-exec-am: install-binPROGRAMS
install-exec: install-exec-recursive

install-data-am: install-desktopDATA install-gladeDATA \
		install-schemeDATA install-serverDATA install-uiDATA
install-data: install-data-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-recursive
uninstall-am: uninstall-binPROGRAMS uninstall-desktopDATA \
		uninstall-gladeDATA uninstall-schemeDATA \
		uninstall-serverDATA uninstall-uiDATA
uninstall: uninstall-recursive
all-am: Makefile $(PROGRAMS) $(DATA)
all-redirect: all-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs)  $(DESTDIR)$(bindir) $(DESTDIR)$(desktopdir) \
		$(DESTDIR)$(gladedir) $(DESTDIR)$(schemedir) \
		$(DESTDIR)$(serverdir) $(DESTDIR)$(uidir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-recursive

clean-am:  clean-binPROGRAMS clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-recursive

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-libtool \
		distclean-tags distclean-generic clean-am
	-rm -f libtool

distclean: distclean-recursive

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-recursive

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool uninstall-desktopDATA \
install-desktopDATA uninstall-gladeDATA install-gladeDATA \
uninstall-schemeDATA install-schemeDATA uninstall-serverDATA \
install-serverDATA uninstall-uiDATA install-uiDATA \
install-data-recursive uninstall-data-recursive install-exec-recursive \
uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
all-recursive check-recursive installcheck-recursive info-recursive \
dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir check-TESTS \
info-am info dvi-am dvi check check-am installcheck-am installcheck \
install-exec-am install-exec install-data-am install-data install-am \
install uninstall-am uninstall all-redirect all-am all installdirs-am \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


@INTLTOOL_DESKTOP_RULE@

$(nautilus_shell_interface_idl_sources): nautilus_shell_interface_idl_stamp
nautilus_shell_interface_idl_stamp: nautilus-shell-interface.idl $(ORBIT_IDL) $(top_srcdir)/libnautilus/nautilus-view-component.idl
	$(ORBIT_IDL) $(CORE_IDL_INCLUDES) -I$(top_srcdir) $<
	touch $@

$(nautilus_OBJECTS): nautilus_shell_interface_idl_stamp

@INTLTOOL_SERVER_RULE@

dist-hook:
	cd $(distdir); rm -f $(CLEANFILES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
