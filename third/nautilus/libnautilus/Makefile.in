# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AR = @AR@
ART_REQUIRED = @ART_REQUIRED@
AS = @AS@
BONOBO_ACTIVATION_REQUIRED = @BONOBO_ACTIVATION_REQUIRED@
BONOBO_REQUIRED = @BONOBO_REQUIRED@
BONOBO_UI_REQUIRED = @BONOBO_UI_REQUIRED@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
COMPONENT_CFLAGS = @COMPONENT_CFLAGS@
COMPONENT_LIBS = @COMPONENT_LIBS@
CORE_CFLAGS = @CORE_CFLAGS@
CORE_IDL_INCLUDES = @CORE_IDL_INCLUDES@
CORE_LIBS = @CORE_LIBS@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
DATADIRNAME = @DATADIRNAME@
DISABLE_DEPRECATED_CFLAGS = @DISABLE_DEPRECATED_CFLAGS@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EEL_REQUIRED = @EEL_REQUIRED@
EGREP = @EGREP@
EMBLEM_COMPONENT_CFLAGS = @EMBLEM_COMPONENT_CFLAGS@
EMBLEM_COMPONENT_LIBS = @EMBLEM_COMPONENT_LIBS@
ENABLE_PROFILER = @ENABLE_PROFILER@
ESOUND_REQUIRED = @ESOUND_REQUIRED@
EXEEXT = @EXEEXT@
EXIF_CFLAGS = @EXIF_CFLAGS@
EXIF_LIBS = @EXIF_LIBS@
F77 = @F77@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GCONFTOOL = @GCONFTOOL@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GIMPHWRAPBOX_CFLAGS = @GIMPHWRAPBOX_CFLAGS@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GLIB_REQUIRED = @GLIB_REQUIRED@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOME_DESKTOP_REQUIRED = @GNOME_DESKTOP_REQUIRED@
GNOME_REQUIRED = @GNOME_REQUIRED@
GNOME_UI_REQUIRED = @GNOME_UI_REQUIRED@
GNOME_VFS_REQUIRED = @GNOME_VFS_REQUIRED@
GSEQUENCE_CFLAGS = @GSEQUENCE_CFLAGS@
GTK_REQUIRED = @GTK_REQUIRED@
HAVE_JW = @HAVE_JW@
HAVE_LIB = @HAVE_LIB@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_CAVES_RULE = @INTLTOOL_CAVES_RULE@
INTLTOOL_DESKTOP_RULE = @INTLTOOL_DESKTOP_RULE@
INTLTOOL_DIRECTORY_RULE = @INTLTOOL_DIRECTORY_RULE@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_KBD_RULE = @INTLTOOL_KBD_RULE@
INTLTOOL_KEYS_RULE = @INTLTOOL_KEYS_RULE@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_OAF_RULE = @INTLTOOL_OAF_RULE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_PONG_RULE = @INTLTOOL_PONG_RULE@
INTLTOOL_PROP_RULE = @INTLTOOL_PROP_RULE@
INTLTOOL_SCHEMAS_RULE = @INTLTOOL_SCHEMAS_RULE@
INTLTOOL_SERVER_RULE = @INTLTOOL_SERVER_RULE@
INTLTOOL_SHEET_RULE = @INTLTOOL_SHEET_RULE@
INTLTOOL_SOUNDLIST_RULE = @INTLTOOL_SOUNDLIST_RULE@
INTLTOOL_THEME_RULE = @INTLTOOL_THEME_RULE@
INTLTOOL_UI_RULE = @INTLTOOL_UI_RULE@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_XAM_RULE = @INTLTOOL_XAM_RULE@
INTLTOOL_XML_RULE = @INTLTOOL_XML_RULE@
JW = @JW@
LIB = @LIB@
LIBEGG_CFLAGS = @LIBEGG_CFLAGS@
LIBNAUTILUS_CFLAGS = @LIBNAUTILUS_CFLAGS@
LIBNAUTILUS_EXTENSION_CFLAGS = @LIBNAUTILUS_EXTENSION_CFLAGS@
LIBNAUTILUS_EXTENSION_LIBS = @LIBNAUTILUS_EXTENSION_LIBS@
LIBNAUTILUS_IDL_INCLUDES = @LIBNAUTILUS_IDL_INCLUDES@
LIBNAUTILUS_LIBS = @LIBNAUTILUS_LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIB = @LTLIB@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MEDUSA_REQUIRED = @MEDUSA_REQUIRED@
MKINSTALLDIRS = @MKINSTALLDIRS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
ORBIT_IDL = @ORBIT_IDL@
ORBIT_REQUIRED = @ORBIT_REQUIRED@
PACKAGE = @PACKAGE@
PANGO_REQUIRED = @PANGO_REQUIRED@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POPT_LIBS = @POPT_LIBS@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
RANLIB = @RANLIB@
RC = @RC@
RSVG_REQUIRED = @RSVG_REQUIRED@
STARTUP_NOTIFICATION_PACKAGE = @STARTUP_NOTIFICATION_PACKAGE@
STARTUP_NOTIFICATION_REQUIRED = @STARTUP_NOTIFICATION_REQUIRED@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XML_REQUIRED = @XML_REQUIRED@

NULL = 

lib_LTLIBRARIES = libnautilus.la

INCLUDES =  	-I$(top_srcdir) 	-I$(top_builddir) 	$(LIBNAUTILUS_CFLAGS) 	$(DISABLE_DEPRECATED_CFLAGS) 	-DDATADIR=\""$(datadir)"\" 	$(NULL)


libnautilus_la_LDFLAGS =  	-version-info 2:0:0 	$(LIBNAUTILUS_LIBS) 	-no-undefined 	$(NULL)


nautilus_view_component_idl_sources =  	nautilus-view-component-stubs.c			nautilus-view-component-skels.c			nautilus-view-component.h			nautilus-view-component-common.c


nautilus_distributed_undo_idl_sources =  	nautilus-distributed-undo-stubs.c		nautilus-distributed-undo-skels.c		nautilus-distributed-undo.h			nautilus-distributed-undo-common.c


libnautilusincludedir = $(includedir)/libnautilus

libnautilusinclude_HEADERS =  	libnautilus.h					nautilus-bonobo-ui.h				nautilus-clipboard.h				nautilus-distributed-undo.h			nautilus-idle-queue.h				nautilus-scroll-positionable.h			nautilus-view-component.h			nautilus-view.h					nautilus-view-standard-main.h			nautilus-undo.h					nautilus-undo-private.h				$(NULL)


libnautilus_la_SOURCES =  	$(nautilus_view_component_idl_sources)			$(nautilus_distributed_undo_idl_sources)		nautilus-clipboard.c					nautilus-idle-queue.c					nautilus-scroll-positionable.c				nautilus-undo-transaction.c				nautilus-undo-transaction.h				nautilus-undo.c						nautilus-view.c						nautilus-view-standard-main.c				$(NULL)


uidir = $(datadir)/gnome-2.0/ui
ui_DATA =  	nautilus-clipboard-ui.xml		$(NULL)


idldir = $(datadir)/idl
idl_DATA =  	nautilus-view-component.idl		nautilus-distributed-undo.idl		$(NULL)


pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libnautilus.pc

EXTRA_DIST =  	$(ui_DATA)				$(idl_DATA)				libnautilus.pc.in			$(NULL)


BUILT_SOURCES =  	$(nautilus_view_component_idl_sources)			$(nautilus_distributed_undo_idl_sources)		$(NULL)


CLEANFILES =  	$(nautilus_view_component_idl_sources)			nautilus_view_component_idl_stamp			$(nautilus_distributed_undo_idl_sources)		nautilus_distributed_undo_idl_stamp             	$(NULL)

mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES =  libnautilus.pc
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
libnautilus_la_LIBADD = 
libnautilus_la_OBJECTS =  nautilus-view-component-stubs.lo \
nautilus-view-component-skels.lo nautilus-view-component-common.lo \
nautilus-distributed-undo-stubs.lo nautilus-distributed-undo-skels.lo \
nautilus-distributed-undo-common.lo nautilus-clipboard.lo \
nautilus-idle-queue.lo nautilus-scroll-positionable.lo \
nautilus-undo-transaction.lo nautilus-undo.lo nautilus-view.lo \
nautilus-view-standard-main.lo
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DATA =  $(idl_DATA) $(pkgconfig_DATA) $(ui_DATA)

HEADERS =  $(libnautilusinclude_HEADERS)

DIST_COMMON =  README Makefile.am Makefile.in libnautilus.pc.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libnautilus_la_SOURCES)
OBJECTS = $(libnautilus_la_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .lo .o .obj .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) $(top_srcdir)/Makefile.shared
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps libnautilus/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

libnautilus.pc: $(top_builddir)/config.status libnautilus.pc.in
	cd $(top_builddir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libnautilus.la: $(libnautilus_la_OBJECTS) $(libnautilus_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(libnautilus_la_LDFLAGS) $(libnautilus_la_OBJECTS) $(libnautilus_la_LIBADD) $(LIBS)

install-idlDATA: $(idl_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(idldir)
	@list='$(idl_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(idldir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(idldir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(idldir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(idldir)/$$p; \
	  fi; fi; \
	done

uninstall-idlDATA:
	@$(NORMAL_UNINSTALL)
	list='$(idl_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(idldir)/$$p; \
	done

install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgconfigdir)
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(pkgconfigdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(pkgconfigdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(pkgconfigdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(pkgconfigdir)/$$p; \
	  fi; fi; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	list='$(pkgconfig_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(pkgconfigdir)/$$p; \
	done

install-uiDATA: $(ui_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(uidir)
	@list='$(ui_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(uidir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(uidir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(uidir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(uidir)/$$p; \
	  fi; fi; \
	done

uninstall-uiDATA:
	@$(NORMAL_UNINSTALL)
	list='$(ui_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(uidir)/$$p; \
	done

install-libnautilusincludeHEADERS: $(libnautilusinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libnautilusincludedir)
	@list='$(libnautilusinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libnautilusincludedir)/$$p"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libnautilusincludedir)/$$p; \
	done

uninstall-libnautilusincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	list='$(libnautilusinclude_HEADERS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libnautilusincludedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = libnautilus

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-hook
nautilus-clipboard.lo nautilus-clipboard.o : nautilus-clipboard.c \
	../config.h nautilus-clipboard.h nautilus-bonobo-ui.h
nautilus-distributed-undo-common.lo nautilus-distributed-undo-common.o : \
	nautilus-distributed-undo-common.c nautilus-distributed-undo.h
nautilus-distributed-undo-skels.lo nautilus-distributed-undo-skels.o : \
	nautilus-distributed-undo-skels.c nautilus-distributed-undo.h
nautilus-distributed-undo-stubs.lo nautilus-distributed-undo-stubs.o : \
	nautilus-distributed-undo-stubs.c nautilus-distributed-undo.h
nautilus-idle-queue.lo nautilus-idle-queue.o : nautilus-idle-queue.c \
	../config.h nautilus-idle-queue.h
nautilus-scroll-positionable.lo nautilus-scroll-positionable.o : \
	nautilus-scroll-positionable.c nautilus-scroll-positionable.h \
	nautilus-view-component.h ../config.h
nautilus-undo-transaction.lo nautilus-undo-transaction.o : \
	nautilus-undo-transaction.c ../config.h \
	nautilus-undo-transaction.h nautilus-undo.h \
	nautilus-distributed-undo.h nautilus-undo-private.h
nautilus-undo.lo nautilus-undo.o : nautilus-undo.c ../config.h \
	nautilus-undo.h nautilus-undo-private.h \
	nautilus-distributed-undo.h nautilus-undo-transaction.h \
	nautilus-undo.h
nautilus-view-component-common.lo nautilus-view-component-common.o : \
	nautilus-view-component-common.c nautilus-view-component.h
nautilus-view-component-skels.lo nautilus-view-component-skels.o : \
	nautilus-view-component-skels.c nautilus-view-component.h
nautilus-view-component-stubs.lo nautilus-view-component-stubs.o : \
	nautilus-view-component-stubs.c nautilus-view-component.h
nautilus-view-standard-main.lo nautilus-view-standard-main.o : \
	nautilus-view-standard-main.c ../config.h \
	nautilus-view-standard-main.h
nautilus-view.lo nautilus-view.o : nautilus-view.c ../config.h \
	nautilus-view.h nautilus-view-component.h nautilus-idle-queue.h \
	nautilus-undo.h

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES
install-exec: install-exec-am

install-data-am: install-idlDATA install-pkgconfigDATA install-uiDATA \
		install-libnautilusincludeHEADERS
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES uninstall-idlDATA \
		uninstall-pkgconfigDATA uninstall-uiDATA \
		uninstall-libnautilusincludeHEADERS
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(idldir) \
		$(DESTDIR)$(pkgconfigdir) $(DESTDIR)$(uidir) \
		$(DESTDIR)$(libnautilusincludedir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool uninstall-idlDATA install-idlDATA \
uninstall-pkgconfigDATA install-pkgconfigDATA uninstall-uiDATA \
install-uiDATA uninstall-libnautilusincludeHEADERS \
install-libnautilusincludeHEADERS tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info-am info dvi-am dvi check \
check-am installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


$(nautilus_view_component_idl_sources): nautilus_view_component_idl_stamp
nautilus_view_component_idl_stamp: nautilus-view-component.idl $(ORBIT_IDL)
	$(ORBIT_IDL) $(LIBNAUTILUS_IDL_INCLUDES) --define=__nautilus_view_component_COMPILATION $<
	touch $@

$(nautilus_distributed_undo_idl_sources): nautilus_distributed_undo_idl_stamp
nautilus_distributed_undo_idl_stamp: nautilus-distributed-undo.idl $(ORBIT_IDL)
	$(ORBIT_IDL) $(LIBNAUTILUS_IDL_INCLUDES) $<
	touch $@

$(libnautilus_la_OBJECTS): nautilus_view_component_idl_stamp nautilus_distributed_undo_idl_stamp

dist-hook:
	cd $(distdir); rm -f $(CLEANFILES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
