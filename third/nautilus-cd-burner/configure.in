AC_PREREQ(2.52)
AC_INIT(nautilus-cd-burner, 2.8.7)

AC_CONFIG_SRCDIR(mapping-method.c)
AC_CONFIG_HEADERS(config.h)

AM_INIT_AUTOMAKE
AC_SUBST(ACLOCAL_AMFLAGS, "\${ACLOCAL_FLAGS}")

AC_PROG_CXX

AC_DISABLE_STATIC
AC_PROG_LIBTOOL
AC_PROG_INTLTOOL([0.22])

GETTEXT_PACKAGE=nautilus-cd-burner
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [gettext package])
AC_DEFINE_UNQUOTED(GNOME_EXPLICIT_TRANSLATION_DOMAIN,"$GETTEXT_PACKAGE", [library gettext package])

dnl Check for ngettext
AC_CHECK_FUNCS(ngettext)

dnl ===========================================================================
dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_BIGENDIAN

AC_CHECK_HEADERS(sys/statvfs.h)
AC_CHECK_FUNCS(statvfs)

mkdtemp_missing=false
AC_CHECK_FUNC(mkdtemp, 
    [AC_DEFINE([HAVE_MKDTEMP], 1, [Have GlibC function to make temp dirs])],
    mkdtemp_missing=true)
AM_CONDITIONAL(MKDTEMP_MISSING, test x$mkdtemp_missing = xtrue)

dnl ===========================================================================
dnl Minimum versions of the libraries
GNOME_VFS_REQUIRED=2.1.3.1
GLIB_REQUIRED=2.4.0
GTK_REQUIRED=2.4.0
LIBGLADE_REQUIRED=2.0.0
LIBGNOME_REQUIRED=2.0.0
EEL_REQUIRED=2.0.0
NAUTILUS_REQUIRED=2.5.5
HAL_REQUIRED=0.2.98

dnl ===========================================================================
dnl Test host and define whether we have CD drives discoverability, and whether
dnl we can use the libstdc++ hack

AC_MSG_CHECKING(for architecture specific defines)
case "$host" in
	*-freebsd5*)
		AC_MSG_RESULT(has discovery and libstdc++ hack)
		HAS_STDCXX_HACK="yes"
		;;
	*-freebsd*)
		AC_MSG_RESULT(has discovery)
		;;
	*-linux*)
		AC_MSG_RESULT(has discovery and libstdc++ hack)
		HAS_STDCXX_HACK="yes"
		;;
	*)
		AC_MSG_RESULT(has basic (cdrecord) discovery)
		;;
esac

if test x$HAS_STDCXX_HACK = xyes; then
	AC_DEFINE(LIBSTDCXX_HACK,1,[Define if we can avoid linking against libstdc++])
fi
AM_CONDITIONAL(LIBSTDCXX_HACK, test x$HAS_STDCXX_HACK = "xyes")

dnl ===========================================================================
dnl CD drive detection stuff

dnl FreeBSD support
AC_CHECK_LIB(cam, cam_open_spec_device)

dnl SunOS/Solaris support
AC_CHECK_LIB(volmgt, volmgt_symname)

dnl Linux/HAL support
AC_ARG_ENABLE(hal,
AC_HELP_STRING([--enable-hal],[use hal, if available]),
[case "${enableval}" in
yes) ENABLE_HAL=yes ;;
no)  ENABLE_HAL=no ;;
*) AC_MSG_ERROR(bad value ${enableval} for --enable-hal) ;;
esac],
[ENABLE_HAL=yes]) dnl Default value

HAL=""
if test "x$ENABLE_HAL" = "xyes"; then
	PKG_CHECK_MODULES(HAL, hal >= $HAL_REQUIRED,
		[ AC_DEFINE([USE_HAL], 1, [Use the HAL library])]
		[HAL="hal >= $HAL_REQUIRED" ], :)
fi

dnl ===========================================================================
dnl Check for modules and libraries

PKG_CHECK_MODULES(MAPPING,
 gnome-vfs-2.0 >= $GNOME_VFS_REQUIRED dnl
 gnome-vfs-module-2.0 >= $GNOME_VFS_REQUIRED)

PKG_CHECK_MODULES(DAEMON, glib-2.0 >= $GLIB_REQUIRED)
AC_CHECK_LIB(socket, bind, 
    DAEMON_LIBS="$DAEMON_LIBS -lsocket",
    :)

PKG_CHECK_MODULES(GUI,
 glib-2.0 >= $GLIB_REQUIRED dnl
 libgnome-2.0 >= $LIBGNOME_REQUIRED dnl
 gtk+-2.0 >= $GTK_REQUIRED dnl
 gnome-vfs-2.0 >= $GNOME_VFS_REQUIRED dnl
 libglade-2.0 >= $LIBGLADE_REQUIRED dnl
 libgnomeui-2.0 >= $LIBGNOME_REQUIRED  dnl
 $HAL)

PKG_CHECK_MODULES(EXTENSION,
 libnautilus-extension >= $NAUTILUS_REQUIRED eel-2.0 >= $EEL_REQUIRED)

PKG_CHECK_MODULES(BURN,
  glib-2.0 >= $GLIB_REQUIRED gtk+-2.0 >= $GTK_REQUIRED $HAL)

AC_PATH_PROG(GCONFTOOL, gconftool-2)
AM_GCONF_SOURCE_2

ALL_LINGUAS="am ar az be bg bn bs ca cs cy da de el en_CA en_GB es et eu fa fi fr ga gu he hi hr hu id is it ja ko lt lv mn ms nb nl no or pa pl pt pt_BR ro ru sk sl sq sr sr@Latn sv th tr uk vi zh_CN zh_TW"
AM_GLIB_GNU_GETTEXT
AM_GLIB_DEFINE_LOCALEDIR([GNOMELOCALEDIR])

dnl Turn on the additional warnings last, so -Werror doesn't affect other tests.

AC_ARG_ENABLE(more-warnings,
  AC_HELP_STRING([--enable-more-warnings], [Maximum compiler warnings]),
set_more_warnings="$enableval",[
if test -f $srcdir/CVSVERSION; then
	is_cvs_version=true
	set_more_warnings=yes
else
	set_more_warnings=no
fi
])
AC_MSG_CHECKING(for more warnings, including -Werror)
if test "$GCC" = "yes" -a "$set_more_warnings" != "no"; then
	AC_MSG_RESULT(yes)
	CFLAGS="\
	-Wall \
	-Wchar-subscripts -Wmissing-declarations -Wmissing-prototypes \
	-Wnested-externs -Wpointer-arith \
	-Wcast-align -Wsign-compare \
	-Werror \
	$CFLAGS"

	for option in -Wsign-promo -Wno-sign-compare; do
		SAVE_CFLAGS="$CFLAGS"
		CFLAGS="$CFLAGS $VFS_CFLAGS $option"
		AC_MSG_CHECKING([whether gcc understands $option])
		AC_TRY_COMPILE([], [],
			has_option=yes,
			has_option=no,)
		CFLAGS="$SAVE_CFLAGS"
		if test $has_option = yes; then
		  VFS_CFLAGS="$VFS_CFLAGS $option"
		fi
		AC_MSG_RESULT($has_option)
		unset has_option
		unset SAVE_CFLAGS
	done
	unset option
else
	CFLAGS="-Wall $CFLAGS"
	AC_MSG_RESULT(no)
fi

AC_CONFIG_FILES([
Makefile
libnautilus-burn.pc
po/Makefile.in
])

AC_OUTPUT
