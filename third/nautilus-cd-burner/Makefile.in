# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = .

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AR = @AR@
AS = @AS@
BURN_CFLAGS = @BURN_CFLAGS@
BURN_LIBS = @BURN_LIBS@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CXX = @CXX@
CXXCPP = @CXXCPP@
DAEMON_CFLAGS = @DAEMON_CFLAGS@
DAEMON_LIBS = @DAEMON_LIBS@
DATADIRNAME = @DATADIRNAME@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXTENSION_CFLAGS = @EXTENSION_CFLAGS@
EXTENSION_LIBS = @EXTENSION_LIBS@
F77 = @F77@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GCONFTOOL = @GCONFTOOL@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GUI_CFLAGS = @GUI_CFLAGS@
GUI_LIBS = @GUI_LIBS@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_CAVES_RULE = @INTLTOOL_CAVES_RULE@
INTLTOOL_DESKTOP_RULE = @INTLTOOL_DESKTOP_RULE@
INTLTOOL_DIRECTORY_RULE = @INTLTOOL_DIRECTORY_RULE@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_KBD_RULE = @INTLTOOL_KBD_RULE@
INTLTOOL_KEYS_RULE = @INTLTOOL_KEYS_RULE@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_OAF_RULE = @INTLTOOL_OAF_RULE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_PONG_RULE = @INTLTOOL_PONG_RULE@
INTLTOOL_PROP_RULE = @INTLTOOL_PROP_RULE@
INTLTOOL_SCHEMAS_RULE = @INTLTOOL_SCHEMAS_RULE@
INTLTOOL_SERVER_RULE = @INTLTOOL_SERVER_RULE@
INTLTOOL_SHEET_RULE = @INTLTOOL_SHEET_RULE@
INTLTOOL_SOUNDLIST_RULE = @INTLTOOL_SOUNDLIST_RULE@
INTLTOOL_THEME_RULE = @INTLTOOL_THEME_RULE@
INTLTOOL_UI_RULE = @INTLTOOL_UI_RULE@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_XAM_RULE = @INTLTOOL_XAM_RULE@
INTLTOOL_XML_RULE = @INTLTOOL_XML_RULE@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
MAPPING_CFLAGS = @MAPPING_CFLAGS@
MAPPING_LIBS = @MAPPING_LIBS@
MKINSTALLDIRS = @MKINSTALLDIRS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
RANLIB = @RANLIB@
RC = @RC@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@

module_flags = -avoid-version -module

SUBDIRS = po

lib_LTLIBRARIES = libnautilus-burn.la
libexec_PROGRAMS = mapping-daemon
bin_PROGRAMS = nautilus-cd-burner
noinst_PROGRAMS = list_cddrives
@MKDTEMP_MISSING_TRUE@MKDTEMP_FILES = @MKDTEMP_MISSING_TRUE@mkdtemp.c mkdtemp.h
@MKDTEMP_MISSING_FALSE@MKDTEMP_FILES = 

NULL = 

INCLUDES = \
	$(MAPPING_CFLAGS)                       \
	$(GUI_CFLAGS)				\
	$(EXTENSION_CFLAGS)			\
	$(WERROR)				\
	-D_FILE_OFFSET_BITS=64			\
	-D_GNU_SOURCE				\
	-D_LARGEFILE64_SOURCE			\
	-D_REENTRANT				\
	-D_POSIX_PTHREAD_SEMANTICS		\
	-DPREFIX=\"$(prefix)\"			\
	-DBINDIR=\""$(bindir)"\"	\
	-DLIBEXECDIR=\""$(libexecdir)"\"	\
	-DSHAREDIR=\""$(datadir)"\"		\
	-DDATADIR=\""$(datadir)/nautilus-cd-burner"\"	\
	-DGNOMELOCALEDIR=\""$(datadir)/locale"\"


EXTRA_DIST = \
	mapping-modules.conf 	\
	cdburn.glade		\
	cdspin1.png cdspin2.png cdspin3.png \
	cdspin4.png cdspin5.png cdspin6.png \
	cdspin7.png cdspin8.png \
	mkdtemp.c mkdtemp.h \
	intltool-extract.in \
	intltool-merge.in \
	intltool-update.in \
	libnautilus-burn.pc.in \
	cdrecorder-marshal.list \
	$(schema_in_files)


pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libnautilus-burn.pc

CLEANFILES = $(desktop_in_files:.desktop.in=.desktop) \
	     $(schema_DATA) $(CDRECMARSHALFILES)


modulesconfdir = $(sysconfdir)/gnome-vfs-2.0/modules
modulesconf_DATA = mapping-modules.conf
modulesdir = $(libdir)/gnome-vfs-2.0/modules

schema_in_files = ncb.schemas.in
schemadir = $(sysconfdir)/gconf/schemas
schema_DATA = $(schema_in_files:.schemas.in=.schemas)

modules_LTLIBRARIES = libmapping.la

### GUI burner app

cdburndir = $(datadir)/nautilus-cd-burner
cdburn_DATA = cdburn.glade \
	cdspin1.png cdspin2.png cdspin3.png \
	cdspin4.png cdspin5.png cdspin6.png \
	cdspin7.png cdspin8.png 


nautilus_cd_burner_SOURCES = \
	nautilus-cd-burner.c \
	nautilus-cd-burner.h \
	make-iso.c \
	make-iso.h \
	$(NULL)


nautilus_cd_burner_LDADD = \
	libnautilus-burn.la \
	$(GUI_LIBS) \
	$(NULL)


### Test program
list_cddrives_SOURCES = list_cddrives.c
list_cddrives_LDADD = libnautilus-burn.la

### Mapping daemon

mapping_daemon_SOURCES = \
	mapping-daemon.c \
	mapping-daemon.h \
	mapping-protocol.h \
	mapping-protocol.c \
	$(NULL)


mapping_daemon_LDADD = $(DAEMON_LIBS)

### `mapping' method

libmapping_la_SOURCES = \
	mapping-method.c 				\
	mapping-method.h				\
	mapping-protocol.h \
	mapping-protocol.c \
	$(NULL)


libmapping_la_LDFLAGS = $(module_flags)
libmapping_la_LIBADD = $(MAPPING_LIBS)

### Nautilus Extension
nautilus_extensiondir = $(libdir)/nautilus/extensions-1.0
nautilus_extension_LTLIBRARIES = libnautilus-burn-extension.la
libnautilus_burn_extension_la_SOURCES = burn-extension.c
libnautilus_burn_extension_la_LIBADD = $(EXTENSION_LIBS)

### Our burning library
GLIB_GENMARSHAL = `pkg-config --variable=glib_genmarshal glib-2.0`
CDRECMARSHALFILES = cd-recorder-marshal.h cd-recorder-marshal.c

libnautilus_burn_la_SOURCES = \
	bacon-cd-selection.c	\
	bacon-cd-selection.h	\
	$(CDRECMARSHALFILES)	\
	cd-recorder.c		\
	cd-recorder.h		\
	cd-drive.c		\
	cd-drive.h		\
	dvd_plus_rw_utils.cpp	\
	transport.hxx		\
	$(NULL)


@LIBSTDCXX_HACK_TRUE@AM_CXXFLAGS = @LIBSTDCXX_HACK_TRUE@-fno-exceptions -fno-rtti
# If we don't set it, it doesn't seem to appear in the Makefile at all
# and we can't recursively set it, hence
@LIBSTDCXX_HACK_TRUE@CXXLD = @LIBSTDCXX_HACK_TRUE@--tag=CC $(CXX)
@LIBSTDCXX_HACK_FALSE@CXXLD = @LIBSTDCXX_HACK_FALSE@$(CXX)

libnautilus_burn_la_LIBADD = $(BURN_LIBS)
libnautilus_burnincludedir = $(includedir)/libnautilus-burn/
libnautilus_burninclude_HEADERS = \
	cd-drive.h		\
	cd-recorder.h		\
	bacon-cd-selection.h	\
	$(NULL)

ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =  libnautilus-burn.pc
LTLIBRARIES =  $(lib_LTLIBRARIES) $(modules_LTLIBRARIES) \
$(nautilus_extension_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I.
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
libnautilus_burn_la_LDFLAGS = 
libnautilus_burn_la_DEPENDENCIES = 
libnautilus_burn_la_OBJECTS =  bacon-cd-selection.lo \
cd-recorder-marshal.lo cd-recorder.lo cd-drive.lo dvd_plus_rw_utils.lo
libmapping_la_DEPENDENCIES = 
libmapping_la_OBJECTS =  mapping-method.lo mapping-protocol.lo
libnautilus_burn_extension_la_LDFLAGS = 
libnautilus_burn_extension_la_DEPENDENCIES = 
libnautilus_burn_extension_la_OBJECTS =  burn-extension.lo
bin_PROGRAMS =  nautilus-cd-burner$(EXEEXT)
libexec_PROGRAMS =  mapping-daemon$(EXEEXT)
noinst_PROGRAMS =  list_cddrives$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS) $(libexec_PROGRAMS) $(noinst_PROGRAMS)

nautilus_cd_burner_OBJECTS =  nautilus-cd-burner.$(OBJEXT) \
make-iso.$(OBJEXT)
nautilus_cd_burner_DEPENDENCIES =  libnautilus-burn.la
nautilus_cd_burner_LDFLAGS = 
mapping_daemon_OBJECTS =  mapping-daemon.$(OBJEXT) \
mapping-protocol.$(OBJEXT)
mapping_daemon_DEPENDENCIES = 
mapping_daemon_LDFLAGS = 
list_cddrives_OBJECTS =  list_cddrives.$(OBJEXT)
list_cddrives_DEPENDENCIES =  libnautilus-burn.la
list_cddrives_LDFLAGS = 
CXXFLAGS = @CXXFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DATA =  $(cdburn_DATA) $(modulesconf_DATA) $(pkgconfig_DATA) \
$(schema_DATA)

HEADERS =  $(libnautilus_burninclude_HEADERS)

DIST_COMMON =  README ./stamp-h.in AUTHORS COPYING COPYING.LIB ChangeLog \
INSTALL Makefile.am Makefile.in NEWS TODO aclocal.m4 config.guess \
config.h.in config.sub configure configure.in install-sh \
libnautilus-burn.pc.in ltmain.sh missing mkinstalldirs


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(libnautilus_burn_la_SOURCES) $(libmapping_la_SOURCES) $(libnautilus_burn_extension_la_SOURCES) $(nautilus_cd_burner_SOURCES) $(mapping_daemon_SOURCES) $(list_cddrives_SOURCES)
OBJECTS = $(libnautilus_burn_la_OBJECTS) $(libmapping_la_OBJECTS) $(libnautilus_burn_extension_la_OBJECTS) $(nautilus_cd_burner_OBJECTS) $(mapping_daemon_OBJECTS) $(list_cddrives_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cpp .lo .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status

$(ACLOCAL_M4):  configure.in 
	cd $(srcdir) && $(ACLOCAL)

config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck
$(srcdir)/configure: $(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
	cd $(srcdir) && $(AUTOCONF)

config.h: stamp-h
	@if test ! -f $@; then \
		rm -f stamp-h; \
		$(MAKE) stamp-h; \
	else :; fi
stamp-h: $(srcdir)/config.h.in $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES= CONFIG_HEADERS=config.h \
	     $(SHELL) ./config.status
	@echo timestamp > stamp-h 2> /dev/null
$(srcdir)/config.h.in: $(srcdir)/stamp-h.in
	@if test ! -f $@; then \
		rm -f $(srcdir)/stamp-h.in; \
		$(MAKE) $(srcdir)/stamp-h.in; \
	else :; fi
$(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	@echo timestamp > $(srcdir)/stamp-h.in 2> /dev/null

mostlyclean-hdr:

clean-hdr:

distclean-hdr:
	-rm -f config.h

maintainer-clean-hdr:
libnautilus-burn.pc: $(top_builddir)/config.status libnautilus-burn.pc.in
	cd $(top_builddir) && CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status

mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

mostlyclean-modulesLTLIBRARIES:

clean-modulesLTLIBRARIES:
	-test -z "$(modules_LTLIBRARIES)" || rm -f $(modules_LTLIBRARIES)

distclean-modulesLTLIBRARIES:

maintainer-clean-modulesLTLIBRARIES:

install-modulesLTLIBRARIES: $(modules_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(modulesdir)
	@list='$(modules_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(modulesdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(modulesdir)/$$p; \
	  else :; fi; \
	done

uninstall-modulesLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(modules_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(modulesdir)/$$p; \
	done

mostlyclean-nautilus_extensionLTLIBRARIES:

clean-nautilus_extensionLTLIBRARIES:
	-test -z "$(nautilus_extension_LTLIBRARIES)" || rm -f $(nautilus_extension_LTLIBRARIES)

distclean-nautilus_extensionLTLIBRARIES:

maintainer-clean-nautilus_extensionLTLIBRARIES:

install-nautilus_extensionLTLIBRARIES: $(nautilus_extension_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(nautilus_extensiondir)
	@list='$(nautilus_extension_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(nautilus_extensiondir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(nautilus_extensiondir)/$$p; \
	  else :; fi; \
	done

uninstall-nautilus_extensionLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(nautilus_extension_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(nautilus_extensiondir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libnautilus-burn.la: $(libnautilus_burn_la_OBJECTS) $(libnautilus_burn_la_DEPENDENCIES)
	$(CXXLINK) -rpath $(libdir) $(libnautilus_burn_la_LDFLAGS) $(libnautilus_burn_la_OBJECTS) $(libnautilus_burn_la_LIBADD) $(LIBS)

libmapping.la: $(libmapping_la_OBJECTS) $(libmapping_la_DEPENDENCIES)
	$(LINK) -rpath $(modulesdir) $(libmapping_la_LDFLAGS) $(libmapping_la_OBJECTS) $(libmapping_la_LIBADD) $(LIBS)

libnautilus-burn-extension.la: $(libnautilus_burn_extension_la_OBJECTS) $(libnautilus_burn_extension_la_DEPENDENCIES)
	$(LINK) -rpath $(nautilus_extensiondir) $(libnautilus_burn_extension_la_LDFLAGS) $(libnautilus_burn_extension_la_OBJECTS) $(libnautilus_burn_extension_la_LIBADD) $(LIBS)

mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

mostlyclean-libexecPROGRAMS:

clean-libexecPROGRAMS:
	-test -z "$(libexec_PROGRAMS)" || rm -f $(libexec_PROGRAMS)

distclean-libexecPROGRAMS:

maintainer-clean-libexecPROGRAMS:

install-libexecPROGRAMS: $(libexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libexecdir)
	@list='$(libexec_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(libexecdir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(libexecdir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-libexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(libexec_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libexecdir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

mostlyclean-noinstPROGRAMS:

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

distclean-noinstPROGRAMS:

maintainer-clean-noinstPROGRAMS:

nautilus-cd-burner$(EXEEXT): $(nautilus_cd_burner_OBJECTS) $(nautilus_cd_burner_DEPENDENCIES)
	@rm -f nautilus-cd-burner$(EXEEXT)
	$(LINK) $(nautilus_cd_burner_LDFLAGS) $(nautilus_cd_burner_OBJECTS) $(nautilus_cd_burner_LDADD) $(LIBS)

mapping-daemon$(EXEEXT): $(mapping_daemon_OBJECTS) $(mapping_daemon_DEPENDENCIES)
	@rm -f mapping-daemon$(EXEEXT)
	$(LINK) $(mapping_daemon_LDFLAGS) $(mapping_daemon_OBJECTS) $(mapping_daemon_LDADD) $(LIBS)

list_cddrives$(EXEEXT): $(list_cddrives_OBJECTS) $(list_cddrives_DEPENDENCIES)
	@rm -f list_cddrives$(EXEEXT)
	$(LINK) $(list_cddrives_LDFLAGS) $(list_cddrives_OBJECTS) $(list_cddrives_LDADD) $(LIBS)
.cpp.o:
	$(CXXCOMPILE) -c $<
.cpp.obj:
	$(CXXCOMPILE) -c `cygpath -w $<`
.cpp.lo:
	$(LTCXXCOMPILE) -c $<

install-cdburnDATA: $(cdburn_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(cdburndir)
	@list='$(cdburn_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(cdburndir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(cdburndir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(cdburndir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(cdburndir)/$$p; \
	  fi; fi; \
	done

uninstall-cdburnDATA:
	@$(NORMAL_UNINSTALL)
	list='$(cdburn_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(cdburndir)/$$p; \
	done

install-modulesconfDATA: $(modulesconf_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(modulesconfdir)
	@list='$(modulesconf_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(modulesconfdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(modulesconfdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(modulesconfdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(modulesconfdir)/$$p; \
	  fi; fi; \
	done

uninstall-modulesconfDATA:
	@$(NORMAL_UNINSTALL)
	list='$(modulesconf_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(modulesconfdir)/$$p; \
	done

install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgconfigdir)
	@list='$(pkgconfig_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(pkgconfigdir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(pkgconfigdir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(pkgconfigdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(pkgconfigdir)/$$p; \
	  fi; fi; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	list='$(pkgconfig_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(pkgconfigdir)/$$p; \
	done

install-schemaDATA: $(schema_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(schemadir)
	@list='$(schema_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(schemadir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(schemadir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(schemadir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(schemadir)/$$p; \
	  fi; fi; \
	done

uninstall-schemaDATA:
	@$(NORMAL_UNINSTALL)
	list='$(schema_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(schemadir)/$$p; \
	done

install-libnautilus_burnincludeHEADERS: $(libnautilus_burninclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libnautilus_burnincludedir)
	@list='$(libnautilus_burninclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libnautilus_burnincludedir)/$$p"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(libnautilus_burnincludedir)/$$p; \
	done

uninstall-libnautilus_burnincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	list='$(libnautilus_burninclude_HEADERS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libnautilus_burnincludedir)/$$p; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.

@SET_MAKE@

all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive  \
check-recursive installcheck-recursive info-recursive dvi-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
	  rev="$$subdir $$rev"; \
	  test "$$subdir" != "." || dot_seen=yes; \
	done; \
	test "$$dot_seen" = "no" && rev=". $$rev"; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
   if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
   fi; \
	done; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)config.h.in$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags config.h.in $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	-rm -rf $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) zxf $(distdir).tar.gz
	mkdir $(distdir)/=build
	mkdir $(distdir)/=inst
	dc_install_base=`cd $(distdir)/=inst && pwd`; \
	cd $(distdir)/=build \
	  && ../configure --srcdir=.. --prefix=$$dc_install_base \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) dist
	-rm -rf $(distdir)
	@banner="$(distdir).tar.gz is ready for distribution"; \
	dashes=`echo "$$banner" | sed s/./=/g`; \
	echo "$$dashes"; \
	echo "$$banner"; \
	echo "$$dashes"
dist: distdir
	-chmod -R a+r $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
	-rm -rf $(distdir)
dist-all: distdir
	-chmod -R a+r $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
	-rm -rf $(distdir)
distdir: $(DISTFILES)
	-rm -rf $(distdir)
	mkdir $(distdir)
	-chmod 777 $(distdir)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done
bacon-cd-selection.lo bacon-cd-selection.o : bacon-cd-selection.c \
	config.h bacon-cd-selection.h cd-drive.h cd-drive.h
burn-extension.lo burn-extension.o : burn-extension.c config.h
cd-drive.lo cd-drive.o : cd-drive.c config.h cd-drive.h
cd-recorder-marshal.lo cd-recorder-marshal.o : cd-recorder-marshal.c
cd-recorder.lo cd-recorder.o : cd-recorder.c config.h cd-recorder.h \
	cd-drive.h cd-recorder-marshal.h
dvd_plus_rw_utils.lo dvd_plus_rw_utils.o : dvd_plus_rw_utils.cpp \
	config.h transport.hxx
list_cddrives.o: list_cddrives.c cd-drive.h
make-iso.o: make-iso.c config.h nautilus-cd-burner.h cd-drive.h \
	cd-recorder.h make-iso.h
mapping-daemon.o: mapping-daemon.c config.h mapping-daemon.h \
	mapping-protocol.h
mapping-method.lo mapping-method.o : mapping-method.c mapping-protocol.h \
	mapping-method.h
mapping-protocol.o: mapping-protocol.c mapping-protocol.h
nautilus-cd-burner.o: nautilus-cd-burner.c bacon-cd-selection.h \
	cd-drive.h nautilus-cd-burner.h config.h cd-drive.h \
	cd-recorder.h make-iso.h

info-am:
info: info-recursive
dvi-am:
dvi: dvi-recursive
check-am: all-am
check: check-recursive
installcheck-am:
installcheck: installcheck-recursive
all-recursive-am: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

install-exec-am: install-libLTLIBRARIES install-binPROGRAMS \
		install-libexecPROGRAMS
install-exec: install-exec-recursive

install-data-am: install-modulesLTLIBRARIES \
		install-nautilus_extensionLTLIBRARIES \
		install-cdburnDATA install-modulesconfDATA \
		install-pkgconfigDATA install-schemaDATA \
		install-libnautilus_burnincludeHEADERS \
		install-data-local
install-data: install-data-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-recursive
uninstall-am: uninstall-libLTLIBRARIES uninstall-modulesLTLIBRARIES \
		uninstall-nautilus_extensionLTLIBRARIES \
		uninstall-binPROGRAMS uninstall-libexecPROGRAMS \
		uninstall-cdburnDATA uninstall-modulesconfDATA \
		uninstall-pkgconfigDATA uninstall-schemaDATA \
		uninstall-libnautilus_burnincludeHEADERS
uninstall: uninstall-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS) config.h
all-redirect: all-recursive-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(modulesdir) \
		$(DESTDIR)$(nautilus_extensiondir) $(DESTDIR)$(bindir) \
		$(DESTDIR)$(libexecdir) $(DESTDIR)$(cdburndir) \
		$(DESTDIR)$(modulesconfdir) $(DESTDIR)$(pkgconfigdir) \
		$(DESTDIR)$(schemadir) \
		$(DESTDIR)$(libnautilus_burnincludedir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-hdr mostlyclean-libLTLIBRARIES \
		mostlyclean-modulesLTLIBRARIES \
		mostlyclean-nautilus_extensionLTLIBRARIES \
		mostlyclean-compile mostlyclean-libtool \
		mostlyclean-binPROGRAMS mostlyclean-libexecPROGRAMS \
		mostlyclean-noinstPROGRAMS mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-recursive

clean-am:  clean-hdr clean-libLTLIBRARIES clean-modulesLTLIBRARIES \
		clean-nautilus_extensionLTLIBRARIES clean-compile \
		clean-libtool clean-binPROGRAMS clean-libexecPROGRAMS \
		clean-noinstPROGRAMS clean-tags clean-generic \
		mostlyclean-am

clean: clean-recursive

distclean-am:  distclean-hdr distclean-libLTLIBRARIES \
		distclean-modulesLTLIBRARIES \
		distclean-nautilus_extensionLTLIBRARIES \
		distclean-compile distclean-libtool \
		distclean-binPROGRAMS distclean-libexecPROGRAMS \
		distclean-noinstPROGRAMS distclean-tags \
		distclean-generic clean-am
	-rm -f libtool

distclean: distclean-recursive
	-rm -f config.status

maintainer-clean-am:  maintainer-clean-hdr \
		maintainer-clean-libLTLIBRARIES \
		maintainer-clean-modulesLTLIBRARIES \
		maintainer-clean-nautilus_extensionLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-binPROGRAMS \
		maintainer-clean-libexecPROGRAMS \
		maintainer-clean-noinstPROGRAMS maintainer-clean-tags \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-recursive
	-rm -f config.status

.PHONY: mostlyclean-hdr distclean-hdr clean-hdr maintainer-clean-hdr \
mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES \
mostlyclean-modulesLTLIBRARIES distclean-modulesLTLIBRARIES \
clean-modulesLTLIBRARIES maintainer-clean-modulesLTLIBRARIES \
uninstall-modulesLTLIBRARIES install-modulesLTLIBRARIES \
mostlyclean-nautilus_extensionLTLIBRARIES \
distclean-nautilus_extensionLTLIBRARIES \
clean-nautilus_extensionLTLIBRARIES \
maintainer-clean-nautilus_extensionLTLIBRARIES \
uninstall-nautilus_extensionLTLIBRARIES \
install-nautilus_extensionLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool mostlyclean-binPROGRAMS distclean-binPROGRAMS \
clean-binPROGRAMS maintainer-clean-binPROGRAMS uninstall-binPROGRAMS \
install-binPROGRAMS mostlyclean-libexecPROGRAMS \
distclean-libexecPROGRAMS clean-libexecPROGRAMS \
maintainer-clean-libexecPROGRAMS uninstall-libexecPROGRAMS \
install-libexecPROGRAMS mostlyclean-noinstPROGRAMS \
distclean-noinstPROGRAMS clean-noinstPROGRAMS \
maintainer-clean-noinstPROGRAMS uninstall-cdburnDATA install-cdburnDATA \
uninstall-modulesconfDATA install-modulesconfDATA \
uninstall-pkgconfigDATA install-pkgconfigDATA uninstall-schemaDATA \
install-schemaDATA uninstall-libnautilus_burnincludeHEADERS \
install-libnautilus_burnincludeHEADERS install-data-recursive \
uninstall-data-recursive install-exec-recursive \
uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
all-recursive check-recursive installcheck-recursive info-recursive \
dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck all-recursive-am \
install-exec-am install-exec install-data-local install-data-am \
install-data install-am install uninstall-am uninstall all-redirect \
all-am all installdirs-am installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean

@INTLTOOL_SCHEMAS_RULE@
cd-recorder-marshal.h: cdrecorder-marshal.list
	( $(GLIB_GENMARSHAL) --prefix=cdrecorder_marshal $(srcdir)/cdrecorder-marshal.list --header > cd-recorder-marshal.h )
cd-recorder-marshal.c: cd-recorder-marshal.h
	( $(GLIB_GENMARSHAL) --prefix=cdrecorder_marshal $(srcdir)/cdrecorder-marshal.list --body --header > cd-recorder-marshal.c )

install-data-local:
	-GCONF_CONFIG_SOURCE=$(GCONF_SCHEMA_CONFIG_SOURCE) $(GCONFTOOL) --makefile-install-rule $(srcdir)/$(schema_DATA)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
