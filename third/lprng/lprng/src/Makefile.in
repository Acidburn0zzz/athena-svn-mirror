########################################################################
# LPRng - An Extended Print Spooler System
#
# Copyright 1988-1997 Patrick Powell, San Diego, California
#     papowell@astart.com
# See LICENSE for conditions of use.
#
###########################################################################
# MODULE: Makefile
# $Id: Makefile.in,v 1.7 1999-05-04 19:24:20 danw Exp $
###########################################################################
#
# WARNING: This is a makefile for GNU Make or when modified by BSD Make
# the appropriate install script.
# GNU Make uses VPATH and replacement facilities
# BSD Make uses .PATH and replacement facilities

#************** GENERAL CONFIGURATION INFORMATION ************************
# where user commands are installed: lpr, lpq, lprm, lpc.
# Also the SysV emulation commands: lp, lpstat.
# If these paths are /usr/lib, /usr/ucb etc., make sure you
# have backup copies of the system version!
#
#
# These are automatically sedded in by the "configure" script, but you
# may need to change them if you're on a strange version of UNIX.

# any libs that need to be used to get these programs to compile:
#
LIBS=@LIBS@
# LIBS=-lposix -s       # (on A/UX, if the above doesn't work)
# LIBS=-ldmalloc        # for malloc debugging


# what command to use to "ranlib" or "lorder" the library.
#
RANLIB=@RANLIB@

# the compiler optimisation/debugging flags you wish to use.
#
# what C compiler to use.
#
CC=@CC@

# what C preprocessor to use.
#
CPP=@CPP@ $(CCOPTFLAGS)

# how to install stuff.
#
INSTALLCMD=@INSTALL@

# a shell interpreter that's as close to the POSIX shell as possible.
#
SHELL_PATH=@SHELL@
SHELL = @SHELL@

SRC=@srcdir@
@SET_MAKE@
LDCC=@LDCC@

# where executables are installed
prefix=@prefix@
exec_prefix=@exec_prefix@
bindir     = @bindir@
sbindir    = @sbindir@
libexecdir = @libexecdir@
libdir     = @libdir@
localedir = $(prefix)/@DATADIRNAME@/locale
INSTALL_BIN =     $(DESTDIR)@bindir@
# where daemons are installed: lpd
#INSTALL_LIB =     ${prefix}/lib
INSTALL_LIB =     $(DESTDIR)@LPRNGLPDDIR@
# where maintenance commands are installed: checkpc, setstatus
#INSTALL_MAINT =   ${exec_prefix}/bin
INSTALL_MAINT =   $(DESTDIR)@LPRNGADMINDIR@

CF := @CPPFLAGS@ @CFLAGS@ @DEFS@ -DLOCALEDIR=\"$(localedir)\"
LF := @LDFLAGS@

#********************** End of configure modifiable settings ************


#********************** OPTIONAL DEFINITIONS ****************************
# These are various flags and settings that will be used by the
# compiler to generate code
#


#********************** KERBEROS 4 **************************************
#  The Kerberos 4 authentication facilities are provided for the
#  MIT Athena Project.  These are rather ummm... whimpy, and should
#  not be used.  The Kerberos 5 is the default standard.  In fact,
#  the only reason for the Kerberos 4 support was to allow LPRng to
#  communicate with the existing Kerberos 4 print servers at MIT.
#
#  If you still want Kerberos 4,  then uncomment the following line
# CF := $(CF) -DMIT_KERBEROS4

#### ****** TESTING AND SECURITY LOOPHOLE ******************************
# Define GETENV to allow the LPD_CONFIG environment
#  variable to be used as the name of a configuration file.  In non-testing
#  systems,  this is a security loophole.
# CF := $(CF) -DGETENV

#### ****** LPD_CONF PATHNAME *********
# Set location of configuration file
#
#GNU
ifdef LPD_CONF_PATH
CF := $(CF) -DLPD_CONF_PATH=\"$(LPD_CONF_PATH)\"
endif
#BSD .ifdef LPD_CONF_PATH
#BSD CF := $(CF) -DLPD_CONF_PATH=\"$(LPD_CONF_PATH)\"
#BSD .endif

#### ****** PRINTCAP_PATH PATHNAME *********
# Set location of configuration file
#
#GNU
ifdef PRINTCAP_PATH
CF := $(CF) -DPRINTCAP_PATH=\"$(PRINTCAP_PATH)\"
endif
#BSD .ifdef PRINTCAP_PATH
#BSD CF := $(CF) -DPRINTCAP_PATH=\"$(PRINTCAP_PATH)\"
#BSD .endif

##### DMalloc Debugging Package
#
#CF := $(CF) -DDMALLOC


#********************* OVERRIDING CONFIGURES' GUESSES ******************
#
#
# If you get errors similar to the ones below, it may be
# because "configure" guessed wrong. You can override the
# guesses here, by uncommenting the appropriate line...

# "recvfiles.c: unknown struct fsb has no size":
# define STATFS: to use statfs(2) (BSD)
#        STATVFS: to use statvfs(2) (SVR4)
#     others for system specific cases
#
# CF := $(CF) -DMAKE_USE_STATFS=ULTRIX_STATFS
# CF := $(CF) -DMAKE_USE_STATFS=SVR3_STATFS
# CF := $(CF) -DMAKE_USE_STATFS=STATVFS
# CF := $(CF) -DMAKE_USE_STATFS=STATFS

# define MAKE_USE_STTY = 
#    SGTTYB   to use struct sgttyb and <sgtty.h> (BSD)
#    TERMIO  to use struct termio and <termio.h> (old sysV)
#    TERMIOS to use struct termios and <termio.h> (SVR4)
#
# CF := $(CF) -DMAKE_USE_STTY=SGTTYB
# CF := $(CF) -DMAKE_USE_STTY=TERMIO
# CF := $(CF) -DMAKE_USE_STTY=TERMIOS

# a better way to do this is to edit the "ARGH" section of portable.h,
# and add the appropriate lines to the section for your OS, or add a new
# section if one doesn't exist; then you can send me the patches and
# I'll incorporate them into the distribution.

#
# You might discover that the default locking mechanism
# does not work.  Try one of the following to override the
# configured value: fcntl(), lockf(), flock(), and 0 to suppress locking
#
# CF := $(CF) -DLOCK_DEVS=devlock_fcntl
# CF := $(CF) -DLOCK_DEVS=devlock_lockf
# CF := $(CF) -DLOCK_DEVS=devlock_flock
# CF := $(CF) -DLOCK_DEVS=0
#

# SETPROCTITLE - overwrites the program argument information
#   when ps is used, displays status.  Used only by LPD
# if this does not work, define the following
# CF := $(CF) -DNO_SETPROCTITLE


SRCDIRS=${SRC}/common ${SRC}/AUTHENTICATE
INCLUDE=.. ${SRC}/include

#GNU
VPATH=$(subst :, ,$(INCLUDE) $(SRCDIRS))
INCS= $(patsubst %,-I%,$(INCLUDE))
#
#BSD .PATH: $(INCLUDE) $(SRCDIRS)
#BSD INCS= $(INCLUDE:S/^/-I/g)

# Compiler flags
CFLAGS  := $(CF) $(CCOPTFLAGS) -g -DHAVE_CONFIG_H $(INCS)
# Loader flags
LDFLAGS := $(LF) -g $(LDFLAGS)

#**********************  End of Configurable Part ****************************

TARGET= lpc lpd lpq lpr lprm lpf lpraccnt pclbanner checkpc lp lpstat \
	lpbanner monitor lpd.conf

NONTARGET = sserver sclient


LPD_OBJS= lpd.o

LPR_OBJS= lpr.o
LPQ_OBJS= lpq.o
LPSTAT_OBJS= lpstat.o
LPRM_OBJS= lprm.o
LPC_OBJS= lpc.o
CHECKPC_OBJS = checkpc.o
LPF_OBJS = lpf.o plp_snprintf.o
LPRACCNT_OBJS= lpraccnt.o
MONITOR_OBJS= monitor.o getopt.o
LPBANNER_OBJS= lpbanner.o

LIBLPR_OBJS = \
	accounting.o child.o controlword.o copyright.o \
	debug.o errormsg.o fileopen.o gethostinfo.o \
	getopt.o getprinter.o getqueue.o globmatch.o \
	initialize.o krb5_auth.o \
	linelist.o linksupport.o lockfile.o \
	lpd_control.o lpd_jobs.o lpd_logger.o lpd_rcvjob.o \
	lpd_remove.o lpd_secure.o lpd_status.o \
	merge.o permission.o plp_snprintf.o printjob.o \
	proctitle.o sendauth.o sendjob.o sendmail.o sendreq.o \
	stty.o termclear.o utilities.o vars.o

ALL_OBJS = $(LIBLPR_OBJS) \
	$(LPR_OBJS) $(LPQ_OBJS) $(LPC_OBJS) $(LPRM_OBJS) $(LPD_OBJS) \
	$(CHECKPC_OBJS) $(LPF_OBJS) $(LPRACCNT_OBJS) $(MONITOR_OBJS) $(LPBANNER_OBJS)

all: $(TARGET)

.PHONY: all ci clean \
	uninstall realclean mostlyclean distclean \
	TAGS info generate



# we want to force defaults to be updated whenever we
# change the options in Makefile or Makefile.bsd
#GNU
vars.o: Makefile
#
#BSD vars.o: Makefile.bsd

#
# use RANLIB with no ordering, or lorder/tsort if it is there
# if you do not have either, fall back and just build archive
# This appears to cover all cases for portability
#


liblpr.a: $(LIBLPR_OBJS)
	ar ruv $@ $(LIBLPR_ORDER)
	$(RANLIB) $@

lpd: $(LPD_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $^ $(LIBS)
lpr: $(LPR_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $^ $(LIBS)
lpq: $(LPQ_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $^ $(LIBS)
lpstat: $(LPSTAT_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $^ $(LIBS)
lprm: $(LPRM_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $^ $(LIBS)
lpc: $(LPC_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $^ $(LIBS)
checkpc: $(CHECKPC_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $^ $(LIBS)
lpf: $(LPF_OBJS)
	$(LDCC) $(LDFLAGS) -o $@ $^ $(LIBS)
lpraccnt: $(LPRACCNT_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $^ $(LIBS)
lpbanner: $(LPBANNER_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $^ $(LIBS)
monitor: $(MONITOR_OBJS) liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $^ $(LIBS)

pclbanner: ${SRC}/common/pclbanner.sh
	rm -f $@; cp $^ $@; chmod 555 $@

authenticate_pgp: ${SRC}/AUTHENTICATE/authenticate_pgp.sh
	rm -f $@; cp $^ $@; chmod 555 $@

#ptest: common/plp_snprintf.c
#	$(LDCC) $(CFLAGS) -DTEST -o ptest common/plp_snprintf.c

sserver: sserver.o liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $^ $(LIBS)
sclient: sclient.o liblpr.a
	$(LDCC) $(LDFLAGS) -o $@ $^ $(LIBS)

cancel:
	rm -f $@; ln -s lprm $@ 
lp: lpr
	rm -f $@; ln -s lpr $@

###########################################################################
# lpd.conf

lpd.conf: vars.c
	$(CPP) $(CFLAGS) -C $^  >/tmp/XYlpd.conf
	${SRC}/../UTILS/make_lpd_conf $^ </tmp/XYlpd.conf >/tmp/XXlpd.conf
	cp /tmp/XXlpd.conf $@

###########################################################################
# 
NORM_PERMS=      0755
SUID_ROOT_PERMS= 04755 -o root
PERMS=$(NORM_PERMS)
# comment out the next line to have LPRng installed non-setuid
PERMS=$(SUID_ROOT_PERMS)
###########################################################################

install: all ${INSTALL_LIB} ${INSTALL_BIN} ${INSTALL_MAINT}
	${INSTALLCMD} -m $(PERMS) lpq ${INSTALL_BIN}
	${INSTALLCMD} -m $(PERMS) lprm ${INSTALL_BIN}
	${INSTALLCMD} -m $(PERMS) lpr ${INSTALL_BIN}
	${INSTALLCMD} -m $(PERMS) lpstat ${INSTALL_BIN}
	${INSTALLCMD} -m $(PERMS) lpc ${INSTALL_MAINT}
	${INSTALLCMD} -m $(NORM_PERMS) lpd ${INSTALL_LIB}
	${INSTALLCMD} -m $(NORM_PERMS) lpf ${INSTALL_LIB}
	${INSTALLCMD} -m $(NORM_PERMS) lpbanner ${INSTALL_LIB}
	${INSTALLCMD} -m $(NORM_PERMS) checkpc ${INSTALL_MAINT}
	${INSTALLCMD} -m $(NORM_PERMS) lpraccnt ${INSTALL_MAINT}
	rm -f ${INSTALL_BIN}/lp;     ln -s lpr  ${INSTALL_BIN}/lp;
	rm -f ${INSTALL_BIN}/cancel; ln -s lprm ${INSTALL_BIN}/cancel;
	f=/etc/lpd.conf; \
	if [ -n "$(LPD_CONF_PATH)" ] ; then f=$(LPD_CONF_PATH); fi; \
	if [ ! -f "$$f" ] ; then \
		${INSTALLCMD} -m $(NORM_PERMS) lpd.conf $$f ; \
	else \
		${INSTALLCMD} -m $(NORM_PERMS) lpd.conf $$f.sample ; \
	fi;

${INSTALL_LIB}::
	${SRC}/mkinstalldirs $@
${INSTALL_BIN}::
	${SRC}/mkinstalldirs $@
${INSTALL_MAINT}::
	${SRC}/mkinstalldirs $@


uninstall:
	rm -f ${INSTALL_LIB}/lpd
	rm -f ${INSTALL_LIB}/lpf
	rm -f ${INSTALL_BIN}/lpq
	rm -f ${INSTALL_BIN}/lpstat
	rm -f ${INSTALL_BIN}/lprm
	rm -f ${INSTALL_BIN}/lpr
	rm -f ${INSTALL_MAINT}/lpc
	rm -f ${INSTALL_MAINT}/checkpc


###########################################################################


clean::
	-rm -f *.o *.core *.a ? core $(TARGET) $(NONTARGET)

realclean mostlyclean distclean:: clean
	-rm -f Makefile Makefile.bsd tags

info:
tags TAGS:
	ctags -t -d common/*.c include/*.h

###########################################################################

CI=
#CO=-kv
CO=-l

cifiles:
	if [ ! -d RCS ] ; then mkdir RCS ; fi ;
	checkin() { \
		rcs -l $$1; \
		ci $(CI) -mUpdate -t-Initial $$1; \
		co $(CO) $$1; \
	}; \
	for i in *; do \
		if [ -f "$$i" ] ; then \
			case $$i in \
				Makefile*|*install* ) echo $$i; checkin $$i ;; \
			esac; \
		fi; \
	done;

cifast ci: cifiles
	checkin() { \
		rcs -l $$1; \
		ci $(CI) -mUpdate -t-Initial $$1; \
		co $(CO) $$1; \
	}; \
	for i in *; do \
		if [ -d "$$i" ] ; then \
			case $$i in \
			RCS ) ;; \
			* ) if [ ! -d $$i/RCS ] ; then mkdir $$i/RCS ; fi ; \
				for j in $$i/*; do \
					if [ -f "$$j" ] ; then \
						checkin $$j; \
					fi; \
				done; \
				;; \
			esac; \
		fi; \
	done;

depend: /tmp/dep /tmp/order
	( sed -n '1,/^##.*GENERATED/p' ${SRC}/Makefile.in; \
		echo ; echo; \
	echo "########### LIBRARY ORDER #########"; \
	cat /tmp/order; \
	echo ; echo; \
	echo "########### DEPENDENCIES #########"; \
	cat /tmp/dep; ) >/tmp/Makefile.in
	mv ${SRC}/Makefile.in ${SRC}/Makefile.in.old
	cp /tmp/Makefile.in ${SRC}/Makefile.in
	( sed -n '1,/^##.*GENERATED/p' ${SRC}/Makefile; \
		echo ; echo; \
	echo "########### LIBRARY ORDER #########"; \
	cat /tmp/order; \
	echo ; echo; \
	echo "########### DEPENDENCIES #########"; \
	cat /tmp/dep; ) >/tmp/Makefile
	mv ${SRC}/Makefile ${SRC}/Makefile.old
	cp /tmp/Makefile ${SRC}/Makefile


/tmp/dep:: Makefile
/tmp/dep:: $(ALL_OBJS)
	${SRC}/../UTILS/makeinc $^ >$@

# make the order in which library files should be loader
# this requires hand tuning the makefile, but it is easier than
# trying to fix up things with conditional tests
#
/tmp/order:: Makefile
/tmp/order:: $(LIBLPR_OBJS)
	lorder $^ |tsort >/tmp/raw
	awk '\
		BEGIN { print "LIBLPR_ORDER = \\"; } \
		{ line = line " " $$0;            \
			if( ++i >= 4 ){               \
				print "\t" line "\\";    \
				line = "";               \
				i = 0;                   \
			}                            \
		}                                \
		END {                            \
			if( line != "" ){            \
				print "\t" line;         \
			}                            \
		}' /tmp/raw >/tmp/order
    
	
############# GENERATED ###################################################


########### LIBRARY ORDER #########
LIBLPR_ORDER = \
	 termclear.o lpd_status.o lpd_secure.o lpd_rcvjob.o\
	 lpd_logger.o lpd_jobs.o lpd_control.o lockfile.o\
	 krb5_auth.o initialize.o getopt.o debug.o\
	 copyright.o controlword.o accounting.o stty.o\
	 sendmail.o sendjob.o proctitle.o printjob.o\
	 lpd_remove.o sendreq.o sendauth.o permission.o\
	 utilities.o merge.o linksupport.o linelist.o\
	 gethostinfo.o getqueue.o getprinter.o fileopen.o\
	 vars.o globmatch.o errormsg.o plp_snprintf.o\
	 child.o


########### DEPENDENCIES #########
accounting.o :	config.h accounting.h child.h debug.h errorcodes.h errormsg.h fileopen.h getqueue.h linelist.h linksupport.h lp.h lpd.h plp_snprintf.h portable.h utilities.h utilities.h
child.o :	config.h child.h debug.h errormsg.h gethostinfo.h getopt.h getqueue.h linelist.h lp.h plp_snprintf.h portable.h proctitle.h utilities.h utilities.h
controlword.o :	config.h control.h debug.h errormsg.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
copyright.o :	config.h copyright.h debug.h errormsg.h license.h linelist.h lp.h patchlevel.h plp_snprintf.h portable.h utilities.h utilities.h
debug.o :	config.h child.h debug.h errorcodes.h errormsg.h getopt.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
errormsg.o :	config.h child.h debug.h errorcodes.h errormsg.h getopt.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
fileopen.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
gethostinfo.o :	config.h debug.h errormsg.h gethostinfo.h getqueue.h globmatch.h linelist.h linksupport.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
getopt.o :	config.h debug.h errormsg.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
getprinter.o :	config.h debug.h errormsg.h getprinter.h getqueue.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
getqueue.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h getprinter.h getqueue.h globmatch.h linelist.h lp.h merge.h plp_snprintf.h portable.h utilities.h utilities.h
globmatch.o :	config.h debug.h errormsg.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
initialize.o :	config.h debug.h errormsg.h getopt.h getqueue.h initialize.h linelist.h lp.h plp_snprintf.h portable.h proctitle.h utilities.h utilities.h
krb5_auth.o :	config.h child.h debug.h errormsg.h fileopen.h getqueue.h krb5_auth.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
linelist.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h gethostinfo.h getqueue.h globmatch.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
linksupport.o :	config.h debug.h errormsg.h gethostinfo.h linelist.h linksupport.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
lockfile.o :	config.h debug.h errormsg.h fileopen.h linelist.h lockfile.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
lpd_control.o :	config.h child.h control.h debug.h errormsg.h fileopen.h gethostinfo.h getopt.h getprinter.h getqueue.h globmatch.h linelist.h lp.h lpd.h lpd_control.h permission.h plp_snprintf.h portable.h proctitle.h utilities.h utilities.h
lpd_jobs.o :	config.h accounting.h child.h debug.h errorcodes.h errormsg.h fileopen.h gethostinfo.h getopt.h getprinter.h getqueue.h linelist.h linksupport.h lockfile.h lp.h lpd.h lpd_jobs.h lpd_remove.h merge.h permission.h plp_snprintf.h portable.h printjob.h proctitle.h sendjob.h sendmail.h stty.h utilities.h utilities.h
lpd_logger.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h getopt.h getprinter.h getqueue.h linelist.h linksupport.h lp.h lpd.h lpd_logger.h plp_snprintf.h portable.h proctitle.h utilities.h utilities.h
lpd_rcvjob.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h gethostinfo.h getopt.h getqueue.h linelist.h linksupport.h lockfile.h lp.h lpd.h lpd_jobs.h lpd_rcvjob.h permission.h plp_snprintf.h portable.h proctitle.h utilities.h utilities.h
lpd_remove.o :	config.h child.h debug.h errormsg.h fileopen.h gethostinfo.h getopt.h getprinter.h getqueue.h linelist.h lp.h lpd_remove.h permission.h plp_snprintf.h portable.h proctitle.h sendreq.h utilities.h utilities.h
lpd_secure.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h getopt.h getqueue.h globmatch.h krb5_auth.h linelist.h linksupport.h lp.h lpd.h lpd_jobs.h lpd_rcvjob.h lpd_secure.h permission.h plp_snprintf.h portable.h proctitle.h sendauth.h utilities.h utilities.h
lpd_status.o :	config.h child.h debug.h errormsg.h fileopen.h gethostinfo.h getopt.h getprinter.h getqueue.h globmatch.h linelist.h lp.h lpd_status.h permission.h plp_snprintf.h portable.h proctitle.h sendreq.h utilities.h utilities.h
merge.o :	config.h debug.h errormsg.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
permission.o :	config.h debug.h errormsg.h fileopen.h gethostinfo.h getqueue.h globmatch.h linelist.h linksupport.h lp.h permission.h plp_snprintf.h portable.h utilities.h utilities.h
plp_snprintf.o :	config.h config.h
printjob.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h getqueue.h linelist.h lp.h plp_snprintf.h portable.h printjob.h utilities.h utilities.h
proctitle.o :	config.h debug.h errormsg.h linelist.h lp.h plp_snprintf.h portable.h proctitle.h utilities.h utilities.h
sendauth.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h gethostinfo.h getqueue.h krb5_auth.h linelist.h linksupport.h lp.h lpd.h plp_snprintf.h portable.h sendauth.h utilities.h utilities.h
sendjob.o :	config.h accounting.h debug.h errorcodes.h errormsg.h fileopen.h getqueue.h linelist.h linksupport.h lp.h plp_snprintf.h portable.h sendauth.h sendjob.h utilities.h utilities.h
sendmail.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h getqueue.h linelist.h lp.h plp_snprintf.h portable.h sendmail.h utilities.h utilities.h
sendreq.o :	config.h child.h debug.h errormsg.h fileopen.h getqueue.h linelist.h linksupport.h lp.h plp_snprintf.h portable.h readstatus.h sendauth.h sendreq.h utilities.h utilities.h
stty.o :	config.h debug.h errormsg.h linelist.h lp.h plp_snprintf.h portable.h stty.h utilities.h utilities.h
termclear.o :	config.h debug.h errormsg.h linelist.h lp.h plp_snprintf.h portable.h termclear.h utilities.h utilities.h
utilities.o :	config.h debug.h errorcodes.h errormsg.h getopt.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
vars.o :	config.h accounting.h child.h debug.h errormsg.h gethostinfo.h getqueue.h linelist.h lp.h permission.h plp_snprintf.h portable.h printjob.h utilities.h utilities.h
lpr.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h getopt.h getprinter.h getqueue.h initialize.h linelist.h linksupport.h lp.h lpr.h patchlevel.h plp_snprintf.h portable.h printjob.h sendauth.h sendjob.h utilities.h utilities.h
lpq.o :	config.h child.h debug.h errormsg.h getopt.h getprinter.h initialize.h linelist.h linksupport.h lp.h lpq.h patchlevel.h plp_snprintf.h portable.h sendreq.h termclear.h utilities.h utilities.h
lpc.o :	config.h child.h control.h debug.h errormsg.h getopt.h getprinter.h initialize.h linelist.h lp.h lpc.h patchlevel.h plp_snprintf.h portable.h sendauth.h sendreq.h utilities.h utilities.h
lprm.o :	config.h child.h debug.h errormsg.h getopt.h getprinter.h initialize.h linelist.h linksupport.h lp.h lprm.h patchlevel.h plp_snprintf.h portable.h sendauth.h sendreq.h utilities.h utilities.h
lpd.o :	config.h child.h debug.h errorcodes.h errormsg.h fileopen.h gethostinfo.h getopt.h getprinter.h getqueue.h initialize.h krb5_auth.h linelist.h linksupport.h lp.h lpd.h lpd_control.h lpd_jobs.h lpd_logger.h lpd_rcvjob.h lpd_remove.h lpd_secure.h lpd_status.h patchlevel.h permission.h plp_snprintf.h portable.h proctitle.h utilities.h utilities.h
checkpc.o :	config.h checkpc.h child.h debug.h errormsg.h fileopen.h getopt.h getprinter.h getqueue.h initialize.h linelist.h lockfile.h lp.h lpd_remove.h patchlevel.h plp_snprintf.h portable.h proctitle.h stty.h utilities.h utilities.h
lpf.o :	config.h portable.h portable.h
lpraccnt.o :	config.h debug.h errormsg.h linelist.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
monitor.o :	config.h debug.h errormsg.h getqueue.h linelist.h linksupport.h lp.h plp_snprintf.h portable.h utilities.h utilities.h
