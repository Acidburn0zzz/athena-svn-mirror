# 1 "./common/vars.c"
/***************************************************************************
 * LPRng - An Extended Print Spooler System
 *
 * Copyright 1988-1999, Patrick Powell, San Diego, CA
 *     papowell@astart.com
 * See LICENSE for conditions of use.
 *
 ***************************************************************************/

 static char *const _id =
"$Id: lpd.conf.working,v 1.1.1.1 1999-05-24 18:28:56 danw Exp $";


/* force local definitions */




# 1 "include/lp.h" 1
/***************************************************************************
 * LPRng - An Extended Print Spooler System
 *
 * Copyright 1988-1999, Patrick Powell, San Diego, CA
 *     papowell@astart.com
 * See LICENSE for conditions of use.
 * $Id: lpd.conf.working,v 1.1.1.1 1999-05-24 18:28:56 danw Exp $
 ***************************************************************************/










/*****************************************************************
 * get the portability information and configuration 
 *****************************************************************/
# 1 "include/portable.h" 1
/***************************************************************************
 * LPRng - An Extended Print Spooler System
 *
 * Copyright 1988-1999, Patrick Powell, San Diego, CA
 *     papowell@astart.com
 * See LICENSE for conditions of use.
 * $Id: lpd.conf.working,v 1.1.1.1 1999-05-24 18:28:56 danw Exp $
 ***************************************************************************/


/***************************************************************************
 * LPRng - An Extended Print Spooler System
 *
 * Copyright 1988-1997, Patrick Powell, San Diego, CA
 *     papowell@sdsu.edu
 * See LICENSE for conditions of use.
 *
 ***************************************************************************
 * MODULE: portable.h
 * PURPOSE:
 * The configure program generates config.h,  which defines various
 * macros indicating the presence or abscence of include files, etc.
 * However, there are some systems which pass the tests,  but things
 * do not work correctly on them.  This file will try and fix
 * these things up for the user.
 *
 * NOTE:  if there were no problems, this file would be:
 *    #include "config.h"
 *
 * Sigh. Patrick Powell Thu Apr  6 07:00:48 PDT 1995 <papowell@sdsu.edu>
 *    NOTE: thanks to all the folks who worked on the PLP software,
 *    Justin Mason <jmason@iona.ie> especially.  Some of the things
 *    that you have to do to get portability are truely bizzare.
 *
 * portable.h,v 3.14 1998/03/24 02:43:22 papowell Exp
 **************************************************************************/













# 1 "../config.h" 1
/* config.h.  Generated automatically by configure.  */
/* config.h.in.  Generated automatically from configure.in by autoheader.  */

/* Define if on AIX 3.
   System headers sometimes define this.
   We just want to avoid a redefinition error message.  */

/* #undef _ALL_SOURCE */


/* Define if using alloca.c.  */
/* #undef C_ALLOCA */

/* Define to empty if the keyword does not work.  */
/* #undef const */

/* Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP systems.
   This function is required for alloca.c support on those systems.  */
/* #undef CRAY_STACKSEG_END */

/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef gid_t */

/* Define if you have alloca, as a function or macro.  */


/* Define if you have <alloca.h> and it should be used (not on Ultrix).  */
/* #undef HAVE_ALLOCA_H */

/* Define if you don't have vprintf but do have _doprnt.  */
/* #undef HAVE_DOPRNT */

/* Define if you have a working `mmap' system call.  */


/* Define if system calls automatically restart after interruption
   by a signal.  */
/* #undef HAVE_RESTARTABLE_SYSCALLS */

/* Define if you have <sys/wait.h> that is POSIX.1 compatible.  */


/* Define if you have <vfork.h>.  */
/* #undef HAVE_VFORK_H */

/* Define if you have the vprintf function.  */


/* Define as __inline if that's what the C compiler calls it.  */
/* #undef inline */

/* Define if on MINIX.  */
/* #undef _MINIX */

/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef mode_t */

/* Define to `long' if <sys/types.h> doesn't define.  */
/* #undef off_t */

/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef pid_t */

/* Define if the system does not provide POSIX.1 features except
   with this defined.  */
/* #undef _POSIX_1_SOURCE */

/* Define if you need to in order for stat and other things to work.  */
/* #undef _POSIX_SOURCE */

/* Define as the return type of signal handlers (int or void).  */


/* Define to `unsigned' if <sys/types.h> doesn't define.  */
/* #undef size_t */

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
 STACK_DIRECTION > 0 => grows toward higher addresses
 STACK_DIRECTION < 0 => grows toward lower addresses
 STACK_DIRECTION = 0 => direction of growth unknown
 */
/* #undef STACK_DIRECTION */

/* Define if you have the ANSI C header files.  */


/* Define on System V Release 4.  */
/* #undef SVR4 */

/* Define if you can safely include both <sys/time.h> and <time.h>.  */


/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef uid_t */

/* Define vfork as fork if vfork does not work.  */
/* #undef vfork */

/* Define if on AIX 3.
   System headers sometimes define this.
   We just want to avoid a redefinition error message.  */

/* #undef _ALL_SOURCE */


/* Define if using ARCHITECTURE  */


/* Define if using alloca.c.  */
/* #undef C_ALLOCA */

/* Define to empty if the keyword does not work.  */
/* #undef const */

/* Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP systems.
   This function is required for alloca.c support on those systems.  */
/* #undef CRAY_STACKSEG_END */

/* Define for DECALPHA  */
/* #undef DECALPHA */

/* Define if you want to disable force_localhost default  */
/* #undef DISABLE_FORCE_LOCALHOST */

/* Define to 1 if NLS is requested.  */
/* #undef ENABLE_NLS */

/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef gid_t */

/* Define if you have alloca, as a function or macro.  */


/* Define if you have <alloca.h> and it should be used (not on Ultrix).  */
/* #undef HAVE_ALLOCA_H */

/* Define if you have a broken TIOCEXCL (IRIX 5) */
/* #undef HAVE_BROKEN_TIOCEXCL */

/* Define as 1 if you have catgets and don't want to use GNU gettext.  */
/* #undef HAVE_CATGETS */

/* Define if you don't have vprintf but do have _doprnt.  */
/* #undef HAVE_DOPRNT */

/* Define if <errno.h> contains a declaration for extern int errno */


/* Define if flock definition available */


/* Define if you have gethostname() defined */


/* Define if you have to use getpgrp(0) to get process group */


/* Define as 1 if you have gettext and don't want to use GNU gettext.  */
/* #undef HAVE_GETTEXT */

/* Define if you have innetgr() defined in include file */


/* Define if you have Kerberos 4 krb_sendauth defined in include file */
/* #undef HAVE_KRB_AUTH_DEF */

/* Define if your locale.h file contains LC_MESSAGES.  */
/* #undef HAVE_LC_MESSAGES */

/* Define if the `long long' type works.  */


/* Define if you have a working `mmap' system call.  */


/* Define if you have a openlog prototype.  */


/* Define if _res defined */


/* Define if system calls automatically restart after interruption
   by a signal.  */
/* #undef HAVE_RESTARTABLE_SYSCALLS */

/* Define if you have to use setpgrp(0,0) to set process group */


/* Define if you do have setproctitle() defined */
/* #undef HAVE_SETPROCTITLE_DEF */

/* Define to 1 if stpcpy function is available.  */
/* #undef HAVE_STPCPY */

/* Define if you have strcasecmp definition  */


/* Define if we have a BSD-ish struct exec in <a.out.h> */


/* Define if we have a SOLARIS struct linger in <socket.h> */
/* #undef HAVE_STRUCT_LINGER */

/* Define if sys_errlist has the error strings. */


/* Define if sys_errlist is defined.  */


/* Define if syslog() defined */


/* Define if sys_nerr has number of err strings. */


/* Define if sys_nerr has definition.  */


/* Define if sys_siglist has the signal strings. */


/* Define if sys_siglist is defined in unistd.h include file */


/* Define if you have <sys/wait.h> that is POSIX.1 compatible.  */


/* Define if tgetent() has definition  */


/* Define if tgetstr() has definition  */


/* Use the "union wait" union to get process status from wait3/waitpid */


/* Define if you have <vfork.h>.  */
/* #undef HAVE_VFORK_H */

/* Define if you have the vprintf function.  */


/* HP/UX */
/* #undef HPUX */

/* HP/UX source */
/* #undef _HPUX_SOURCE */

/* Define if the struct in6_addr is defined */
/* #undef IN6_ADDR */

/* Define if the LINUX struct in_addr6 is defined */
/* #undef IN_ADDR6 */

/* Define as __inline if that's what the C compiler calls it.  */
/* #undef inline */

/* IRIX */
/* #undef IRIX */

/* Define if on MINIX.  */
/* #undef _MINIX */

/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef mode_t */

/* Define to `long' if <sys/types.h> doesn't define.  */
/* #undef off_t */

/* make autoconf happy */



/* Define to the name of the distribution.  */


/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef pid_t */

/* Define if the system does not provide POSIX.1 features except
   with this defined.  */
/* #undef _POSIX_1_SOURCE */

/* Define if you need to in order for stat and other things to work.  */
/* #undef _POSIX_SOURCE */

/* Define if quad_t is NOT present on the system  */
/* #undef quad_t */

/* Define as the return type of signal handlers (int or void).  */


/* Define to `unsigned' if <sys/types.h> doesn't define.  */
/* #undef size_t */

/* Define on SUN Solaris */
/* #undef SOLARIS */

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
 STACK_DIRECTION > 0 => grows toward higher addresses
 STACK_DIRECTION < 0 => grows toward lower addresses
 STACK_DIRECTION = 0 => direction of growth unknown
 */
/* #undef STACK_DIRECTION */

/* Define if you have the ANSI C header files.  */


/* Define if you have the ANSI C header files.  */


/* Define if you have struct stat with st_mtime_nsec */
/* #undef ST_MTIMENSEC */
/* Define if you have struct stat with st_mtimespec.ts_nsec */


/* Define on SunOS */
/* #undef SUNOS */

/* Define on System V Release 4.  */
/* #undef SVR4 */

/* Define if you can safely include both <sys/time.h> and <time.h>.  */


/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef uid_t */

/* Define if we are to use the old sgttyb structure and <sgtty.h>. */
/* #undef USE_SGTTYB */

/* Define how to get file system space */


/* Define how to change serial line */


/* Define if we are to use the termio structure and TCGETA. */
/* #undef USE_TERMIO */

/* Define if we are to use the termios structure and TCGETS. */


/* Define if we are to use the HP TERMIOX calls */
/* #undef USE_TERMIOX */

/* Define to the version of the distribution.  */


/* Define vfork as fork if vfork does not work.  */
/* #undef vfork */

/* Define if you have the __argz_count function.  */
/* #undef HAVE___ARGZ_COUNT */

/* Define if you have the __argz_next function.  */
/* #undef HAVE___ARGZ_NEXT */

/* Define if you have the __argz_stringify function.  */
/* #undef HAVE___ARGZ_STRINGIFY */

/* Define if you have the cfsetispeed function.  */


/* Define if you have the dcgettext function.  */
/* #undef HAVE_DCGETTEXT */

/* Define if you have the fcntl function.  */


/* Define if you have the flock function.  */


/* Define if you have the getcwd function.  */


/* Define if you have the getdtablesize function.  */


/* Define if you have the gethostbyname2 function.  */


/* Define if you have the gethostname function.  */


/* Define if you have the getpagesize function.  */


/* Define if you have the getrlimit function.  */


/* Define if you have the inet_aton function.  */


/* Define if you have the inet_ntop function.  */


/* Define if you have the inet_pton function.  */


/* Define if you have the innetgr function.  */


/* Define if you have the killpg function.  */


/* Define if you have the lockf function.  */
/* #undef HAVE_LOCKF */

/* Define if you have the mkstemp function.  */


/* Define if you have the mktemp function.  */


/* Define if you have the munmap function.  */


/* Define if you have the openlog function.  */


/* Define if you have the putenv function.  */


/* Define if you have the rand function.  */


/* Define if you have the random function.  */


/* Define if you have the setenv function.  */


/* Define if you have the seteuid function.  */


/* Define if you have the setlocale function.  */


/* Define if you have the setpgid function.  */


/* Define if you have the setproctitle function.  */


/* Define if you have the setresuid function.  */
/* #undef HAVE_SETRESUID */

/* Define if you have the setreuid function.  */


/* Define if you have the setsid function.  */


/* Define if you have the sigaction function.  */


/* Define if you have the siglongjmp function.  */


/* Define if you have the sigprocmask function.  */


/* Define if you have the socketpair function.  */


/* Define if you have the stpcpy function.  */
/* #undef HAVE_STPCPY */

/* Define if you have the strcasecmp function.  */


/* Define if you have the strchr function.  */


/* Define if you have the strdup function.  */


/* Define if you have the strerror function.  */


/* Define if you have the strncasecmp function.  */


/* Define if you have the sysconf function.  */


/* Define if you have the sysinfo function.  */
/* #undef HAVE_SYSINFO */

/* Define if you have the tcdrain function.  */


/* Define if you have the tcflush function.  */


/* Define if you have the tcsetattr function.  */


/* Define if you have the uname function.  */


/* Define if you have the wait3 function.  */


/* Define if you have the waitpid function.  */


/* Define if you have the <a.out.h> header file.  */


/* Define if you have the <a_out.h> header file.  */


/* Define if you have the <aouthdr.h> header file.  */
/* #undef HAVE_AOUTHDR_H */

/* Define if you have the <ar.h> header file.  */


/* Define if you have the <argz.h> header file.  */
/* #undef HAVE_ARGZ_H */

/* Define if you have the <arpa/inet.h> header file.  */


/* Define if you have the <arpa/nameser.h> header file.  */


/* Define if you have the <assert.h> header file.  */


/* Define if you have the <com_err.h> header file.  */
/* #undef HAVE_COM_ERR_H */

/* Define if you have the <compat.h> header file.  */
/* #undef HAVE_COMPAT_H */

/* Define if you have the <ctype.h> header file.  */


/* Define if you have the <curses.h> header file.  */


/* Define if you have the <dirent.h> header file.  */


/* Define if you have the <errno.h> header file.  */


/* Define if you have the <exechdr.h> header file.  */
/* #undef HAVE_EXECHDR_H */

/* Define if you have the <fcntl.h> header file.  */


/* Define if you have the <filehdr.h> header file.  */
/* #undef HAVE_FILEHDR_H */

/* Define if you have the <grp.h> header file.  */


/* Define if you have the <krb.h> header file.  */
/* #undef HAVE_KRB_H */

/* Define if you have the <krb5.h> header file.  */
/* #undef HAVE_KRB5_H */

/* Define if you have the <limits.h> header file.  */


/* Define if you have the <locale.h> header file.  */


/* Define if you have the <machine/vmparam.h> header file.  */


/* Define if you have the <malloc.h> header file.  */


/* Define if you have the <memory.h> header file.  */


/* Define if you have the <ncurses.h> header file.  */
/* #undef HAVE_NCURSES_H */

/* Define if you have the <ndir.h> header file.  */
/* #undef HAVE_NDIR_H */

/* Define if you have the <netdb.h> header file.  */


/* Define if you have the <netinet/in.h> header file.  */


/* Define if you have the <nl_types.h> header file.  */
/* #undef HAVE_NL_TYPES_H */

/* Define if you have the <nlist.h> header file.  */


/* Define if you have the <pwd.h> header file.  */


/* Define if you have the <reloc.h> header file.  */
/* #undef HAVE_RELOC_H */

/* Define if you have the <resolv.h> header file.  */


/* Define if you have the <setjmp.h> header file.  */


/* Define if you have the <sgs.h> header file.  */
/* #undef HAVE_SGS_H */

/* Define if you have the <sgtty.h> header file.  */


/* Define if you have the <signal.h> header file.  */


/* Define if you have the <stab.h> header file.  */


/* Define if you have the <stdarg.h> header file.  */


/* Define if you have the <stdio.h> header file.  */


/* Define if you have the <stdlib.h> header file.  */


/* Define if you have the <string.h> header file.  */


/* Define if you have the <strings.h> header file.  */


/* Define if you have the <sys/dir.h> header file.  */


/* Define if you have the <sys/exec.h> header file.  */


/* Define if you have the <sys/exechdr.h> header file.  */
/* #undef HAVE_SYS_EXECHDR_H */

/* Define if you have the <sys/fcntl.h> header file.  */


/* Define if you have the <sys/file.h> header file.  */


/* Define if you have the <sys/ioctl.h> header file.  */


/* Define if you have the <sys/loader.h> header file.  */
/* #undef HAVE_SYS_LOADER_H */

/* Define if you have the <sys/mount.h> header file.  */


/* Define if you have the <sys/ndir.h> header file.  */
/* #undef HAVE_SYS_NDIR_H */

/* Define if you have the <sys/param.h> header file.  */


/* Define if you have the <sys/pstat.h> header file.  */
/* #undef HAVE_SYS_PSTAT_H */

/* Define if you have the <sys/resource.h> header file.  */


/* Define if you have the <sys/select.h> header file.  */


/* Define if you have the <sys/signal.h> header file.  */


/* Define if you have the <sys/socket.h> header file.  */


/* Define if you have the <sys/stat.h> header file.  */


/* Define if you have the <sys/statfs.h> header file.  */
/* #undef HAVE_SYS_STATFS_H */

/* Define if you have the <sys/statvfs.h> header file.  */
/* #undef HAVE_SYS_STATVFS_H */

/* Define if you have the <sys/syslog.h> header file.  */


/* Define if you have the <sys/systeminfo.h> header file.  */
/* #undef HAVE_SYS_SYSTEMINFO_H */

/* Define if you have the <sys/termio.h> header file.  */
/* #undef HAVE_SYS_TERMIO_H */

/* Define if you have the <sys/termiox.h> header file.  */
/* #undef HAVE_SYS_TERMIOX_H */

/* Define if you have the <sys/time.h> header file.  */


/* Define if you have the <sys/ttold.h> header file.  */
/* #undef HAVE_SYS_TTOLD_H */

/* Define if you have the <sys/ttycom.h> header file.  */


/* Define if you have the <sys/types.h> header file.  */


/* Define if you have the <sys/utsname.h> header file.  */


/* Define if you have the <sys/vfs.h> header file.  */
/* #undef HAVE_SYS_VFS_H */

/* Define if you have the <sys/wait.h> header file.  */


/* Define if you have the <syslog.h> header file.  */


/* Define if you have the <term.h> header file.  */
/* #undef HAVE_TERM_H */

/* Define if you have the <termcap.h> header file.  */
/* #undef HAVE_TERMCAP_H */

/* Define if you have the <termio.h> header file.  */
/* #undef HAVE_TERMIO_H */

/* Define if you have the <termios.h> header file.  */


/* Define if you have the <time.h> header file.  */


/* Define if you have the <unistd.h> header file.  */


/* Define if you have the <utsname.h> header file.  */
/* #undef HAVE_UTSNAME_H */

/* Define if you have the <values.h> header file.  */


/* Define if you have the <varargs.h> header file.  */


/* Define if you have the <vmparam.h> header file.  */
/* #undef HAVE_VMPARAM_H */

/* Define if you have the i library (-li).  */
/* #undef HAVE_LIBI */
# 50 "include/portable.h" 2


/*************************************************************************
 * ARGH: some things that "configure" can't get right.
*************************************************************************/

/***************************************************************************
 * porting note: if you port PLP and you get some errors
 * caused by autoconf guessing the wrong set of functions/headers/structs,
 * add or change the entry for your system in the ARGH section below.
 * You might want to try and determine how your system is identified
 * by the C preprocessor and use this informaton rather than trying
 * to look for information in various f1les.
 *    Patrick Powell and Justin Mason
 ***************************************************************************/

/*************************************************************************
 * APOLLO Ports
 *  Thu Apr  6 07:01:51 PDT 1995 Patrick Powell
 * This appears to be historical.
 *************************************************************************/






/*************************************************************************
 * ULTRIX.
 * Patrick Powell Thu Apr  6 07:17:34 PDT 1995
 * 
 * Take a chance on using the standard calls
 *************************************************************************/





/*************************************************************************
 * AIX.
 *************************************************************************/




/*************************************************************************
 * Sun
 *************************************************************************/





/*************************************************************************
 * Cray
 *************************************************************************/

# 117 "include/portable.h"



/*************************************************************************/





/*************************************************************************/




/*************************************************************************/




/*************************************************************************/




/*************************************************************************/

/* Convex OS 11.0 - from w_stef */




/*************************************************************************/









/*************************************************************************/






/*************************************************************************/




/***************************************************************************
 * Solaris SUNWorks CC compiler
 *  man page indicates __SVR4 is defined, as is __unix, __sun
 ***************************************************************************/




/*************************************************************************/




/*************************************************************************/

/*************************************************************************
 * we also need some way of spotting IS_DATAGEN (Data Generals),
 * and IS_SEQUENT (Sequent machines). Any suggestions?
 * these ports probably don't work anymore...
 *************************************************************************/

/*************************************************************************
 * END OF ARGH SECTION; next: overrides from the Makefile.
 *************************************************************************/
/*************************
 * STTY functions to use *
 *************************/




/*************************
 * FSTYPE functions to use *
 *************************/

















/*********************************************************************
 * GET STANDARD INCLUDE FILES
 * This is the one-size-fits-all include that should grab everthing.
 * This has a horrible impact on compilation speed,  but then, do you
 * want compilation speed or portability?
 *
 * Patrick Powell Thu Apr  6 07:21:10 PDT 1995
 *********************************************************************
 * If you do not have the following, you are doomed. Or at least
 * going to have an uphill hard time.
 * NOTE: string.h might also be strings.h on some very very odd systems
 *
 * Patrick Powell Thu Apr  6 07:21:10 PDT 1995
 *********************************************************************/

/*********************************************************************
 * yuck -- this is a nightmare! half-baked-ANSI systems are poxy (jm)
 *
 * Note that configure checks for absolute compliance, i.e.-
 * older versions of SUNOS, HP-UX, do not meet this.
 *
 * Patrick Powell Thu Apr  6 07:21:10 PDT 1995
 *********************************************************************/



# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/unistd.h" 1 3
/*	BSDI unistd.h,v 2.6 1996/07/15 22:13:19 bostic Exp	*/

/*-
 * Copyright (c) 1991, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)unistd.h	8.12 (Berkeley) 4/27/95
 */




# 1 "/usr/include/sys/cdefs.h" 1 3
/*	BSDI cdefs.h,v 2.3 1996/10/11 16:02:27 pjd Exp	*/

/*
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Berkeley Software Design, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)cdefs.h	8.8 (Berkeley) 1/9/95
 */




/* POSIX.2 feature test macro: enable POSIX.1 and/or more */
















/*
 * The __CONCAT macro is used to concatenate parts of symbol names, e.g.
 * with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.
 * The __CONCAT macro is a bit tricky -- make sure you don't put spaces
 * in between its arguments.  __CONCAT can also concatenate double-quoted
 * strings produced by the __STRING macro, but this only works with ANSI C.
 */

/* full-blown ANSI C */



/* define reserved names to standard */





/* !__GNUC__ */


/* !__cplusplus */

/* !(__STDC__ || __cplusplus) *//* !(__STDC__ || __cplusplus) */
# 109 "/usr/include/sys/cdefs.h" 3


/*
 * GCC1 and some versions of GCC2 declare dead (non-returning) and
 * pure (no side effects) functions using "volatile" and "const";
 * unfortunately, these then cause warnings under "-ansi -pedantic".
 * GCC2 uses a new, peculiar __attribute__((attrs)) style.  All of
 * these work for GNU C++ (modulo a slight glitch in the C++ grammar
 * in the distribution version of 2.5.5).
 */









/* Delete pseudo-keywords wherever they are not available or needed. */





/* !_SYS_CDEFS_H_ */
# 41 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/unistd.h" 2 3

# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/types.h" 1 3
/*	BSDI types.h,v 2.3 1996/06/23 17:51:16 bostic Exp	*/

/*-
 * Copyright (c) 1982, 1986, 1991, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)types.h	8.6 (Berkeley) 2/19/95
 */




/* Machine type dependent parameters. */
# 1 "/usr/include/machine/ansi.h" 1 3
/*	BSDI ansi.h,v 2.2 1996/10/11 16:00:37 pjd Exp	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)ansi.h	8.2 (Berkeley) 1/4/94
 */




/*
 * Types which are fundamental to the implementation and may appear in
 * more than one standard header are defined here.  Standard headers
 * then use:
 *	#ifdef	_BSD_SIZE_T_
 *	typedef	_BSD_SIZE_T_ size_t;
 *	#undef	_BSD_SIZE_T_
 *	#endif
 */
/* clock() */
/* ptr1 - ptr2 */
/* sizeof() */
/* byte count or error */
/* time() */
/* va_list */

/*
 * Runes (wchar_t's) are declared to be ``int'' instead of the more natural
 * ``unsigned long'' or ``long''.  Two things are happening here.  It is not
 * unsigned so that EOF (-1) can be naturally assigned to it and used.  Also,
 * it looks as if ISO 10646 will be a 31 bit standard.  This means that if your
 * ints cannot hold 32 bits, you will be in trouble.  The reason an int was
 * chosen over a long is that the is*() and to*() routines take ints (says
 * ANSI C), but they use _RUNE_T_ instead of int.  By changing it here, you
 * lose a bit of ANSI conformance, but your programs will still work.
 *    
 * Note that _WCHAR_T_ and _RUNE_T_ must be of the same type.  When wchar_t
 * and rune_t are typedef'd, _WCHAR_T_ will be undef'd, but _RUNE_T remains
 * defined for ctype.h.
 */
/* wchar_t */
/* rune_t */

/* _MACHINE_ANSI_H_ */
# 47 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/types.h" 2 3

# 1 "/usr/include/machine/types.h" 1 3
/*	BSDI types.std32.h,v 2.3 1996/06/25 13:35:06 bostic Exp	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)types.h	8.3 (Berkeley) 1/5/94
 */




typedef	unsigned long	vm_offset_t;
typedef	unsigned long	vm_size_t;

/*
 * Basic integral types of exactly the implied number of bits.  Omit the
 * typedef if not possible for a machine/compiler combination.
 */
typedef	signed  char		   int8_t;
typedef	unsigned char		 u_int8_t;
typedef	short			  int16_t;
typedef	unsigned short		u_int16_t;
typedef	int			  int32_t;
typedef	unsigned int		u_int32_t;

/* The following are correct for gcc and probably most other compilers */
typedef	long long		  int64_t;
typedef	unsigned long long	u_int64_t;

/*
 * Basic integral types of at least the implied number of bits.  Omit the
 * typedef if not possible for a machine/compiler combination.
 */
typedef	signed  char		   int8m_t;
typedef	unsigned char		 u_int8m_t;
typedef	short			  int16m_t;
typedef	unsigned short		u_int16m_t;
typedef	int			  int32m_t;
typedef	unsigned int		u_int32m_t;

/* The following are correct for gcc and probably most other compilers */
typedef	long long		  int64m_t;
typedef	unsigned long long	u_int64m_t;

/* The longest/most efficient integer register type. */
typedef	int32_t	register_t;

/* !_TYPES_STD32_H_ */
# 48 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/types.h" 2 3



typedef	unsigned long	u_long;
typedef	unsigned int	u_int;
typedef	unsigned short	u_short;
typedef	unsigned char	u_char;
typedef	unsigned int	uint;		/* Sys V compatibility */
typedef	unsigned short	ushort;		/* Sys V compatibility */


typedef	u_int64_t	u_quad_t;	/* quads */
typedef	int64_t		quad_t;
typedef	quad_t *	qaddr_t;

/*
 * Some of the following should probably be moved to <machine/types.h> because
 * of machine-dependent compatibility and/or efficiency considerations.
 */
typedef	char *		caddr_t;	/* core address */
typedef	long		daddr_t;	/* disk address */
typedef	unsigned long	dev_t;		/* device number */
typedef unsigned long	fixpt_t;	/* fixed point number */
typedef	unsigned int	gid_t;		/* group id */
typedef	unsigned long	ino_t;		/* inode number */
typedef	long		key_t;		/* IPC key (for Sys V IPC) */
typedef	u_int16m_t	mode_t;		/* permissions */
typedef	u_int16m_t	nlink_t;	/* link count */
typedef	quad_t		off_t;		/* file offset */
typedef	int		pid_t;		/* process id */
typedef	long		segsz_t;	/* segment size */
typedef	long		swblk_t;	/* swap offset */
typedef	unsigned int	uid_t;		/* user id */

/*
 * The prototype for lseek() belongs in unistd.h, but is placed here
 * to maximize the likelihood that the offset will correctly be passed
 * as an off_t.
 */


 
off_t	 lseek  (int, off_t, int)  ;
 




/* minor number */
/* create dev_t */
/* unit number */
/* subunit number */



# 1 "/usr/include/machine/endian.h" 1 3
/*	BSDI endian.little.h,v 2.2 1996/06/25 13:33:39 bostic Exp	*/

/*
 * Copyright (c) 1987, 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)endian.h	8.1 (Berkeley) 6/11/93
 */




/*
 * Define the order of 32-bit words in 64-bit words.
 */




/*
 * Definitions for byte order, according to byte significance from low
 * address to high.
 */
/* LSB first: i386, vax */
/* MSB first: 68000, ibm, net */
/* LSB first in word, MSW first in long */



# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/types.h" 1 3
/*	BSDI types.h,v 2.3 1996/06/23 17:51:16 bostic Exp	*/

/*-
 * Copyright (c) 1982, 1986, 1991, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)types.h	8.6 (Berkeley) 2/19/95
 */

/* !_SYS_TYPES_H_ */
# 158 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/types.h" 3

# 58 "/usr/include/machine/endian.h" 2 3




 
/* host to/from "net" (big endian) */
u_int32m_t	htonl  (u_int32m_t)  ;
u_int16m_t	htons  (u_int16m_t)  ;
u_int32m_t	ntohl  (u_int32m_t)  ;
u_int16m_t	ntohs  (u_int16m_t)  ;
/* host to/from little endian */
u_int32m_t	htole32  (u_int32m_t)  ;
u_int16m_t	htole16  (u_int16m_t)  ;
u_int32m_t	letoh32  (u_int32m_t)  ;
u_int16m_t	letoh16  (u_int16m_t)  ;
 


/*
 * Macros for network/external number representation conversion.
 */
# 95 "/usr/include/machine/endian.h" 3

















/* !_POSIX_SOURCE */
/* !_ENDIAN_H_ */
# 103 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/types.h" 2 3



typedef	unsigned long 	clock_t;






typedef	unsigned int 	size_t;





typedef	int 	ssize_t;




typedef	long 	time_t;








/* number of bits in a byte */





# 1 "/usr/include/sys/select.h" 1 3
/*-
 * Copyright (c) 1996 Berkeley Software Design, Inc. All rights reserved.
 * The Berkeley Software Design Inc. software License Agreement specifies
 * the terms and conditions for redistribution.
 *
 *	BSDI select.h,v 2.3 1996/08/14 21:01:08 karels Exp
 */

/*-
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)select.h	8.2 (Berkeley) 1/4/94
 */




# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/types.h" 1 3
/*	BSDI types.h,v 2.3 1996/06/23 17:51:16 bostic Exp	*/

/*-
 * Copyright (c) 1982, 1986, 1991, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)types.h	8.6 (Berkeley) 2/19/95
 */

/* !_SYS_TYPES_H_ */
# 158 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/types.h" 3

# 47 "/usr/include/sys/select.h" 2 3


/*
 * Select uses bit masks of file descriptors in longs.  These macros
 * manipulate such bit fields (the filesystem macros use chars).
 * FD_SETSIZE may be defined by the user, but the default here should
 * be enough for most uses.
 */




typedef long	fd_mask;
/* bits per mask */

typedef	struct fd_set {
	fd_mask	fds_bits[((( 256  ) + ((  (sizeof(fd_mask) * 8 )  ) - 1)) / (  (sizeof(fd_mask) * 8 )  )) ];
} fd_set;






/* Need  to correct for POSIX.1g */


/*
 * FD_ALLOC allocates an fd_set sufficient for the specified number of
 * descriptors.  It can be freed with free().  The FD_ZERO and FD_COPY
 * macros cannot be used with these fd_sets; use FD_NZERO and FD_NCOPY.
 *
 * FD_REALLOC reallocs an fd_set allocated by FD_ALLOC, given a pointer
 * to the set, and the old and new number of descriptors.
 */



/* The following work on variable-sized fd_sets */





/* Kernel internals for select. */

/*
 * Used to maintain information about processes that wish to be notified when
 * I/O becomes possible.
 */
struct selinfo {
	pid_t	si_pid;		/* process to be notified */
	short	si_flags;	/* see below */
};
/* collision occurred */

/* KERNEL */
# 115 "/usr/include/sys/select.h" 3

/* !_POSIX_SOURCE */




 
struct timeval;
struct timespec;
int	select  (int, fd_set *, fd_set *, fd_set *, const struct timeval *)  ;

/* not implemented; note, requires <sys/time.h> */



 
/* !KERNEL */
/* !_SYS_SELECT_H_ */
# 139 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/types.h" 2 3


# 155 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/types.h" 3


/* !_POSIX_SOURCE */
/* !_SYS_TYPES_H_ */
# 42 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/unistd.h" 2 3

# 1 "/usr/include/sys/unistd.h" 1 3
/*	BSDI unistd.h,v 2.1 1995/02/03 08:43:59 polk Exp	*/

/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)unistd.h	8.2 (Berkeley) 1/7/94
 */




/* compile-time symbolic constants */
/* implementation supports job control */

/*
 * Although we have saved user/group IDs, we do not use them in setuid
 * as described in POSIX 1003.1, because the feature does not work for
 * root.  We use the saved IDs in seteuid/setegid, which are not currently
 * part of the POSIX 1003.1 specification.
 */







/* execution-time symbolic constants */
				/* chown requires appropriate privileges */

				/* too-long path components generate errors */

				/* may disable terminal special characters */


/* access function */
/* test for existence of file */
/* test for execute or search permission */
/* test for write permission */
/* test for read permission */

/* whence values for lseek(2) */
/* set file offset to offset */
/* set file offset to current plus offset */
/* set file offset to EOF plus offset */


/* whence values for lseek(2); renamed by POSIX 1003.1 */





/* configurable pathname variables */










/* configurable system variables */




























/* configurable system strings */


/* !_SYS_UNISTD_H_ */
# 43 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/unistd.h" 2 3


/* standard input file descriptor */
/* standard output file descriptor */
/* standard error file descriptor */



/* null pointer constant */


 
 	 void _exit  (int)   __attribute__((volatile ));
int	 access  (const char *, int)  ;
unsigned int	 alarm  (unsigned int)  ;
int	 chdir  (const char *)  ;
int	 chown  (const char *, uid_t, gid_t)  ;
int	 close  (int)  ;
size_t	 confstr  (int, char *, size_t)  ;
int	 dup  (int)  ;
int	 dup2  (int, int)  ;
int	 execl  (const char *, const char *, ...)  ;
int	 execle  (const char *, const char *, ...)  ;
int	 execlp  (const char *, const char *, ...)  ;
int	 execv  (const char *, char * const *)  ;
int	 execve  (const char *, char * const *, char * const *)  ;
int	 execvp  (const char *, char * const *)  ;
pid_t	 fork  (void)  ;
long	 fpathconf  (int, int)  ;
char	*getcwd  (char *, size_t)  ;
gid_t	 getegid  (void)  ;
uid_t	 geteuid  (void)  ;
gid_t	 getgid  (void)  ;
int	 getgroups  (int, gid_t [])  ;
char	*getlogin  (void)  ;
pid_t	 getpgrp  (void)  ;
pid_t	 getpid  (void)  ;
pid_t	 getppid  (void)  ;
uid_t	 getuid  (void)  ;
int	 isatty  (int)  ;
int	 link  (const char *, const char *)  ;
off_t	 lseek  (int, off_t, int)  ;
long	 pathconf  (const char *, int)  ;
int	 pause  (void)  ;
int	 pipe  (int *)  ;
ssize_t	 read  (int, void *, size_t)  ;
int	 rmdir  (const char *)  ;
int	 setgid  (gid_t)  ;
int	 setpgid  (pid_t, pid_t)  ;
pid_t	 setsid  (void)  ;
int	 setuid  (uid_t)  ;
unsigned int	 sleep  (unsigned int)  ;
long	 sysconf  (int)  ;
pid_t	 tcgetpgrp  (int)  ;
int	 tcsetpgrp  (int, pid_t)  ;
char	*ttyname  (int)  ;
int	 unlink  (const char *)  ;
ssize_t	 write  (int, const void *, size_t)  ;


extern char *optarg;			/* getopt(3) external variables */
extern int opterr, optind, optopt;
int	 getopt  (int, char * const *, const char *)  ;


extern char *optarg;			/* getopt(3) external variables */
extern int optind, opterr, optopt;
int	 getopt  (int, char * const [], const char *)  ;


int	 acct  (const char *)  ;
int	 async_daemon  (void)  ;
char	*brk  (const char *)  ;
int	 chroot  (const char *)  ;
char	*crypt  (const char *, const char *)  ;
int	 des_cipher  (const char *, char *, long, int)  ;
int	 des_setkey  (const char *key)  ;
int	 encrypt  (char *, int)  ;
void	 endusershell  (void)  ;
int	 exect  (const char *, char * const *, char * const *)  ;
int	 fchdir  (int)  ;
int	 fchown  (int, uid_t, gid_t)  ;
int	 fsync  (int)  ;
int	 ftruncate  (int, off_t)  ;
int	 getdomainname  (char *, int)  ;
int	 getdtablesize  (void)  ;
int	 getgrouplist  (const char *, gid_t, gid_t *, int *)  ;
long	 gethostid  (void)  ;
int	 gethostname  (char *, int)  ;
mode_t	 getmode  (const void *, mode_t)  ;
 	 int getpagesize  (void)  ;
char	*getpass  (const char *)  ;
char	*getusershell  (void)  ;
char	*getwd  (char *)  ;			/* obsoleted by getcwd() */
int	 initgroups  (const char *, int)  ;
int	 iruserok  (unsigned long, int, const char *, const char *)  ;
int	 mknod  (const char *, mode_t, dev_t)  ;
int	 mkstemp  (char *)  ;
char	*mktemp  (char *)  ;
int	 nfssvc  (int, void *)  ;
int	 nice  (int)  ;
void	 psignal  (unsigned int, const char *)  ;
extern char *sys_siglist[];
int	 profil  (char *, int, int, int)  ;
int	 rcmd  (char **, int, const char *,
		const char *, const char *, int *)  ;
int	 readlink  (const char *, char *, int)  ;
int	 reboot  (int)  ;
int	 revoke  (const char *)  ;
int	 rresvport  (int *)  ;
int	 ruserok  (const char *, int, const char *, const char *)  ;
char	*sbrk  (int)  ;
int	 setdomainname  (const char *, int)  ;
int	 setegid  (gid_t)  ;
int	 seteuid  (uid_t)  ;
int	 setgroups  (int, const gid_t *)  ;
void	 sethostid  (long)  ;
int	 sethostname  (const char *, int)  ;
int	 setkey  (const char *)  ;
int	 setlogin  (const char *)  ;
void	*setmode  (const char *)  ;
int	 setpgrp  (pid_t pid, pid_t pgrp)  ;	/* obsoleted by setpgid() */
int	 setregid  (gid_t, gid_t)  ;
int	 setreuid  (uid_t, uid_t)  ;
int	 setrgid  (gid_t)  ;
int	 setruid  (uid_t)  ;
void	 setusershell  (void)  ;
int	 swapon  (const char *)  ;
int	 symlink  (const char *, const char *)  ;
void	 sync  (void)  ;
int	 syscall  (int, ...)  ;
int	 truncate  (const char *, off_t)  ;
int	 ttyslot  (void)  ;
u_int	 ualarm  (unsigned int, unsigned int)  ;
int	 unwhiteout  (const char *)  ;
void	 usleep  (unsigned int)  ;
void	*valloc  (size_t)  ;			/* obsoleted by malloc() */
pid_t	 vfork  (void)  ;

/* getsubopt() isn't standard, but we'll follow getopt() for consistency */
extern char *suboptarg;			/* getsubopt(3) external variable */
int	 getsubopt  (char **, char * const *, char **)  ;
/* !_POSIX_SOURCE */
 

/* !_UNISTD_H_ */
# 247 "include/portable.h" 2










# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/stdlib.h" 1 3
/*	BSDI stdlib.h,v 2.7 1996/06/11 21:34:52 bostic Exp	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)stdlib.h	8.5 (Berkeley) 5/19/95
 */
















typedef	int 	rune_t;

typedef	int 	wchar_t;



typedef struct {
	int quot;		/* quotient */
	int rem;		/* remainder */
} div_t;

typedef struct {
	long quot;		/* quotient */
	long rem;		/* remainder */
} ldiv_t;











extern int __mb_cur_max;




 
 	 void abort  (void)   __attribute__((volatile ));
 	 int abs  (int)  ;
int	 atexit  (void (*)(void))  ;
double	 atof  (const char *)  ;
int	 atoi  (const char *)  ;
long	 atol  (const char *)  ;
void	*bsearch  (const void *, const void *, size_t,
	    size_t, int (*)(const void *, const void *))  ;
void	*calloc  (size_t, size_t)  ;
 	 div_t div  (int, int)  ;
 	 void exit  (int)   __attribute__((volatile ));
void	 free  (void *)  ;
char	*getenv  (const char *)  ;
 	 long labs  (long)  ;
 	 ldiv_t ldiv  (long, long)  ;
void	*malloc  (size_t)  ;
void	 qsort  (void *, size_t, size_t,
	    int (*)(const void *, const void *))  ;
int	 rand  (void)  ;
int	 rand_r  (unsigned int *)  ;
void	*realloc  (void *, size_t)  ;
void	 srand  (unsigned)  ;
double	 strtod  (const char *, char **)  ;
long	 strtol  (const char *, char **, int)  ;
unsigned long strtoul  (const char *, char **, int)  ;
int	 system  (const char *)  ;

/* These are currently just stubs. */
int	 mblen  (const char *, size_t)  ;
size_t	 mbstowcs  (wchar_t *, const char *, size_t)  ;
int	 wctomb  (char *, wchar_t)  ;
int	 mbtowc  (wchar_t *, const char *, size_t)  ;
size_t	 wcstombs  (char *, const wchar_t *, size_t)  ;



int	 putenv  (const char *)  ;
int	 setenv  (const char *, const char *, int)  ;


void	*alloca  (size_t)  ;		/* built-in for gcc */

char	*getbsize  (int *, long *)  ;

					/* getcap(3) functions */
char	*cgetcap  (char *, char *, int)  ;
int	 cgetclose  (void)  ;
int	 cgetent  (char **, char **, char *)  ;
int	 cgetfirst  (char **, char **)  ;
int	 cgetmatch  (char *, char *)  ;
int	 cgetnext  (char **, char **)  ;
int	 cgetnum  (char *, char *, long *)  ;
int	 cgetset  (char *)  ;
int	 cgetstr  (char *, char *, char **)  ;
int	 cgetustr  (char *, char *, char **)  ;

double	drand48  (void)  ;		/* rand48(3) functions */
double	erand48  (unsigned short *)  ;
long	jrand48  (unsigned short *)  ;
void	lcong48  (unsigned short *)  ;
long	lrand48  (void)  ;
long	mrand48  (void)  ;
long	nrand48  (unsigned short *)  ;
unsigned short	*seed48  (unsigned short *)  ;
void	srand48(long);

int	 daemon  (int, int)  ;
char	*devname  (int, int)  ;
int	 getloadavg  (double [], int)  ;

/* POSIX.2 puts getopt() in unistd.h; this is for compatibility */
extern char *optarg;			/* getopt(3) external variables */
extern int opterr, optind, optopt;
int	 getopt  (int, char * const *, const char *)  ;

extern char *suboptarg;			/* getsubopt(3) external variable */
int	 getsubopt  (char **, char * const *, char **)  ;

int	 heapsort  (void *, size_t, size_t,
	    int (*)(const void *, const void *))  ;
char	*initstate  (unsigned int, char *, int)  ;
int	 mergesort  (void *, size_t, size_t,
	    int (*)(const void *, const void *))  ;
int	 radixsort  (const unsigned char **, int, const unsigned char *,
	    unsigned)  ;
int	 sradixsort  (const unsigned char **, int, const unsigned char *,
	    unsigned)  ;
long	 random  (void)  ;
char	*realpath  (const char *, char resolved_path[])  ;
char	*setstate  (char *)  ;
void	 srandom  (unsigned int)  ;

long long strtoq  (const char *, char **, int)  ;
unsigned long long strtouq  (const char *, char **, int)  ;

void	 unsetenv  (const char *)  ;

 

/* _STDLIB_H_ */
# 257 "include/portable.h" 2







# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/stdio.h" 1 3

# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/stdarg.h" 1 3
/* stdarg.h for GNU.
   Note that the type used in va_arg is supposed to match the
   actual type **after default promotions**.
   Thus, va_arg (..., short) is not valid.  */



/* not __need___va_list */






















































/* Define __gnuc_va_list.  */






typedef void *__gnuc_va_list;



/* Define the standard macros for the user,
   if this invocation was from the user program.  */
/* _STDARG_H */
# 116 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/stdarg.h" 3


/* not v850 */
/* not mn10200 */
/* not mn10300 */
/* not sh */
/* not m32r */
/* not arc */
/* not powerpc with V.4 calling sequence */
/* not h8300 */
/* not alpha */
/* not i960 */
/* not sparc */
/* not mips */
/* not hppa */
/* not i860 */
/* not m88k */
/* not clipper */

/* _STDARG_H */
# 202 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/stdarg.h" 3


/* not _ANSI_STDARG_H_ */
/* not _STDARG_H */
# 2 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/stdio.h" 2 3

/*	BSDI stdio.h,v 2.10 1996/11/08 16:46:31 donn Exp	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Chris Torek.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)stdio.h	8.5 (Berkeley) 4/29/95
 */





















/*
 * This is fairly grotesque, but pure ANSI code must not inspect the
 * innards of an fpos_t anyway.  The library internally uses off_t,
 * but we have no portable way to represent a 64-bit off_t for some
 * pure ANSI compiler environments.  In the ANSI-only case, we assume
 * that an off_t is exactly as big as eight chars, or at least fits
 * in that space.
 *
 * WARNING: the alignment constraints on an off_t and the struct below
 * differ on (e.g.) the SPARC.  Hence, the placement of an fpos_t object
 * in a structure will change if fpos_t's are not aligned on 8-byte
 * boundaries.  THIS IS A CROCK, but for now there is no way around it.
 * Things are okay iff offsetof(FILE,_offset) and sizeof(FILE) are both
 * multiples of 8.
 */

typedef off_t fpos_t;






/* Define for new stdio with functions. */

/*
 * NB: to fit things in six character monocase externals, the stdio
 * code uses the prefix `__s' for stdio objects, typically followed
 * by a three-character attempt at a mnemonic.
 */

/* stdio buffers */
struct __sbuf {
	unsigned char *_base;
	int	_size;
};

/*
 * stdio state variables.
 *
 * The following always hold:
 *
 *	if (_flags&(__SLBF|__SWR)) == (__SLBF|__SWR),
 *		_lbfsize is -_bf._size, else _lbfsize is 0
 *	if _flags&__SRD, _w is 0
 *	if _flags&__SWR, _r is 0
 *
 * This ensures that the getc and putc macros (or inline functions) never
 * try to write or read from a file that is in `read' or `write' mode.
 * (Moreover, they can, and do, automatically switch from read mode to
 * write mode, and back, on "r+" and "w+" files.)
 *
 * _lbfsize is used only to make the inline line-buffered output stream
 * code as compact as possible.
 *
 * _ub, _up, and _ur are used when ungetc() pushes back more characters
 * than fit in the current _bf, or when ungetc() pushes back a character
 * that does not match the previous one in _bf.  When this happens,
 * _ub._base becomes non-nil (i.e., a stream has ungetc() data iff
 * _ub._base!=NULL) and _up and _ur save the current values of _p and _r.
 *
 * NB: see WARNING above before changing the layout of this structure!
 */
typedef	struct __sFILE {
	unsigned char *_p;	/* current position in (some) buffer */
	int	_r;		/* read space left for getc() */
	int	_w;		/* write space left for putc() */
	short	_flags;		/* flags, below; this FILE is free if 0 */
	short	_file;		/* fileno, if Unix descriptor, else -1 */
	struct	__sbuf _bf;	/* the buffer (at least 1 byte, if !NULL) */
	int	_lbfsize;	/* 0 or -_bf._size, for inline putc */

	/* operations */
	void	*_cookie;	/* cookie passed to io functions */
	int	(*_close)  (void *)  ;
	int	(*_read)   (void *, char *, int)  ;
	fpos_t	(*_seek)   (void *, fpos_t, int)  ;
	int	(*_write)  (void *, const char *, int)  ;

	/* separate buffer for long sequences of ungetc() */
	struct	__sbuf _ub;	/* ungetc buffer */
	unsigned char *_up;	/* saved _p when _p is doing ungetc data */
	int	_ur;		/* saved _r when _r is counting ungetc data */

	/* tricks to meet minimum requirements even when malloc() fails */
	unsigned char _ubuf[3];	/* guarantee an ungetc() buffer */
	unsigned char _nbuf[1];	/* guarantee a getc() buffer */

	/* separate buffer for fgetln() when line crosses buffer boundary */
	struct	__sbuf _lb;	/* buffer for fgetln() */

	/* Unix stdio files get aligned to block boundaries on fseek() */
	int	_blksize;	/* stat.st_blksize (may be != _bf._size) */
	fpos_t	_offset;	/* current lseek offset (see WARNING) */

	/* Pointer to flockfile state if thread-safe locking is in use. */
	void 	*_flfp;
	char	_pad[4];	/* padding crock; see WARNING */
} FILE;

 
extern FILE __sstdin;
extern FILE __sstdout;
extern FILE __sstderr;
 

/* line buffered */
/* unbuffered */
/* OK to read */
/* OK to write */
	/* RD and WR are never simultaneously asserted */
/* open for reading & writing */
/* found EOF */
/* found error */
/* _buf is from malloc */
/* fdopen()ed in append mode */
/* this is an sprintf/snprintf string */
/* do fseek() optimisation */
/* do not do fseek() optimisation */
/* set iff _offset is in fact correct */
/* true => fgetln modified _p text */

/*
 * The following three definitions are for ANSI C, which took them
 * from System V, which brilliantly took internal interface macros and
 * made them official arguments to setvbuf(), without renaming them.
 * Hence, these ugly _IOxxx names are *supposed* to appear in user code.
 *
 * Although numbered as their counterparts above, the implementation
 * does not rely on this.
 */
/* setvbuf should set fully buffered */
/* setvbuf should set line buffered */
/* setvbuf should set unbuffered */

/* size of buffer used by setbuf */


/*
 * FOPEN_MAX is a minimum maximum, and is the number of streams that
 * stdio can provide without attempting to allocate further resources
 * (which could fail).  Do not use this for anything.
 */
				/* must be == _POSIX_STREAM_MAX <limits.h> */
/* must be <= OPEN_MAX <sys/syslimits.h> */
/* must be <= PATH_MAX <sys/syslimits.h> */

/* System V/ANSI C; this is the wrong way to do this, do *not* use these. */



/* XXX must be == PATH_MAX */

















/*
 * Functions defined in ANSI C standard.
 */
 
void	 clearerr  (FILE *)  ;
int	 fclose  (FILE *)  ;
int	 feof  (FILE *)  ;
int	 ferror  (FILE *)  ;
int	 fflush  (FILE *)  ;
int	 fgetc  (FILE *)  ;
int	 fgetpos  (FILE *, fpos_t *)  ;
char	*fgets  (char *, int, FILE *)  ;
FILE	*fopen  (const char *, const char *)  ;
int	 fprintf  (FILE *, const char *, ...)  ;
int	 fputc  (int, FILE *)  ;
int	 fputs  (const char *, FILE *)  ;
size_t	 fread  (void *, size_t, size_t, FILE *)  ;
FILE	*freopen  (const char *, const char *, FILE *)  ;
int	 fscanf  (FILE *, const char *, ...)  ;
int	 fseek  (FILE *, long, int)  ;
int	 fsetpos  (FILE *, const fpos_t *)  ;
long	 ftell  (FILE *)  ;
size_t	 fwrite  (const void *, size_t, size_t, FILE *)  ;
int	 getc  (FILE *)  ;
int	 getchar  (void)  ;
char	*gets  (char *)  ;

extern int sys_nerr;			/* perror(3) external variables */
extern char *sys_errlist[];

void	 perror  (const char *)  ;
int	 printf  (const char *, ...)  ;
int	 putc  (int, FILE *)  ;
int	 putchar  (int)  ;
int	 puts  (const char *)  ;
int	 remove  (const char *)  ;
int	 rename   (const char *, const char *)  ;
void	 rewind  (FILE *)  ;
int	 scanf  (const char *, ...)  ;
void	 setbuf  (FILE *, char *)  ;
int	 setvbuf  (FILE *, char *, int, size_t)  ;
int	 sprintf  (char *, const char *, ...)  ;
int	 sscanf  (const char *, const char *, ...)  ;
FILE	*tmpfile  (void)  ;
char	*tmpnam  (char *)  ;
int	 ungetc  (int, FILE *)  ;
int	 vfprintf  (FILE *, const char *, __gnuc_va_list)  ;
int	 vprintf  (const char *, __gnuc_va_list)  ;
int	 vsprintf  (char *, const char *, __gnuc_va_list)  ;
 

/*
 * Functions defined in POSIX 1003.1.
 */

/* size for cuserid(); UT_NAMESIZE */
/* size for ctermid(); PATH_MAX */

 
char	*ctermid  (char *)  ;
FILE	*fdopen  (int, const char *)  ;
int	 fileno  (FILE *)  ;
void	 flockfile  (FILE *)  ;
int	 ftrylockfile  (FILE *)  ;
void	 funlockfile  (FILE *)  ;
int	 getc_unlocked  (FILE *)  ;
int	 getchar_unlocked  (void)  ;
int	 putc_unlocked  (int, FILE *)  ;
int	 putchar_unlocked  (int)  ;
 
/* not ANSI */


 
int	 pclose  (FILE *)  ;
FILE	*popen  (const char *, const char *)  ;
 
/* POSIX.2 */

/*
 * Routines that are purely local.
 */

 
char	*fgetln  (FILE *, size_t *)  ;
int	 fpurge  (FILE *)  ;
int	 getw  (FILE *)  ;
int	 putw  (int, FILE *)  ;
void	 setbuffer  (FILE *, char *, int)  ;
int	 setlinebuf  (FILE *)  ;
char	*tempnam  (const char *, const char *)  ;
int	 snprintf  (char *, size_t, const char *, ...)  ;
int	 vfscanf  (FILE *, const char *, __gnuc_va_list)  ;
int	 vsnprintf  (char *, size_t, const char *, __gnuc_va_list)  ;
int	 vscanf  (const char *, __gnuc_va_list)  ;
int	 vsscanf  (const char *, const char *, __gnuc_va_list)  ;
 

/*
 * Stdio function-access interface.
 */
 
FILE	*funopen  (const void *,
		int (*)(void *, char *, int),
		int (*)(void *, const char *, int),
		fpos_t (*)(void *, fpos_t, int),
		int (*)(void *))  ;
 


/* !_ANSI_SOURCE && !_POSIX_SOURCE */

/*
 * Functions internal to the implementation.
 */
 
int	__srget  (FILE *)  ;
int	__svfprintf  (FILE *, const char *, __gnuc_va_list)  ;
int	__svfscanf  (FILE *, const char *, __gnuc_va_list)  ;
int	__swbuf  (int, FILE *)  ;
 

/*
 * The __sfoo macros are here so that we can 
 * define function versions in the C library.
 */


static __inline int __sputc(int _c, FILE *_p) {
	if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
		return (*_p->_p++ = _c);
	else
		return (__swbuf(_c, _p));
}
# 378 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/stdio.h" 3










/* lint */





/* _STDIO_H_ */
# 264 "include/portable.h" 2

# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/string.h" 1 3
/*	BSDI string.h,v 2.3 1996/06/03 15:40:32 bostic Exp	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)string.h	8.1 (Berkeley) 6/2/93
 */

















 
void	*memchr  (const void *, int, size_t)  ;
int	 memcmp  (const void *, const void *, size_t)  ;
void	*memcpy  (void *, const void *, size_t)  ;
void	*memmove  (void *, const void *, size_t)  ;
void	*memset  (void *, int, size_t)  ;
char	*strcat  (char *, const char *)  ;
char	*strchr  (const char *, int)  ;
int	 strcmp  (const char *, const char *)  ;
int	 strcoll  (const char *, const char *)  ;
char	*strcpy  (char *, const char *)  ;
size_t	 strcspn  (const char *, const char *)  ;
char	*strerror  (int)  ;
size_t	 strlen  (const char *)  ;
char	*strncat  (char *, const char *, size_t)  ;
int	 strncmp  (const char *, const char *, size_t)  ;
char	*strncpy  (char *, const char *, size_t)  ;
char	*strpbrk  (const char *, const char *)  ;
char	*strrchr  (const char *, int)  ;
size_t	 strspn  (const char *, const char *)  ;
char	*strstr  (const char *, const char *)  ;
char	*strtok  (char *, const char *)  ;
size_t	 strxfrm  (char *, const char *, size_t)  ;

/* Nonstandard routines */

int	 bcmp  (const void *, const void *, size_t)  ;
void	 bcopy  (const void *, void *, size_t)  ;
void	 bzero  (void *, size_t)  ;
int	 ffs  (int)  ;
char	*index  (const char *, int)  ;
void	*memccpy  (void *, const void *, int, size_t)  ;
char	*rindex  (const char *, int)  ;
int	 strcasecmp  (const char *, const char *)  ;
char	*strdup  (const char *)  ;
void	 strmode  (int, char *)  ;
int	 strncasecmp  (const char *, const char *, size_t)  ;
char	*strsep  (char **, const char *)  ;
char	*strtok_r  (char *, const char *, char **)  ;
void	 swab  (const void *, void *, size_t)  ;

 

/* _STRING_H_ */
# 265 "include/portable.h" 2


# 1 "/usr/include/strings.h" 1 3
/*	BSDI strings.h,v 2.1 1995/02/03 06:02:05 polk Exp	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)strings.h	8.1 (Berkeley) 6/2/93
 */


# 267 "include/portable.h" 2


# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/param.h" 1 3
/*	BSDI param.h,v 2.9 1997/01/15 04:23:05 karels Exp	*/

/*-
 * Copyright (c) 1982, 1986, 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)param.h	8.3 (Berkeley) 4/4/95
 */




/* Berkeley system version (year & month). */



/* January, 1997 version of BSDI system */










/*
 * Machine-independent constants (some used in following include files).
 * Redefined constants are from POSIX 1003.1 limits file.
 *
 * MAXCOMLEN should be >= sizeof(ac_comm) (see <acct.h>)
 * MAXLOGNAME should be >= UT_NAMESIZE (see <utmp.h>)
 */
# 1 "/usr/include/sys/syslimits.h" 1 3
/*	BSDI syslimits.h,v 2.3 1996/10/11 16:02:43 pjd Exp	*/

/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)syslimits.h	8.1 (Berkeley) 6/2/93
 */





/* max bytes for an exec function */


/* max simultaneous processes (var) */

/* max file link count */
/* max bytes in term canon input line */
/* max bytes in terminal input */
/* max bytes in a file name */
/* max supplemental group id's */

/* max open files per process (var) */

/* max bytes in pathname */
/* max bytes for atomic pipe writes */
/* max number of open stdio streams */
/* max bytes in time zone name */

/* max ibase/obase values in bc(1) */
/* max array elements in bc(1) */
/* max scale value in bc(1) */
/* max const string length in bc(1) */
/* max weights for order keyword */
/* max expressions nested in expr(1) */
/* max bytes in an input line */
/* max RE's in interval notation */

/* !_SYS_SYSLIMITS_H_ */
# 68 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/param.h" 2 3


/* max command name remembered */
/* max interpreter file name length */
/* max login name length */
/* max simultaneous processes */
/* max bytes for an exec function */
/* max number groups */
/* max open files per process */
/* marker for empty group set member */
/* max hostname size */

/* More types and definitions used throughout the kernel. */
# 90 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/param.h" 3


/* Signals. */
# 1 "/usr/include/sys/signal.h" 1 3
/*	BSDI signal.h,v 2.2 1996/06/06 21:48:35 bostic Exp	*/

/*
 * Copyright (c) 1982, 1986, 1989, 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)signal.h	8.4 (Berkeley) 5/4/95
 */





/* counting 0; could be 33 (mask is 1-32) */


/* sigcontext; codes for SIGILL, SIGFPE */
# 1 "/usr/include/machine/signal.h" 1 3
/*	BSDI signal.h,v 2.3 1996/10/11 16:00:54 pjd Exp	*/

/*
 * Copyright (c) 1986, 1989, 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)signal.h	8.2 (Berkeley) 5/3/95
 */




/*
 * Machine-dependent signal definitions
 */

typedef int sig_atomic_t;


/* codes for SIGILL, SIGFPE */
# 1 "/usr/include/machine/trap.h" 1 3
/*-
 * Copyright (c) 1992 Berkeley Software Design, Inc. All rights reserved.
 * The Berkeley Software Design Inc. software License Agreement specifies
 * the terms and conditions for redistribution.
 *
 *	BSDI trap.h,v 2.2 1996/10/11 16:00:55 pjd Exp
 */

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)trap.h	8.1 (Berkeley) 6/11/93
 */




/*
 * Trap type values
 * also known in trap.c for name strings
 * those marked XXX are not currently used
 */

/* reserved addressing fault XXX */
/* illegal instruction fault */
/* reserved operand fault XXX */
# 69 "/usr/include/machine/trap.h" 3

/* page fault */



/* alignment fault */
# 85 "/usr/include/machine/trap.h" 3

/* fp coprocessor segment overrun */



/* segment not present fault */
/* stack fault */
/* reserved exeception 15 */
/* KERNEL */
# 111 "/usr/include/machine/trap.h" 3


/* definitions for <sys/signal.h> */




/* coproc operand fault */

/* codes for SIGFPE/ARITHTRAP */
/* integer overflow */
/* integer divide by zero */
/* floating/decimal divide by zero */
/* floating overflow */
/* floating underflow */
/* floating point unit not present */
/* subrange out of bounds */

/* codes for SIGBUS; these should be SIGSEGV */
/* page fault protection base */
/* segment not present */
/* stack segment */
/* segment protection base */

/* !_MACHINE_TRAP_H_ */
# 48 "/usr/include/machine/signal.h" 2 3


/*
 * Information pushed on stack when a signal is delivered.
 * This is used by the kernel to restore state following
 * execution of the signal handler.  It is also made available
 * to the handler to allow it to restore state properly if
 * a non-standard exit is performed.
 */
struct	sigcontext {
	int	sc_onstack;	/* sigstack state to restore */
	int	sc_mask;	/* signal mask to restore */
	int	sc_sp;		/* sp to restore */
	int	sc_fp;		/* fp to restore */
	int	sc_ap;		/* ap to restore */
	int	sc_pc;		/* pc to restore */
	int	sc_ps;		/* psl to restore */
};


/* !_MACHINE_SIGNAL_H_ */
# 50 "/usr/include/sys/signal.h" 2 3


/* hangup */
/* interrupt */
/* quit */
/* illegal instruction (not reset when caught) */

/* trace trap (not reset when caught) */

/* abort() */

/* compatibility */
/* EMT instruction */

/* floating point exception */
/* kill (cannot be caught or ignored) */

/* bus error */

/* segmentation violation */

/* bad argument to system call */

/* write on a pipe with no one to read it */
/* alarm clock */
/* software termination signal from kill */

/* urgent condition on IO channel */

/* sendable stop signal not from tty */
/* stop signal from tty */
/* continue a stopped process */
/* to parent on child stop or exit */
/* to readers pgrp upon background tty read */
/* like TTIN for output if (tp->t_local&LTOSTOP) */

/* input/output possible signal */
/* exceeded CPU time limit */
/* exceeded file size limit */
/* virtual time alarm */
/* profiling time alarm */
/* window size changes */
/* information request */

/* user defined signal 1 */
/* user defined signal 2 */

# 106 "/usr/include/sys/signal.h" 3

/* remove int papowell */



/*empty*//* unspecified parameters */



typedef unsigned int sigset_t;

/*
 * Signal vector "template" used in sigaction call.
 */
struct	sigaction {
	void	(*sa_handler)( );	/* signal handler */
	sigset_t sa_mask;		/* signal mask to apply */
	int	sa_flags;		/* see signal options below */
};

/* take signal on signal stack */
/* restart system on signal return */
/* disable taking signals on alternate stack */




/* do not generate SIGCHLD on child stop */

/*
 * Flags for sigprocmask:
 */
/* block specified signal set */
/* unblock specified signal set */
/* set specified signal set */





typedef	void (*sig_t)  (int)  ;	/* type of signal function */

/*
 * Structure used in sigaltstack call.
 */
struct	sigaltstack {
	char	*ss_base;		/* signal stack base */
	int	ss_size;		/* signal stack length */
	int	ss_flags;		/* SA_DISABLE and/or SA_ONSTACK */
};
/* minimum allowable stack */
/* recommended stack size */

/*
 * 4.3 compatibility:
 * Signal vector "template" used in sigvec call.
 */
struct	sigvec {
	void	(*sv_handler)( );	/* signal handler */
	int	sv_mask;		/* signal mask to apply */
	int	sv_flags;		/* see signal options below */
};


/* same bit, opposite sense */
/* isn't compatibility wonderful! */

/*
 * Structure used in sigstack call.
 */
struct	sigstack {
	char	*ss_sp;			/* signal stack pointer */
	int	ss_onstack;		/* current status */
};

/*
 * Macro for converting signal number to a mask suitable for
 * sigblock().
 */




/* !_POSIX_SOURCE */
/* !_ANSI_SOURCE */

/*
 * For historical reasons; programs expect signal's return value to be
 * defined by <sys/signal.h>.
 */
 
void	(*signal  (int, void (*)  (int)  )  )  (int)  ;
 
/* !_SYS_SIGNAL_H_ */
# 93 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/param.h" 2 3


/* Machine type dependent parameters. */
/*
 * spl prototypes don't "belong" here, but they may be implemented inline
 * or in macros on some machines, and this is the only file that is always
 * included.  Put the prototypes before inclusion of <machine/param.h>,
 * which may define them as macros.
 */
# 117 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/param.h" 3

# 1 "/usr/include/machine/param.h" 1 3
/*-
 * Copyright (c) 1993, 1994 Berkeley Software Design, Inc. All rights reserved.
 * The Berkeley Software Design Inc. software License Agreement specifies
 * the terms and conditions for redistribution.
 *
 *	BSDI param.h,v 2.5 1996/10/11 16:00:46 pjd Exp
 */

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)param.h	8.3 (Berkeley) 5/14/95
 */




/*
 * Machine dependent constants for Intel 386.
 */

/* for KERNBASE, which used to be here */
# 1 "/usr/include/machine/vmlayout.h" 1 3
/*-
 * Copyright (c) 1992, 1993 Berkeley Software Design, Inc. All rights reserved.
 * The Berkeley Software Design Inc. software License Agreement specifies
 * the terms and conditions for redistribution.
 *
 *	BSDI vmlayout.h,v 2.2 1996/10/11 16:00:57 pjd Exp
 */

/*
 * Virtual address space arrangement.  These definitions were previously
 * scattered among "machine/param.h", "machine/vmparam.h" and locore.s.
 *
 * On 386, both user and kernel share the address space,
 * similar to the VAX.  However, unlike the VAX, the division
 * of the address space into user and kernel areas is not fixed
 * by the hardware.
 *
 * USRTEXT is the start of the user text/data space, while USRSTACK
 * is the top (end) of the user stack. Immediately above the user stack
 * is a space (kstack) used for double-mapping the user structure,
 * which is UPAGES long and contains the kernel stack.
 *
 * Immediately after the kernel stack is the page-table map (PTmap),
 * the kernel address space, and the alternate page-table map (APTmap).
 *
 * This layout places the per-process user area first, followed
 * by the per-process kernel areas (kstack and page-table pages for
 * per-process user and kernel areas), and then the global kernel
 * addresses.  This arrangement is reflected in the page tables
 * for each process, and that in turn is reflected in the layout
 * of the page table directory (PDR), which maps the page tables.
 *
 * The page table directory is used by the system as a page-table page
 * in order to map the page tables (including itself) into virtual memory.
 * The page tables are mapped into the address space between the
 * user and kernel areas so that the per-process kernel addresses
 * including the page table area follow the per-process user addresses,
 * and the global kernel page table area falls just below the global
 * kernel area.
 *
 * The layout is defined here in terms of indices in the page table
 * directory.  Each page table directory entry (PDE) maps a page of page
 * table space, which in turn maps a 4 MB address region.
 */












/*
 * Layout of the PTD.  These constants are indices;
 * the PTD contains 1024 entries, 0x000 through 0x3ff.
 * Entries 0 through KSTKPTDI map the current user space plus kstack.
 * Entry PTDPTDI points to the current PTD, and thus maps the current
 * page tables.  Entries KPTDI_FIRST through KPTDI_LAST map the kernel
 * page table pages allocated at startup, and used in all processes.
 * The kernel page tables are sized at boot time.  They are never extended
 * in the current implementation; extension would require that the PTD
 * for each process be updated.
 */
/* PTD index ending with kstack */
/* PTD entry that points to PTD! */
/* starting index of kernel PDEs */
/* PTD entry that points to APTD */
/* 0x3ff is currently unused */
/* default num. of kernel PDEs to use */
/* max kernel PDEs */
/* index of last kernel PDE */

/*
 * user/kernel map constants; derived from PTD layout.
 * _KSTACK ends at the end of the 4 MB area for KSTKPTDI,
 * and is UPAGES long; USRSTACK ends where _KSTACK begins.
 * (KSTACK should be removed, but cpu_fork does not yet relocate
 * the kernel stack when copying.)
 */














/*
 * The PTD, used as a page table page, maps the page table space
 * (PTmap[], set in locore to _PTMAP).  User page tables come first.
 * User page tables end just before the (recursively mapped) PTD.
 * Kernel page tables begin after the PTD.  Finally, there is
 * an alternate pagemap area APTmap[] at _APTMAP, used to map
 * the page tables of another process temporarily.
 */








/* VA of kernel */



/* _MACHINE_VMLAYOUT_H_ */
# 54 "/usr/include/machine/param.h" 2 3








/*
 * Round p (pointer or byte index) up to a correctly-aligned value for all
 * data types (int, long, ...).   The result is u_int and must be cast to
 * any desired pointer type.
 */



/* bytes/page */
/* byte offset into page */
/* LOG2(NBPG) */


/* bytes/page dir */
/* byte offset into page dir */
/* LOG2(NBPDR) */


/* log2(DEV_BSIZE) */

/* max raw I/O transfer size */




/* NOTE: UPAGES must be a multiple of CLSIZE */
/* pages of u-area */

/*
 * Constants related to network buffer management.
 * MCLBYTES must be no larger than CLBYTES (the software page size), and,
 * on machines that exchange pages of input or output buffers with mbuf
 * clusters (MAPPED_MBUFS), MCLBYTES must also be an integral multiple
 * of the hardware page size.
 */
/* size of an mbuf */

/* 2048 bytes */







/* map size, max cluster allocation */



/*
 * Some macros for units conversion
 */
/* Core clicks (4096 bytes) to segments and vice versa */



/* Core clicks (4096 bytes) to disk blocks */




/* clicks to bytes */


/* bytes to clicks */


/*
 * The following macros should be removed: DEV_BSIZE should be replaced with
 * the actual device's sector size, and the caller needs to use appropriate
 * types with these macros.  In particular, callers of dbtob must make sure
 * that the type of the parameter is large enough to prevent overflow, e.g.,
 * an off_t.
 */
/* calculates (bytes / DEV_BSIZE) */

/* calculates (db * DEV_BSIZE) */


/*
 * Map a ``block device block'' to a file system block.  This should be device
 * dependent, using the actual sector size rather than DEV_BSIZE.
 */


/*
 * Mach derived conversion macros
 */









/*
 * Number of I/O ports we want to be mappable to user processes.
 */


/* KERNEL */
# 172 "/usr/include/machine/param.h" 3



/* KERNEL */



/*
 * A simple spin lock.
 *
 * This structure only sets one bit of data, but is sized based on the minimum
 * word size that can be operated on by the hardware test-and-set instruction.
 * It is only needed for multiprocessors, as uniprocessors will always run to
 * completion or a sleep.  It is an error to hold one of these locks while a
 * process is sleeping.
 */
struct simplelock {
	int	lock_data;
};

/* NCPUS > 1 */
# 233 "/usr/include/machine/param.h" 3

/* !_SIMPLELOCK_H_ */

/* !_MACHINE_PARAM_H_ */
# 118 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/param.h" 2 3

# 1 "/usr/include/machine/limits.h" 1 3
/*	BSDI limits.h,v 2.3 1996/10/11 16:00:45 pjd Exp	*/

/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)limits.h	8.3 (Berkeley) 1/4/94
 */




/* number of bits in a char */
/* Allow 31 bit UTF2 plus tags */


/*
 * According to ANSI (section 2.2.4.2), the values below must be usable by
 * #if preprocessing directives.  Additionally, the expression must have the
 * same type as would an expression that is an object of the corresponding
 * type converted according to the integral promotions.  The subtraction for
 * INT_MIN and LONG_MIN is so the value is not unsigned; 2147483648 is an
 * unsigned int for 32-bit two's complement ANSI compilers (section 3.1.3.2).
 * These numbers work for pcc as well.  The UINT_MAX and ULONG_MAX values
 * are written as hex so that GCC will be quiet about large integer constants.
 */
/* min value for a signed char */
/* max value for a signed char */

/* max value for an unsigned char */
/* max value for a char */
/* min value for a char */

/* max value for an unsigned short */
/* max value for a short */
/* min value for a short */

/* max value for an unsigned int */
/* max value for an int */
/* min value for an int */

/* max value for an unsigned long */
/* max value for a long */
/* min value for a long */


/* max value for a ssize_t */



/* max value for a size_t */
/* max value for an off_t */

/* GCC requires that quad constants be written as expressions. */
/* max value for a uquad_t */
					/* max value for a quad_t */

/* min value for a quad_t */

/* !_POSIX_SOURCE */

/* !_MACHINE_LIMITS_H_ */
# 119 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/param.h" 2 3


/*
 * Priorities.  Note that with 32 run queues, differences less than 4 are
 * insignificant.
 */





/* No longer magic, shouldn't be here.  XXX */





/* Priorities range from 0 through MAXPRI. */


/* OR'd with pri for tsleep to check signals */

/* default "nice" */

/* number of bytes per word (integer) */

/* default file mask: S_IWGRP|S_IWOTH */
/* non-existent device */

/*
 * Clustering of hardware pages on machines with ridiculously small
 * page sizes is done here.  The paging subsystem deals with units of
 * CLSIZE pte's describing NBPG (from machine/machparam.h) pages each.
 */

/* for clusters, like PGOFSET */














/*
 * File system parameters and macros.
 *
 * The file system is made out of blocks of at most MAXBSIZE units, with
 * smaller units (fragments) only in the last direct block.  MAXBSIZE
 * primarily determines the size of buffers in the buffer pool.  It may be
 * made larger without any effect on existing file systems; however making
 * it smaller make make some file systems unmountable.
 */



/*
 * MAXPATHLEN defines the longest permissable path length after expanding
 * symbolic links. It is used to allocate a temporary buffer from the buffer
 * pool in which to do the name expansion, hence should be a power of two,
 * and must be less than or equal to MAXBSIZE.  MAXSYMLINKS defines the
 * maximum number of symbolic links that may be expanded in a path name.
 * It should be set high enough to allow all legitimate uses, but halt
 * infinite loops reasonably quickly.
 */



/* Bit map related macros. */





/* Macros for counting and rounding. */






/* Macros for min/max. */





/*
 * Constants for setting the parameters of the kernel memory allocator.
 *
 * 2 ** MINBUCKET is the smallest unit of memory that will be
 * allocated. It must be at least large enough to hold a pointer.
 *
 * Units of memory less or equal to MAXALLOCSAVE will permanently
 * allocate physical memory; requests for these size pieces of
 * memory are quite fast. Allocations greater than MAXALLOCSAVE must
 * always allocate and free physical memory; requests for these
 * size allocations should be done infrequently as they will be slow.
 *
 * Constraints: CLBYTES <= MAXALLOCSAVE <= 2 ** (MINBUCKET + 14), and
 * MAXALLOCSIZE must be a power of two.
 */
/* 4 => min allocation of 16 bytes */


/*
 * Scale factor for scaled integers used to count %cpu time and load avgs.
 *
 * The number of CPU `tick's that map to a unique `%age' can be expressed
 * by the formula (1 / (2 ^ (FSHIFT - 11))).  The maximum load average that
 * can be calculated (assuming 32 bits) can be closely approximated using
 * the formula (2 ^ (2 * (16 - FSHIFT))) for (FSHIFT < 15).
 *
 * For the scheduler to maintain a 1:1 mapping of CPU `tick' to `%age',
 * FSHIFT must be at least 11; this gives us a maximum load avg of ~1024.
 */
/* bits to right of fixed binary point */


/* !_SYS_PARAM_H_ */
# 269 "include/portable.h" 2

# 1 "/usr/include/sys/socket.h" 1 3
/*	BSDI socket.h,v 2.12 1996/08/20 15:00:18 jch Exp	*/

/*
 * Copyright (c) 1982, 1985, 1986, 1988, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)socket.h	8.6 (Berkeley) 5/3/95
 */




/*
 * Definitions related to sockets: types, address families, options.
 */

/*
 * Types
 */
/* stream socket */
/* datagram socket */
/* raw-protocol interface */
/* reliably-delivered message */
/* sequenced packet stream */

/*
 * Option flags per-socket.
 */
/* turn on debugging info recording */
/* socket has had listen() */
/* allow local address reuse */
/* keep connections alive */
/* just use interface addresses */
/* permit sending of broadcast msgs */
/* bypass hardware when possible */
/* linger on close if data present */
/* leave received OOB data in line */
/* allow local address & port reuse */

/*
 * Additional options, not kept in so_options.
 */
/* send buffer size */
/* receive buffer size */
/* send low-water mark */
/* receive low-water mark */
/* send timeout */
/* receive timeout */
/* get error status and clear */
/* get socket type */

/*
 * Structure used for manipulating linger option.
 */
struct	linger {
	int	l_onoff;		/* option on/off */
	int	l_linger;		/* linger time in seconds */
};

/*
 * Level number for (get/set)sockopt() to apply to socket itself.
 */
/* options for socket level */

/*
 * Address families.
 */
/* unspecified */
/* local to host (pipes, portals) */
/* backward compatibility */
/* internetwork: UDP, TCP, etc. */
/* arpanet imp addresses */
/* pup protocols: e.g. BSP */
/* mit CHAOS protocols */
/* XEROX NS protocols */
/* ISO protocols */

/* european computer manufacturers */
/* datakit protocols */
/* CCITT protocols, X.25 etc */
/* IBM SNA */
/* DECnet */
/* DEC Direct data link interface */
/* LAT */
/* NSC Hyperchannel */
/* Apple Talk */
/* Internal Routing Protocol */
/* Link layer interface */
/* eXpress Transfer Protocol (no AF) */
/* connection-oriented IP, aka ST II */
/* Computer Network Technology */
/* Help Identify RTIP packets */
/* Novell Internet Protocol */
/* Internet Protocol version 6 */
/* Help Identify PIP packets */



/*
 * Structure used by kernel to store most
 * addresses.
 */
struct sockaddr {
	u_char	sa_len;			/* total length */
	u_char	sa_family;		/* address family */
	char	sa_data[14];		/* actually longer; address value */
};

/*
 * Structure used by kernel to pass protocol
 * information in raw sockets.
 */
struct sockproto {
	u_short	sp_family;		/* address family */
	u_short	sp_protocol;		/* protocol */
};

/*
 * Protocol families, same as address families for now.
 */


/* backward compatibility */


















/* really just proto family, no AF */



/* same format as AF_NS */
/* same format as AF_INET */




/*
 * Definitions for network related sysctl, CTL_NET.
 *
 * Second level is protocol family.
 * Third level is protocol number.
 *
 * Further levels are defined by the individual families below.
 */


/* unspec === socket */
# 218 "/usr/include/sys/socket.h" 3

/*
 * Names for socket sysctl objects
 */
/* maximum connection backlog */
/* max sockbuf size */
/* max mbuf clusters */
















/*
 * PF_ROUTE - Routing table
 *
 * Three additional levels are defined:
 *	Fourth: address family, 0 is wildcard
 *	Fifth: type of info, defined below
 *	Sixth: flag(s) to mask with for NET_RT_FLAGS
 */
/* dump; may limit to a.f. */
/* by flags, e.g. RESOLVING */
/* survey interface list */










/* idle timeout for cloned routes */
/* Allow cloning of network routes */
/* ARP variables (INET specific...) */
/* statistics */


/* 0 for backwards compatability */















/*
 * Maximum queue length specifiable by listen.
 * The kernel has a configurable limit;
 * the non-kernel value is the traditional one.
 */






/*
 * Message header for recvmsg and sendmsg calls.
 * Used value-result for recvmsg, value only for sendmsg.
 */
struct msghdr {
	caddr_t	msg_name;		/* optional address */
	u_int	msg_namelen;		/* size of address */
	struct	iovec *msg_iov;		/* scatter/gather array */
	u_int	msg_iovlen;		/* # elements in msg_iov */
	caddr_t	msg_control;		/* ancillary data, see below */
	u_int	msg_controllen;		/* ancillary data buffer len */
	int	msg_flags;		/* flags on received message */
};

/* process out-of-band data */
/* peek at incoming message */
/* send without using routing tables */
/* data completes record */
/* data discarded before delivery */
/* control data lost before delivery */
/* wait for full request or error */
/* this message should be nonblocking */
/* this message rec'd as broadcast */
/* this message rec'd as multicast */

/*
 * Header for ancillary data objects in msg_control buffer.
 * Used for additional information with/about a datagram
 * not expressible by flags.  The format is a sequence
 * of message elements headed by cmsghdr structures.
 */
struct cmsghdr {
	u_int	cmsg_len;		/* data byte count, including hdr */
	int	cmsg_level;		/* originating protocol */
	int	cmsg_type;		/* protocol-specific type */
/* followed by	u_char  cmsg_data[]; */
};

/* given pointer to struct cmsghdr, return pointer to data */


/* given pointer to struct cmsghdr, return pointer to next cmsghdr */








/* "Socket"-level control message types: */
/* access rights (array of int) */
/* credentials (struct fcred) */

/*
 * 4.3 compat sockaddr, move to compat file later
 */
struct osockaddr {
	u_short	sa_family;		/* address family */
	char	sa_data[14];		/* up to 14 bytes of direct address */
};

/*
 * 4.3-compat message header (move to compat file later).
 */
struct omsghdr {
	caddr_t	msg_name;		/* optional address */
	int	msg_namelen;		/* size of address */
	struct	iovec *msg_iov;		/* scatter/gather array */
	int	msg_iovlen;		/* # elements in msg_iov */
	caddr_t	msg_accrights;		/* access rights sent/received */
	int	msg_accrightslen;
};





 
int	accept  (int, struct sockaddr *, int *)  ;
int	bind  (int, const struct sockaddr *, int)  ;
int	connect  (int, const struct sockaddr *, int)  ;
int	getpeername  (int, struct sockaddr *, int *)  ;
int	getsockname  (int, struct sockaddr *, int *)  ;
int	getsockopt  (int, int, int, void *, int *)  ;
int	listen  (int, int)  ;
ssize_t	recv  (int, void *, size_t, int)  ;
ssize_t	recvfrom  (int, void *, size_t, int, struct sockaddr *, int *)  ;
ssize_t	recvmsg  (int, struct msghdr *, int)  ;
ssize_t	send  (int, const void *, size_t, int)  ;
ssize_t	sendto  (int, const void *,
	    size_t, int, const struct sockaddr *, int)  ;
ssize_t	sendmsg  (int, const struct msghdr *, int)  ;
int	setsockopt  (int, int, int, const void *, int)  ;
int	shutdown  (int, int)  ;
int	socket  (int, int, int)  ;
int	socketpair  (int, int, int, int *)  ;
 

/* !KERNEL */
/* !_SYS_SOCKET_H_ */
# 270 "include/portable.h" 2

# 1 "/usr/include/netinet/in.h" 1 3
/*	BSDI in.h,v 2.9 1996/09/30 21:40:18 jch Exp	*/

/*
 * Copyright (c) 1982, 1986, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)in.h	8.3 (Berkeley) 1/3/94
 */




# 1 "/usr/include/sys/queue.h" 1 3
/*	BSDI queue.h,v 2.4 1996/07/02 13:22:11 bostic Exp	*/

/* 
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)queue.h	8.5 (Berkeley) 8/20/94
 */




/*
 * This file defines three types of data structures: lists, tail queues,
 * and circular queues.
 *
 * A list is headed by a single forward pointer (or an array of forward
 * pointers for a hash table header). The elements are doubly linked
 * so that an arbitrary element can be removed without a need to
 * traverse the list. New elements can be added to the list before
 * or after an existing element or at the head of the list. A list
 * may only be traversed in the forward direction.
 *
 * A tail queue is headed by a pair of pointers, one to the head of the
 * list and the other to the tail of the list. The elements are doubly
 * linked so that an arbitrary element can be removed without a need to
 * traverse the list. New elements can be added to the list before or
 * after an existing element, at the head of the list, or at the end of
 * the list. A tail queue may only be traversed in the forward direction.
 *
 * A circle queue is headed by a pair of pointers, one to the head of the
 * list and the other to the tail of the list. The elements are doubly
 * linked so that an arbitrary element can be removed without a need to
 * traverse the list. New elements can be added to the list before or after
 * an existing element, at the head of the list, or at the end of the list.
 * A circle queue may be traversed in either direction, but has a more
 * complex end of list detection.
 *
 * For details on the use of these macros, see the queue(3) manual page.
 */

/*
 * List definitions.
 */
/* first element */




/* next element *//* address of previous next element */









/*
 * List functions.
 */

































/*
 * Tail queue definitions.
 */
/* first element *//* addr of last next element */





/* next element *//* address of previous next element */









/*
 * Tail queue functions.
 */






# 160 "/usr/include/sys/queue.h" 3









# 177 "/usr/include/sys/queue.h" 3

















/*
 * Circular queue definitions.
 */
/* first element *//* last element */





/* next element *//* previous element */











/*
 * Circular queue functions.
 */






# 232 "/usr/include/sys/queue.h" 3


# 242 "/usr/include/sys/queue.h" 3


# 252 "/usr/include/sys/queue.h" 3


# 262 "/usr/include/sys/queue.h" 3


# 275 "/usr/include/sys/queue.h" 3
/* !_SYS_QUEUE_H_ */
# 41 "/usr/include/netinet/in.h" 2 3


/*
 * Constants and structures defined by the internet system,
 * Per RFC 790, September 1981, and numerous additions.
 */

/*
 * Protocols
 */
/* dummy for IP */
/* control message protocol */
/* group mgmt protocol */
/* gateway^2 (deprecated) */
/* IP inside IP */
/* tcp */
/* exterior gateway protocol */
/* pup */
/* user datagram protocol */
/* xns idp */
/* tp-4 w/ class negotiation */
/* ISO cnlp */
/* encapsulation header */

/* raw IP packet */



/*
 * Local port number conventions:
 * Ports < IPPORT_RESERVED are reserved for
 * privileged processes (e.g. root).
 * Ports > IPPORT_USERRESERVED are reserved
 * for servers, not necessarily privileged.
 */



/*
 * Internet address (a structure for historical reasons)
 */
struct in_addr {
	u_long s_addr;
};

/*
 * Definitions of bits in internet address integers.
 * On subnets, the decomposition of addresses to host and net parts
 * is done according to subnet mask, not the masks here.
 */


















/* These ones aren't really */
/* net and host fields, but */
/* routing needn't know.    */






/* must be masked */

/* -1 return */


/* 224.0.0.0 */
/* 224.0.0.1 */
/* 224.0.0.255 */

/* official! */

/*
 * Socket address, internet style.
 */
struct sockaddr_in {
	u_char	sin_len;
	u_char	sin_family;
	u_short	sin_port;
	struct	in_addr sin_addr;
	char	sin_zero[8];
};

/*
 * Structure used to describe IP options.
 * Used to store options internally, to pass them to a process,
 * or to restore options retrieved earlier.
 * The ip_dst is used for the first-hop gateway when using a source route
 * (this gets put into the header proper).
 */
struct ip_opts {
	struct	in_addr ip_dst;		/* first hop, 0 w/o src rt */
	char	ip_opts[40];		/* actually variable in size */
};

/*
 * Options for use with [gs]etsockopt at the IP level.
 * First word of comment is data type; bool is stored in int.
 */
/* buf/ip_opts; set/get IP options */
/* int; header is included with data */
/* int; IP type of service and preced. */
/* int; IP time to live */
/* bool; receive all IP opts w/dgram */
/* bool; receive IP opts for response */
/* bool; receive IP dst addr w/dgram */
/* ip_opts; set/get IP options */
/* u_char; set/get IP multicast i/f  */
/* u_char; set/get IP multicast ttl */
/* u_char; set/get IP multicast loopback */
/* ip_mreq; add an IP group membership */
/* ip_mreq; drop an IP group membership */
/* set/get IP mcast vir. interface */
/* Use all ones broadcast */


/*
 * Defaults and limits for options
 */
/* normally limit m'casts to 1 hop  */
/* normally hear sends if a member  */
/* per socket; must fit in one mbuf */

/*
 * Argument structure for IP_ADD_MEMBERSHIP and IP_DROP_MEMBERSHIP.
 */
struct ip_mreq {
	struct	in_addr imr_multiaddr;	/* IP multicast address of group */
	struct	in_addr imr_interface;	/* local IP address of interface */
};

/*
 * Definitions for inet sysctl operations.
 *
 * Third level is protocol number.
 * Fourth level is desired variable within that protocol.
 */
/* don't list to IPPROTO_MAX */


# 221 "/usr/include/netinet/in.h" 3

/*
 * Names for IP sysctl objects
 */
/* act as router */
/* may send redirects when forwarding */
/* default TTL */



/* forward source-routed dgrams */
/* stats */
/* multicast forwarding stats */
/* multicast routing protocol */
/* max packets reassembly queue */
/* verify source route and intf */
/* minimume logging interval */



# 254 "/usr/include/netinet/in.h" 3

/* &ip_mtu */
# 269 "/usr/include/netinet/in.h" 3








/* _NETINET_IN_H_ */
# 271 "include/portable.h" 2

# 1 "/usr/include/netdb.h" 1 3
/*	BSDI netdb.h,v 2.2 1996/07/15 22:10:09 bostic Exp	*/

/*-
 * Copyright (c) 1980, 1983, 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *      @(#)netdb.h	8.1 (Berkeley) 6/2/93
 *	=Id: netdb.h,v 4.9.1.6 1994/12/01 09:37:42 vixie Exp =
 * -
 * Portions Copyright (c) 1993 by Digital Equipment Corporation.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies, and that
 * the name of Digital Equipment Corporation not be used in advertising or
 * publicity pertaining to distribution of the document or software without
 * specific, written prior permission.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND DIGITAL EQUIPMENT CORP. DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL DIGITAL EQUIPMENT
 * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
 * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 * SOFTWARE.
 * -
 * --Copyright--
 */










extern int h_errno;

/*
 * Structures returned by network data base library.  All addresses are
 * supplied in host order, and returned in network order (suitable for
 * use in system calls).
 */
struct	hostent {
	char	*h_name;	/* official name of host */
	char	**h_aliases;	/* alias list */
	int	h_addrtype;	/* host address type */
	int	h_length;	/* length of address */
	char	**h_addr_list;	/* list of addresses from name server */
/* address, for backward compatiblity */
};

/*
 * Assumption here is that a network number
 * fits in an unsigned long -- probably a poor one.
 */
struct	netent {
	char		*n_name;	/* official name of net */
	char		**n_aliases;	/* alias list */
	int		n_addrtype;	/* net address type */
	unsigned long	n_net;		/* network # */
};

struct	servent {
	char	*s_name;	/* official service name */
	char	**s_aliases;	/* alias list */
	int	s_port;		/* port # */
	char	*s_proto;	/* protocol to use */
};

struct	protoent {
	char	*p_name;	/* official protocol name */
	char	**p_aliases;	/* alias list */
	int	p_proto;	/* protocol # */
};

/*
 * Error return codes from gethostbyname() and gethostbyaddr()
 * (left in extern int h_errno).
 */

/* see errno */
/* no problem */
/* Authoritative Answer Host not found */
/* Non-Authoritive Host not found, or SERVERFAIL */
/* Non recoverable errors, FORMERR, REFUSED, NOTIMP */
/* Valid name, no data record of requested type */
/* no address, look for MX record */



 
void		endhostent  (void)  ;
void		endnetent  (void)  ;
void		endnetgrent  (void)  ;
void		endprotoent  (void)  ;
void		endservent  (void)  ;
struct hostent	*gethostbyaddr  (const char *, int, int)  ;
struct hostent	*gethostbyname  (const char *)  ;
struct hostent	*gethostbyname2  (const char *, int)  ;
struct hostent	*gethostent  (void)  ;
struct netent	*getnetbyaddr  (unsigned long, int)  ;
struct netent	*getnetbyname  (const char *)  ;
struct netent	*getnetent  (void)  ;
int		getnetgrent  (char **, char **, char **)  ;
struct protoent	*getprotobyname  (const char *)  ;
struct protoent	*getprotobynumber  (int)  ;
struct protoent	*getprotoent  (void)  ;
struct servent	*getservbyname  (const char *, const char *)  ;
struct servent	*getservbyport  (int, const char *)  ;
struct servent	*getservent  (void)  ;
void		herror  (const char *)  ;
char		*hstrerror  (int)  ;
int		innetgr  (const char *, const char *, const char *, const char *)  ;
void		sethostent  (int)  ;
/* void		sethostfile __P((const char *)); */
void		setnetent  (int)  ;
void		setnetgrent  (const char *)  ;
void		setprotoent  (int)  ;
void		setservent  (int)  ;
 

/* !_NETDB_H_ */
# 272 "include/portable.h" 2

# 1 "/usr/include/arpa/inet.h" 1 3
/*	BSDI inet.h,v 2.3 1996/08/08 18:57:44 bostic Exp	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)inet.h	8.1 (Berkeley) 6/2/93
 *	=Id: inet.h,v 8.5 1996/05/22 04:56:29 vixie Exp =

 */




/* External definitions for functions in inet(3) */



 
unsigned long	 inet_addr  (const char *)  ;
int		 inet_aton  (const char *, struct in_addr *)  ;
unsigned long	 inet_lnaof  (struct in_addr)  ;
struct in_addr	 inet_makeaddr  (u_long, u_long)  ;
char		*inet_neta  (u_long, char *, size_t)  ;
unsigned long	 inet_netof  (struct in_addr)  ;
unsigned long	 inet_network  (const char *)  ;
char		*inet_net_ntop  (int, const void *, int, char *, size_t)  ;
int		 inet_net_pton  (int, const char *, void *, size_t)  ;
char		*inet_ntoa  (struct in_addr)  ;
int		 inet_pton  (int, const char *, void *)  ;
const char	*inet_ntop  (int, const void *, char *, size_t)  ;
 

/* !_INET_H_ */
# 273 "include/portable.h" 2


# 1 "/usr/include/sys/stat.h" 1 3
/*	BSDI stat.h,v 2.3 1996/06/06 21:48:39 bostic Exp	*/

/*-
 * Copyright (c) 1982, 1986, 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)stat.h	8.12 (Berkeley) 6/16/95
 */







# 1 "/usr/include/sys/time.h" 1 3
/*	BSDI time.h,v 2.7 1996/06/23 17:48:31 bostic Exp	*/

/*
 * Copyright (c) 1982, 1986, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)time.h	8.5 (Berkeley) 5/4/95
 */







# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/time.h" 1 3
/*	BSDI time.h,v 2.2 1996/06/03 14:58:29 mdickson Exp	*/

/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)time.h	8.3 (Berkeley) 1/21/94
 */


























struct tm {
	int	tm_sec;		/* seconds after the minute [0-60] */
	int	tm_min;		/* minutes after the hour [0-59] */
	int	tm_hour;	/* hours since midnight [0-23] */
	int	tm_mday;	/* day of the month [1-31] */
	int	tm_mon;		/* months since January [0-11] */
	int	tm_year;	/* years since 1900 */
	int	tm_wday;	/* days since Sunday [0-6] */
	int	tm_yday;	/* days since January 1 [0-365] */
	int	tm_isdst;	/* Daylight Savings Time flag */
	long	tm_gmtoff;	/* offset from UTC in seconds */
	char	*tm_zone;	/* timezone abbreviation */
};

/* for CLK_TCK */
# 1 "/usr/include/sys/time.h" 1 3
/*	BSDI time.h,v 2.7 1996/06/23 17:48:31 bostic Exp	*/

/*
 * Copyright (c) 1982, 1986, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)time.h	8.5 (Berkeley) 5/4/95
 */

/* !_SYS_TIME_H_ */
# 177 "/usr/include/sys/time.h" 3

# 82 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/time.h" 2 3



 
char *asctime  (const struct tm *)  ;
clock_t clock  (void)  ;
char *ctime  (const time_t *)  ;
double difftime  (time_t, time_t)  ;
struct tm *gmtime  (const time_t *)  ;
struct tm *localtime  (const time_t *)  ;
time_t mktime  (struct tm *)  ;
size_t strftime  (char *, size_t, const char *, const struct tm *)  ;
time_t time  (time_t *)  ;


char *asctime_r  (const struct tm *, char *)  ;
char *ctime_r  (const time_t *, char *)  ;
struct tm *gmtime_r  (const time_t *, struct tm *)  ;
struct tm *localtime_r  (const time_t *, struct tm *)  ;
/* not ANSI */


char *timezone  (int, int)  ;
void tzsetwall  (void)  ;
/* neither ANSI nor POSIX */
 

/* defined(__USE_FIXED_PROTOTYPES__) || ... */


/* !_TIME_H_ */
# 44 "/usr/include/sys/time.h" 2 3



/*
 * CLOCKS_PER_SEC and the obsolete CLK_TCK are the units for the obsolete
 * but POSIX-standard times() function and for the ANSI C clock() function.
 * They are not the same as the system clock tick (which is different
 * and variable).
 */



/* POSIX.1 says 'obsolescent' */



/*
 * Structure returned by gettimeofday(2) system call,
 * and used in other calls.
 */
struct timeval {
	long	tv_sec;		/* seconds */
	long	tv_usec;	/* and microseconds */
};

/*
 * Structure defined by POSIX.4 to be like a timeval,
 * except that it uses nanoseconds rather than microseconds.
 */
struct timespec {
	time_t	tv_sec;		/* seconds */
	long	tv_nsec;	/* and nanoseconds */
};










/* 
 * POSIX.4 clock identifier.  All systems must support at 
 * least a realtime clock.
 */

typedef	int clockid_t;
/* Real Time Clock */

struct timezone {
	int	tz_minuteswest;	/* minutes west of Greenwich */
	int	tz_dsttime;	/* type of dst correction */
};
/* not on dst */
/* USA style dst */
/* Australian style dst */
/* Western European dst */
/* Middle European dst */
/* Eastern European dst */
/* Canada */

/* Operations on timevals. */







/*
 * Names of the interval timers, and structure
 * defining a timer setting.
 */




struct itimerval {
	struct	timeval it_interval;	/* timer interval */
	struct	timeval it_value;	/* current value */
};

/*
 * Structure defined by POSIX.4 to be like a itimerval,
 * except that it uses nanoseconds rather than microseconds.
 */
struct itimerspec {
	struct	timespec it_interval;	/* timer interval (reload) */
	struct	timespec it_value;	/* current value */
};

/*
 * Getkerninfo clock information structure
 */
struct clockinfo {
	int	hz;		/* clock frequency */
	int	tick;		/* micro-seconds per hz tick */
	int	stathz;		/* statistics clock frequency */
	int	profhz;		/* profiling clock frequency */
};

/* !KERNEL */
# 158 "/usr/include/sys/time.h" 3




 
int	adjtime  (const struct timeval *, struct timeval *)  ;
int	clock_getres  (clockid_t, struct timespec *)  ;
int	clock_gettime  (clockid_t, struct timespec *)  ;
int	clock_settime  (clockid_t, struct timespec *)  ;
int	getitimer  (int, struct itimerval *)  ;
int	gettimeofday  (struct timeval *, struct timezone *)  ;
int	setitimer  (int, const struct itimerval *, struct itimerval *)  ;
int	settimeofday  (const struct timeval *, const struct timezone *)  ;
int	utimes  (const char *, const struct timeval *)  ;
 
/* !KERNEL */

/* !POSIX && !ANSI */

/* !_SYS_TIME_H_ */
# 49 "/usr/include/sys/stat.h" 2 3



/* Old (4.3-Reno, Net/2 vintage) stat structure */
struct ostat {
	unsigned short	st_dev;		/* inode's device */
	ino_t	st_ino;			/* inode's number */
	mode_t	st_mode;		/* inode protection mode */
	nlink_t	st_nlink;		/* number of hard links */
	unsigned short	st_uid;		/* user ID of the file's owner */
	unsigned short	st_gid;		/* group ID of the file's group */
	unsigned short	st_rdev;	/* device type */
	long	st_size;		/* file size, in bytes */
# 75 "/usr/include/sys/stat.h" 3

	struct	timespec st_atimespec;	/* time of last access */
	struct	timespec st_mtimespec;	/* time of last data modification */
	struct	timespec st_ctimespec;	/* time of last file status change */

	long	st_blksize;		/* optimal blocksize for I/O */
	long	st_blocks;		/* blocks allocated for file */
	unsigned long	st_flags;	/* user defined flags for file */
	unsigned long	st_gen;		/* file generation number */
};
/* !_POSIX_SOURCE */




/* Newer stat structure using 32-bit offsets and sizes, otherwise current */
struct stat32 {
	dev_t	st_dev;			/* inode's device */
	ino_t	st_ino;			/* inode's number */
	mode_t	st_mode;		/* inode protection mode */
	nlink_t	st_nlink;		/* number of hard links */
	uid_t	st_uid;			/* user ID of the file's owner */
	gid_t	st_gid;			/* group ID of the file's group */
	dev_t	st_rdev;		/* device type */
# 112 "/usr/include/sys/stat.h" 3

	struct	timespec st_atimespec;	/* time of last access */
	struct	timespec st_mtimespec;	/* time of last data modification */
	struct	timespec st_ctimespec;	/* time of last file status change */

/* XXX need underscore versions */
	long	st_size;		/* file size, in bytes */
	long	st_size1;		/* reserved for st_size expansion */
	long	st_blocks;		/* blocks allocated for file */
	long	st_blocks1;		/* reserved for st_blocks expansion */






	unsigned long	st_blksize;	/* optimal blocksize for I/O */
	unsigned long	st_flags;	/* user defined flags for file */
	unsigned long	st_gen;		/* file generation number */
	long	st_lspare;
	long	st_qspare[2*2];
};
/* !_POSIX_SOURCE */


struct stat {
	dev_t	st_dev;			/* inode's device */
	ino_t	st_ino;			/* inode's number */
	mode_t	st_mode;		/* inode protection mode */
	nlink_t	st_nlink;		/* number of hard links */
	uid_t	st_uid;			/* user ID of the file's owner */
	gid_t	st_gid;			/* group ID of the file's group */
	dev_t	st_rdev;		/* device type */
# 158 "/usr/include/sys/stat.h" 3

	struct	timespec st_atimespec;	/* time of last access */
	struct	timespec st_mtimespec;	/* time of last data modification */
	struct	timespec st_ctimespec;	/* time of last file status change */

	off_t	st_size;		/* file size, in bytes */
	quad_t	st_blocks;		/* blocks allocated for file */
	unsigned long	st_blksize;	/* optimal blocksize for I/O */
	unsigned long	st_flags;	/* user defined flags for file */
	unsigned long	st_gen;		/* file generation number */
	long	st_lspare;
	quad_t	st_qspare[2];
};
/* !_BSDI_USE_OFF32 */






/* set user id on execution */
/* set group id on execution */

/* sticky bit */


/* RWX mask for owner */
/* R for owner */
/* W for owner */
/* X for owner */







/* RWX mask for group */
/* R for group */
/* W for group */
/* X for group */

/* RWX mask for other */
/* R for other */
/* W for other */
/* X for other */


/* type of file mask */
/* named pipe (fifo) */
/* character special */
/* directory */
/* block special */
/* regular */
/* symbolic link */
/* socket */
/* whiteout */
/* save swapped text even after use */


/* directory */
/* char special */
/* block special */
/* regular file */
/* fifo or socket */


/* symbolic link */
/* fifo or socket */

/* whiteout */



/* 0777 */
							/* 7777 */

							/* 0666 */


/* block size used in the stat struct */

/*
 * Definitions of flags stored in file flags word.
 *
 * Super-user and owner changeable flags.
 */
/* mask of owner changeable flags */
/* do not dump file */
/* file may not be changed */
/* writes to file may only append */
/* directory is opaque wrt. union */
/*
 * Super-user changeable flags.
 */
/* mask of superuser changeable flags */
/* file is archived */
/* file may not be changed */
/* writes to file may only append */













 
int	chmod  (const char *, mode_t)  ;
int	fstat  (int, struct stat *)  ;
int	mkdir  (const char *, mode_t)  ;
int	mkfifo  (const char *, mode_t)  ;
int	stat  (const char *, struct stat *)  ;
mode_t	umask  (mode_t)  ;

int	chflags  (const char *, u_long)  ;
int	fchflags  (int, u_long)  ;
int	fchmod  (int, mode_t)  ;
int	lstat  (const char *, struct stat *)  ;

 

/* !_SYS_STAT_H_ */
# 275 "include/portable.h" 2

# 1 "/usr/include/pwd.h" 1 3
/*	BSDI pwd.h,v 2.1 1995/02/03 06:01:34 polk Exp	*/

/*-
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)pwd.h	8.2 (Berkeley) 1/21/94
 */















/* stored by name */
/* stored by entry in the "file" */
/* stored by uid */

/* extended encryption format */

/* max length, not counting NULL */


struct passwd {
	char	*pw_name;		/* user name */
	char	*pw_passwd;		/* encrypted password */
	uid_t	pw_uid;			/* user uid */
	gid_t	pw_gid;			/* user gid */
	time_t	pw_change;		/* password change time */
	char	*pw_class;		/* user access class */
	char	*pw_gecos;		/* Honeywell login info */
	char	*pw_dir;		/* home directory */
	char	*pw_shell;		/* default shell */
	time_t	pw_expire;		/* account expiration */
};



 
struct passwd	*getpwuid  (uid_t)  ;
struct passwd	*getpwnam  (const char *)  ;

struct passwd	*getpwent  (void)  ;
int		 setpassent  (int)  ;
int		 setpwent  (void)  ;
void		 endpwent  (void)  ;
char		*user_from_uid  (uid_t, int)  ;

 

/* !_PWD_H_ */
# 276 "include/portable.h" 2




# 1 "/usr/include/signal.h" 1 3
/*	BSDI signal.h,v 2.3 1995/12/01 23:24:21 bostic Exp	*/

/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)signal.h	8.3 (Berkeley) 3/30/94
 */












extern char *sys_signame[];
extern char *sys_siglist[];


 
int	raise  (int)  ;

int	kill  (pid_t, int)  ;
int	sigaction  (int, const struct sigaction *, struct sigaction *)  ;
int	sigaddset  (sigset_t *, int)  ;
int	sigdelset  (sigset_t *, int)  ;
int	sigemptyset  (sigset_t *)  ;
int	sigfillset  (sigset_t *)  ;
int	sigismember  (const sigset_t *, int)  ;
int	sigpending  (sigset_t *)  ;
int	sigprocmask  (int, const sigset_t *, sigset_t *)  ;
int	sigsuspend  (const sigset_t *)  ;

int	killpg  (pid_t, int)  ;
int	sigblock  (int)  ;
int	siginterrupt  (int, int)  ;
int	sigpause  (int)  ;
int	sigreturn  (struct sigcontext *)  ;
int	sigsetmask  (int)  ;
int	sigstack  (const struct sigstack *, struct sigstack *)  ;
int	sigvec  (int, struct sigvec *, struct sigvec *)  ;
void	psignal  (unsigned int, const char *)  ;
/* !_POSIX_SOURCE */
/* !_ANSI_SOURCE */
 

/* List definitions after function declarations, or Reiser cpp gets upset. */






/* !_USER_SIGNAL_H */
# 280 "include/portable.h" 2

# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/wait.h" 1 3
/*	BSDI wait.h,v 2.4 1996/10/11 16:02:53 pjd Exp	*/

/*
 * Copyright (c) 1982, 1986, 1989, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)wait.h	8.2 (Berkeley) 7/10/94
 */




/*
 * This file holds definitions relevent to the wait4 system call
 * and the alternate interfaces that use it (wait, wait3, waitpid).
 */

/*
 * Macros to test the exit status returned by wait
 * and extract the relevant values.
 */



/* convert union wait to int */




/* _WSTATUS if process is stopped */













/*
 * Option bits for the third argument of wait4.  WNOHANG causes the
 * wait to not hang if there are no stopped or terminated processes, rather
 * returning an error indication in this case (pid==0).  WUNTRACED
 * indicates that the caller should receive status about untraced children
 * which stop due to signals.  If children are stopped and a wait without
 * this option is done, it is as though they were still running... nothing
 * about them is returned.
 */
/* don't hang in wait */
/* tell about stopped, untraced children */


/* POSIX extensions and 4.2/4.3 compatability: */

/*
 * Tokens for special values of the "pid" parameter to wait4.
 */
/* any process */
/* any process in my process group */



/*
 * Deprecated:
 * Structure of the information in the status word returned by wait4.
 * If w_stopval==WSTOPPED, then the second structure describes
 * the information returned, else the first.
 */
union wait {
	int	w_status;		/* used in syscall */
	/*
	 * Terminated process status.
	 */
	struct {

		unsigned int	w_Termsig:7,	/* termination signal */
				w_Coredump:1,	/* core dump indicator */
				w_Retcode:8,	/* exit code if w_termsig==0 */
				w_Filler:16;	/* upper bits filler */







	} w_T;
	/*
	 * Stopped process status.  Returned
	 * only for traced children unless requested
	 * with the WUNTRACED option bit.
	 */
	struct {

		unsigned int	w_Stopval:8,	/* == W_STOPPED if stopped */
				w_Stopsig:8,	/* signal that stopped us */
				w_Filler:16;	/* upper bits filler */






	} w_S;
};







/* _POSIX_SOURCE */










 
struct rusage;	/* forward declaration */

pid_t	wait  (int *)  ;
pid_t	waitpid  (pid_t, int *, int)  ;

pid_t	wait3  (int *, int, struct rusage *)  ;
pid_t	wait4  (pid_t, int *, int, struct rusage *)  ;

 
/* KERNEL */

/* !_SYS_WAIT_H_ */
# 281 "include/portable.h" 2

# 1 "/usr/include/ctype.h" 1 3
/*	BSDI ctype.h,v 2.3 1996/03/27 05:30:27 prb Exp	*/

/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * This code is derived from software contributed to Berkeley by
 * Paul Borman at Krystal Technologies.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)ctype.h	8.4 (Berkeley) 1/21/94
 */




# 1 "/usr/include/runetype.h" 1 3
/*	BSDI runetype.h,v 2.1 1995/02/03 06:01:48 polk Exp	*/

/*-
 * Copyright (c) 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Paul Borman at Krystal Technologies.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)runetype.h	8.1 (Berkeley) 6/2/93
 */







/* Must be a power of 2 */


/*
 * The lower 8 bits of runetype[] contain the digit value of the rune.
 */
typedef struct {
	int 	min;		/* First rune of the range */
	int 	max;		/* Last rune (inclusive) of the range */
	int 	map;		/* What first maps to in maps */
	unsigned long	*types;		/* Array of types in range */
} _RuneEntry;

typedef struct {
	int		nranges;	/* Number of ranges stored */
	_RuneEntry	*ranges;	/* Pointer to the ranges */
} _RuneRange;

typedef struct {
	char		magic[8];	/* Magic saying what version we are */
	char		encoding[32];	/* ASCII name of this encoding */

	int 	(*sgetrune)
	     (const char *, unsigned int, char const **)  ;
	int		(*sputrune)
	     (int , char *, unsigned int, char **)  ;
	int 		invalid_rune;

	unsigned long	runetype[(1 <<8 ) ];
	int 	maplower[(1 <<8 ) ];
	int 	mapupper[(1 <<8 ) ];

	/*
	 * The following are to deal with Runes larger than _CACHED_RUNES - 1.
	 * Their data is actually contiguous with this structure so as to make
	 * it easier to read/write from/to disk.
	 */
	_RuneRange	runetype_ext;
	_RuneRange	maplower_ext;
	_RuneRange	mapupper_ext;

	void		*variable;	/* Data which depends on the encoding */
	int		variable_len;	/* how long that data is */
} _RuneLocale;

/* Indicates version 0 of RuneLocale */

extern _RuneLocale _DefaultRuneLocale;
extern _RuneLocale *_CurrentRuneLocale;

/* !_RUNETYPE_H_ */
# 49 "/usr/include/ctype.h" 2 3


/* Alpha */
/* Control */
/* Digit */
/* Graph */
/* Lower */
/* Punct */
/* Space */
/* Upper */
/* X digit */
/* Blank */
/* Print */
/* Ideogram */
/* Special */
/* Phonogram */
/* Mask to get screen width data */
/* Bits to shift to get width */
/* 0 width character */
/* 1 width character */
/* 2 width character */
/* 2 width character */



 
int isalnum  (int )  ;
int isalpha  (int )  ;
int iscntrl  (int )  ;
int isdigit  (int )  ;
int isgraph  (int )  ;
int islower  (int )  ;
int isprint  (int )  ;
int ispunct  (int )  ;
int isspace  (int )  ;
int isupper  (int )  ;
int isxdigit  (int )  ;
 




/* ANSI -- locale independent */






/* ANSI -- locale independent */


 
int isascii  (int )  ;
int  toascii  (int )  ;
int digittoint  (int )  ;
int scrwidth  (int )  ;
int isideogram  (int )  ;
int isphonogram  (int )  ;
int isspecial  (int )  ;
int isblank  (int )  ;
int isrune  (int )  ;
int isnumber  (int )  ;
int ishexnumber  (int )  ;
 














/* See comments in <machine/ansi.h> about _BSD_RUNE_T_. */
 
unsigned long	___runetype  (int )  ;
int 	___tolower  (int )  ;
int 	___toupper  (int )  ;
 

/*
 * If your compiler supports prototypes and inline functions,
 * #define _USE_CTYPE_INLINE_.  Otherwise, use the C library
 * functions.
 */





static __inline unsigned long
__runetype(int  c)
{
	return((c & (~((1 <<8 )  - 1)) ) ? ___runetype(c) :
	    _CurrentRuneLocale->runetype[c]);
}

static __inline int
__istype(int  c, unsigned long f)
{
	return((((c & (~((1 <<8 )  - 1)) ) ? ___runetype(c) :
	    _CurrentRuneLocale->runetype[c]) & f) ? 1 : 0);
}

static __inline int
__isctype(int  c, unsigned long f)
{
	return((((c & (~((1 <<8 )  - 1)) ) ? 0 :
	    _DefaultRuneLocale.runetype[c]) & f) ? 1 : 0);
}

/* _ANSI_LIBRARY is defined by lib/libc/gen/isctype.c. */

static __inline int 
toupper(int  c)
{
	return((c & (~((1 <<8 )  - 1)) ) ?
	    ___toupper(c) : _CurrentRuneLocale->mapupper[c]);
}

static __inline int 
tolower(int  c)
{
	return((c & (~((1 <<8 )  - 1)) ) ?
	    ___tolower(c) : _CurrentRuneLocale->maplower[c]);
}
/* !_ANSI_LIBRARY */

/* !_USE_CTYPE_INLINE_ *//* _USE_CTYPE_INLINE_ */
# 192 "/usr/include/ctype.h" 3


/* !_CTYPE_H_ */
# 282 "include/portable.h" 2


# 1 "/usr/include/errno.h" 1 3
/*	BSDI errno.h,v 2.3 1996/10/11 16:02:31 pjd Exp	*/

/*
 * Copyright (c) 1982, 1986, 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)errno.h	8.5 (Berkeley) 1/21/94
 */





extern int errno;			/* global error number */


/* Operation not permitted */
/* No such file or directory */
/* No such process */
/* Interrupted system call */
/* Input/output error */
/* Device not configured */
/* Argument list too long */
/* Exec format error */
/* Bad file descriptor */
/* No child processes */
/* Resource deadlock avoided */
					/* 11 was EAGAIN */
/* Cannot allocate memory */
/* Permission denied */
/* Bad address */

/* Block device required */

/* Device busy */
/* File exists */
/* Cross-device link */
/* Operation not supported by device */
/* Not a directory */
/* Is a directory */
/* Invalid argument */
/* Too many open files in system */
/* Too many open files */
/* Inappropriate ioctl for device */

/* Text file busy */

/* File too large */
/* No space left on device */
/* Illegal seek */
/* Read-only file system */
/* Too many links */
/* Broken pipe */

/* math software */
/* Numerical argument out of domain */
/* Result too large */

/* non-blocking and interrupt i/o */
/* Resource temporarily unavailable */

/* Operation would block */
/* Operation now in progress */
/* Operation already in progress */

/* ipc/network software -- argument errors */
/* Socket operation on non-socket */
/* Destination address required */
/* Message too long */
/* Protocol wrong type for socket */
/* Protocol not available */
/* Protocol not supported */
/* Socket type not supported */
/* Operation not supported */
/* Protocol family not supported */
/* Address family not supported by protocol family */
/* Address already in use */
/* Can't assign requested address */

/* ipc/network software -- operational errors */
/* Network is down */
/* Network is unreachable */
/* Network dropped connection on reset */
/* Software caused connection abort */
/* Connection reset by peer */
/* No buffer space available */
/* Socket is already connected */
/* Socket is not connected */
/* Can't send after socket shutdown */
/* Too many references: can't splice */
/* Operation timed out */
/* Connection refused */

/* Too many levels of symbolic links */
/* _POSIX_SOURCE */
/* File name too long */

/* should be rearranged */

/* Host is down */
/* No route to host */
/* _POSIX_SOURCE */
/* Directory not empty */

/* quotas & mush */

/* Too many processes */
/* Too many users */
/* Disc quota exceeded */

/* Network File System */
/* Stale NFS file handle */
/* Too many levels of remote in path */
/* RPC struct is bad */
/* RPC version wrong */
/* RPC prog. not avail */
/* Program version wrong */
/* Bad procedure for program */
/* _POSIX_SOURCE */

/* No locks available */
/* Function not implemented */


/* Inappropriate file type or format */
/* Authentication error */
/* Need authenticator */
/* Identifier removed */
/* No message of desired type */
/* Must be equal largest errno */
/* _POSIX_SOURCE */







/* !_SYS_ERRNO_H_ */
# 284 "include/portable.h" 2

# 1 "/usr/include/grp.h" 1 3
/*	BSDI grp.h,v 2.2 1996/06/27 19:09:50 bostic Exp	*/

/*-
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)grp.h	8.2 (Berkeley) 1/21/94
 */










struct group {
	char	*gr_name;		/* group name */
	char	*gr_passwd;		/* group password */
	gid_t	gr_gid;			/* group id */
	char	**gr_mem;		/* group members */
};



 
struct group *getgrgid  (gid_t)  ;
struct group *getgrnam  (const char *)  ;

struct group *getgrent  (void)  ;
int setgrent  (void)  ;
void endgrent  (void)  ;
int setgroupent  (int)  ;
char	*group_from_gid  (gid_t, int)  ;

 

/* !_GRP_H_ */
# 285 "include/portable.h" 2



# 1 "/usr/include/memory.h" 1 3
/*	BSDI memory.h,v 2.1 1995/02/03 06:01:21 polk Exp	*/

/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)memory.h	8.1 (Berkeley) 6/2/93
 */


# 288 "include/portable.h" 2








/* case insensitive compare for OS without it */











/*********************************************************************
 * directory management is nasty.  There are two standards:
 * struct directory and struct dirent.
 * Solution:  macros + a typedef.
 * Patrick Powell Thu Apr  6 07:44:50 PDT 1995
 *
 *See GNU autoconf documentation for this little AHEM gem... and others
 *  too obnoxious to believe
 *********************************************************************/


# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/dirent.h" 1 3
/*	BSDI dirent.h,v 2.2 1996/06/07 14:18:53 bostic Exp	*/

/*-
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)dirent.h	8.2 (Berkeley) 7/28/94
 */




/*
 * The kernel defines the format of directory entries returned by 
 * the getdirentries(2) system call.
 */
# 1 "/usr/include/sys/dirent.h" 1 3
/*	BSDI dirent.h,v 2.4 1996/10/11 16:02:28 pjd Exp	*/

/*-
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)dirent.h	8.3 (Berkeley) 8/10/94
 */




/*
 * The dirent structure defines the format of directory entries returned by 
 * the directory(3) C library routines and the getdirentries(2) system call.
 *
 * A directory entry begins with a struct dirent, containing its inode number,
 * the length of the entry, its type and the length of the name contained in
 * the entry.  This is followed by the name padded to a 4 byte boundary with
 * nul bytes.  All names are nul terminated.  The maximum length of a name in
 * a directory is MAXNAMLEN.
 */
struct dirent {
	u_int32_t d_fileno;		/* file number of entry */
	u_int16_t d_reclen;		/* length of this record */
	u_int8_t  d_type; 		/* file type, see below */
	u_int8_t  d_namlen;		/* length of string in d_name */




	char	d_name[255  + 1];	/* name must be no longer than this */

};

/*
 * File types, found in the d_type field; duplicated in <ufs/ufs/dir.h>.
 */

/* Fifo */
/* Character device */
/* Directory */
/* Block device */
/* Regular file */
/* Symbolic link */
/* Socket */
/* Whiteout */

/*
 * Convert between stat structure types and directory types.
 */



/* !_SYS_DIRENT_H_ */
# 45 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/dirent.h" 2 3






/* backward compatibility */

/* definitions for library routines operating on directories. */


/* structure describing an open directory. */
typedef struct _dirdesc {
	int	 dd_fd;		/* file descriptor associated with directory */
	long	 dd_loc;	/* offset in current buffer */
	long	 dd_size;	/* amount of data returned by getdirentries */
	char	*dd_buf;	/* data buffer */
	int	 dd_len;	/* size of data buffer */
	long	 dd_seek;	/* magic cookie returned by getdirentries */
    	void	*dd_seekdata;	/* List of structures returned from telldir */
	int	 dd_flags;	/* flags for readdir */
} DIR;



/* Flags for opendir2. */
/* hide whiteout entries */
/* don't return duplicate names */
/* rewind after reading union stack */
/* everything has been read */






/* _POSIX_SOURCE */





 
int	 closedir  (DIR *)  ;
DIR	*opendir  (const char *)  ;
struct dirent *
	 readdir  (DIR *)  ;
void	 rewinddir  (DIR *)  ;


DIR	*__opendir2  (const char *, int)  ;
int	alphasort  (const void *, const void *)  ;
int	getdirentries  (int, char *, int, long *)  ;
int	scandir  (const char *, struct dirent ***,
	    int (*)(struct dirent *), int (*)(const void *, const void *))  ;
void	seekdir  (DIR *, long)  ;
long	telldir  (DIR *)  ;

 

/* !KERNEL */
/* !_DIRENT_H_ */
# 319 "include/portable.h" 2


# 333 "include/portable.h"


typedef struct dirent plp_dir_t;

/*********************************************************************
 * malloc strikes again. Definition is a la ANSI C.  However,
 * You may need to edit this on historical systems.
 * Patrick Powell Thu Apr  6 07:47:54 PDT 1995
 *********************************************************************/


# 1 "/usr/include/malloc.h" 1 3
/* BSDI malloc.h,v 2.1 1996/05/07 04:44:32 torek Exp */













/*
 * This header file provides compatibility for applications written using
 * historic System V header files.  The "real" function prototypes for
 * these functions are in <stdlib.h>, and new applications should use them,
 * not these.  Do not reference this include file in any manual pages.
 */
 
void	*calloc  (size_t, size_t)  ;
void	*malloc  (size_t)  ;
void	*realloc  (void *, size_t)  ;
void	 free  (void *)  ;
 

/* !_MALLOC_H_ */
# 344 "include/portable.h" 2












/*********************************************************************
 * Note the <time.h> may already be included by some previous
 * lines.  You may need to edit this by hand.
 * Better solution is to put include guards in all of the include files.
 * Patrick Powell Thu Apr  6 07:55:58 PDT 1995
 *********************************************************************/
 












# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/file.h" 1 3
/*	BSDI file.h,v 2.3 1996/10/11 16:02:33 pjd Exp	*/

/*
 * Copyright (c) 1982, 1986, 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)file.h	8.3 (Berkeley) 1/9/95
 */




# 1 "/usr/include/sys/fcntl.h" 1 3
/*	BSDI fcntl.h,v 2.1 1995/02/03 08:38:57 polk Exp	*/

/*-
 * Copyright (c) 1983, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)fcntl.h	8.3 (Berkeley) 1/21/94
 */




/*
 * This file includes the definitions for open and fcntl
 * described by POSIX for <fcntl.h>; it also includes
 * related kernel definitions.
 */





/*
 * File status flags: these are used by open(2), fcntl(2).
 * They are also used (indirectly) in the kernel file structure f_flags,
 * which is a superset of the open/fcntl flags.  Open flags and f_flags
 * are inter-convertible using OFLAGS(fflags) and FFLAGS(oflags).
 * Open/fcntl flags begin with O_; kernel-internal flags begin with F.
 */
/* open-only flags */
/* open for reading only */
/* open for writing only */
/* open for reading and writing */
/* mask for above modes */

/*
 * Kernel encoding of open mode; separate read and write bits that are
 * independently testable: 1 greater than the above.
 *
 * XXX
 * FREAD and FWRITE are excluded from the #ifdef KERNEL so that TIOCFLUSH,
 * which was documented to use FREAD/FWRITE, continues to work.
 */




/* no delay */
/* set append mode */

/* open with shared file lock */
/* open with exclusive file lock */
/* signal pgrp when data ready */
/* synchronous writes */

/* create if nonexistant */
/* truncate to zero length */
/* error if already exists */






/* defined by POSIX 1003.1; BSD default, so no bit required */
/* don't assign controlling terminal */

# 110 "/usr/include/sys/fcntl.h" 3


/*
 * The O_* flags used to have only F* names, which were used in the kernel
 * and by fcntl.  We retain the F* names for the kernel f_flags field
 * and for backward compatibility for fcntl.
 */

/* kernel/compat */
/* kernel/compat */
/* kernel */
/* kernel */
/* compat */
/* compat */


/*
 * Constants used for fcntl(2)
 */

/* command values */
/* duplicate file descriptor */
/* get file descriptor flags */
/* set file descriptor flags */
/* get file status flags */
/* set file status flags */

/* get SIGIO/SIGURG proc/pgrp */
/* set SIGIO/SIGURG proc/pgrp */

/* get record locking information */
/* set record locking information */
/* F_SETLK; wait if blocked */

/* file descriptor flags (F_GETFD, F_SETFD) */
/* close-on-exec flag */

/* record locking flags (F_GETLK, F_SETLK, F_SETLKW) */
/* shared or read lock */
/* unlock */
/* exclusive or write lock */






/*
 * Advisory file segment locking data type -
 * information passed to system by user
 */
struct flock {
	off_t	l_start;	/* starting offset */
	off_t	l_len;		/* len = 0 means until end of file */
	pid_t	l_pid;		/* lock owner */
	short	l_type;		/* lock type: read/write, etc. */
	short	l_whence;	/* type of l_start */
};



/* lock operations for flock(2) */
/* shared file lock */
/* exclusive file lock */
/* don't block when locking */
/* unlock file */






 
int	open  (const char *, int, ...)  ;
int	creat  (const char *, mode_t)  ;
int	fcntl  (int, int, ...)  ;

int	flock  (int, int)  ;
/* !_POSIX_SOURCE */
 


/* !_SYS_FCNTL_H_ */
# 41 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/file.h" 2 3



/* KERNEL */
# 83 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/sys/file.h" 3


/* !_SYS_FILE_H_ */
# 375 "include/portable.h" 2




# 1 "/usr/include/sys/resource.h" 1 3
/*	BSDI resource.h,v 2.3 1996/07/24 14:16:51 bostic Exp	*/

/*
 * Copyright (c) 1982, 1986, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)resource.h	8.4 (Berkeley) 1/9/95
 */




/*
 * Process priority specifications to get/setpriority.
 */







/*
 * Resource utilization information.
 */




struct	rusage {
	struct timeval ru_utime;	/* user time used */
	struct timeval ru_stime;	/* system time used */
	long	ru_maxrss;		/* max resident set size */

	long	ru_ixrss;		/* integral shared memory size */
	long	ru_idrss;		/* integral unshared data " */
	long	ru_isrss;		/* integral unshared stack " */
	long	ru_minflt;		/* page reclaims */
	long	ru_majflt;		/* page faults */
	long	ru_nswap;		/* swaps */
	long	ru_inblock;		/* block input operations */
	long	ru_oublock;		/* block output operations */
	long	ru_msgsnd;		/* messages sent */
	long	ru_msgrcv;		/* messages received */
	long	ru_nsignals;		/* signals received */
	long	ru_nvcsw;		/* voluntary context switches */
	long	ru_nivcsw;		/* involuntary " */

};

/*
 * Resource limits
 */
/* cpu time in seconds */
/* maximum file size */
/* data size */
/* stack size */
/* core file size */
/* resident set size */
/* locked-in-memory address space */
/* number of processes */
/* number of open files */
/* compat */

/* number of resource limits */



struct orlimit {
	int32_t	rlim_cur;		/* current (soft) limit */
	int32_t	rlim_max;		/* maximum value for rlim_cur */
};

struct rlimit {
	quad_t	rlim_cur;		/* current (soft) limit */
	quad_t	rlim_max;		/* maximum value for rlim_cur */
};

/* Load average structure. */
struct loadavg {
	fixpt_t	ldavg[3];
	long	fscale;
};







 
int	getpriority  (int, int)  ;
int	getrlimit  (int, struct rlimit *)  ;
int	getrusage  (int, struct rusage *)  ;
int	setpriority  (int, int, int)  ;
int	setrlimit  (int, const struct rlimit *)  ;
 

/* KERNEL */
/* !_SYS_RESOURCE_H_ */
# 379 "include/portable.h" 2










/*
 * we use the FCNTL code if we have it
 * We want you to define F_SETLK, etc.  If they are not defined,
 *  Then you better put a system dependent configuration
 *  in and define them.
 */


















# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/limits.h" 1 3
/* This administrivia gets added to the beginning of limits.h
   if the system has its own version of limits.h.  */

/* We use _GCC_LIMITS_H_ because we want this not to match
   any macros that the system's limits.h uses for its own purposes.  */
/* Terminated in limity.h.  */



/* Use "..." so that we find syslimits.h only in this same directory.  */
# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/syslimits.h" 1 3
/* syslimits.h stands for the system's own limits.h file.
   If we can use it ok unmodified, then we install this text.
   If fixincludes fixes it, then the fixed version is installed
   instead of this text.  */

/* tell gcc's limits.h to recurse */
# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/limits.h" 1 3
/* This administrivia gets added to the beginning of limits.h
   if the system has its own version of limits.h.  */

/* We use _GCC_LIMITS_H_ because we want this not to match
   any macros that the system's limits.h uses for its own purposes.  */
/* Terminated in limity.h.  *//* not _GCC_LIMITS_H_ */
# 113 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/limits.h" 3



/* recurse down to the real one */
# 1 "/usr/include/limits.h" 1 3
/*	BSDI limits.h,v 2.1 1995/02/03 06:01:14 polk Exp	*/

/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)limits.h	8.2 (Berkeley) 1/4/94
 */

































/* POSIX.2 */



/* POSIX but not ANSI */

/* !_LIMITS_H_ */
# 116 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/limits.h" 2 3



/* not _GCC_LIMITS_H_ */
# 7 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/syslimits.h" 2 3


# 11 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/limits.h" 2 3





/* _MACH_MACHLIMITS_H_ is used on OSF/1.  */



/* Number of bits in a `char'.  */



/* Maximum length of a multibyte character.  */




/* Minimum and maximum values a `signed char' can hold.  */





/* Maximum value an `unsigned char' can hold.  (Minimum is 0).  */



/* Minimum and maximum values a `char' can hold.  */












/* Minimum and maximum values a `signed short int' can hold.  */





/* Maximum value an `unsigned short int' can hold.  (Minimum is 0).  */



/* Minimum and maximum values a `signed int' can hold.  */








/* Maximum value an `unsigned int' can hold.  (Minimum is 0).  */



/* Minimum and maximum values a `signed long int' can hold.
   (Same as `int').  */





/* __alpha__ || sparc64 */






/* Maximum value an `unsigned long int' can hold.  (Minimum is 0).  */




/* Minimum and maximum values a `signed long long int' can hold.  */








/* Maximum value an `unsigned long long int' can hold.  (Minimum is 0).  */




/* _MACH_MACHLIMITS_H_ */
/* _LIMITS_H___ */
/* This administrivia gets added to the end of limits.h
   if the system has its own version of limits.h.  */

/* not _GCC_LIMITS_H_ *//* not _GCC_LIMITS_H_ */






# 413 "include/portable.h" 2



/* 4.2 BSD systems */



















/* 4.2 BSD systems */









extern int killpg(pid_t pgrp, int sig);


/***********************************************************************
 * wait() stuff: most recent systems support a compatability version
 * of "union wait", but it's not as fully-featured as the recent stuff
 * that uses an "int *". However, we want to keep support for the
 * older BSD systems as much as possible, so it's still supported;
 * however, if waitpid() exists, we're POSIX.1 compliant, and we should
 * not use "union wait". (hack hack hack) (jm)
 *
 * I agree.  See the waitchild.c code for a tour through the depths of
 * portability hell.
 *
 * Patrick Powell Thu Apr  6 08:03:58 PDT 1995
 *
 ***********************************************************************/


/* and good riddance */


/***************************************************************************
 * HAVE_UNION_WAIT will be def'd by configure if it's in <sys/wait.h>,
 * and isn't just there for compatibility (like it is on HP/UX).
 ***************************************************************************/

# 495 "include/portable.h"

  typedef int			plp_status_t;
/* The POSIX defaults for these macros. (this is cheating!) */















/* HAVE_UNION_WAIT */

/***********************************************************************
 * SVR4: SIGCHLD is really SIGCLD; #define it here.
 * PLP lpd _does_ handle the compatibility semantics properly
 * (Advanced UNIX Programming p. 281).
 ***********************************************************************/






/***********************************************************************
 * configure will set RETSIGTYPE to the type returned by signal()
 ***********************************************************************/

typedef void  plp_signal_t;
typedef plp_signal_t (*plp_sigfunc_t)(int) ;

# 541 "include/portable.h"















/* varargs declarations: */


# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/stdarg.h" 1 3
/* stdarg.h for GNU.
   Note that the type used in va_arg is supposed to match the
   actual type **after default promotions**.
   Thus, va_arg (..., short) is not valid.  */






/* not __need___va_list */



















































/* Define __gnuc_va_list.  */










/* Define the standard macros for the user,
   if this invocation was from the user program.  */


/* Amount of space required in an argument list for an arg of type TYPE.
   TYPE may alternatively be an expression whose type is used.  */













void va_end (__gnuc_va_list);		/* Defined in libgcc.a */


/* We cast to void * and then to TYPE * because this avoids
   a warning about increasing the alignment requirement.  */


/* This is for little-endian machines; small args are padded upward.  */



/* big-endian *//* big-endian */








/* Copy __gnuc_va_list into another variable of this type.  */


/* _STDARG_H */

/* not v850 */
/* not mn10200 */
/* not mn10300 */
/* not sh */
/* not m32r */
/* not arc */
/* not powerpc with V.4 calling sequence */
/* not h8300 */
/* not alpha */
/* not i960 */
/* not sparc */
/* not mips */
/* not hppa */
/* not i860 */
/* not m88k */
/* not clipper */


/* Define va_list, if desired, from __gnuc_va_list. */
/* We deliberately do not define va_list when called from
   stdio.h, because ANSI C says that stdio.h is not supposed to define
   va_list.  stdio.h needs to have access to that data type, 
   but must not use that name.  It should use the name __gnuc_va_list,
   which is safe because it is reserved for the implementation.  */

/* On OSF1, this means varargs.h is "half-loaded".  */







/* not __svr4__ || _SCO_DS */
# 168 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/stdarg.h" 3


/* The macro _VA_LIST_ is the same thing used by this file in Ultrix.
   But on BSD NET2 we must not test or define or undef it.
   (Note that the comments in NET 2's ansi.h
   are incorrect for _VA_LIST_--see stdio.h!)  */

/* The macro _VA_LIST_DEFINED is used in Windows NT 3.5  */

/* The macro _VA_LIST is used in SCO Unix 3.2.  */

/* The macro _VA_LIST_T_H is used in the Bull dpx2  */

typedef __gnuc_va_list va_list;
/* not _VA_LIST_T_H */
/* not _VA_LIST */
/* not _VA_LIST_DEFINED */













/* not _VA_LIST_, except on certain systems */

/* not __svr4__ */

/* _STDARG_H */

/* not _ANSI_STDARG_H_ */
/* not _STDARG_H */
# 559 "include/portable.h" 2

/* let's hope that works everywhere (mj) */


/* no-op for ANSI */

# 576 "include/portable.h"



# 1 "/usr/include/syslog.h" 1 3
/*	BSDI syslog.h,v 2.5 1996/10/11 16:02:43 pjd Exp	*/

/*
 * Copyright (c) 1982, 1986, 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)syslog.h	8.1 (Berkeley) 6/2/93
 */






/*
 * priorities/facilities are encoded into a single 32-bit quantity, where the
 * bottom 3 bits are the priority (0-7) and the top 28 bits are the facility
 * (0-big number).  Both the priorities and the facilities map roughly
 * one-to-one to strings in the syslogd(8) source code.  This mapping is
 * included in this file.
 *
 * priorities (these are ordered)
 */
/* system is unusable */
/* action must be taken immediately */
/* critical conditions */
/* error conditions */
/* warning conditions */
/* normal but significant condition */
/* informational */
/* debug-level messages */

/* mask to extract priority part (internal) */
				/* extract priority */



# 90 "/usr/include/syslog.h" 3


/* facility codes */
/* kernel messages */
/* random user-level messages */
/* mail system */
/* system daemons */
/* security/authorization messages */
/* messages generated internally by syslogd */
/* line printer subsystem */
/* network news subsystem */
/* UUCP subsystem */
/* clock daemon */
/* security/authorization messages (private) */
/* ftp daemon */

	/* other codes through 15 reserved for system use */
/* reserved for local use */
/* reserved for local use */
/* reserved for local use */
/* reserved for local use */
/* reserved for local use */
/* reserved for local use */
/* reserved for local use */
/* reserved for local use */

/* current number of facilities */
/* mask to extract facility part */
				/* facility of pri */


# 147 "/usr/include/syslog.h" 3






/*
 * arguments to setlogmask.
 */
/* mask for one priority */
/* all priorities through pri */

/*
 * Option flags for openlog.
 *
 * LOG_ODELAY no longer does anything.
 * LOG_NDELAY is the inverse of what it used to be.
 */
/* log the pid with each message */
/* log on the console if errors in sending */
/* delay open until first syslog() (default) */
/* don't delay open */
/* don't wait for console forks: DEPRECATED */
/* log to stderr as well */



/*
 * Don't use va_list in the vsyslog() prototype.   Va_list is typedef'd in two
 * places (<machine/varargs.h> and <machine/stdarg.h>), so if we include one
 * of them here we may collide with the utility's includes.  It's unreasonable
 * for utilities to have to include one of them to include syslog.h, so we get
 * _BSD_VA_LIST_ from <machine/ansi.h> and use it.
 */



 
void	closelog  (void)  ;
void	openlog  (const char *, int, int)  ;
int	setlogmask  (int)  ;
void	syslog  (int, const char *, ...)  ;
void	vsyslog  (int, const char *, char * )  ;
 

/* !KERNEL */

/* !_SYS_SYSLOG_H_ */
# 579 "include/portable.h" 2





/* LOG_PID && LOG_NOWAIT */



/*
 *  Priorities (these are ordered)
 */
# 600 "include/portable.h"












/*************************************************************************
 * If we have SVR4 and no setpgid() then we need getpgrp() 
 *************************************************************************/




/*
 * NONBLOCKING Open and IO - different flags for
 * different systems
 */











/*********************************************************************
 * AIX systems need this
 *********************************************************************/





/**********************************************************************
 *  Signal blocking
 **********************************************************************/

/* a signal set */






/**********************************************************************
 *  Select() problems
 **********************************************************************/




/**********************************************************************
 * IPV6 and newer versions
 **********************************************************************/







/**********************************************************************
 *  SUNOS Definitions
 **********************************************************************/
# 730 "include/portable.h"





























/* IPV6 structures define */














struct in6_addr { unsigned char s6_addr[16 ]; };
struct sockaddr_in6 {
	/* unsigned char sin6_len; */
	unsigned char sin6_family;
	unsigned short sin6_port;
	unsigned int sin6_flowinfo;
	struct in6_addr sin6_addr;
};



# 1 "/usr/include/arpa/nameser.h" 1 3
/*	BSDI nameser.h,v 2.3 1996/08/08 18:57:46 bostic Exp	*/

/*
 * Copyright (c) 1983, 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * -
 * Portions Copyright (c) 1993 by Digital Equipment Corporation.
 * 
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies, and that
 * the name of Digital Equipment Corporation not be used in advertising or
 * publicity pertaining to distribution of the document or software without
 * specific, written prior permission.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS" AND DIGITAL EQUIPMENT CORP. DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL DIGITAL EQUIPMENT
 * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
 * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 * SOFTWARE.
 * -
 * --Copyright--
 */

/*
 *	@(#)nameser.h	8.1 (Berkeley) 6/2/93
 *	nameser.h,v 2.3 1996/08/08 18:57:46 bostic Exp
 */






/*
 * Revision information.  This is the release date in YYYYMMDD format.
 * It can change every day so the right thing to do with it is use it
 * in preprocessor commands such as "#if (__BIND > 19931104)".  Do not
 * compare for equality; rather, use it to determine whether your resolver
 * is new enough to contain a certain feature.
 */

/* interface version stamp */

/*
 * Define constants based on rfc883
 */
/* maximum packet size */
/* maximum domain name */
/* maximum compressed domain name */
/* maximum length of domain label */
/* #/bytes of fixed data in header */
/* #/bytes of fixed data in query */
/* #/bytes of fixed data in r record */
/* for systems without 32-bit ints */
/* for systems without 16-bit ints */
/* for sizeof(struct inaddr) != 4 */
/* IPv6 T_AAAA */

/*
 * Internet nameserver port number
 */


/*
 * Currently defined opcodes
 */
/* standard query */
/* inverse query */
/* nameserver status query */
/*#define xxx		0x3*/		/* 0x3 reserved */
/* notify secondary of SOA change */
# 113 "/usr/include/arpa/nameser.h" 3


/*
 * Currently defined response codes
 */
/* no error */
/* format error */
/* server failure */
/* non existent domain */
/* not implemented */
/* query refused */





/*
 * Type values for resources and queries
 */
/* host address */
/* authoritative server */
/* mail destination */
/* mail forwarder */
/* canonical name */
/* start of authority zone */
/* mailbox domain name */
/* mail group member */
/* mail rename name */
/* null resource record */
/* well known service */
/* domain name pointer */
/* host information */
/* mailbox information */
/* mail routing information */
/* text strings */
/* responsible person */
/* AFS cell database */
/* X_25 calling address */
/* ISDN calling address */
/* router */
/* NSAP address */
/* reverse NSAP lookup (deprecated) */
/* security signature */
/* security key */
/* X.400 mail mapping */
/* geographical position (withdrawn) */
/* IP6 Address */
/* Location Information */
	/* non standard */
/* user (finger) information */
/* user ID */
/* group ID */
/* Unspecified format (binary data) */
	/* Query type values which do not appear in resource records */
/* transfer zone of authority */
/* transfer mailbox records */
/* transfer mail agent records */
/* wildcard match */

/*
 * Values for class field
 */

/* the arpa internet */
/* for chaos net (MIT) */
/* for Hesiod name server (MIT) (XXX) */
	/* Query class values which do not appear in resource records */
/* wildcard match */

/*
 * Status return codes for T_UNSPEC conversion routines
 */








/*
 * Structure for query header.  The order of the fields is machine- and
 * compiler-dependent, depending on the byte/bit order and the layout
 * of bit fields.  We use bit fields only in int variables, as this
 * is all ANSI requires.  This requires a somewhat confusing rearrangement.
 */

typedef struct {
	unsigned	id:16;		/* query identification number */
# 214 "/usr/include/arpa/nameser.h" 3


			/* fields in third byte */
	u_int	rd:1;		/* recursion desired */
	u_int	tc:1;		/* truncated message */
	u_int	aa:1;		/* authoritive answer */
	u_int	opcode:4;	/* purpose of message */
	u_int	qr:1;		/* response flag */
			/* fields in fourth byte */
	u_int	rcode:4;	/* response code */
	u_int	unused:2;	/* unused bits (MBZ as of 4.9.3a3) */
	u_int	pr:1;		/* primary server req'd (non standard) */
	u_int	ra:1;		/* recursion available */

			/* remaining bytes */
	u_int	 qdcount:16;	/* number of question entries */
	u_int	 ancount:16;	/* number of answer entries */
	u_int	 nscount:16;	/* number of authority entries */
	u_int	 arcount:16;	/* number of resource entries */
} HEADER;

/*
 * Defines for handling compressed domain names
 */


/*
 * Structure for passing resource records around.
 */
struct rrec {
	int16_t	r_zone;			/* zone number */
	int16_t	r_class;		/* class number */
	int16_t	r_type;			/* type number */
	u_int32_t	r_ttl;			/* time to live */
	int	r_size;			/* size of data area */
	char	*r_data;		/* pointer to data */
};

extern	u_int16_t	_getshort  (const u_char *)  ;
extern	u_int32_t	_getlong  (const u_char *)  ;

/*
 * Inline versions of get/put short/long.  Pointer is advanced.
 *
 * These macros demonstrate the property of C whereby it can be
 * portable or it can be elegant but rarely both.
 */









# 278 "/usr/include/arpa/nameser.h" 3










# 296 "/usr/include/arpa/nameser.h" 3

/* !_NAMESER_H_ */
# 785 "include/portable.h" 2



# 1 "/usr/include/resolv.h" 1 3
/*	BSDI resolv.h,v 2.4 1996/08/08 18:57:59 bostic Exp	*/

/*
 * ++Copyright++ 1983, 1987, 1989, 1993
 * -
 * Copyright (c) 1983, 1987, 1989, 1993
 *    The Regents of the University of California.  All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 * 	This product includes software developed by the University of
 * 	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * -
 * Portions Copyright (c) 1993 by Digital Equipment Corporation.
 * 
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies, and that
 * the name of Digital Equipment Corporation not be used in advertising or
 * publicity pertaining to distribution of the document or software without
 * specific, written prior permission.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS" AND DIGITAL EQUIPMENT CORP. DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL DIGITAL EQUIPMENT
 * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
 * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 * SOFTWARE.
 * -
 * --Copyright--
 */

/*
 *	@(#)resolv.h	8.1 (Berkeley) 6/2/93
 *	=Id: resolv.h,v 8.11 1996/06/02 08:20:38 vixie Exp =
 */





# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/stdio.h" 1 3


/*	BSDI stdio.h,v 2.10 1996/11/08 16:46:31 donn Exp	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Chris Torek.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)stdio.h	8.5 (Berkeley) 4/29/95
 */

/* _STDIO_H_ */
# 394 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/stdio.h" 3

# 67 "/usr/include/resolv.h" 2 3


/*
 * Revision information.  This is the release date in YYYYMMDD format.
 * It can change every day so the right thing to do with it is use it
 * in preprocessor commands such as "#if (__RES > 19931104)".  Do not
 * compare for equality; rather, use it to determine whether your resolver
 * is new enough to contain a certain feature.
 */



/*
 * Resolver configuration file.
 * Normally not present, but may contain the address of the
 * inital name server(s) to query and the domain search list.
 */





/*
 * Global defines and variables for resolver stub.
 */
/* max # name servers we'll track */
/* # default domain levels to try */
/* max # domains in search path */
/* min levels in name that is "local" */

/* min. seconds between retries */
/* number of net to sort on */
/* should reflect bit field size */

struct __res_state {
	int	retrans;	 	/* retransmition time interval */
	int	retry;			/* number of times to retransmit */
	u_long	options;		/* option flags - see below. */
	int	nscount;		/* number of name servers */
	struct sockaddr_in
		nsaddr_list[3 ];	/* address of name server */
/* for backward compatibility */
	u_short	id;			/* current packet id */
	char	*dnsrch[6 +1];	/* components of domain to search */
	char	defdname[256 ];	/* default domain */
	u_long	pfcode;			/* RES_PRF_ flags - see below. */
	unsigned ndots:4;		/* threshold for initial abs. query */
	unsigned nsort:4;		/* number of elements in sort_list[] */
	char	unused[3];
	struct {
		struct in_addr	addr;
		u_int32_t	mask;
	} sort_list[10 ];
	char	pad[72];		/* on an i386 this means 512b total */
};

/*
 * Resolver options (keep these in synch with res_debug.c, please)
 */
/* address initialized */
/* print debug messages */
/* authoritative answers only (!IMPL)*/
/* use virtual circuit */
/* query primary server only (!IMPL) */
/* ignore trucation errors */
/* recursion desired */
/* use default domain name */
/* Keep TCP socket open */
/* search up local domain tree */
/* type 1 security disabled */
/* type 2 security disabled */
/* shuts off HOSTALIASES feature */
/* use/map IPv6 in gethostbyname() */



/*
 * Resolver "pfcode" values.  Used by dig.
 */

/*			0x00000002	*/













/*			0x00008000	*/

/* hooks are still experimental as of 4.9.2 */
typedef enum { res_goahead, res_nextns, res_modified, res_done, res_error }
	res_sendhookact;

typedef res_sendhookact (*res_send_qhook) (struct sockaddr_in * const *ns,
					      const u_char **query,
					      int *querylen,
					      u_char *ans,
					      int anssiz,
					      int *resplen)  ;

typedef res_sendhookact (*res_send_rhook) (const struct sockaddr_in *ns,
					      const u_char *query,
					      int querylen,
					      u_char *ans,
					      int anssiz,
					      int *resplen)  ;

extern struct __res_state _res;

/* Private routines shared between libc/net, named, nslookup and others. */
























 
int	 __res_hnok  (const char *)  ;
int	 __res_ownok  (const char *)  ;
int	 __res_mailok  (const char *)  ;
int	 __res_dnok  (const char *)  ;
int	 __loc_aton  (const char *ascii, u_char *binary)  ;
char	*__loc_ntoa  (const u_char *binary, char *ascii)  ;
int	 __dn_skipname  (const u_char *, const u_char *)  ;
void	 __fp_resstat  (struct __res_state *, FILE *)  ;
void	 __fp_query  (const u_char *, FILE *)  ;
void	 __fp_nquery  (const u_char *, int, FILE *)  ;
char	*__hostalias  (const char *)  ;
void	 __putlong  (u_int32_t, u_char *)  ;
void	 __putshort  (u_int16_t, u_char *)  ;
char	*__p_time  (u_int32_t)  ;
void	 __p_query  (const u_char *)  ;
const u_char *__p_cdnname  (const u_char *, const u_char *, int, FILE *)  ;
const u_char *__p_cdname  (const u_char *, const u_char *, FILE *)  ;
const u_char *__p_fqname  (const u_char *, const u_char *, FILE *)  ;
const u_char *__p_rr  (const u_char *, const u_char *, FILE *)  ;
const char *__p_type  (int)  ;
const char *__p_class  (int)  ;
const char *__p_option  (u_long option)  ;
int	 dn_comp  (const char *, u_char *, int, u_char **, u_char **)  ;
int	 dn_expand  (const u_char *, const u_char *, const u_char *,
			char *, int)  ;
int	 res_init  (void)  ;
u_int16_t __res_randomid   (void)  ;
int	 res_query  (const char *, int, int, u_char *, int)  ;
int	 res_search  (const char *, int, int, u_char *, int)  ;
int	 res_querydomain  (const char *, const char *, int, int,
			      u_char *, int)  ;
int	 res_mkquery  (int, const char *, int, int, const u_char *, int,
			  const u_char *, u_char *, int)  ;
int	 res_send  (const u_char *, int, u_char *, int)  ;
int	 __res_isourserver   (const struct sockaddr_in *)  ;
int	 __res_nameinquery   (const char *, int, int,
			      const u_char *, const u_char *)  ;
int	 __res_queriesmatch   (const u_char *, const u_char *,
			       const u_char *, const u_char *)  ;
 

/* !_RESOLV_H_ */
# 788 "include/portable.h" 2



/* the dreaded QUAD_T strikes again... */




/* suspender and belts on this one */
struct have_quad_t {
	quad_t t;
};














/* PLP_PORTABLE_H */
# 22 "include/lp.h" 2



/*****************************************************************
 * Global variables and routines that will be common to all programs
 *****************************************************************/

/*****************************************************
 * Internationalisation of messages, using GNU gettext
 *****************************************************/


# 1 "/usr/local/lib/gcc-lib/i386-pc-bsdi3.1/2.8.1/include/locale.h" 1 3
/*	BSDI locale.h,v 2.1 1995/02/03 06:01:16 polk Exp	*/

/*
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)locale.h	8.1 (Berkeley) 6/2/93
 */




struct lconv {
	char	*decimal_point;
	char	*thousands_sep;
	char	*grouping;
	char	*int_curr_symbol;
	char	*currency_symbol;
	char	*mon_decimal_point;
	char	*mon_thousands_sep;
	char	*mon_grouping;
	char	*positive_sign;
	char	*negative_sign;
	char	int_frac_digits;
	char	frac_digits;
	char	p_cs_precedes;
	char	p_sep_by_space;
	char	n_cs_precedes;
	char	n_sep_by_space;
	char	p_sign_posn;
	char	n_sign_posn;
};













/* marks end */



 
struct lconv	*localeconv  (void)  ;
char		*setlocale  (int, const char *)  ;
 

/* _LOCALE_H_ */
# 34 "include/lp.h" 2











/*****************************************************************
 * BUFFER SIZES
 * 
 * A common size is 1024 bytes;
 * However,  it appears that this is overkill for most purposes.
 * 180 bytes appears to be satisfactory for a line,
 * 512 for a small buffer, 1024 for a large buffer
 *
 *****************************************************************/




 
/*****************************************************************
 * Include files that are so common they should be included anyways
 *****************************************************************/

/* declare structures for forward references */
struct host_information;
struct line_list;

# 1 "include/linelist.h" 1
/***************************************************************************
 * LPRng - An Extended Print Spooler System
 *
 * Copyright 1988-1999, Patrick Powell, San Diego, CA
 *     papowell@astart.com
 * See LICENSE for conditions of use.
 * $Id: lpd.conf.working,v 1.1.1.1 1999-05-24 18:28:56 danw Exp $
 ***************************************************************************/






/*
 * arrays of pointers to lines
 */



struct line_list {
	char **list;	/* array of pointers to lines */
	int count;		/* number of entries */
	int max;		/* maximum number of entries */
};

/*
 * data structure for job
 */

struct job{
	/* information about job in key=value format */
	struct line_list info;

	/* control file lines up to data file info
		Axxx
		Bxxx
	 */
	struct line_list controlfile;

	/* data file lines in raw order
		Nxxx  - name information
		fxxx  - format and file name information
	 */
	struct line_list datafiles;
	struct line_list destination;
};

/*
 * Types of options that we can initialize or set values of
 */





/*
 * datastructure for initialization
 */

struct keywords{
    char *keyword;		/* name of keyword */
    int type;			/* type of entry */
    void *variable;		/* address of variable */
	int  maxval;		/* value of token */
	int  flag;			/* flag for variable */
	char *default_value;		/* default value */
};

struct jobwords{
    const char **keyword;		/* name of keyword */
    int type;			/* type of entry */
    void *variable;		/* address of variable */
	int  maxlen;		/* value of token */
	int  key;			/* value of token */
};

/*
 * Variables
 */
extern struct keywords Pc_var_list[], DYN_var_list[], Expand_var_list[];
/* we need to free these when we initialize */

  struct line_list
	Config_line_list, RawPC_line_list, PC_filters_line_list,
	PC_names_line_list, PC_order_line_list,
	PC_info_line_list, PC_entry_line_list, PC_alias_line_list,
	All_line_list, Spool_control, Sort_order,
	RawPerm_line_list, Perm_line_list, Perm_filters_line_list,
	Process_list, Exit_list, Tempfiles, Servers_line_list, Printer_list,
	Files, Status_lines, Logger_line_list, RemoteHost_line_list;
  struct line_list *Allocs[]

	 ={
	 &Config_line_list, &RawPC_line_list, &PC_filters_line_list,
	 &PC_names_line_list, &PC_order_line_list,
	 &PC_info_line_list, &PC_entry_line_list, &PC_alias_line_list,
	 &All_line_list, &Spool_control, &Sort_order,
	 &RawPerm_line_list, &Perm_line_list, &Perm_filters_line_list,
	 &Process_list, &Exit_list, &Tempfiles, &Servers_line_list,
	 &Printer_list, &Files, &Status_lines, &Logger_line_list, &RemoteHost_line_list,
	0 }

	;


/*
 * These record tempfiles for a process, on a per process basis
 */
  char *Tempfile;

/*
 * Constants
 */
  char *Value_sep   = " \t=#@"   ;
  char *Whitespace   = " \t\n\f"   ;
  char *List_sep   = "[] \t\n\f"   ;
  char *Linespace   = " \t"   ;
  char *File_sep   = " \t,;:"   ;
  char *Perm_sep   = "=,;"   ;
  char *Arg_sep   = ",;"   ;
  char *Name_sep   = "|:"   ;
  char *Line_ends   = "\n\014\004\024"   ;
  char *Printcap_sep   = "|:"   ;
  char *Host_sep   = "{} \t,"   ;

/* PROTOTYPES */
void lowercase( char *s );
void uppercase( char *s );
char *trunc_str( char *s);
int Lastchar( char *s );
void *malloc_or_die( size_t size, const char *file, int line );
void *realloc_or_die( void *p, size_t size, const char *file, int line );
char *safestrdup (const char *p, const char *file, int line);
char *safestrdup2( const char *s1, const char *s2, const char *file, int line );
char *safeextend2( char *s1, const char *s2, const char *file, int line );
char *safestrdup3( const char *s1, const char *s2, const char *s3,
	const char *file, int line );
char *safeextend3( char *s1, const char *s2, const char *s3,
	const char *file, int line );
char *safestrdup4( const char *s1, const char *s2,
	const char *s3, const char *s4,
	const char *file, int line );
char *safestrdup5( const char *s1, const char *s2,
	const char *s3, const char *s4, const char *s5,
	const char *file, int line );
void Init_line_list( struct line_list *l );
void Free_line_list( struct line_list *l );
void Free_listof_line_list( struct line_list *l );
void Check_max( struct line_list *l, int incr );
void Add_line_list( struct line_list *l, char *str,
		const char *sep, int sort, int uniq );
void Merge_line_list( struct line_list *dest, struct line_list *src,
	char *sep, int sort, int uniq );
void Merge_listof_line_list( struct line_list *dest, struct line_list *src,
	char *sep, int sort, int uniq );
void Move_line_list( struct line_list *dest, struct line_list *src );
void Split( struct line_list *l, char *str, const char *sep,
	int sort, const char *keysep, int uniq, int trim, int nocomments );
char *Join_line_list( struct line_list *l, char *sep );
char *Join_line_list_with_sep( struct line_list *l, char *sep );
void Dump_line_list( const char *title, struct line_list *l );
void Dump_line_list_sub( const char *title, struct line_list *l );
char *Find_str_in_flat( char *str, const char *key, const char *sep );
int Find_last_key( struct line_list *l, const char *key, const char *sep, int *m );
int Find_first_key( struct line_list *l, const char *key, const char *sep, int *m );
const char *Find_value( struct line_list *l, const char *key, const char *sep );
char *Find_first_letter( struct line_list *l, const char letter, int *mid );
const char *Find_exists_value( struct line_list *l, const char *key, const char *sep );
char *Find_str_value( struct line_list *l, const char *key, const char *sep );
void Set_str_value( struct line_list *l, const char *key, const char *value );
void Set_flag_value( struct line_list *l, const char *key, long value );
void Set_decimal_value( struct line_list *l, const char *key, long value );
void Set_letter_str( struct line_list *l, const char key, const char *value );
void Set_letter_int( struct line_list *l, const char key, long value );
void Remove_line_list( struct line_list *l, int mid );
void Remove_duplicates_line_list( struct line_list *l );
int Find_flag_value( struct line_list *l, const char *key, const char *sep );
int Find_decimal_value( struct line_list *l, const char *key, const char *sep );
const char *Fix_val( const char *s );
void Read_file_list( struct line_list *model, char *str,
	const char *linesep, int sort, const char *keysep, int uniq, int trim,
	int marker, int doinclude, int nocomment );
void Read_fd_and_split( struct line_list *list, int fd,
	const char *linesep, int sort, const char *keysep, int uniq, int trim, int nocomment );
void Read_file_and_split( struct line_list *list, char *file,
	const char *linesep, int sort, const char *keysep, int uniq, int trim, int nocomment );
int  Build_pc_names( struct line_list *names, struct line_list *order,
	char *str, struct host_information *hostname  );
void Build_printcap_info( 
	struct line_list *names, struct line_list *order,
	struct line_list *list, struct line_list *raw,
	struct host_information *hostname  );
char *Select_pc_info( struct line_list *aliases, struct line_list *info,
	struct line_list *names, struct line_list *input,
	const char *id );
void Clear_var_list( struct keywords *v, int setv );
void Set_var_list( struct keywords *keys, struct line_list *values );
int Check_str_keyword( const char *name, int *value );
void Config_value_conversion( struct keywords *key, const char *s );
void Expand_percent( char **var );
void Expand_vars( void );
char *Set_DYN( char **v, const char *s );
void Clear_config( void );
void Get_config( char *path );
void Reset_config( void );
void close_on_exec( int minfd );
void Setup_env_for_process( struct line_list *env, struct job *job );
void Getprintcap_pathlist( struct line_list *raw, struct line_list *filters,
	char *path );
void Filterprintcap( struct line_list *raw, struct line_list *filters,
	const char *str );
int In_group( char *group, char *user );
int Check_for_rg_group( char *user );
void Init_tempfile( void );
int Make_temp_fd( char **temppath );
void Clear_tempfile_list(void);
void Remove_tempfiles(void);
int Make_passthrough( char *line, char *flags, struct line_list *passfd,
	struct job *job, struct line_list *env_init );
char *Clean_name( char *s );
int Is_meta( int c );
char *Find_meta( char *s );
void Clean_meta( char *t );
void Dump_parms( char *title, struct keywords *k );
struct sockaddr *Fix_auth( int sending, struct sockaddr *src_sin  );
void Fix_dollars( struct line_list *l, struct job *job );
char *Make_pathname( const char *dir,  const char *file );
int Get_keyval( char *s, struct keywords *controlwords );
char *Get_keystr( int c, struct keywords *controlwords );
char *Escape( char *str, int ws );
void Unescape( char *str );
char *Find_str_in_str( char *str, const char *key, const char *sep );


# 67 "include/lp.h" 2

# 1 "include/utilities.h" 1
/***************************************************************************
 * LPRng - An Extended Print Spooler System
 *
 * Copyright 1988-1999, Patrick Powell, San Diego, CA
 *     papowell@astart.com
 * See LICENSE for conditions of use.
 * $Id: lpd.conf.working,v 1.1.1.1 1999-05-24 18:28:56 danw Exp $
 ***************************************************************************/






# 1 "/usr/include/setjmp.h" 1 3
/*	BSDI setjmp.h,v 2.5 1996/05/28 15:40:54 donn Exp	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)setjmp.h	8.2 (Berkeley) 1/21/94
 */





# 1 "/usr/include/machine/setjmp.h" 1 3
/*-
 * Copyright (c) 1996 Berkeley Software Design, Inc.  All rights reserved.
 * The Berkeley Software Design Inc. software License Agreement specifies
 * the terms and conditions for redistribution.
 *
 *	BSDI setjmp.h,v 2.2 1996/10/11 16:00:53 pjd Exp
 */




/*
 * Machine-dependent setjmp(3) declarations for the i386.
 * Only the size of this structure is actually used;
 * otherwise it is provided merely as documentation.
 */

struct __jmp_buf {
	int	jb_eip;
	int	jb_ebx;
	int	jb_esp;
	int	jb_ebp;
	int	jb_esi;
	int	jb_edi;
	int	jb_mask;
	int	jb_pad[3];	/* preserve historical mistake */
};

typedef struct __jmp_buf jmp_buf[1];


typedef struct {
	struct	__jmp_buf sjb_buf;
	int	sjb_restore_mask;
} sigjmp_buf[1];


/* !_MACHINE_SETJMP_H_ */
# 47 "/usr/include/setjmp.h" 2 3


 
int	setjmp  (jmp_buf)  ;
  void
	longjmp  (jmp_buf, int)   __attribute__((volatile ));


int	sigsetjmp  (sigjmp_buf, int)  ;
  void
	siglongjmp  (sigjmp_buf, int)   __attribute__((volatile ));
/* not ANSI */


int	_setjmp  (jmp_buf)  ;
  void
	_longjmp  (jmp_buf, int)   __attribute__((volatile ));
/* neither ANSI nor POSIX */
 

/* !_SETJMP_H_ */
# 15 "include/utilities.h" 2


  int Alarm_timed_out;                                     /* flag */
  int Timeout_pending;


  sigjmp_buf Timeout_env;






/* PROTOTYPES */
char *Time_str(int shortform, time_t t);
char *Pretty_time( time_t t );
time_t Convert_to_time_t( char *str );
void Printlist( char **m, FILE *f );
int Write_fd_len( int fd, const char *msg, int len );
int Write_fd_len_timeout( int timeout, int fd, const char *msg, int len );
int Write_fd_str( int fd, const char *msg );
int Write_fd_str_timeout( int timeout, int fd, const char *msg );
int Read_fd_len_timeout( int timeout, int fd, char *msg, int len );
plp_sigfunc_t plp_signal (int signo, plp_sigfunc_t func);
plp_sigfunc_t plp_signal_break (int signo, plp_sigfunc_t func);
void plp_block_all_signals ( sigset_t  *oblock );
void plp_unblock_all_signals ( sigset_t  *oblock );
void plp_block_one_signal( int sig, sigset_t  *oblock );
void plp_sigpause( void );
int safestrcmp( const char *s1, const char *s2 );
int safestrcasecmp( const char *s1, const char *s2 );
int plp_usleep( int i );
int plp_sleep( int i );
int Get_max_servers( void );
int Get_max_fd( void );
char *Brk_check_size( void );
char *mystrncat( char *s1, const char *s2, int len );
char *mystrncpy( char *s1, const char *s2, int len );
int Get_nonblock_io( int fd );
int Set_nonblock_io( int fd );
int Set_block_io( int fd );
int Read_write_timeout(
	int readfd, char *inbuffer, int maxinlen, int *readlen,
	int writefd, char **outbuffer, int *outlen, int timeout );
void Set_timeout_alarm( int timeout );
void Clear_timeout( void );
int To_root(void);
int To_daemon(void);
int To_user(void);
int To_uid( int uid );
int setuid_wrapper(int to);
int Full_daemon_perms(void);
int Full_root_perms(void);
int Full_user_perms(void);
int Getdaemon(void);
int Getdaemon_group(void);
int Setdaemon_group(void);
void Reset_daemonuid(void);
unsigned long Space_avail( char *pathname );


# 68 "include/lp.h" 2

# 1 "include/debug.h" 1
/***************************************************************************
 * LPRng - An Extended Print Spooler System
 *
 * Copyright 1988-1999, Patrick Powell, San Diego, CA
 *     papowell@astart.com
 * See LICENSE for conditions of use.
 * $Id: lpd.conf.working,v 1.1.1.1 1999-05-24 18:28:56 danw Exp $
 ***************************************************************************/






/* to remove all debugging, redefine this as follows
 * note that a good optimizing compiler should not produce code
 *	for the logDebug call.  It may produce lots of warnings, but no code...
 */

# 38 "include/debug.h"


/* general purpose debug test */






  int Debug;	/* debug flags */
  int DbgFlag;	/* force job number */

/* Debug variable level */













/* PROTOTYPES */



/* Flags for debugging */


















































  int DbgTest;			/* Flags set to test various options */
  int DbgJob;	/* force job number */

/* test IP address */

void Parse_debug( char *arg, int interactive);


# 69 "include/lp.h" 2

# 1 "include/errormsg.h" 1
/***************************************************************************
 * LPRng - An Extended Print Spooler System
 *
 * Copyright 1988-1999, Patrick Powell, San Diego, CA
 *     papowell@astart.com
 * See LICENSE for conditions of use.
 * $Id: lpd.conf.working,v 1.1.1.1 1999-05-24 18:28:56 danw Exp $
 ***************************************************************************/







void logmsg(int kind, char *msg,...);
void fatal(int kind, char *msg,...);
void logerr(int kind, char *msg,...);
void logerr_die(int kind, char *msg,...);
void Diemsg(char *msg,...);
void Warnmsg(char *msg,...);
void logDebug(char *msg,...);
void Msg(char *msg,...);
# 33 "include/errormsg.h"


/* PROTOTYPES */
const char * Errormsg( int err );
const char *Sigstr(int n);
const char *Decode_status(plp_status_t *status);
char *Server_status( int d );


# 70 "include/lp.h" 2

# 1 "include/plp_snprintf.h" 1
/***************************************************************************
 * LPRng - An Extended Print Spooler System
 *
 * Copyright 1988-1999, Patrick Powell, San Diego, CA
 *     papowell@astart.com
 * See LICENSE for conditions of use.
 * $Id: lpd.conf.working,v 1.1.1.1 1999-05-24 18:28:56 danw Exp $
 ***************************************************************************/





/* VARARGS3 */

int	plp_snprintf (char *str, size_t count, const char *fmt, ...);
int	plp_vsnprintf (char *str, size_t count, const char *fmt, va_list arg);





# 71 "include/lp.h" 2


/*****************************************************************
 * General variables use in the common routines;
 * while in principle we could segragate these, it is not worth it
 * as the number is relatively small
 *****************************************************************/

extern char *Copyright[];	/* Copyright info */
  int Is_server;		/* LPD sets to non-zero */
  int Verbose;		/* LPD sets to non-zero */
  int Warnings;		/* set for warnings and not fatal - used with checkcp */
  int Errorcode;		/* Exit code for an error */
  int Status_fd;		/* Status file descriptor for spool queue */
  int Accounting_port;	/* For accounting */
  char *Outbuf, *Inbuf;	/* buffer */
  int Outlen, Outmax, Inlen, Inmax;	/* max and current len of buffer */
  uid_t OriginalEUID, OriginalRUID;   /* original EUID, RUID values */
  uid_t DaemonUID;    /* Daemon UID */
  uid_t UID_root;     /* UID is root */
  gid_t DaemonGID;    /* Daemon GID */


void setstatus( struct job *job, char *fmt, ... );
void setmessage( struct job *job, const char *header, char *fmt, ... );




void send_to_logger( struct job *job, const char *header, char *msg );

/***************************************************************************
 * ACKs from the remote host on job transfers
 ***************************************************************************/
/* succeeded; delete remote copy */
/* failed; no spooling to the remote queue */
/* failed; retry later */
/* failed; bad job */
 
/*
 * macros for the names and maximum lengths for the various fields
 */

/* default limit on line length */
/* IDENTIFIER 		'A'	 LPRng - unique job ID */
/* default limit on line length */
/* CLASSNAME 		'C'	 RFC: 31 char limit */

/* DATE      		'D'	 LPRng - date job started */

/* FROMHOST  		'H'	 RFC: 31 char limit */

/* INDENT    		'I'	 RFC: number */

/* JOBNAME   		'J'	 RFC: 99 char limit */

/* BNRNAME   		'L'	 RFC: ?? char limit */

/* FILENAME  		'N'	 RFC: 131 char limit */

/* MAILNAME  		'M'	 RFC: ?? char limit */

/* FILENAME			'N'	 RFC: 131 char limit on 'N' entries */

/* LOGNAME   		'P'	 RFC: 31 char limit */

/* QUEUENAME 		'Q'	 PLP: 131 char limit */

/* ACCNTNAME 		'R'	 PLP: info for accounting: 131 */

/* SLINKDATA 		'S'	 RFC: number " " number */

/* PRTITLE   		'T'	 RFC: 79 char limit */

/* UNLNKFILE 		'U'	 RFC: flag */

/* PWIDTH    		'W'	 RFC: number */

/* ZOPTS     		'Z'	 PLP */

/* FONT1     		'1'	 RFC: ?? char limit */
/* FONT2     		'2'	 RFC: ?? char limit */
/* FONT3     		'3'	 RFC: ?? char limit */
/* FONT4     		'4'	 RFC: ?? char limit */


/*****************************************************************
 * Command file option checking:
 *  We specify the allowed order of options in the control file.
 *  Note that '*' is a wild card
 *   Berkeley-            HPJCLIMWT1234
 *   PLP-                 HPJCLIMWT1234*
 *****************************************************************/
/* error codes for return values */

/* open or connect */
/* transfer failed */
/* non-zero ACK on operation */
/* read from a file failed */
/* a line was too long to read */
/* cannot bind to port */
/* permission failure, remove job */
/* connection refused */
/* connection timedout */

/*****************************************************************
 * LPD Protocol Information
 *****************************************************************/
/*****************************************************************
 * Request types
 * A request sent to the LPD daemon has the format:
 * \Xprinter [options],  where \X is a single character or byte value.
 * The following are the values and commands
 *****************************************************************/

/* start printer */
/* transfer a printer job */
/* print short form of queue status */
/* print long form of queue status */
/* remove jobs */
/* do control operation */
/* transfer a block format print job */
/* secure command transfer */
/* verbose status information */
/* LPSTAT format */
/* krb4 authentication */



/* \1\n - abort transfer */
/* \2<count> <cfname>\n */
/* \3<count> <dfname>\n */






/* some handy definitions */



/*
 * global variables with definitions done at run time
 */

  char *ShortHost_FQDN;		/* Short hostname for logging */
  char *FQDNHost_FQDN;		/* FQDN hostname */
  char* FQDNRemote_FQDN;    /* FQDN of Remote host */
  char* FQDNRemote_FQDN;    /* FQDN of Remote host */
  char* ShortRemote_FQDN;   /* Short form of Remote host */


  char* Auth_client_id_DYN;	/* client sent/received authentication info */
  char* Auth_dest_id_DYN;		/* destination server authentication id */
  char* Auth_filter_DYN;		/* authentication to use to send to server */
  char* Auth_id_DYN;			/* server id - client sends to this, server sends from this */
  char* Auth_received_id_DYN;	/* from server/client id received */
  char* Auth_sender_id_DYN;	/* origin authentication id */

  char* esc_Auth_DYN;				/* client sent/received authentication info */
  char* esc_Auth_client_id_DYN;	/* client sent/received authentication info */
  char* esc_Auth_dest_id_DYN;		/* destination server authentication id */
  char* esc_Auth_filter_DYN;		/* authentication to use to send to server */
  char* esc_Auth_id_DYN;			/* server id - client sends to this, server sends from this */
  char* esc_Auth_received_id_DYN;	/* from server/client id received */
  char* esc_Auth_sender_id_DYN;	/* origin authentication id */

  int Drop_root_DYN;				/* drop root permissions */

  int Accounting_check_DYN; /* check accounting at start */
  char* Accounting_end_DYN;/* accounting at start (see also af, la, ar) */
  char* Accounting_file_DYN; /* name of accounting file (see also la, ar) */
  int Accounting_remote_DYN; /* write remote transfer accounting (if af is set) */
  char* Accounting_start_DYN;/* accounting at start (see also af, la, ar) */
  int Allow_duplicate_args_DYN;	/* Legacy requirement */
  int Allow_getenv_DYN;
  int Allow_user_logging_DYN; /* allow users to get log info */
  int Always_banner_DYN; /* always print banner, ignore lpr -h option */
  char* Architecture_DYN;
  char* Auth_DYN;			/* authentication to use to send to server */
  char* Auth_client_filter_DYN;	/* client use authentication to server */
  char* Auth_forward_DYN;	/* server use authentication when forwarding */
  char* Auth_forward_filter_DYN;	/* filter for forwarding to destination */
  char* Auth_forward_id_DYN;	/* remote server id for forwarding to destination */
  char* Auth_receive_filter_DYN;	/* filter for receiving authentication */
  char* Auth_server_id_DYN;	/* remote server id for client or when receiving */
  int Auto_hold_DYN;	 /* automatically hold all jobs */
  char* BK_filter_options_DYN;	/* backwards compatible filter options */
  char* BK_of_filter_options_DYN;	/* backwards compatible OF filter options */
  int Backwards_compatible_DYN; /* backwards-compatible: job file format */
  int Backwards_compatible_filter_DYN; /* backwards-compatible: filter parameters */
  char* Banner_end_DYN;	 /* end banner printing program overrides bp */
  int Banner_last_DYN; /* print banner after job instead of before */
  char* Banner_line_DYN;	 /* short banner line sent to banner printer */
  char* Banner_printer_DYN; /* banner printing program (see ep) */
  char* Banner_start_DYN;	 /* start banner printing program overrides bp */
  int Baud_rate_DYN; /* if lp is a tty, set the baud rate (see ty) */
  char* Bounce_queue_dest_DYN; /* destination for bounce queue files */
  char* Bounce_queue_format_DYN; /* destination for bounce queue files */
  int Break_classname_priority_link_DYN; /* do not set priority from class name */
  int Check_for_nonprintable_DYN;	/* lpr check for nonprintable file */
  int Check_for_protocol_violations_DYN;	/* check for RFC1179 protocol violations */
  char* Check_idle_DYN;	/* lpd checks for idle printer */
  int Class_in_status_DYN;	/* Show class in status information */
  char* Comment_tag_DYN; /* comment identifying printer (LPQ) */
  char* Config_file_DYN;
  int Connect_grace_DYN; /* grace period for reconnections */
  int Connect_interval_DYN;
  int Connect_timeout_DYN;
  char* Control_filter_DYN; /* Control filter */
  int Create_files_DYN;		/* allow spool dir files to be created */
  char* Current_date_DYN; /* Current Date */
  char* Daemon_group_DYN;
  char* Daemon_user_DYN;
  char* Default_format_DYN;	/* default format */
  char* Default_permission_DYN;	/* default permission */
  char* Default_printer_DYN;	/* default printer */
  char* Default_printer_when_unknown; /* use this when unknown printer */
  char* Default_priority_DYN;	/* default priority */
  char* Default_remote_host_DYN;
  char* Default_tmp_dir_DYN;	/* default temporary file directory */
  char* Destinations_DYN; /* printers that a route filter may return and we should query */
  char* Env_names_DYN; /* environment information from config file */
  int FF_on_close_DYN; /* print a form feed when device is closed */
  int FF_on_open_DYN; /* print a form feed when device is opened */
  char* Filter_DYN; /* default filter */
  char* Filter_ld_path_DYN;
  char* Filter_options_DYN;
  char* Filter_path_DYN;
  int Filter_poll_interval_DYN; /* intervals at which to check filter */
  int Force_FQDN_hostname_DYN; /* force FQDN Host name in control file */
  int Force_localhost_DYN;	/* force localhost for client job transfer */
  char* Force_lpq_status_DYN;	/* force lpq status format */
  int Force_poll_DYN; /* force polling job queues */
  char* Force_queuename_DYN; /* force the use of this queue name */
  char* Form_feed_DYN; /* string to send for a form feed */
  char* Formats_allowed_DYN; /* valid output filter formats */
  int Full_time_DYN; /* full or complete time format in messages */
  char* IF_Filter_DYN; /* filter command, run on a per-file basis */
  int IPV6Protocol_DYN;	/* IPV4 or IPV6 protocol */
  int Ignore_requested_user_priority_DYN;	 /* ignore requested user priority */
  char* Kerberos_keytab_DYN;	/* kerberos keytab file */
  char* Kerberos_dest_id_DYN;	/* kerberos keytab file */
  char* Kerberos_life_DYN;	/* kerberos lifetime */
  char* Kerberos_renew_DYN;	/* kerberos newal time */
  char* Kerberos_forward_principal_DYN;	/* kerberos server principle */
  char* Kerberos_server_principal_DYN;	/* kerberos server principle */
  char* Kerberos_service_DYN;	/* kerberos service */
  int LPR_bsd_DYN;		/* use BSD -m mail option */
  char* Leader_on_open_DYN; /* leader string printed on printer open */
  int Local_accounting_DYN; /* write local printer accounting (if af is set) */
  int Lock_it_DYN; /* lock the IO device */
  char* Lockfile_DYN;
  char* Log_file_DYN; /* status log file */
  char* Logger_destination_DYN; /* logger host and port */
  int Logger_max_size_DYN; /* log record size */
  char* Logger_path_DYN; /* path to status log file */
  int Logger_timeout_DYN; /* logger timeout size */
  char* Logname_DYN;		/* Username for logging */
  int Long_number_DYN; /* long job number (6 digits) */
  int Lpd_bounce_DYN; /* force LPD to do bounce queue filtering */
  char* Lp_device_DYN; /* device name or lp-pipe command to send output to */
  char* Lpd_path_DYN; /* LPD path for server use */
  char* Lpd_port_DYN;
  char* Lpd_printcap_path_DYN;
  int Lpr_bounce_DYN; /* allow LPR to do bounce queue filtering */
  char* Mail_from_DYN;
  char* Mail_operator_on_error_DYN;
  int Max_connect_interval_DYN;	/* maximum connect interval */
  int Max_copies_DYN; /* maximum copies allowed */
  int Max_job_size_DYN; /* maximum job size (1Kb blocks, 0 = unlimited) */
  int Max_log_file_size_DYN;	/* maximum log file size */
  int Max_servers_active_DYN;	/* maximum number of servers active */
  int Max_status_line_DYN; /* maximum status line size */
  int Max_status_size_DYN;
  int Min_log_file_size_DYN;	/* minimum log file size */
  int Min_printable_count_DYN; /* minimum printable characters for printable check */
  int Min_status_size_DYN;
  int Minfree_DYN; /* minimum space (Kb) to be left in spool filesystem */
  int Minfree_DYN; /**/
  int Ms_time_resolution_DYN;
  int Network_connect_grace_DYN; /* grace period for reconnections */
  char* New_debug_DYN; /* debug level set for queue handler */
  int No_FF_separator_DYN; /* suppress form feeds separating multiple jobs */
  int Nonblocking_open_DYN; /* nonblocking open on io device */
  char* OF_Filter_DYN; /* output filter, run once for all output */
  char* OF_filter_options_DYN;
  char* Originate_port_DYN;
  int Page_length_DYN; /* page length (in lines) */
  int Page_width_DYN; /* page width (in characters) */
  int Page_x_DYN; /* page width in pixels (horizontal) */
  int Page_y_DYN; /* page length in pixels (vertical) */
  char* Pass_env_DYN;		/* pass these environment variables */
  char* Pgp_path_DYN;		/* pathname of PGP program */
  char* Pgp_passphrase_DYN;	/* pathname of PGP passphrase */
  char* Pgp_server_key_DYN;	/* pathname of file with server PGP key */
  int Poll_time_DYN; /* force polling job queues */
  char* Pr_program_DYN; /* pr program for p format */
  char* Printcap_path_DYN;
  char* Printer_DYN;		/* Printe r name for logging */
  char* Printer_DYN;	/* printer name */
  char* Printer_perms_path_DYN;
  char* Queue_name_DYN;	/* Queue name used for spooling */
  int Read_write_DYN; /* open the printer for reading and writing */
  char* RemoteHost_DYN; /* remote-queue machine (hostname) (with rm) */
  char* RemotePrinter_DYN; /* remote-queue printer name (with rp) */
  char* Remote_support_DYN; /* Operations allowed to remote system */
  char* Report_server_as_DYN; /* report server name as this value */
  int Retry_ECONNREFUSED_DYN; /* retry on ECONNREFUSED  */
  int Retry_NOLINK_DYN; /* retry on link connection failure */
  char* Return_short_status_DYN;	/* return short status */
  int Reuse_addr_DYN; /* set SO_REUSEADDR on outgoing ports */
  char* Reverse_lpq_status_DYN;	/* change lpq format when from host */
  char* Routing_filter_DYN; /* filter to determine routing of jobs */
  char* Safe_chars_DYN; /* safe characters in control file */
  int Save_on_error_DYN; /* save this job when an error */
  int Save_when_done_DYN; /* save this job when done */
  int Send_block_format_DYN; /* send block of data */
  int Send_data_first_DYN; /* send data files first */
  char* Send_failure_action_DYN;
  int Send_job_rw_timeout_DYN;
  int Send_query_rw_timeout_DYN;
  int Send_try_DYN;
  char* Sendmail_DYN;
  char* Server_names_DYN; /* names of servers for queue (with ss) */
  char* Server_queue_name_DYN; /* name of queue that server serves (with sv) */
  char* Server_tmp_dir_DYN;	/* default temporary file directory */
  char* Shell_DYN;
  int Short_banner_DYN; /* short banner (one line only) */
  int Short_status_length_DYN;	/* short status length */
  int Socket_linger_DYN;	/* set SO_linger for connections to remote hosts */
  char* Spool_dir_DYN; /* spool directory (only ONE printer per directory!) */
  int Spool_dir_perms_DYN;
  int Spool_file_perms_DYN;
  int Spread_jobs_DYN; /* spread job numbers out by this factor */
  int Stalled_time_DYN; /* amount of time before reporing stalled job */
  char* Status_file_DYN; /* printer status file name */
  int Stop_on_abort_DYN; /* stop when job aborts */
  char* Stty_command_DYN; /* stty commands to set output line characteristics */
  int Suppress_header_DYN; /* suppress headers and/or banner page */
  char* Syslog_device_DYN;	/* default syslog() facility */
  char* Trailer_on_close_DYN; /* trailer string to print when queue empties */
  int Use_date_DYN;		/* put date in control file */
  int Use_identifier_DYN;	/* put identifier in control file */
  int Use_info_cache_DYN;
  int Use_queuename_DYN;	/* put queuename in control file */
  int Use_queuename_flag_DYN;	/* Specified with the -Q option */
  int Use_shorthost_DYN;	/* Use short hostname in control file information */
  char* Xlate_format_DYN;	/* translate format ids */







# 19 "./common/vars.c" 2

# 1 "include/child.h" 1
/***************************************************************************
 * LPRng - An Extended Print Spooler System
 *
 * Copyright 1988-1999, Patrick Powell, San Diego, CA
 *     papowell@astart.com
 * See LICENSE for conditions of use.
 * $Id: lpd.conf.working,v 1.1.1.1 1999-05-24 18:28:56 danw Exp $
 ***************************************************************************/






typedef void (*exit_ret)( void *p );

struct exit_info {
	exit_ret exit;
	void *parm;
	char name[64];
};


/* PROTOTYPES */
pid_t plp_waitpid (pid_t pid, plp_status_t *statusPtr, int options);
pid_t plp_waitpid_timeout(int timeout,
	pid_t pid, plp_status_t *status, int options);
void Dump_pinfo( char *title, struct line_list *p ) ;
int Countpid(void);
void Killchildren( int sig );
int dofork( int new_process_group );
void Register_exit( char *name, exit_ret exit_proc, void *p );
void Clear_exit( void );
plp_signal_t cleanup_USR1 (int passed_signal);
plp_signal_t cleanup_HUP (int passed_signal);
plp_signal_t cleanup_INT (int passed_signal);
plp_signal_t cleanup_QUIT (int passed_signal);
plp_signal_t cleanup_TERM (int passed_signal);
plp_signal_t cleanup (int passed_signal);
void Dump_unfreed_mem(char *title);


# 20 "./common/vars.c" 2

# 1 "include/gethostinfo.h" 1
/***************************************************************************
 * LPRng - An Extended Print Spooler System
 *
 * Copyright 1988-1999, Patrick Powell, San Diego, CA
 *     papowell@astart.com
 * See LICENSE for conditions of use.
 * $Id: lpd.conf.working,v 1.1.1.1 1999-05-24 18:28:56 danw Exp $
 ***************************************************************************/






/*****************************************************************
 * Get Fully Qualified Domain Name (FQDN) host name
 * The 'domain' information is appended to the host name only in
 * desperation cases and only if it is non-null.
 * If the FQDN cannot be found,  then you fall back on the host name.
 *****************************************************************/


/*****************************************************************
 * Host name and address information
 *  The gethostbyname function returns a pointer to a structure
 *  which contains all the host information.  But this
 *  value disappears or is modified on the next call.  We save
 *  the information  using this structure.  Also,  we look
 *  forward to the IPV6 structure,  where we need a structure
 *  for an address.
 *****************************************************************/

struct host_information{
	char *shorthost;
	char *fqdn;
	struct line_list host_names;	/* official name of host is first */
	int h_addrtype;		/* address type */
	int h_length;		/* address length */
	struct line_list h_addr_list;	/* address list */
};

  struct host_information Localhost_IP;	/* IP from localhost lookup */
  struct host_information Host_IP;	/* current host ip */
  struct host_information RemoteHost_IP;	/* IP from localhost lookup */
  struct host_information LookupHost_IP;	/* for lookup */
  struct host_information PermHost_IP;		/* for permission lookup */

/* PROTOTYPES */
void Clear_host_information( struct host_information *info );
void Clear_all_host_information(void);
void Check_for_dns_hack( struct hostent *h_ent );
char *Find_fqdn( struct host_information *info, const char *shorthost );
char *Fixup_fqdn( const char *shorthost, struct host_information *info,
	struct hostent *host_ent );
void Get_local_host( void );
char *Get_hostinfo_byaddr( struct host_information *info,
	struct sockaddr *sinaddr, int addr_only );
char *Get_remote_hostbyaddr( struct host_information *info,
	struct sockaddr *sinaddr );
int Same_host( struct host_information *host,
	struct host_information *remote );
void Dump_host_information( char *title,  struct host_information *info );
void form_addr_and_mask(char *v, char *addr,char *mask,
	int addrlen, int family );
int cmp_ip_addr( char *h, char *a, char *m, int len );
int Match_ipaddr_value( struct line_list *list, struct host_information *host );


# 21 "./common/vars.c" 2

# 1 "include/getqueue.h" 1
/***************************************************************************
 * LPRng - An Extended Print Spooler System
 *
 * Copyright 1988-1999, Patrick Powell, San Diego, CA
 *     papowell@astart.com
 * See LICENSE for conditions of use.
 * $Id: lpd.conf.working,v 1.1.1.1 1999-05-24 18:28:56 danw Exp $
 ***************************************************************************/






  char *CTRL_A_str   = "\001"   ;

  const char * ACTION			  = "action"   ;
  const char * ACTIVE_TIME		  = "active_time"   ;
  const char * ALL				  = "all"   ;
  const char * ATTEMPT			  = "attempt"   ;
  const char * AUTHINFO		  = "authinfo"   ;
  const char * AUTOHOLD		  = "autohold"   ;
  const char * BNRNAME			  = "bnrname"   ;
  const char * CALL			  = "call"   ;
  const char * CF_ESC_IMAGE	  = "cf_esc_image"   ;
  const char * CF_OUT_IMAGE	  = "cf_out_image"   ;
  const char * CLASS			  = "class"   ;
  const char * CLIENT			  = "client"   ;
  const char * COPIES			  = "copies"   ;
  const char * COPY_DONE		  = "copy_done"   ;
  const char * DATALINES		  = "datalines"   ;
  const char * DATE			  = "date"   ;
  const char * DEBUG			  = "debug"   ;
  const char * DEBUGFV			  = "debugfv"   ;
  const char * DEST			  = "dest"   ;
  const char * DESTINATION		  = "destination"   ;
  const char * DESTINATIONS	  = "destinations"   ;
  const char * DF_NAME			  = "df_name"   ;
  const char * DMALLOC_OPTIONS	  = "DMALLOC_OPTIONS"   ;
  const char * DMALLOC_OUTFILE	  = "dmalloc_outfile"   ;
  const char * DONE_TIME		  = "done_time"   ;
  const char * DUMP			  = "dump"   ;
  const char * END				  = "end"   ;
  const char * ERROR			  = "error"   ;
  const char * FILE_HOSTNAME	  = "file_hostname"   ;
  const char * FILTER			  = "filter"   ;
  const char * FORMAT			  = "format"   ;
  const char * FORMAT_ERROR	  = "format_error"   ;
  const char * FORWARDING		  = "forwarding"   ;
  const char * FORWARD_ID		  = "forward_id"   ;
  const char * FROM			  = "from"   ;
  const char * FROMHOST		  = "fromhost"   ;
  const char * HELD			  = "held"   ;
  const char * HF_IMAGE		  = "hf_image"   ;
  const char * HF_NAME			  = "hf_name"   ;
  const char * HOLD_ALL		  = "hold_all"   ;
  const char * HOLD_CLASS		  = "hold_class"   ;
  const char * HOLD_TIME		  = "hold_time"   ;
  const char * HOST			  = "host"   ;
  const char * IDENTIFIER		  = "identifier"   ;
  const char * IDLE			  = "idle"   ;
  const char * INPUT			  = "input"   ;
  const char * JOBNAME			  = "jobname"   ;
  const char * JOBSEQ			  = "jobseq"   ;
  const char * JOB_TIME		  = "job_time"   ;
  const char * KERBEROS		  = "kerberos"   ;
  const char * KERBEROS4		  = "kerberos4"   ;
  const char * KERBEROS5		  = "kerberos5"   ;
  const char * KEYID			  = "keyid"   ;
  const char * LOCALHOST		  = "localhost"   ;
  const char * LOG				  = "log"   ;
  const char * LOGGER			  = "logger"   ;
  const char * LOGNAME			  = "logname"   ;
  const char * LPD				  = "lpd"   ;
  const char * LPD_CONF		  = "LPD_CONF"   ;
  const char * LPD_PORT		  = "lpd_port"   ;
  const char * LPD_REQUEST		  = "lpd_request"   ;
  const char * MAILNAME		  = "mailname"   ;
  const char * MAIL_FD			  = "status_fd"   ;
  const char * MOVE			  = "move"   ;
  const char * MOVE_DEST		  = "move_dest"   ;
  const char * MSG				  = "msg"   ;
  const char * NAME			  = "name"   ;
  const char * NEW_DEST		  = "new_dest"   ;
  const char * NONE			  = "none"   ;
  const char * NUMBER			  = "number"   ;
  const char * OPENNAME		  = "openname"   ;
  const char * ORIG_IDENTIFIER	  = "orig_identifier"   ;
  const char * PGP				  = "pgp"   ;
  const char * PRINTABLE		  = "printable"   ;
  const char * PRINTER			  = "printer"   ;
  const char * PRIORITY		  = "priority"   ;
  const char * PRIORITY_TIME	  = "priority_time"   ;
  const char * PROCESS			  = "process"   ;
  const char * PRSTATUS		  = "prstatus"   ;
  const char * QUEUE			  = "queue"   ;
  const char * QUEUENAME		  = "queuename"   ;
  const char * REDIRECT		  = "redirect"   ;
  const char * REMOVE_TIME		  = "remove_time"   ;
  const char * SEQUENCE		  = "sequence"   ;
  const char * SD				  = "sd"   ;
  const char * SERVER			  = "server"   ;
  const char * SERVER_ORDER	  = "server_order"   ;
  const char * SIZE			  = "size"   ;
  const char * SORT_KEY		  = "sort_key"   ;
  const char * SPOOLDIR		  = "spooldir"   ;
  const char * START_TIME		  = "start_time"   ;
  const char * STATUS_FD		  = "status_fd"   ;
  const char * SUBSERVER		  = "subserver"   ;
  const char * TRACE			  = "trace"   ;
  const char * TRANSFERNAME	  = "transfername"   ;
  const char * UPDATE			  = "update"   ;
  const char * UPDATE_TIME		  = "update_time"   ;
  const char * VALUE			  = "value"   ;

  const char * PRINTING_DISABLED   = "printing_disabled"   ;
  const char * PRINTING_ABORTED   = "printing_aborted"   ;
  const char * SPOOLING_DISABLED   = "spooling_disabled"   ;

/* PROTOTYPES */

int Scan_queue( const char *dirpath, struct line_list *spool_control,
	struct line_list *sort_order, int *pprintable, int *pheld, int *pmove,
		int only_pr_and_move );
char *Get_file_image( const char *dir, const char *file, int maxsize );
int Get_file_image_and_split( const char *dir, const char *file,
	int maxsize, int clean,
	struct line_list *l, const char *sep,
	int sort, const char *keysep, int uniq, int trim, int nocomments );
void Is_set_str_value( struct line_list *l, const char *key, char *s);
int Setup_cf_info( const char *dir, struct line_list *cf_line_list,
	struct job *job);
void Setup_job( struct job *job, struct line_list *spool_control, const char *dir,
	const char *cf_name, const char *hf_name,
	struct line_list *cf_line_list );
int Get_hold_class( struct line_list *info, struct line_list *sq );
void Get_datafile_info( const char *dir, struct line_list *cf_line_list, struct job *job );
int Set_hold_file( struct job *job );
void Get_spool_control( const char *dir, const char *printer, struct line_list *info );
void Set_spool_control( const char *dir, const char *printer, struct line_list *info );
void intval( const char *key, struct line_list *list, struct line_list *info );
void strzval( const char *key, struct line_list *list, struct line_list *info );
void strnzval( const char *key, struct line_list *list, struct line_list *info );
void strval( const char *key, struct line_list *list, struct line_list *info );
char *Make_sort_key( struct job *job );
int Setup_printer( char *name, char *error, int errlen );
int Read_pid( int fd, char *str, int len );
void Write_pid( int fd, int pid, char *str );
int Patselect( struct line_list *token, struct line_list *cf, int starting );
int Check_format( int type, const char *name, struct job *job );
char *Find_start(char *str, const char *key );
char *Frwarding(struct line_list *l);
int Pr_disabled(struct line_list *l);
int Sp_disabled(struct line_list *l);
int Pr_aborted(struct line_list *l);
int Hld_all(struct line_list *l);
char *Clsses(struct line_list *l);
char *Cntrol_debug(struct line_list *l);
char *Srver_order(struct line_list *l);
void Init_job( struct job *job );
void Free_job( struct job *job );
void Copy_job( struct job *dest, struct job *src );
char *Fix_job_number( struct job *job, int n );
char *Make_identifier( struct job *job );
void Dump_job( char *title, struct job *job );
void Job_printable( struct job *job, struct line_list *spool_control,
	int *pprintable, int *pheld, int *pmove );
int Server_active( char *dir, char *file );
void Update_destination( struct job *job );
int Get_destination( struct job *job, int n );
int Get_destination_by_name( struct job *job, char *name );
int Trim_status_file( char *path, int max, int min );
char *Fix_datafile_info( struct job *job, char *number, char *suffix );
int ordercomp( char *order, const void *left, const void *right );
int BSD_sort( const void *left, const void *right );
int LPRng_sort( const void *left, const void *right );
int Fix_control( struct job *job, char *filter );
int Create_control( struct job *job, char *error, int errlen );
void Init_buf(char **buf, int *max, int *len);
void Put_buf_len( char *s, int cnt, char **buf, int *max, int *len );
void Put_buf_str( char *s, char **buf, int *max, int *len );
void Free_buf(char **buf, int *max, int *len);


# 22 "./common/vars.c" 2

# 1 "include/accounting.h" 1
/***************************************************************************
 * LPRng - An Extended Print Spooler System
 *
 * Copyright 1988-1999, Patrick Powell, San Diego, CA
 *     papowell@astart.com
 * See LICENSE for conditions of use.
 * $Id: lpd.conf.working,v 1.1.1.1 1999-05-24 18:28:56 danw Exp $
 ***************************************************************************/






/* PROTOTYPES */

int Setup_accounting( struct job *job );
int Do_accounting( int end, char *command, struct job *job,
	int timeout );


# 23 "./common/vars.c" 2

# 1 "include/permission.h" 1
/***************************************************************************
 * LPRng - An Extended Print Spooler System
 *
 * Copyright 1988-1999, Patrick Powell, San Diego, CA
 *     papowell@astart.com
 * See LICENSE for conditions of use.
 * $Id: lpd.conf.working,v 1.1.1.1 1999-05-24 18:28:56 danw Exp $
 ***************************************************************************/






/***************************************************************************
 * Permissions keywords
 ***************************************************************************/



/* invert test condition */
/* Service listed below */
/* USER field from control file (LPR) or command */
							/* if a command, the user name is sent with command */
/* HOST field from control file */
							/* if not a printing operation, then host name
							sent with command */
/* IP address of HOST */
/* remote connect */
/* remote end of connnection host name */
							/* if printing, has the same value as HOST */
/* remote end of connnection IP address */
							/* if printing, has the same value as IP */
/* printer */

/* forward - REMOTE IP != IP */
/* same host - REMOTE IP == IP */
/* remote user name on command line == user in file */
/* line from control file */
/* user is in named group - uses getpwname() */
/* request is from the server */
/* USER from control information */
/* remote user is in named group - uses getpwname() */
/* interface IP address */
/* LPC operations */
/* authentication type - USER, SERVER, NONE */
/* authentication type */
/* authentication user name */
/* from client/host name */
/* from same authenticated user name */
/* job has authentication */

/*
 * First character of protocol to letter mappings
 */

/* 1  - from lPc */
/* 2  - from lpR, connection for printer */
/* 2  - from lpR, user information in job */
/* 3  - from lpQ */
/* 4  - from lpQ */
/* 5  - from lprM */
/* connection from remote host */

struct perm_check {
	const char *user;				/* USER field from control file */
							/* or REMOTEUSER from command line */
	const char *remoteuser;		/* remote user name sent on command line */
							/* or USER field if no command line */
	struct host_information *host;	/* HOST field from control file */
							/* or REMOTEHOST if no control file */
	struct host_information *remotehost;/* remote HOST name making connection */
							/* or HOST if no control file */
	int	port;				/* port for remote connection */
	const char *printer;			/* printer name */
	struct sockaddr *addr;	/* IF address information */
	int service;			/* first character service */
	const char *lpc;				/* lpc operation */

	const char *authtype;			/* authentication type */
	const char *authfrom;			/* authentication from */
	const char *auth_client_id;	/* client authentication info */
	const char *auth_from_id;	/* sender (client/server) authentication info */
};

  struct perm_check Perm_check;

/* PROTOTYPES */
char *perm_str( int n );
int perm_val( char *s );
int Perms_check( struct line_list *perms, struct perm_check *check,
	struct job *job );
int match( struct line_list *list, const char *str, int invert );
int match_host( struct line_list *list, struct host_information *host,
	int invert );
int portmatch( char *val, int port );
int match_range( struct line_list *list, int port, int invert );
int match_char( struct line_list *list, int value, int invert );
int match_group( struct line_list *list, const char *str, int invert );
int ingroup( char *group, const char *user );
int match_auth( struct line_list *list, struct job *job, int invert );
void Dump_perm_check( char *title,  struct perm_check *check );


# 24 "./common/vars.c" 2

# 1 "include/printjob.h" 1
/***************************************************************************
 * LPRng - An Extended Print Spooler System
 *
 * Copyright 1988-1999, Patrick Powell, San Diego, CA
 *     papowell@astart.com
 * See LICENSE for conditions of use.
 * $Id: lpd.conf.working,v 1.1.1.1 1999-05-24 18:28:56 danw Exp $
 ***************************************************************************/






/* PROTOTYPES */
int Wait_for_pid( int of_pid, char *name, int suspend, int timeout );
void Print_job( int output, struct job *job, int timeout );
char *Fix_str( char *str );
void Print_banner( char *name, char *pgm, struct job *job );
int Write_outbuf_to_OF( struct job *job, char *title,
	int of_pid, int of_fd, int of_error,
	char *buffer, int outlen,
	char *msg, int msgmax,
	int timeout, int suspend, int max_wait );


# 25 "./common/vars.c" 2

/**** ENDINCLUDE ****/

/***************************************************************************

Commentary:
Patrick Powell Tue Nov 26 08:10:12 PST 1996
Put all of the variables in a separate file.

 ***************************************************************************/

/*
 * printcap variables used by LPD for printing
 * THESE MUST BE IN SORTED ORDER
 *  NOTE:  the maxval field is used to suppress clearing
 *   these values when initializing the printcap variable
 *   values.
 */























struct keywords Pc_var_list[] = {

/* XXSTARTXX */
   /*  always print banner, ignore lpr -h option */
{ "ab",  0 ,  &Always_banner_DYN,0,0},
   /*  query accounting server when connected */
{ "achk",  0 ,  &Accounting_check_DYN,0,0},
   /*  accounting at end (see also af, la, ar, as) */
{ "ae",  2 ,  &Accounting_end_DYN,0,0,"=jobend $H $n $P $k $b $t"},
   /*  name of accounting file (see also la, ar) */
{ "af",  2 ,  &Accounting_file_DYN,0,0,"=acct"},
   /*  automatically hold all jobs */
{ "ah",  0 ,  &Auto_hold_DYN,0,0},
   /* Allow duplicate command line arguments (legacy requirement) */
{ "allow_duplicate_args", 0 , &Allow_duplicate_args_DYN,0,0,"1"},
   /* Allow use of LPD_CONF environment variable */
{ "allow_getenv", 0 , &Allow_getenv_DYN,1,0, },
   /* allow users to request logging info using lpr -mhost%port */
{ "allow_user_logging", 0 , &Allow_user_logging_DYN,0,0},
   /*  write remote transfer accounting (if af is set) */
{ "ar",  0 ,  &Accounting_remote_DYN,0,0,"1"},
   /* host architecture */
{ "architecture", 2 , &Architecture_DYN,1,0,"i386" },
   /*  accounting at start (see also af, la, ar) */
{ "as",  2 ,  &Accounting_start_DYN,0,0,"=jobstart $H $n $P $k $b $t"},
	/* authentication type to use to send to server */
{ "auth",  2 , &Auth_DYN,0,0 },
   /*  client to server authentication filter */
{ "auth_client_filter", 2 , &Auth_client_filter_DYN,0,0},
   /*  authentication for forwarding */
{ "auth_forward", 2 , &Auth_forward_DYN,0,0},
   /*  server to server authentication remote server id */
{ "auth_forward_id", 2 , &Auth_forward_id_DYN,0,0},
   /*  server to server authentication transfer filter */
{ "auth_forward_filter", 2 , &Auth_forward_filter_DYN,0,0},
   /*  authentication server send filter */
{ "auth_receive_filter", 2 , &Auth_receive_filter_DYN,0,0},
   /* authentication server id */
{ "auth_server_id", 2 , &Auth_server_id_DYN,0,0},
   /*  end banner printing program overides bp */
{ "be",  2 ,  &Banner_end_DYN,0,0},
   /*  Berkeley LPD: job file strictly RFC-compliant */
{ "bk",  0 ,  &Backwards_compatible_DYN,0,0},
   /*  Berkeley LPD filter options */
{ "bk_filter_options", 2 , &BK_filter_options_DYN,0,0,"=$P $w $l $x $y $F $c $L $i $J $C $0n $0h $-a"},
   /*  Berkeley LPD OF filter options */
{ "bk_of_filter_options", 2 , &BK_of_filter_options_DYN,0,0,"=$w $l $x $y"},
   /*  backwards-compatible filters: use simple paramters */
{ "bkf",  0 ,  &Backwards_compatible_filter_DYN,0,0},
   /*  short banner line sent to banner printer */
{ "bl",  2 ,  &Banner_line_DYN,0,0,"=$-C:$-n Job: $-J Date: $-t"},
   /*  banner printing program (see bs, be) */
{ "bp",  2 ,  &Banner_printer_DYN,0,0},
   /*  use filters on bounce queue files */
{ "bq",  2 ,  &Bounce_queue_dest_DYN,0,0},
   /*  format for bounce queue output */
{ "bq_format",  2 ,  &Bounce_queue_format_DYN,0,0,"=l"},
   /*  if lp is a tty, set the baud rate (see ty) */
{ "br",  1 ,  &Baud_rate_DYN,0,0},
   /* do not set priority from class name */
{ "break_classname_priority_link",  0 ,  &Break_classname_priority_link_DYN,0,0},
   /*  banner printing program overrides bp */
{ "bs",  2 ,  &Banner_start_DYN,0,0},
   /* check for nonprintable file */
{ "check_for_nonprintable", 0 , &Check_for_nonprintable_DYN,0,0,"1"},
   /* check for RFC1179 protocol violations */
{ "check_for_protocol_violations", 0 , &Check_for_protocol_violations_DYN,0,0},
   /* check for idle printer */
{ "check_idle", 2 , &Check_idle_DYN,0,0},
   /* show classname in status display */
{ "class_in_status", 0 , &Class_in_status_DYN,0,0},
   /*  comment identifying printer (LPQ) */
{ "cm",  2 ,  &Comment_tag_DYN,0,0},
   /* configuration file */
{ "config_file", 2 , &Config_file_DYN,1,0,"=" "=/etc/lpd.conf:/usr/etc/lpd.conf" },
   /* connection control for remote printers */
{ "connect_grace", 1 , &Connect_grace_DYN,0,0,"=0"},
   /* connection control for remote printers */
{ "connect_interval", 1 , &Connect_interval_DYN,0,0,"=10"},
   /* connection control for remote printers */
{ "connect_timeout", 1 , &Connect_timeout_DYN,0,0,"=10"},
   /* control file filter */
{ "control_filter", 2 , &Control_filter_DYN,0,0},
   /* create files in spool directory */
{ "create_files", 0 , &Create_files_DYN,0,0},
   /*  debug level set for queue handler */
{ "db",  2 ,  &New_debug_DYN,0,0},
   /* default job format */
{ "default_format", 2 , &Default_format_DYN,0,0,"=f"},
   /* default permission for files */
{ "default_permission", 2 , &Default_permission_DYN,0,0,"=ACCEPT"},
   /* default printer */
{ "default_printer", 2 , &Default_printer_DYN,0,0,"=missingprinter"},
   /* printer for lpd to use when not in printcap */
{ "default_printer_when_unknown", 2 , &Default_printer_when_unknown,0,0},
   /* default job priority */
{ "default_priority", 2 , &Default_priority_DYN,0,0,"=A"},
   /* default remote host */
{ "default_remote_host", 2 , &Default_remote_host_DYN,0,0,"=localhost"},
   /* default temp directory for temp files */
{ "default_tmp_dir", 2 , &Default_tmp_dir_DYN,0,0,"=/tmp"},
   /* printers that a route filter may return and we should query */
{ "destinations", 2 , &Destinations_DYN,0,0},
   /* list of keys used to search config for environment variable setup */
{ "env_names", 2 , &Env_names_DYN,0,0},
   /*  string to send for a form feed */
{ "ff",  2 ,  &Form_feed_DYN,0,0,"=\\f"},
   /* default filter */
{ "filter", 2 , &Filter_DYN,0,0},
   /* filter LD_LIBRARY_PATH value */
{ "filter_ld_path", 2 , &Filter_ld_path_DYN,0,0,"=/lib:/usr/lib:/usr/5lib:/usr/ucblib"},
   /* filter options */
{ "filter_options", 2 , &Filter_options_DYN,0,0,"=$C $A $F $H $J $K $L $P $Q $R $Z $a $c $d $e $f $h $i $j $k $l $n $p $r $s $w $x $y $-a"},
   /* filter PATH environment variable */
{ "filter_path", 2 , &Filter_path_DYN,0,0,"=/bin:/usr/bin:/usr/local/bin:/usr/ucb:/usr/sbin:/usr/etc:/etc"},
   /* interval at which to check OF filter for error status */
{ "filter_poll_interval", 1 , &Filter_poll_interval_DYN,0,0,"=30"},
   /*  print a form feed when device is opened */
{ "fo",  0 ,  &FF_on_open_DYN,0,0},
   /* force FQDN HOST value in control file */
{ "force_fqdn_hostname",  0 ,  &Force_FQDN_hostname_DYN,0,0},
   /* force clients to send all requests to localhost */
{ "force_localhost",  0 ,  &Force_localhost_DYN,0,0,"1" },
   /*  force lpq status format for specified hostnames */
{ "force_lpq_status", 2 , &Force_lpq_status_DYN,0,0},
   /*  force use of this queuename if none provided */
{ "force_queuename", 2 , &Force_queuename_DYN,0,0},
   /*  print a form feed when device is closed */
{ "fq",  0 ,  &FF_on_close_DYN,0,0},
   /* full or complete time format */
{ "full_time",  0 ,  &Full_time_DYN,0,0},
   /*  valid output filter formats */
{ "fx",  2 ,  &Formats_allowed_DYN,0,0},
   /* group to run SUID ROOT programs */
{ "group", 2 , &Daemon_group_DYN,1,0,"=daemon"},
   /*  print banner after job instead of before */
{ "hl",  0 ,  &Banner_last_DYN,0,0},
   /*  filter command, run on a per-file basis */
{ "if",  2 ,  &IF_Filter_DYN,0,0},
   /*  ignore requested user priority */
{ "ignore_requested_user_priority",  0 ,  &Ignore_requested_user_priority_DYN,0,0},
   /*  Running IPV6 */
{ "ipv6",  0 ,  &IPV6Protocol_DYN,0,0},
	/* keytab file location for kerberos, used by server */
{ "kerberos_keytab", 2 , &Kerberos_keytab_DYN,0,0,"=/etc/lpd.keytab"},
	/* key lifetime for kerberos, used by server */
{ "kerberos_life", 2 , &Kerberos_life_DYN,0,0},
	/* key renewal time for kerberos, used by server */
{ "kerberos_renew", 2 , &Kerberos_renew_DYN,0,0},
	/* remote server principal for server to server forwarding */
{ "kerberos_forward_principal", 2 , &Kerberos_forward_principal_DYN,0,0},
	/* remote server principle, overides default */
{ "kerberos_server_principal", 2 , &Kerberos_server_principal_DYN,0,0},
	/* default service */
{ "kerberos_service", 2 , &Kerberos_service_DYN,0,0,"=lpr"},
   /*  write local printer accounting (if af is set) */
{ "la",  0 ,  &Local_accounting_DYN,0,0,"1"},
   /*  leader string printed on printer open */
{ "ld",  2 ,  &Leader_on_open_DYN,0,0},
   /*  error log file (servers, filters and prefilters) */
{ "lf",  2 ,  &Log_file_DYN,0,0,"=log"},
   /* lock the IO device */
{ "lk", 0 ,  &Lock_it_DYN,0,0},
   /* lpd lock file */
{ "lockfile", 2 , &Lockfile_DYN,1,0,"=/var/run/lpd"},
   /* where to send status information for logging */
{ "logger_destination",  2 ,  &Logger_destination_DYN,0,0},
   /* maximum size in K of logger file */
{ "logger_max_size",  1 ,  &Logger_max_size_DYN,0,0},
   /* path of file to hold logger information */
{ "logger_path",  2 ,  &Logger_path_DYN,0,0},
   /* timeout between connection attempts to remote logger */
{ "logger_timeout",  1 ,  &Logger_timeout_DYN,0,0},
   /*  use long job number when a job is submitted */
{ "longnumber",  0 ,  &Long_number_DYN,0,0},
   /*  device name or lp-pipe command to send output to */
{ "lp",  2 ,  &Lp_device_DYN,0,0},
   /* force lpd to filter jobs (bounce) before sending to remote queue */
{ "lpd_bounce", 0 , &Lpd_bounce_DYN,0,0},
   /* force a poll operation */
{ "lpd_force_poll", 0 , &Force_poll_DYN,0,0},
   /*  lpd pathname for server use */
{ "lpd_path",  2 ,  &Lpd_path_DYN,0,0},
   /*  interval in secs between starting up all servers */
{ "lpd_poll_time",  1 ,  &Poll_time_DYN,0,0,"=600"},
   /* lpd port */
{ "lpd_port", 2 , &Lpd_port_DYN,0,0,"=printer"},
   /* lpd printcap path */
{ "lpd_printcap_path", 2 , &Lpd_printcap_path_DYN,1,0,"=/etc/lpd_printcap,/usr/etc/lpd_printcap"},
   /* use lpr filtering as in bounce queue */
{ "lpr_bounce", 0 , &Lpr_bounce_DYN,0,0},
   /* BSD LPR -m flag, does not require mail address */
{ "lpr_bsd", 0 , &LPR_bsd_DYN,0,0},
   /* from address to use in mail messages */
{ "mail_from", 2 , &Mail_from_DYN,0,0},
   /* mail to this operator on error */
{ "mail_operator_on_error", 2 , &Mail_operator_on_error_DYN,0,0},
   /* maximum connection interval */
{ "max_connect_interval", 1 , &Max_connect_interval_DYN,0,0,"=60"},
   /* maximum log file size in Kbytes */
{ "max_log_file_size", 1 , &Max_log_file_size_DYN,0,0,"=1000"},
   /* maximum number of servers that can be active */
{ "max_servers_active", 1 , &Max_servers_active_DYN,1,0},
   /* maximum length of status line */
{ "max_status_line", 1 , &Max_status_line_DYN,0,0,"=79"},
   /* maximum size (in K) of status file */
{ "max_status_size", 1 , &Max_status_size_DYN,0,0,"=10"},
   /*  maximum copies allowed */
{ "mc",  1 ,  &Max_copies_DYN,0,0,"=1"},
   /* minimum log file size in Kbytes */
{ "min_log_file_size", 1 , &Min_log_file_size_DYN,0,0},
   /* minimum status file size in Kbytes */
{ "min_status_size", 1 , &Min_status_size_DYN,0,0},
   /* minimum amount of free space needed in K bytes */
{ "minfree", 1 , &Minfree_DYN,0,0},
   /*  minimum number of printable characters for printable check */
{ "ml",  1 ,  &Min_printable_count_DYN,0,0},
   /* millisecond time resolution */
{ "ms_time_resolution",  0 ,  &Ms_time_resolution_DYN,0,0,"=1"},
   /*  maximum job size (1Kb blocks, 0 = unlimited) */
{ "mx",  1 ,  &Max_job_size_DYN,0,0},
   /*  use nonblocking open */
{ "nb",  0 ,  &Nonblocking_open_DYN,0,0},
   /* connection control for remote network printers */
{ "network_connect_grace", 1 , &Network_connect_grace_DYN,0,0},
   /*  output filter, run once for all output */
{ "of",  2 ,  &OF_Filter_DYN,0,0},
   /* OF filter options */
{ "of_filter_options", 2 , &OF_filter_options_DYN,0,0},
   /* orginate connections from these ports */
{ "originate_port", 2 , &Originate_port_DYN,0,0,"=512 1023"},
   /* if client, pass these environment variables */
{ "pass_env",  2 ,  &Pass_env_DYN,0,0,"=PGPPASS,PGPPATH,PGPPASSFD"},
   /* lpd.perms files */
{ "perms_path", 2 , &Printer_perms_path_DYN,1,0,"=/etc/lpd.perms,/usr/etc/lpd.perms"},
   /* pathname of PGP program */
{ "pgp_path", 2 , &Pgp_path_DYN,0,0},
   /* pathname of PGP program */
{ "pgp_passphrase", 2 , &Pgp_passphrase_DYN,0,0,"clientkey"},
   /* pathname of PGP program */
{ "pgp_server_key", 2 , &Pgp_server_key_DYN,0,0},
   /*  page length (in lines) */
{ "pl",  1 ,  &Page_length_DYN,0,0,"=66"},
   /*  pr program for p format */
{ "pr",  2 ,  &Pr_program_DYN,0,0,"=/bin/pr"},
   /* /etc/printcap files */
{ "printcap_path", 2 , &Printcap_path_DYN,1,0,"=/etc/printcap:/usr/etc/printcap" },
   /*  printer status file name */
{ "ps",  2 ,  &Status_file_DYN,0,0,"=status"},
   /*  page width (in characters) */
{ "pw",  1 ,  &Page_width_DYN,0,0,"=80"},
   /*  page width in pixels (horizontal) */
{ "px",  1 ,  &Page_x_DYN,0,0},
   /*  page length in pixels (vertical) */
{ "py",  1 ,  &Page_y_DYN,0,0},
   /*  put queue name in control file */
{ "qq",  0 ,  &Use_queuename_DYN,0,0,"=1"},
   /*  operations allowed to remote host */
{ "remote_support",  2 ,  &Remote_support_DYN,0,0,"=RMQVC"},
   /*  report server as this value for LPQ status */
{ "report_server_as",  2 ,  &Report_server_as_DYN,0,0},
   /*  retry on ECONNREFUSED error */
{ "retry_econnrefused",  0 ,  &Retry_ECONNREFUSED_DYN,0,0,"1"},
   /*  retry on NOLINK connection */
{ "retry_nolink",  0 ,  &Retry_NOLINK_DYN,0,0,"1"},
   /*  return short status when specified remotehost */
{ "return_short_status",  2 ,  &Return_short_status_DYN,0,0},
   /*  set SO_REUSEADDR on outgoing ports */
{ "reuse_addr",  0 ,  &Reuse_addr_DYN,0,0},
   /*  reverse LPQ status format when specified remotehost */
{ "reverse_lpq_status",  2 ,  &Reverse_lpq_status_DYN,0,0},
   /*  remote-queue machine (hostname) (with rp) */
{ "rm",  2 ,  &RemoteHost_DYN,0,0},
   /*  routing filter, returns destinations */
{ "router",  2 ,  &Routing_filter_DYN,0,0},
   /*  remote-queue printer name (with rp) */
{ "rp",  2 ,  &RemotePrinter_DYN,0,0},
   /*  open the printer for reading and writing */
{ "rw",  0 ,  &Read_write_DYN,0,0},
   /*  additional safe characters to use in control files */
{ "safe_chars",  2 ,  &Safe_chars_DYN,0,0},
   /*  save job when an error */
{ "save_on_error",  0 ,  &Save_on_error_DYN,0,0},
   /*  save job when done */
{ "save_when_done",  0 ,  &Save_when_done_DYN,0,0},
   /*  short banner (one line only) */
{ "sb",  0 ,  &Short_banner_DYN,0,0},
   /*  spool directory (only ONE printer per directory!) */
{ "sd",  2 ,  &Spool_dir_DYN,0,0},
   /* send block of data, rather than individual files */
{ "send_block_format", 0 , &Send_block_format_DYN,0,0},
   /* send data files first, then control file */
{ "send_data_first", 0 , &Send_data_first_DYN,0,0},
   /* failure action to take after send_try attempts failed */
{ "send_failure_action", 2 , &Send_failure_action_DYN,0,0,"=remove"},
   /* timeout for read/write lpr IO operatons */
{ "send_job_rw_timeout", 1 , &Send_job_rw_timeout_DYN,0,0,"=6000"},
   /* timeout for read/write status or control operatons */
{ "send_query_rw_timeout", 1 , &Send_query_rw_timeout_DYN,0,0,"=30"},
   /* numbers of times to try sending job - 0 is infinite */
{ "send_try", 1 , &Send_try_DYN,0,0,"=3"},
   /* sendmail program */
{ "sendmail", 2 , &Sendmail_DYN,1,0,"=/usr/sbin/sendmail -oi -t"},
   /* server temporary file directory */
{ "server_tmp_dir", 2 , &Server_tmp_dir_DYN,0,0,"=/tmp"},
   /*  suppress form feeds separating multiple jobs */
{ "sf",  0 ,  &No_FF_separator_DYN,0,0},
   /*  suppress headers and/or banner page */
{ "sh",  0 ,  &Suppress_header_DYN,0,0},
   /*  SHELL enviornment variable value for filters */
{ "shell",  2 ,  &Shell_DYN,0,0,"=/bin/sh"},
   /*  short status length in lines */
{ "short_status_length",  1 ,  &Short_status_length_DYN,0,0,"=3"},
   /* set the SO_LINGER socket option */
{ "socket_linger", 1 ,  &Socket_linger_DYN,0,0,"=10"},
   /* spool directory permissions */
{ "spool_dir_perms", 1 , &Spool_dir_perms_DYN,0,0,"=042700"},
   /* spool file permissions */
{ "spool_file_perms", 1 , &Spool_file_perms_DYN,0,0,"=000600"},
   /* amount to spread jobs to avoid collisions */
{ "spread_jobs", 1 , &Spread_jobs_DYN,0,0,"=0"},
   /*  name of queue that server serves (with sv) */
{ "ss",  2 ,  &Server_queue_name_DYN,0,0},
   /*  stalled job timeout */
{ "stalled_time", 1 , &Stalled_time_DYN,0,0,"=120"},
   /*  stop processing queue on filter abort */
{ "stop_on_abort",  0 ,  &Stop_on_abort_DYN,0,0},
   /*  stty commands to set output line characteristics */
{ "stty",  2 ,  &Stty_command_DYN,0,0},
   /*  names of servers for queue (with ss) */
{ "sv",  2 ,  &Server_names_DYN,0,0},
   /* name of syslog device */
{ "syslog_device", 2 , &Syslog_device_DYN,0,0,"=/dev/console"},
   /*  trailer string to print when queue empties */
{ "tr",  2 ,  &Trailer_on_close_DYN,0,0},
   /*  translate format from one to another - similar to tr(1) utility */
{ "translate_format",  2 ,  &Xlate_format_DYN,0,0},
   /*  put date in control file */
{ "use_date",  0 ,  &Use_date_DYN,0,0,"1"},
   /*  put identifier in control file */
{ "use_identifier",  0 ,  &Use_identifier_DYN,0,0,"1"},
   /*  read and cache information */
{ "use_info_cache", 0 , &Use_info_cache_DYN,0,0,"1"},
   /*  put queue name in control file */
{ "use_shorthost",  0 ,  &Use_shorthost_DYN,0,0},
   /*  server user for SUID purposes */
{ "user", 2 , &Daemon_user_DYN,1,0,"=daemon"},
/* END */
{ (char *)0 }
} ;

struct keywords DYN_var_list[] = {
{ "Logname_DYN", 2 , &Logname_DYN},
{ "ShortHost_FQDN", 2 , &ShortHost_FQDN},
{ "FQDNHost_FQDN", 2 , &FQDNHost_FQDN},
{ "Printer_DYN",  2 , &Printer_DYN },
{ "Queue_name_DYN",  2 , &Queue_name_DYN },
{ "Lp_device_DYN",  2 , &Lp_device_DYN },
{ "RemotePrinter_DYN",  2 , &RemotePrinter_DYN },
{ "RemoteHost_DYN",  2 , &RemoteHost_DYN },
{ "FQDNRemote_FQDN",  2 , &FQDNRemote_FQDN },
{ "ShortRemote_FQDN",  2 , &ShortRemote_FQDN },

{ "Auth_client_id_DYN",  2 , &Auth_client_id_DYN },
{ "Auth_dest_id_DYN",  2 , &Auth_dest_id_DYN },
{ "Auth_filter_DYN",  2 , &Auth_filter_DYN },
{ "Auth_id_DYN",  2 , &Auth_id_DYN },
{ "Auth_received_id_DYN",  2 , &Auth_received_id_DYN },
{ "Auth_sender_id_DYN",  2 , &Auth_sender_id_DYN },

{ "esc_Auth_DYN",  2 , &esc_Auth_DYN },
{ "esc_Auth_client_id_DYN",  2 , &esc_Auth_client_id_DYN },
{ "esc_Auth_dest_id_DYN",  2 , &esc_Auth_dest_id_DYN },
{ "esc_Auth_filter_DYN",  2 , &esc_Auth_filter_DYN },
{ "esc_Auth_id_DYN",  2 , &esc_Auth_id_DYN },
{ "esc_Auth_received_id_DYN",  2 , &esc_Auth_received_id_DYN },
{ "esc_Auth_sender_id_DYN",  2 , &esc_Auth_sender_id_DYN },

{ "Current_date_DYN",  2 , &Current_date_DYN },

{ 0 }
} ;

struct keywords Expand_var_list[] = {
{ "Printer_DYN",  2 , &Printer_DYN },
{ "Queue_name_DYN",  2 , &Queue_name_DYN },
{ "Config_file_DYN",  2 , &Config_file_DYN },
{ "Printcap_path_DYN",  2 , &Printcap_path_DYN },
{ "Printer_perms_path_DYN",  2 , &Printer_perms_path_DYN },
{ "Lpd_printcap_path_DYN",  2 , &Lpd_printcap_path_DYN },
{ "Accounting_file_DYN",  2 , &Accounting_file_DYN },
{ "RemoteHost_DYN",  2 , &RemoteHost_DYN },
{ "RemotePrinter_DYN",  2 , &RemotePrinter_DYN },
{ "Lp_device_DYN",  2 , &Lp_device_DYN },
{ "Spool_dir_DYN",  2 , &Spool_dir_DYN },
{ "Lockfile_DYN",  2 , &Lockfile_DYN },
{ 0 }
} ;
