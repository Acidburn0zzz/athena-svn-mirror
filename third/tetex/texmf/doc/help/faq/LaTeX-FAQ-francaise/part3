Path: univ-lyon1.fr!newsfeed.nacamar.de!news.idt.net!news-peer.gip.net!news-lond.gip.net!news.gsl.net!gip.net!news.alcatel.fr!aar.alcatel-alsthom.fr!/users/home/kluth/tmp/xrnUBA04AP5T
From: kluth@aar.alcatel-alsthom.fr (Marie-Paule Kluth)
Newsgroups: news.answers
Subject: FAQ LaTeX francaise V2.12 part 3
Date: 27 Feb 1998 10:12:25 GMT
Organization: ALCATEL ALSTHOM RECHERCHE Marcoussis (France)
Lines: 4722
Approved: news-answers-request@MIT.EDU
Distribution: world
Message-ID: <6d63i9$1gu@medine.aar.alcatel-alsthom.fr>
NNTP-Posting-Host: halley.aar.alcatel-alsthom.fr
Xref: univ-lyon1.fr news.answers:126391

Archive-name: fr/faq-latex-francaise/part3
Author: Marie-Paule.Kluth@aar.alcatel-alsthom.fr
Posting-Frequency: mensuel
Version: 2.12

Newsgroups: fr.comp.text.tex, fr.usenet.reponses, news.answers
Ftp-Archive-Name: 
ftp://ftp.univ-lyon1.fr/pub/faq/by-name/fr/faq-latex-francaise

================================================================
     ---- ATTENTION cette FAQ est figee pour le moment ----
	un grand merci a Benjamin Bayart qui s'est propose 
		pour continuer a la diffuser.
================================================================

================================================================
[16] INDEX
================================================================

# 16.1 # Quelles sont les commandes de base ?
---------------------------------------------
Pour permettre à LaTeX (via un générateur d'index) de construire
un index, il faut référencer dans le texte tous les mots que
l'on souhaite y voir apparaître. La commande à utiliser pour
cela est \index. Elle permet la construction d'un fichier .idx
dans lequel sont répertoriées toutes les références indiquées
dans le texte. 

Les entrées de ce fichier sont ensuite triées dans un fichier
nom_fichier.ind via la compilation :
	makeindex fichier.idx
qui sera inclut dans le source .tex par la commande \printindex
ou \input{nom_fichier.ind}.

Pour indiquer à LaTeX qu'il doit construire un index, il faut
également ajouter la commande \makeindex dans le préambule du
document.

Remarque : compte tenu du temps pris pour générer un index, il
	   est conseillé de ne faire apparaître la commande 
	   \makeindex que lors des dernières compilations.

Si les commandes de génération d'index ne sont pas définies par
défaut, ou dans un package autre que makeidx (tel que french de
B. Gaulle par exemple), il faut utiliser le package 'makeidx'
(cas notamment de la commande \printindex).

Remarque : Pour éviter de répéter la commande \index dans un
       	   texte où elle devrait apparaître souvent, on peut
	   utiliser les commandes \index{mot_a_indexe|(} au
	   début du texte et \index{mot_a_indexe|)} à la fin.

Pour plus de détails, consulter 
ftp://ftp.ibp.fr/pub/TeX/CTAN/indexing/makeindex/doc/makeindex.ps

# 16.2 # Comment construire un index hiérarchique ?
---------------------------------------------------
Pour construire un index à plusieurs niveaux d'entrée, il faut
utiliser les commandes suivantes :
\index{niveau1} comme précédemment puis, pour faire apparaître
un sous-thème de ce niveau, on appellera :
\index{niveau1!niveau1.1}.

Exemple :
\documentclass{report}
\usepackage{makeidx}
\usepackage{french}
\pagestyle{empty}
\makeindex

\begin{document}
\chapter{Sports.}
Le sport\index{Sport} c'est fantastique~!

Mes sports préférés sont~:
\begin{itemize} 
   \item l'équitation\index{Sport!Equitation} et en particulier
   les disciplines de dressage\index{Sport!Equitation!Dressage}
   et de complet\index{Sport!Equitation!Complet}~:
   \item l'escalade\index{Sport!Escalade} et surtout les
   sorties en falaise~;
   \item le judo\index{Sport!Judo}.
\end{itemize} 

\printindex
\end{document}
%%%% fin exemple %%%%

Ces fonctions sont disponibles dans le package 'index' ou
(exclusif) 'french'.

# 16.3 # Quels sont les générateurs d'index ?
---------------------------------------------
* makeindex, pour LaTeX sous Unix, Macintosh, MS-DOS ou OS/2 est
disponible sur CTAN dans respectivement /indexing/makeindex,
/systems/mac/macmakeindex.sit et dans les ditributions emTeX et
gTeX.

* texindex, fondé sur sed pour LaTeX sous Unix, est disponible
sur CTAN dans /support/texindex/.

* idxtex, pour LaTeX sous VMS, est disponible sur CTAN dans
/indexing/glo+idxtex/.

* texix pour TeX sur CMS et Macintosh. 

# 16.4 # Comment changer le style de certains mots indexés ?
------------------------------------------------------------
Il faut utiliser la commande :
\index{mot_a_indexe@mot_reporte}

Exemple :
\documentclass{report}
\usepackage{makeidx}
\usepackage{french}
\pagestyle{empty}
\makeindex

\begin{document}
\chapter{Sports.}
Le sport\index{Sport@\textbf{Sport}} c'est fantastique~!

Mes sports préférés sont~:
\begin{itemize} 
   \item l'équitation\index{Sport@\textbf{Sport}!Equitation} et
   en particulier les disciplines de
   dressage\index{Sport@\textbf{Sport}!Equitation!Dressage} et de
   complet\index{Sport@\textbf{Sport}!Equitation!Complet}~:
   \item l'escalade\index{Sport@\textbf{Sport}!Escalade} et
   surtout les sorties en falaise~;
   \item le judo\index{Sport@\textbf{Sport}!Judo}.
\end{itemize} 

\printindex
\end{document}
%%%% fin exemple %%%%

# 16.5 # Comment changer le style des pages de référence ?
----------------------------------------------------------
Pour mettre en relief certains numéros de référence par rapport
à d'autres, on peut utiliser les macros suivantes : 
+ pour appeler un numéro de page en gras (LaTeX2e) :
	\newcommand{\idb}[1]{\textbf{#1}}
+ pour appeler un numéro de page en italique (LaTeX2.09) :
	\newcommand{\idi}[1]{\it{#1}}

La référence dans le texte se fait alors par :
\index{mot_a_indexe|idb}

# 16.6 # Comment rappeler certains mots dans un haut de page ?
--------------------------------------------------------------
Le package 'fancyhdr' (LaTeX2e) disponible sur CTAN dans
/macros/latex/contrib/supported/fancyhdr/ permet entre autres de
faire apparaître le premier mot de la page en haut à gauche de
la page et le dernier en haut à droite.

# 16.7 # Comment générer plusieurs index ?
------------------------------------------
* Il faut utiliser le package 'index' (et, si nécessaire,
charger le package 'french' après).

* Il existe également le package 'multind'.

Remarque : french (3.45) fonctionne bien avec "multind", par
	   contre  "multind" n'implémente pas toutes les
	   commandes d'index (notamment, le séparateur "!" ne
	   fonctionne pas).

# 16.8 # Qu'est ce que IdXTeX ?
-------------------------------
IdXTeX programme écrit en C par R. Aurbach facilite la
génération d'index. Il est disponible sur CTAN dans
/indexing/glo+idxtex/.

# 16.9 # Qu'est ce que xindy ?
------------------------------
xindy est un système d'indexation. Il est disponible sur CTAN
dans /support/xindy/. Il est capable de gérer différentes
langues suivant différentes lettres (notamment les lettres
accentuées) et règles de tri. Il est paramètrable en fonction de
repères de localisation dans le document qui ne correspondent
pas forcément à un numéro de page ou de paragraphe prédéfini.

Pour plus de détails, consulter :
http://www.iti.informatik.th-darmstadt.de/xindy.

================================================================
[17] GLOSSAIRE
================================================================

# 17.1 # Quelles sont les commandes de base ?
---------------------------------------------
* La création d'un glossaire avec le package 'french'
s'apparente à la création d'un index. La commande d'insertion
d'un mot dans le glossaire est \glossary, la commande de
construction du fichier .glo est \makeglossary. L'insertion du
glossaire dans le document source se fait par \glossaire et
\input{fichier.glo}.

Exemple :
\documentclass{report}
\usepackage{french}
\makeglossary

\begin{document}
 Construisons un glossaire avec les abbréviations suivantes :
PS\glossary{[PS :] Pur Sang}, PSA\glossary{[PSA :] Pur Sang
Arabe}, SF\glossary{[SF :] Selle Français}, PP\glossary{[PP :]
Paso Péruvien}\ldots

\glossaire
\input{fichier.glo}
  
\end{document}
%%%% fin exemple %%%%

* Pour trier un glossaire avec makeindex, il faut utiliser
la commande : 
	(UNIX) makeindex -s style -o fichier.gls fichier.glo
L'appel du glossaire se fait alors par la commande
\printglossary.

Remarque : un exemple de style gglo.ist est disponible sur CTAN
	   dans /macros/latex/contrib/supported/nomencl/ ou dans
	   http://planck.plmsc.psu.edu/~boris/.

# 17.2 #  Quels sont les générateurs de glossaire ?
---------------------------------------------------
* Le programme "GloTeX" de R. Aurbach, utilise une base de
données pour créer un glossaire. Il est donc possible d'utiliser
la même BD pour plusieurs documents, et ainsi d'avoir des
glossaires cohérents (les mêmes termes auront la même
définition). GloTeX est disponible sur CTAN dans
/indexing/glo+idxtex/.

* L'outil "GlossTeX", de V. Yavuz, disponible sur CTAN dans
/support/glosstex/ est un générateur de glossaire, de liste
d'acronymes ou d'autres listes. Il s'appuie sur LaTeX et
MakeIndex. Il combine les fonctionnalités de GloTeX et nomencl.

La construction du glossaire nécessite les compilations
suivantes :
latex, glosstex, makeindex et encore latex.

Exemple :
\documentclass{article}
\usepackage{glosstex}
\begin{document}
This document is typeset using \LaTeX\glosstex{LaTeX}.
   \section*{Glossary}
      \printglosstex
\end{document}
%%%% fin exemple %%%%

================================================================
[18] STYLES PRÉDÉFINIS
================================================================

# 18.1 # Où trouver un style de thèse ?
---------------------------------------
* Le package 'thesis' disponible sur CTAN dans
/macros/latex/contrib/supported/thesis/ est une classe de thèse
basée sur la classe report.

* Le serveur loria présente quelques exemples de styles de
thèses : http://www.loria.fr/tex/. 

* Une doc sur la classe 'TheseCRIN' est disponible sur
http://www.loria.fr/tex/guide.html mais la classe elle même
n'est disponible qu'auprès de D. B. Roegel par mail
(roegel@loria.fr) ou à http://www.loria.fr/~roegel/TeX/TC.html.

* Un autre exemple est disponible à l'université de Californie
ou sur CTAN dans /macros/latex209/contrib/ucthesis.

* utthesis est le package de l'université du Texas. Il est
disponible sur CTAN dans
/macros/latex/contrib/supported/utthesis/.

* Il existe également le package 'uwthesis' disponible sur CTAN
dans /macros/latex/contrib/supported/uwthesis/ de l'université
de Washington.

* Une classe de thèse est également disponible par ftp à
cat.rpi.edu dans /pub/tibbetts/thesis.zip.

# 18.2 # Comment faire son CV en LaTeX ?
----------------------------------------
* Il existe deux packages : 'resume' et 'vita' disponibles sur
CTAN. 'vita' se trouve dans /macros/latex/contrib/other/vita/.

* Le package 'ESIEEcv' écrit par B. Bayart offre un certain
nombre d'environnements qui facilitent la mise en page type
d'un CV. Il est disponible sur CTAN
/macros/latex/contrib/supported/EESIEcv.

Exemple :
\begin{rubrique}{Titre de la rubrique.}
   \begin{sousrubrique}
      \Date{deb-fin}
      \Duree{longue}
      \Lieu{Ca c'est passe ici}
      \Titre{Ce que j'ai fait}
      \Descr{Quelques details}
      \Apport{Ce que cela m'a apporte}
      \Apport{et ca aussi}
   \end{sousrubrique}
   \begin{sousrubrique}
      \Competence{Parlote}
      \Descr{Bonne maitrise}
   \end{sousrubrique}
\end{rubrique}
%%%% fin exemple %%%%

Remarque : la largeur de la première colonne peut être modifiée
	   par : \setlength{\largeurcolonne}{2.5cm}

* Voici quelques macros qui peuvent être utiles :
Dans le préambule :
%%%% debut macro %%%%
% Definition des catégories de rubriques.
\newcommand{\categorie}[1]{\vspace*{1cm}\noindent%
	{\large\textsl{#1}\par}\vspace*{2pt}\hrule\vspace*{.5cm}}
% On definit une colonne pour les dates
\newlength{\duree}
\settowidth{\duree}{\textbf{1985-1987}}
% La seconde colonnes doit occuper le reste de la page
\setlength{\duree}{-\duree}
\addtolength{\duree}{\textwidth}

% Definition des rubriques.
\newcommand{\rubrique}[2]{\noindent{\textbf{#1\ \ }}%
   \parbox[t]{\duree}{#2}}
%%%% fin macro %%%%

Utilisation :
\categorie{Formation~:}
\rubrique{1990--1992}{Étudiant à l'école Machin. Cette école
propose un programme~\ldots.

Major de promo.}

\rubrique{1992--1993}{Spécialisation dans le domaine~\ldots.}

\categorie{Expérience~:}
\rubrique{1987-1988}{Stage ouvrier dans l'usine de carton de
La Ville aux Cartons.}

* Voici d'autres macros de JM Lasgouttes :
%%%% debut macro %%%%
%%%% cv document class
%%%% Author: Jean-Marc Lasgouttes (Jean-Marc.Lasgouttes@inria.fr) 
%%%% Last modification: 29/11/1996
%%%% WARNING: this documentclass is really a hack. Don't expect too much.

%%% Basic usage:
%% \leftheader[width]{text} : defines what should appear in the upper
%%   left of the first page. The optionnal argument `width' specifies
%%   the width of the header (default: 0.48\textwidth). `Text' may
%%   contain \\ to break lines.
%% \rightheader[width]{text} like \leftheader, but for the right
%%   header.
%% \makeheader: actually typesets the header.
%%
%% \section*{title}: gives a title for a new topic of the CV. The text
%%   is typeset in font \topicfont (by default Sans Serif
%%   semi-condensed bold).
%% `topic' environment: begins an itemize-like environment where the
%%   argument of \item[] is typeset in font \itemfont (by default Sans
%%   serif). You can also use \\ just after \item[xxx] if the label is
%%   too large.
%%
%% The cv document class also has some primitive support for
%% bibliography. You can use the `thebibliography' environment as
%% usual (or directly BibTeX). It will provide text similar to the
%% `topic' environment.

%% Basic definition to have a real LaTeX document class
\NeedsTeXFormat{LaTeX2e} 
\ProvidesClass{cv}[1996/11/29 Curriculum vitae] 
\DeclareOption*{\PassOptionsToClass{\CurrentOption}{article}}
\ProcessOptions 
\LoadClass{article}

%% The fonts used for headings
\newcommand\topicfont{\normalfont\sffamily\fontseries{sbc}\selectfont}
\newcommand\itemfont{\sffamily}

%% stuff needed for the header
\newcommand\cv@lh{}\newcommand\cv@rh{}
\newcommand\cv@lh@l{\z@} \newcommand\cv@rh@l{\z@}
\newcommand\leftheader[2][0.48\textwidth]{
	\def\cv@lh@l{#1}
	\def\cv@lh{#2}}
\newcommand\rightheader[2][0.48\textwidth]{
	\def\cv@rh@l{#1}
	\def\cv@rh{#2}}
\newcommand\makeheader{\par\noindent
  \parbox[t]{\cv@lh@l}{\raggedright\cv@lh}
  \hfill
  \parbox[t]{\cv@rh@l}{\raggedright\cv@rh}\par\vspace*{2cm}}

%% Redefine \section to use \topicfont
\renewcommand\section{
  \@startsection{section}{1}{\z@}
       {-3.5ex \@plus -1ex \@minus -.2ex}
       {2.3ex \@plus .2ex}{\topicfont}}

%% Define the topic environment
\newcommand\@topic@setup{
	\setlength{\leftmargin}{2cm}
	\setlength{\rightmargin}{0cm}
	\setlength{\labelwidth}{1.5cm}
	\renewcommand{\makelabel}[1]{\itemfont ##1\hfill}}
\newenvironment{topic}
 {\list{}{
	\@topic@setup
	\let\CV@cr=\\
	\renewcommand\\{\hspace{0cm}\CV@cr}}}
 {\endlist}

%% Redefine the thebibliography environment to look like the topic
%% environment. The argument of thebibliography is ignored
\renewenvironment{thebibliography}[1]
 {\section*{Publications}
  \list{\@biblabel{\theenumiv}}{
	\@topic@setup
	\@openbib@code
	\usecounter{enumiv}
	\let\p@enumiv\@empty 
	\renewcommand\theenumiv{\@arabic\c@enumiv}}
  \sloppy \clubpenalty 4000 \widowpenalty 4000 \sfcode`\.=\@m}
 {\endlist}
%%%% fin macro %%%%

# 18.3 # Où trouver un format de publication ?
----------------------------------------------
* Des classes et packages de format de publication dans les
revues scientifiques telles que IEEE, IFAC, SIAM, SIGGRAPH, etc,
sont disponibles sur CTAN.

Pour plus de renseignements sur les documents IEEE, consulter la
page http://www.ieee.org/pubs/authors.html qui donne des
références de style pour LaTeX2.09 et LaTeX2e.

* La classe paper, disponible sur CTAN dans
/macros/latex/contrib/supported/paper/, est dérivée de la classe
article. Elle est mieux adaptée pour la publication notamment en
termes de présentation de la page, le choix des fontes. Elle
définit un certain nombre de macros utiles.

* De même, la classe elsart est disponible sur CTAN. Cette classe
est en outre très bien documentée.

# 18.4 # Où trouver un style de manuel de référence ?
-----------------------------------------------------
Il existe la classe 'refman' disponible sur CTAN dans 
/macros/latex/contrib/supported/refman/. 

# 18.5 # Où trouver un style de poster ?
----------------------------------------
* Il existe le package 'poster' disponible sur CTAN dans
/macros/generic/poster/. Il permet entre autres d'imprimer un
texte s'étalant sur plusieurs pages avec des parties communes
de manière à pouvoir recoller les morceaux après.

* G. Kettl propose également un style de poster accompagné
d'une documentation sur  http://rphibm1.physik.uni-regensburg.de
dans /cluster/software/tex/a0poster.html. 

# 18.6 # Comment créer son propre style ?
-----------------------------------------
Lorsque l'on veut modifier un style prédéfini pour l'adapter à
ses besoins, il est conseillé de créer son propre fichier .cls
dans lequel seront réunies les nouvelles commandes de mise en
page.

Ci-dessous un exemple de V. Henn pour définir son propre style
d'article :

%%%% debut macro %%%%
%%% A sauver dans MonArticle.cls
%%%
%%%  Format de style adapté de article.cls 
%%%
%%%  V.H. le 13 avril 1995
%%%

\NeedsTeXFormat{LaTeX2e}
\ProvidesClass{MonArticle}[1995/06/20 Article personnel]

%%%  Chargement de la classe article, avec transfert d'options
\PassOptionsToClass{a4paper}{article} % format a4paper par défaut
\DeclareOption*{\PassOptionsToClass{\CurrentOption}{article}}
\ProcessOptions

\LoadClass{article}

%%%  Chargement des Packages les plus courants
\RequirePackage{frbib}
\RequirePackage{general}
\RequirePackage{fuzzy}
\RequirePackage{bigcenter}
\RequirePackage{traffic}
\RequirePackage[dvips]{epsfig}
\RequirePackage{epic}
\RequirePackage{french}

%%%  Destination de l'article (proposé pour une conf, une revue...)

\def\Destination#1{\ifx{#1}{}\gdef\@Destination{}%
\else\gdef\@Destination{#1}\fi}

%%%   Destination vide par défaut

\Destination{}                            

%%%   Auteur par défaut, pour eviter de recopier a chaque fois

\author{Vincent \fsc{Henn}\thanks{Laboratoire d'ingénierie
circulation--transport, (Unité mixte \lsc{INRETS}--\lsc{ENTPE}),
109, Avenue Salvador Allende, Case 24, 
F--69675 \fsc{Bron} Cedex, {\tt henn@inrets.fr}.}}
%%%% fin macro %%%%

Utilisation :
\documentclass[a4paper,11pt]{MonArticle}

\title{Exemple d'article}
\Destination{IEEE}
\begin{document}
\maketitle

\chapter{Introduction}

Bla bla

\end{document}

================================================================
[19] CRÉATION DE TRANSPARENTS
================================================================

# 19.1 # Quels sont les packages et styles existants ?
------------------------------------------------------
* La classe 'seminar', de T. van Zandt, offre de nombreuses
possibilités et peu de modifications sont nécessaires pour
pouvoir l'utiliser avec des documents initialement écrits pour
"slide". seminar est disponible sur CTAN dans
/macros/latex/contrib/other/seminar/inputs/.

Remarque : A l'origine, seminar.sty était un package ;
	   aujourd'hui, il a évolué en classe.

La lecture du cahier GUTenberg no 16 disponible en ligne à
l'URL :
http://www.univ-rennes1.fr/pub/gut/publications/publis.html
peut être utile. Voir également la page
http://tug.cs.umb.edu/applications/ ou 
http://www.tug.org/applications/Seminar qui présente notamment
une FAQ.

* Le package 'cours' permet également de réaliser des
transparents. Il permet, à partir d'un fichier source de créer
des transparents et de gérer un syllabus. Cela fonctionne très
bien sous  LaTeX2.09 et LaTeX2e (disponible sur les serveurs
CTAN).

* La classe 'foiltex', de J. Hafner, est pas mal du tout.
Elle permet de définir des entêtes et des pieds de page. Il a
été adapte à LaTeX2e et est disponible sur CTAN dans
/macros/latex/contrib/supported/foiltex/.

* La classe 'slides' est la classe de document fournie avec
LaTeX en remplacement de SliTeX, la solution proposée avec
LaTeX2.09 et disparue avec lui.

Exemple :
\documentclass[a4paper]{slides}

\begin{document}
\begin{slide}
Sous cet environnement slides, le texte est :
\begin{itemize} 
   \item en gros caractères,
   \item d'une fonte sans serif,
   \item centré verticalement.
\end{itemize} 

\end{slide}
\end{document}
%%%% fin exemple %%%%

# 19.2 # Comment définir un contour pour des transparents ?
-----------------------------------------------------------
* Avec le package 'seminar', disponible sur CTAN dans
/macros/latex/contrib/other/seminar/.

Exemple :
\slideframe[]{oval}
%%%% fin exemple %%%%

* Il existe également le package 'fancybox', disponible sur CTAN
dans /macros/latex/contrib/others/seminar/inputs/, qui définit
des fonctions telles que \shadowbox, \doublebox, \ovalbox,...

* On peut également utiliser une commande \special (cf.
paragraphe 29.8).

Exemple :
Cet exemple nécessite dvips et travaille sur un format a4. Il
permet d'obtenir un fond jaune clair avec un cadre noir à 1 cm
du bord de la feuille et de définir deux zones de texte en
vert.
%%%% debut macro %%%%
\special{
 !userdict begin /bop-hook {gsave
 1 1 0.5 setrgbcolor clippath fill
 0 setlinecap 0 setlinejoin 2 setlinewidth 0 setgray
 /Times-Bold findfont 10 scalefont setfont newpath
 (Maurizio Loreti, 1996-02-25)
 dup stringwidth pop neg 510 add 25 moveto
 currentpoint 3 -1 roll 0 1 0 setrgbcolor show 0 setgray
 moveto -6 3 rmoveto 28 28 28 814 15 arcto
 28 814 567 814 15 arcto 79 814 lineto 6 -3 rmoveto
 0 1 0 setrgbcolor
 (CMS week at CERN)
 show 0 setgray 6 3 rmoveto 567 814 567 28 15 arcto
 567 28 516 28 15 arcto 516 28 lineto stroke grestore}
 def end
}
%%%% fin macro %%%%
%%%% fin exemple %%%%

# 19.3 # Comment inclure des commentaires dans les transparents ?
-----------------------------------------------------------------
* Dans l'environnement slide, l'environnement note permet de
taper du texte qui sera imprimé sur une page séparée sans être
intégré dans un transparent. Cela permet à l'auteur de taper
ses notes personnelles sans qu'elles apparaîssent dans un
transparent.

* Le package 'xcomment' disponible sur CTAN dans
/macros/latex/contrib/other/seminar/src/ permet de gérer
l'inclusion ou non de certains commentaires.

# 19.4 # Comment modifier l'interligne sous seminar ?
-----------------------------------------------------
Pour modifier l'espacement entre lignes à l'intérieur des 
paragraphes (sous seminar), il faut utiliser le paramètre
\slidestretch (cf. page 9 de la documentation de Seminar).

Exemple :
\documentclass[portrait]{seminar}
\begin{document}
\begin{slide*}
   Ceci est le texte de la d\'eclaration que j'ai \`a vous
   communiquer. Ceci est le texte de la d\'eclaration que j'ai
   \`a vous communiquer. Ceci est le texte de la d\'eclaration
   que j'ai \`a vous communiquer.
\end{slide*}

\def\slidestretch{0.5}
\begin{slide*}
   Ceci est le texte de la d\'eclaration que j'ai \`a vous
   communiquer. Ceci est le texte de la d\'eclaration que j'ai
   \`a vous communiquer. Ceci est le texte de la d\'eclaration
   que j'ai \`a vous communiquer.
\end{slide*}
\end{document}
%%%% fin exemple %%%%

# 19.5 # Comment définir des en-têtes et pieds de pages ?
---------------------------------------------------------
Le package 'seminar' permet de définir des entêtes et des pieds
de pages.

Exemple :
\documentclass{seminar}
\usepackage{french,enumerate}
\newpagestyle{filets}%
  {\hrulefill}% en haut
  {\hrulefill\tiny\theslide}% en bas
\slidepagestyle{filets}

\begin{document}
\begin{slide}
   Voici les résultats de notre société pour les 5 derniers
   trimestres :
   \begin{enumerate}[Q1]
      \item 120 MF
      \item 123 MF
      \item 145 MF
      \item 143 MF
      \item 193 MF
   \end{enumerate} 
\end{slide}
\end{document}
%%%% fin exemple %%%%

# 19.6 # Comment modifier la taille du cadre d'un transparent ?
---------------------------------------------------------------
Sous seminar, pour un changement local, il suffit de préciser
les dimensions voules dans le \begin{slide} ou \begin{slide*}.

Pour un changement global, il faut modifier les variables
\slidewidth et \slideheight.

Exemple :
\documentclass[a4,portrait]{seminar}
\usepackage{semcolor}

\begin{document}
% Cadre de la taille par defaut (en A4)
\begin{slide*}
  Texte ...
\end{slide*}

% Changement global de la taille du cadre
\addtolength{\slidewidth}{1cm}
\addtolength{\slideheight}{1cm}
\begin{slide*}
  Texte...
\end{slide*}

% Changement local de la taille du cadre
% [hauteur,largeur] en mode portrait
% [largeur,hauteur] en mode paysage
\begin{slide*}[15cm,10cm]
  Texte
\end{slide*}

% On revient a la taille précédente
\begin{slide*}
  Texte...
\end{slide*}
\end{document}
%%%% fin exemple %%%%

# 19.7 # Comment empêcher les figures de flotter ?
--------------------------------------------------
On peut forcer l'option par défaut à H :
\usepackage{float}
\newfloat{figure}{H}{lof} %Don't let them float by default
\newfloat{table}{H}{lot}
\floatname{figure}{\figurename}
\floatname{table}{\tablename}

# 19.8 # Comment gérer la couleur avec seminar ?
------------------------------------------------
* L'exemple suivant montre comment paramétrer la couleur du
fond.

Exemple :
\documentclass[a4,portrait]{seminar}
\usepackage{semcolor}

\newcommand{\SlideColours}[1]{%
\slideframe[\psset{fillcolor=#1,fillstyle=solid}]{scplain}}

\begin{document}
\SlideColours{blue}
	\begin{slide*}
	   Mon transparent avec un fond bleu.
	\end{slide*}
\end{document}
%%%% fin exemple %%%%

* Pour utiliser d'autres couleurs que celles prédéfinies (black,
blue, cyan, darkgray, gray, green, lightgray, magenta, red,
white, yellow), il faut le faire via l'une des commandes de
PSTricks définissant les couleurs (dans Seminar, par défaut la
couleur est en effet gérée via PSTricks). PSTricks est disponible
sur CTAN dans /graphics/pstricks/.

Néanmoins, aujourd'hui il est conseillé d'utiliser plutôt
l'extension standard 'color' de LaTeX pour ce faire.

Exemple :
\documentclass[a4,portrait]{seminar}

% Pour utiliser l'extension standard "color" avec Seminar
\usepackage[dvips]{pstcol}
\usepackage{semcolor}

\newcommand{\SlideColours}[1]{%
\slideframe[\psset{fillcolor=#1,fillstyle=solid}]{scplain}}

\definecolor{Bleu}{rgb}{0.,0.,1.}
\definecolor{Rose}{rgb}{1.,0.75,0.8}

\begin{document}
\SlideColours{Bleu}
	\begin{slide*}
	   Mon transparent avec un fond bleu.
	\end{slide*}

\SlideColours{Rose}
	\begin{slide*}
	   Mon transparent avec un fond rose.
	\end{slide*}
\end{document}
%%%% fin exemple %%%%

* On peut également composer un fond dégradé.

Exemple :
\documentclass[a4,portrait]{seminar}

% To use the standard "color" package with Seminar
\usepackage[dvips]{pstcol}
\usepackage{semcolor}

\usepackage{gradient}
\definecolor{Gold}{rgb}{1.,0.84,0.}
\slideframe[\psset{fillstyle=gradient,gradbegin=Gold,
	gradend=yellow, gradmidpoint=0.5}]{scplain}
\begin{document}
	\begin{slide*}
	    Sympa le dégradé !
	\end{slide*}
\end{document}
%%%% fin exemple %%%%

# 19.9 # Comment imprimer des transparents en miroir ?
------------------------------------------------------
* Pour imprimer en miroir un document (pour faire de la
photocomposition), il existe un prologue PostScript pour DVIPS
que voici :

%%%% debut macro %%%%
%% A sauver dans miroir.pro
% Pour imprimer des films transparents en miroir
% Pascal PERICHON - Distribution PC-TeXMF 2.6 - (c) 1997
userdict begin
/bop-hook{
   210 2.834 mul
   0 translate
   -1 1 scale
}def end
%%%% fin macro %%%%

 Il s'utilise de la façon suivante :
       dvips -hmiroir.pro

Remarque : N'oubliez pas de mettre ce fichier dans la path
	   HEADERS de dvips (ou dans un chemin spécifié dans 
	   config.ps pour l'inclusion des en-tête).

* Le package 'mirr' disponible sur CTAN dans
/macros/generic/TeX-PS/ permet d'obtenir des fichiers miroir.	   

# 19.10 # Comment inclure une image de fond ?
---------------------------------------------
* Le package 'seminar' permet d'inclure une image de fond.

Exemple :
\documentclass{seminar}
\usepackage{semcolor}
\usepackage{fancybox}
\usepackage[dvips]{graphicx}

\begin{document}

\newslideframe{IMAGE}%
{\boxput{\rput(1,0){\includegraphics[scale=0.4]{image.eps}}}{#1}}
\slideframe*{IMAGE}

\begin{slide}
  My first word.
\end{slide}

\begin{slide}
  My last word.
\end{slide}

\end{document}
%%%% fin exemple %%%%

* On peut également utiliser l'environnement picture.

Exemple :
\setlength{\unitlength}{1in}
\begin{picture}(0,0)
   \put(-2.2,-6){\includegraphics[width=\textwidth]{bilder/sigel.eps}}
\end{picture}
%%%% fin exemple %%%%

# 19.11 # Comment imprimer plusieurs transparents par page ?
------------------------------------------------------------
Pour cela, il existe le package '2up'.

================================================================
[20] LETTRES, MAILING ET FAXS
================================================================

# 20.1 # Comment structurer une lettre ?
----------------------------------------
* Il existe pour cela la classe letter. Celle-ci définit les
commandes :
+ \address qui définit l'adresse de l'expéditeur placée, en haut
à gauche de la première page si l'on utilise une mise en page à
la française (\usepackage{french} par exemple),  ou en haut à
droite dans le cas d'une mise en page anglosaxone (solution
par défaut),
+ \signature prépare la signature de l'auteur de la lettre.
Celle ci sera placée en bas à droite de la dernière page de la
lettre, 
+ \la commande \begin{letter} prend en argument le nom du
destinataire, 
+ les commandes \opening et \closing permettent respectivement
d'ouvrir et de fermer la lettre généralement par des formules de
politesse. 
+ la commande \makelabels utilisée dans le préambule, permet de 
générer une liste des adresses des destinataires pour préparer
un mailing,
+ un certain certain nombre d'autres commandes permet de générer
des champs spécifiques tels que : pièces jointes, postscriptum,
...

De manière générale, le positionnement des différents champs
dépend de la langue utilisée dans la lettre.

Remarque : lorsque plusieurs environnements letter sont utilisés
	   dans un même source, ils produiront chacun une lettre. 
	   Toutes ces lettres auront la même adresse
	   d'expéditeur et la même signature.

Exemple :
\documentclass[11pt]{letter}

\name{expediteur}
\address{adresse \\ de l'expediteur}
\signature{signature \\ de l'expediteur}

\begin{document}
\begin{letter}{le destinataire}   
   \opening{Cher destinataire,}
   
   texte -- texte -- texte -- texte -- texte -- texte -- texte
   -- texte -- texte -- texte -- texte -- texte -- texte --
   texte -- texte -- texte -- texte -- texte -- texte -- texte
   -- texte -- texte -- texte -- texte -- texte -- texte --
   texte -- texte -- texte -- texte -- texte -- texte -- texte
   -- texte -- texte --
   
   \closing{Formule de politesse}
   \ps{PS : j'ai oublie...} 
   \cc{Monsieur Truc.}
   \encl{pieces jointes}
\end{letter}
\end{document}
%%%% fin exemple %%%%

ATTENTION : si l'on ajoute le package 'french' la disposition
	    des champs utilisés change puisque les lettres
	    anglo-saxones ne respectent pas la même typographie
	    que les françaises.

* La classe 'lettre' de D. Megevand est un outil très
bien fait et adaptable à toutes les situations. Elle est
disponible par ftp à obsftp.unige.ch dans /pub/tex/macros/.
Une documentation est disponible sur :
http://obswww.unige.ch/Manuels/letdoc2.30.html.

Exemple (D. Mégevand) :
\documentclass[11pt]{lettre}
\usepackage{french}
\begin{document}
\begin{letter}{Mme Marie-Paule \textsc{Kluth}\\
   Alcatel Alsthom Recherche\\
   Route de Nozay\\
   \textbf{F-91460 Marcoussis}}
   
\signature{Denis Mégevand}
\def\concname{Objet :~}
\conc{FAQ de \TeX}

\vref{A VOUS}
\nref{DE MOI}

\opening{Chère Madame,}
Je vous remercie de citer ma classe lettre dans le \S20.1 de
votre FAQ sur \TeX. Il est exact que l'on peut faire beaucoup de
choses avec cette classe dans le domaine de la correspondance,
notamment des lettres et des télécopies (fax). On peut également
obtenir une page d'étiquettes avec les adresses des destinataires
des lettres contenues dans le document. 

Tous les paramètres de mise-en-page, ainsi que les chaînes
"Concerne", "Cc", "PS", etc. peuvent être facilement modifiés.

Cependant, le pointeur vers
html(???)://obswww.unige.ch/pub/tex/macros ne conduit nulle part.
Le pointeur ftp est correct. Pour la doc, il existe une version
en HTML sur http://obswww.unige.ch/Manuels/letdoc2.30.html.

Au \S20.3, vous parlez de classe 'lettre', ce qui est correct,
mais l'exemple donné montre un \verb+\documentstyle+, et les
commandes \verb+\signature+, \verb+\vref+ et \verb+\nref+ ne sont
pas à l'endroit specifié dans la doc. Cet exemple ne compilera
pas, ou plutôt ne donnera pas ce qui est attendu. Voici comme est
structurée cette lettre :
\begin{verbatim}

\documentclass[11pt]{lettre}
[...]
\end{verbatim}

\closing{Meilleures salutations}
\cc{À personne !}
\end{letter}
\end{document}
%%%% fin exemple %%%%

* La classe 'fribrief' disponible sur CTAN dans
/macros/latex/contrib/supported/fribrief/ permet également de
mettre en page des lettres.

* La classe 'akletter' disponible sur CTAN dans
/macros/latex/contrib/supported/akletter/ est une extension de
la classe lettre classique. Elle permet notamment de définir sa
propre entête et de gérer la position de l'adresse pour des
enveloppes à fenêtre.

* Le package 'newsletr' disponible sur CTAN dans
/macros/plain/contrib/newsletr/ offre un ensemble de macros pour
mettre en page des lettres.

# 20.2 # Comment préparer un mailing ?
--------------------------------------
* Le package 'mailing', disponible sur CTAN dans
/macros/latex/contrib/supported/mailing/ permet de créer
plusieurs documents similaires avec des valeurs définies dans
des bases externes (fichiers ou autres). Il ne fonctionne
qu'avec la classe 'letter'. 

* Il existe également le package 'envlab', de B. Veytsman
(boris@plmsc.psu.edu),  disponible par ftp à ftp.dante.de ou sur
CTAN dans /macros/latex/contrib/supoorted/envlab/. Il est
aujourd'hui aux standards américains mais doit être étendu à
d'autres pays.

* Le package 'labels' est également disponible sur CTAN dans
/macros/latex/contrib/supported/labels/.

Exemple :
\documentclass[12pt]{book}
\usepackage{labels}
\LabelCols=3
\LabelRows=11
\LeftBorder=8mm
\RightBorder=4mm
\TopBorder=2mm
\BottomBorder=4mm
%\LabelInfotrue

\begin{document}

%\footnotesize\sf
\numberoflabels=3

\addresslabel[\small\sf]
{Me, Myself \& I\\
SomePlace\\
SomeCompany\\
SomeStreet\\
SomeTown, SomeZip}

\end{document}
%%%% fin exemple %%%%

* Le package 'adrlist' disponible sur CTAN dans
/macros/latex/contrib/other/adrlist/ permet de gérer des listes
d'adresses.

* Le package 'envbig' disponible sur CTAN dans
/macros/latex/contrib/other/envbig/ permet d'imprimer des
adresses sur des enveloppes.

* Le package 'formlett' disponible sur CTAN dans
/macros/generic/formlett.sty permet de gérer des mailing.

# 20.3 # Comment faire des références dans une lettre ?
-------------------------------------------------------
* Dans la classe 'lettre' de D. Megevand, il existe les
commandes \nref, pour les références de l'expéditeur et \vref
pour celles du destinataire.

Exemple :
\documentclass[11pt]{lettre}
\usepackage{french}

\begin{document}
\begin{letter}{Mme Marie-Paule \textsc{Kluth}}
  
\signature{MPK}
\vref{A VOUS}
\nref{DE MOI}

 \opening{Cher ami,}

   Texte....
   
   \closing{Sincèrement.}
   \encl{Pièces jointes :}
   \cc{copie àTotor}
\end{letter}
\end{document}
%%%% fin exemple %%%%

* Le package 'french' offre également les commandes \yourref et
\ourref.

Exemple :
\documentclass[a4]{letter}
\usepackage{french}
\signature{ma signature}

\begin{document}
\yourref{mon texte}
\ourref{mon autre texte}
\begin{letter}{le destinataire}   
   \opening{Cher Monsieur,}
   
   Texte...
   \closing{Salutations}
   \encl{pieces jointes}
   \cc{copie a M. Totor}
\end{letter}
\end{document}
%%%% fin exemple %%%%

# 20.4 # Comment mettre en page un fax ?
----------------------------------------
Le package 'fax' disponible sur CTAN dans
/macros/latex/contrib/supported/fax/ propose un ensemble de
commandes pour préparer un fax.

# 20.5 # Comment positionner une adresse pour une enveloppe à
-------------------------------------------------------------
fenêtre ?
---------
La classe scrlettr.cls du package koma-script permet de faire
cela.

# 20.6 # Comment suppprimer la date sur une lettre ?
----------------------------------------------------
Sous la classe lettre disponible sur CTAN dans /pub/tex/macros/,
il existe la commande \nodate.

# 20.7 # Comment inclure une figure dans une lettre ?
-----------------------------------------------------
Il faut utiliser le package float et déclarer le type figure :
\usepackage{float}
\newfloat{figure}{htbp}{lof}

================================================================
[21] SYMBOLES ET LOGOS
================================================================

# 21.1 # Où trouver des symboles électroniques ?
------------------------------------------------
* Le package 'epic' disponible sur CTAN permet d'accéder aux
symboles électroniques.

* Il y a également le package 'circ' disponible sur CTAN dans
/macros/generic/diagrams/circ/ qui fait ça.

* Le package 'circuit_macros' disponible sur CTAN dans
/graphics/circuit_macros.tar.gz permet de définir des
circuts électriques à partir d'éléments de base tels que des
amplis, des transistors, et portes logiques ...

# 21.2 # Comment dessiner des circuits électroniques ?
------------------------------------------------------
* Certains packages sont disponibles sur CTAN dans
/graphics/lcircuit/, /graphics/circuit_macros/ et
/macros/generic/diagrams/circ/.

* Il existe également des librairies xfig disponibles par ftp à
ftp.x.org dans /contrib/applications/drawing_tools/xfig/.

# 21.3 # Quelles sont les polices de symboles sous LaTeX ?
---------------------------------------------------------
Il y en a plusieurs que l'on peut trouver sur CTAN dans /fonts/.

dancers	     Des petits bonshommes stylisés (dessins d'enfants) 
	     qui se trémoussent dans tous les sens... 
dingbat	     Symboles Zapf dingbats 
bbding       Symboles Zapf dingbats 
goblin	     On dirait des personnages (étranges) stylisés...
hands	     Des grosses mains pointant vers la gauche ou la
	     droite 
iching	     Yi-King. Avec des symboles chinois bizarres...
karta	     Symboles bizarres (voir aussi niceframes.sty)
knot	     noeuds 
wasy2	     Symboles

# 21.4 # Comment obtenir les symboles mâle et femelle ?
-------------------------------------------------------
* Les polices "astrosym", "cmastro", "wasy" ou "wasy2"
définissent ces caractères.

* Voir également le package 'genealogy' disponible sur CTAN dans
/fonts/genealogy/.

# 21.5 # Comment obtenir le symbole degré ?
-------------------------------------------
* En fait le symbole "degré" ne devrait pas être confondu avec
un << petit o en exposant >>. C'est un caractère définit :
+ en codage OT1, par \char23
+ en codage  T1, par \char6

En LaTeX2e,
\DeclareTextSymbol{\degre}{T1}{6}
\DeclareTextSymbol{\degre}{OT1}{23}
définiront la commande \degre, que vous travailliez en codage
OT1 (défaut) ou T1 sélectionné par \usepackage[T1]{fontenc}

* Le package 'french' définit de cette manière la commande
\degre.

* Le package 'babel' définit lui \degre et \degres.

* Le package 'textcomp', de S. Rahtz, disponible sur CTAN dans
/fonts/psfonts/ts1/ basé sur les fontes DC 1.2 ou plus récentes,
disponibles sur CTAN dans /fonts/dc/ définit les commandes
\textdegree et \textcentigrade.

* Le package 'inputenc' disponible sur CTAN dans
/macros/latex/base/ fournit les commandes \textdegree et
\mathdegree.

* La solution qui consiste à mettre dans le préambule (LaTeX2e) :
\newcommand{\deg}{\ensuremath{^\circ}} ou
\newcommand{\deg}{\ensuremath{^\circ}\xspace} en utilisant le
package 'xspace' ou encore
\newcommand{\deg}{\(\mathsurround=0pt{}^\circ\)}
puis utiliser \deg en mode texte ou mathématique,
est donc à éviter.

# 21.6 # Où trouver des symboles astronomiques ?
------------------------------------------------
Il existe le package 'astro' disponible sur CTAN dans
/fonts/astro/.

# 21.7 # Où trouver une police de symboles phonétiques ?
--------------------------------------------------------
* Il existe le package 'phonetic' disponible sur CTAN dans
/fonts/phonetic/.

* La fonte ipa est disponible sur CTAN dans
/macros/latex/contrib/other/ipa/.

* La fonte tipa de F. Rei est également disponible dans
/fonts/tipa/.

# 21.8 # Où trouver des opérateurs de logique floue ?
-----------------------------------------------------
* Il existe le package 'logic' disponible sur CTAN dans
/fonts/logic/.

* V. Henn (henn@inrets.fr) propose ses propres définitions
(LaTeX2e). Sauvegarder les commandes suivantes dans un fichier
'fuzzy.sty'. Ce package nécessite les packages 'amsfonts' et
'xspace'.

ATTENTION : Le fichier ci-dessous est perso, ce qui signifie :
	    1. pas d'exhaustivité 
	    2. pas de garantie de solution optimale (en terme de
	    'pureté teX') 
	    3. pas de garantie de non bug 
	    4. ces opérateurs ne correspondent pas à une norme
	    pour la notation : ce sont des choix perso (qui
	    correspondent plus ou moins à l'usage)

%%%% debut macro %%%%
%%%
%%%  Format de style permettant d'utiliser directement un certain
%%%  nombre  d'operateurs propres à la logique floue. Ces
%%%  opérateurs sont généralement surlignés d'un tilde... 
%%%
%%%    V.H., le 12 avril 1995
%%%

\RequirePackage{amsfonts}
\RequirePackage{xspace}

\message{Opérateurs flous}

\newcommand{\fmin}{\mathop{\flou{\min }}}
\newcommand{\fmax}{\mathop{\flou{\max }}}
\newcommand{\V}{\mathop{\mathrm V\kern 0pt}}
\newcommand{\ET}{\mathrel{\mathrm{ET}}}
\newcommand{\OU}{\mathrel{\mathrm{OU}}}
\newcommand{\Sim}{\mathop{\mathrm S \kern 0pt}}
\newcommand{\hauteur}{\mathop{\mathrm h\kern 0pt}}
\newcommand{\card}[1]{\| #1 \|}
\newcommand{\flou}[1]{\ensuremath{\widetilde{#1}}}
\newcommand{\R}{\ensuremath{\Bbb{R}}}
\newcommand{\cpp}{\ensuremath{\hbox{C}^{++}}\xspace}

\newcommand{\Poss}{\mathop{\Pi}}
%\newcommand{\Nec}{\mathop{{\cal{N}}}}
\newcommand{\Nec}{\mathop{\mathrm N\kern 0pt}}

\newcommand{\poss}{\operatoname{Poss}}
\newcommand{\nec}{\operatoname{Néc}}

\newcommand{\serie}[3]{% 
%  #1 -> le nom de la variable
%  #2 -> l'indice de début
%  #3 -> l'indice de fin
\ensuremath{{#1}_{#2},\ldots,{#1}_{#3}}}

\newcommand{\DP}{\fsc{Dubois} et \fsc{Prade}\xspace}
%%%% fin macro %%%%

# 21.9 # Comment obtenir le symbole de paragraphe ?
---------------------------------------------------
Il suffit de taper \S.

# 21.10 # Comment obtenir le caractère 'registered' ?
-----------------------------------------------------
* La commande \textregistered est disponible lorsqu'on utilise
une fonte qui le permet (TS1 ou 8r, p. ex. DC).

* Le package 'textcomp', de S. Rahtz, disponible sur CTAN dans
/fonts/psfonts/ts1/ définit également ce caractère.

* Voici d'autres définitions :
%%%% debut macro %%%%
\def\Registered{\raisebox{1ex}{\kern-.1em\setbox\@tempboxa\hbox{%
\footnotesize$\bigcirc$}\hbox
to 0pt{\hbox
to\wd\@tempboxa{\hss\tiny\textrm{R}\hss}\hss}\box\@tempboxa\kern-.1
em}}
%%%% fin macro %%%%

* de Ulick Stafford (ulick.stafford@nd.edu)

%%%% debut macro %%%%
\def\registered{{\ooalign {\hfil\raise .05ex\hbox{\scriptsize
R}\hfil\crcr\mathhexbox20D}}}
%%%% fin macro %%%%

* de Maurice Dohmen (m.dohmen@cs.tudelft.nl)

%%%% debut macro %%%%
\def\REgistered{{\ooalign
{\hfil\raise.09ex\hbox{\tiny \sf R}\hfil\crcr\mathhexbox20D}}}
%%%% fin macro %%%%

* On peut également utiliser le package 'amssymb', de J.
Knappen  (KNAPPEN@VKPMZD.kph.Uni-Mainz.DE) qui propose la
commande \circledR.

Exemple :
\documentclass{article}
\usepackage{amssymb}
\usepackage{autredefs}
\begin{document}
\Registered

\registered

\REgistered

\circledR
\end{document}
%%%% fin exemple %%%%

* De Boris A. Veytsman <BAV2@psuvm.psu.edu> :

%%%% debut macro %%%%
\newcommand{\reg}{\textsuperscript{\textcircled{\textsc r}}}
%%%% fin macro %%%%

# 21.11 # Où trouver le symbole trade-mark ?
--------------------------------------------
* Il suffit d'utiliser le package "pifont" puis de faire
\Pisymbol{psy}{212} ou encore \Pisymbol{psy}{228}.

* Avec des fontes TS1 (tc livrées avec dc ou ec, ou sinon ps) :
\usepackage{textcomp}
\texttrademark

# 21.12 # Comment obtenir un underscore ?
-----------------------------------------
Il suffit de taper \_.

# 21.13 # Où trouver le symbole radioactif ?
--------------------------------------------
Il est disponible dans le package 'karta' disponible sur CTAN.

# 21.14 # Comment obtenir le logo LaTeX ?
-----------------------------------------
Il suffit d'appeler la commande \LaTeX.

# 21.15 # Comment obtenir le logo LateX2e ?
-------------------------------------------
Le nouveau logo s'obtient par \LaTeXe.

# 21.16 # Où trouver des chiffres entourés ?
--------------------------------------------
* Le package 'go' disponible sur CTAN dans /fonts/go propose
des chiffres blancs sur fond noir.

* Le package 'pifont' propose également des chiffres entourés.

* A défaut, on peut construire ses propres symboles à l'aide du
package  'overlay' ci-dessous.

%%%% debut macro %%%%
%  Dans TTN  Vol3 Num 2 1994, Jeremy Gibbons propose une macro
% \overlay qui permet de créer des symboles en superposant
% d'autres symboles. Le symbole ainsi construit peut changer de 
% taille en fonction du style (display, script...) 
%   
%%% overlay.sty to overlay two symbols, respecting styles

\def\loverlay#1#2{\mathpalette\@overlay{{#1}{#2}{}{\hfil}}}
\def\overlay#1#2{\mathpalette\@overlay{{#1}{#2}{\hfil}{\hfil}}}
\def\roverlay#1#2{\mathpalette\@overlay{{#1}{#2}{\hfil}{}}}
	%  calls to \@overlay look like
	%	\overlay\textstyle{{x}{y}{\hfil}{\hfil}}
\def\@overlay#1#2{\@@overlay#1#2}
	% strip brackets from 2nd arg, to get
	%	\@@overlay\textstyle{x}{y}{\hfil}{\hfil}
\def\@@overlay#1#2#3#4#5{{%
	\def\overlaystyle{#1}%
	\setbox0=\hbox{\m@th$\overlaystyle#2$}%
	\setbox1=\hbox{\m@th$\overlaystyle#3$}%
	\ifdim \wd0<\wd1 \setbox2=\box1 \setbox1=\box0%
	\setbox0=\box2\fi % \box0 is now the wider box
	\rlap{\hbox to \wd0{#4\box1\relax#5}}\box0}}

%%% fin du style overlay
%%%% fin macro %%%%

Utilisation : $\overlay{symbole1}{symbole2}$

Exemple (V. Henn) :
$ \overlay{\lower.6ex\hbox{$\overlaystyle\smile$}}
	{\raise.6ex\hbox{$\overlaystyle
	{\roverlay{\circ}{\cdot}}{\roverlay{\circ}{\cdot}}$}}
$
%%%% fin exemple %%%%

# 21.17 # Comment obtenir le symbole numéro ?
---------------------------------------------
* Le package 'french' propose la commande \numero. 

# 21.18 # Comment obtenir les symboles pourcent et pourmille ?
--------------------------------------------------------------
* Le symbole pourcent s'obtient symplement par la commande \%.

* Le symbole pourmille est définit dans le package 'textcomp' via
la commande \textperthousand.

ATTENTION : ce package nécessite la disponibilité de fontes ec.

* A défaut, on peut construire soit même le symbole :
%%%% debut macro %%%%
\newcommand{\promille}{%
  \relax\ifmmode\promillezeichen
        \else\leavevmode\(\mathsurround=0pt\promillezeichen\)\fi}
\newcommand{\promillezeichen}{%
  \kern-.05em%
  \raise.5ex\hbox{\the\scriptfont0 0}%
  \kern-.15em/\kern-.15em%
  \lower.25ex\hbox{\the\scriptfont0 00}}
%%%% fin macro %%%%

* Autre solution :
%%%% debut macro %%%%
\newcommand{\promille}{%
\def\pourmille{\hbox{$\,^0\!/_{00}$}}
%%%% fin macro %%%%

# 21.19 # Comment obtenir un e dans l'o ?
-----------------------------------------
Il faut appeler la commande \oe{}. Les accolades permettent
d'isoler la commande dans un mot.

# 21.20 # Quels sont les symboles réservés dans LaTeX ?
-------------------------------------------------------
Il s'agit des symboles : # $ % & ~ _ ^ \ { }. 
Pour les imprimer il faut donc utiliser des commandes à savoir :
\# \$ \% \& \_ \^{} \{ \}. Pour le caractère tilde voir la
question 29.32, et pour le backslash, il faut appeler \backslash
en mode mathématique.

# 21.21 # Comment obtenir des lettres cursives ?
------------------------------------------------
Il suffit d'utiliser la fonte caligraphique.

Exemple :
$\cal{ABCDEFGHIJKLMNOPQRSTUVWXYZ}$
%%%% fin exemple %%%%

# 21.22 # Comment obtenir le logo AMS-(La)TeX ?
-----------------------------------------------
Il suffit d'appeler la commande \AmSTeX pour le logo AMS-TeX et
\AmSLaTeX pour le logo AMS-LaTeX. Leurs définitions sont les
suivantes :
%%%% debut macro %%%%
\newcommand{\AmSLaTeX}{{\protect\the\textfont2 A}%
\kern-.1667em\lower.5ex\hbox {\protect\the\textfont2 M}%
\kern-.125em{\protect\the\textfont2 S}-\LaTeX}

\newcommand{\AmSTeX}{{\protect\the\textfont2 A}%
\kern-.1667em\lower.5ex\hbox {\protect\the\textfont2 M}%
\kern-.125em{\protect\the\textfont2 S}-\TeX} 
%%%% fin macro %%%%

# 21.23 # Quels sont les symboles par défaut de LaTeX ?
-------------------------------------------------------
Voici une liste des symboles les plus courants :
+ \dag, \ddag,
+ \S pour paragraphe,
+ \P,
+ \copyright,
+ \pounds pour le symbole de livre,
+ \oe, \OE pour e dans l'o,
+ \ae, \AE pour e dans l'a,
+ \aa, \AA,
+ \o, \O, pour le zéro barré,
+ \l, \L pour un l barré,
+ \ss pour le double s allemand,
+ ?` pour un ? à l'envers,
+ !` pour un ! à l'envers.

# 21.24 # Quels sont les différents tirets ?
--------------------------------------------
Il existe effectivement différents tirets sous LaTeX :
+ la commande - pour un trait d'union
+ la commande -- pour citer un intervalle
+ la commande --- pour un tiret de ponctuation.

Exemple :
Marie-Paule
voir page 19--32
entre deux thèmes --- par exemple.
%%%% fin exemple %%%%

# 21.25 # Comment obtenir le symbole arobasse ?
-----------------------------------------------
Il existe différentes solutions qui doivent être sélectionnées
en fonction de l'endroit où elles sont appelées : dans le texte,
dans un titre dans une note de bas de page, ....

%%%% debut macro %%%%
+ \def\at{\string@}
+ \edef\at{\string@}
+ \def\at{\char`@}
+ \chardef\at=`\@ 
%%%% fin macro %%%%

# 21.26 # Comment obtenir un backslash ?
----------------------------------------
Il existe différentes techniques :
+ $\backslash$ (produit un backslash mathématique)
+ \textbackslash 
+ {\tt\char`\\}
+ \verb+\+
on peut également définir une commande :
+ \newcommand{\bslash}{\texttt{\symbol{92}}}
+ \newcommand{\backslash}{\mbox{\char`\\}}

# 21.27 # Comment faire un carré plain de fin de démonstration ?
----------------------------------------------------------------
* Le package 'amssymb' propose la commande \blacksquare.

* Voici deux macros proposées par S. Cirilli:
%%%% debut macro %%%%
\def\sqw{\hbox{\rlap{\leavevmode\raise.3ex\hbox{$\sqcap$}}$%
\sqcup$}}
\def\sqb{\hbox{\hskip5pt\vrule width4pt height6pt depth1.5pt%
\hskip1pt}}

% Rectangle noir:
\def\qed{\ifmmode\hbox{\hfill\sqb}\else{\ifhmode\unskip\fi%
\nobreak\hfil
\penalty50\hskip1em\null\nobreak\hfil\sqb
\parfillskip=0pt\finalhyphendemerits=0\endgraf}\fi}
% Rectangle blanc:
\def\cqfd{\ifmmode\sqw\else{\ifhmode\unskip\fi\nobreak\hfil
\penalty50\hskip1em\null\nobreak\hfil\sqw
\parfillskip=0pt\finalhyphendemerits=0\endgraf}\fi}
%%%% fin macro %%%%

================================================================
[22] MUSIQUE
================================================================

# 22.1 # Comment écrire de la musique sous LaTeX ?
--------------------------------------------------
* Le package 'MuTeX', écrit par A. Steinbach et A. Schofer,
permet d'écrire de la musique. Il est disponible par ftp
anonyme à ftp.cs.ruu.nl dans pub/TEX/MuTeX.tar.Z.  

* Un autre package encore plus performant est 'MusiXTeX' de
D. Taupin (taupin@frups51.bitnet ou taupin@lps.u-psud.fr), R.
Mitchell et A. Egler. Il permet d'écrire des partitions pour
orchestres ou de la musique polyphonique. Il est disponible par
ftp anonyme à rsovax.ups.circe.fr dans .musictex ou à
hprib.lps.u-psud.fr dans /pub/musixtex/. ou encore  sur CTAN
dans /macros/musixtex/taupin/ ou /macros/musixtex/egler/. La
lecture du cahier GUTenberg 21 apporte beaucoup d'informations à
ce sujet. Voir http://www.ens.fr/gut/cahiers.html ou
ftp://ftp.univ-rennes1.fr/pub/GUTenberg/publications/node7.html.
A voir également http://www.gmd.de/Misc/Music/ le site de W.
Icking avec une mine d'informations, en particulier des
pointeurs vers des partitions saisies en musixtex, etc.,

Il existe une FAQ disponible sur CTAN dans /macros/musictex/FAQ.

Remarque : le programme abc2mtex d'aide à l'utilisation de
	   MusiXteX peut également être utile, voir
	   http://www.gre.ac.uk/~c.walshaw/abc/

# 22.2 # Comment convertir du midifile en MusicTeX  ?
-----------------------------------------------------
* Music TeX, de M. Beigbeder et J.J. Girardot permet la
conversion de midifiles en Music TeX.

* midi2tex permet également de traduire des fichiers de données
midi. Il est disponible sur CTAN dans /support/midi2tex/.

# 22.3 # Existe-t'il une liste de discussion de musique ?
--------------------------------------------------------
Il existe une liste de discussion consacrée à l'écriture de
musique en TeX. Pour s'y inscrire, il faut envoyer un mail
"subscribe" à  mutex-request@gmd.de.

Les articles postés sur cette liste sont archivé dans 
http://www.gmd.de/Mail/mutex-archive/.

Consulter également : http://www.gmd.de/Misc/Music/ ou
ftp://ftp.gmd.de/music/.

# 22.4 # Comment éditer un livre de chants ?
--------------------------------------------
Il existe le package 'songbook' disponible sur CTAN dans
/macros/latex/contrib/supported/songbook. Voir la page
http://www.cyberus.ca/~crath/Misc/Songbook/index.html pour
quelques exemples.

# 22.5 # Comment mettre en page un programme de concert ?
---------------------------------------------------------
Le package 'concprog' disponible sur CTAN dans
/macros/latex/contrib/supported/concprog/ propose un certain
nombre de macros pour préparer un programme de concert. 

================================================================
[23] CONVERSIONS DE FICHIERS
================================================================

# 23.1 # Comment générer un fichier .ps à partir d'un .dvi ?
------------------------------------------------------------
* dvips, de T. Rokicki a l'avantage de savoir gérer les
"virtual fonts". Il est disponible par ftp anonyme à : 

+ pour unix au labrea.stanford.edu dans /pub/ ou sur CTAN dans
/dviware/dvips/. 

+ pour VMS sur CTAN dans /systems/vms/Alpha/ ou /systems/vms/VAX
suivant l'architecture utilisée. 

+ pour MSDOS au monu1.cc.monash.edu.au dans /pub/dvips54.zip ou
au shape.mps.ohio-state.edu dans /pub/msdos/dvips/dvips54.zip ou
sur CTAN dans /systems/msdos/drivers/dvips/. 

+ pour OS2 sur CTAN dans
/pub/tex/systems/msdos/dviware/dvips/dvips558.pc.

* dvitops, pour unix, msdos, vms et primos, de J. Clark, est
disponible sur CTAN dans /dviware/. dvitops ne gère pas les
fontes virtuelles.

* dvipsk, de K. Berry, est disponible sur CTAN dans /dviware/.

# 23.2 # Qu'est ce que le "Literate Programming" ?
--------------------------------------------------
Le "Literate Programming" est une approche de la programmation
qui met en valeur le fait qu'un programme doit pouvoir être lu
aussi bien par une personne que par un compilateur. Les outils
associés (disponibles dans les archives CTAN)  vont ainsi
permettre de générer des documents combinant du code source et
du texte (souvent au format TeX). Ensuite, la documentation et
le code source seront automatiquement extraits de ce document
unique. Pour plus d'information sur ces techniques, consulter :
http://www.ius.cs.cmu.edu/help/Programming/literate.html. Il
existe également une FAQ comp.programming.literate disponible
sur CTAN dans : help/comp.programming.literate_FAQ.

Remarque : À l'origine, D.E. Knuth a basé TeX  sur un système
	   de "programmation littéraire" nommé Web. Le code 
	   source en question était du  Pascal.  Aujourd'hui où 
	   l'on ne trouve quasiment plus  de compilateurs
	   Pascal,  il a fallu  écrire des outils  de  passage 
	   au  C.  D'où l'outil Web2C actuellement utilisé.  La 
	   plupart des distributions  Unix utilisent Web2c 
	   maintenu actuellement par Karl Berry.

* WEB, est le premier outil/langage de literate programming. Il
a été créé par D.E. Knuth, qui l'a d'ailleurs utilisé pour
écrire TeX et metafont. WEB est une surcouche du language
pascal. Il offre un indexage et des références croisées
automatiques pour les identificateurs et les procédures ainsi
qu'un pretty printing du code. Il est disponible sur CTAN dans
/web/tweb/.

* CWEB, de D.E. Knuth et S.Levy, est une réécriture de WEB en C.
Cette application est simple d'accès et marche très bien. Un
clône de ce produit est CWEBx qui est un peu plus riche (donc
plus compliqué mais sans excès). Il est disponible sur CTAN dans
/web/c_cpp/cweb/.

* FunnelWEB se présente en tant que surcouche de n'importe quel
langage, mais pour cette raison n'offre pas de "pretty-printing"
du code. Il en existe une variante (FunnelWEB-AC) pouvant
générer de la doc HTML, en plus de la doc TeX.

Il présente l'originalité par rapport aux autres d'avoir été
réécrit de toutes pièces, et non d'être une branche de
dévelopement séparée de CWEB.

Il semble par ailleurs que FunnelWEB soit le seul à pouvoir
donner à l'utilisateur le contrôle total à l'octet près de son
fichier de sortie (utile pour les Makefiles, par exemple), mais
peut paraître assez rigide à un utilisateur habitué à la
puissance de fweb.

Funnel WEB, est disponible sur CTAN dans /web/funnelweb.

* fweb (1.53), de J. Krommes, dérivé de CWEB, met à disposition
une FAQ http://www.arsc.sunyit.edu/fwebdocs/fweb.html et une
DOC  http://w3.pppl.gov/~krommes/fweb_toc.html 
Cette application est très complète, mais un peu difficile
d'accès. Elle permet notamment de travailler en fortran (77 ou
90), RATFOR (77 ou 90), C ou C++. Elle intègre entre autres un
système de gestion de macros très complet, "à la m4" (boucles,
arguments variables, etc.), ainsi qu'un traducteur de RATFOR en
Fortran, pour ceux qui n'auraient pas le compilateur adéquat...

Elle est l'une des rares à utiliser LaTeX plutôt que TeX en
standard, ce qui permet d'utiliser toute la puissance de
celui-ci... 

fweb est disponible sur CTAN dans /web/fweb/.

* noweb et nuweb sont plus légers, plus fiables et très
utilisés. Ils mettent à disposition des mécanismes pour générer
des documents LaTeX ou du code source. Ils sont disponibles sur
CTAN dans /web/noweb/ et /web/nuweb/. Pour plus de détails,
consulter : http://www.cs.purdue.edu/homes/nr/noweb.

* SpiderWEB, de N. Ramsey, dérivé de CWEB, est disponible sur
CTAN dans /web/spiderweb/. SpiderWEB permet de gérer la plupart
des langages, tant que les blancs et les tabs ne sont pas
critiques, tout en assurant le pretty-printing. Quelques heures
suffisent pour ajouter un nouveau langage, sans avoir à tout
recompiler. Un certain nombre de langages sont supportés dans la
distribution (C, ADA, awk, etc.)

* DOC++ est disponible à :
http://www.ZIB-Berlin.DE/VisPar/doc++/doc++.html
Il se base sur les infos dans les commentaires. Il structure
bien les classes, mais est un peu rigide au niveau des
possibilités. Génère du LaTeX ou du HTML.

* wflman est disponible à :
ftp://ftp.keck.hawaii.edu/pub/wlupton/wflman-2.1.1.tar.Z
générateur automatique de doc au choix LaTeX, RTF, man et HTML.

# 23.3 # Comment convertir du LaTeX en word ?
---------------------------------------------
TeXport, de K-Talk permet de convertir vos fichier TeX
et LaTeX en documents WordPerfect ou Microsoft Word. Il traite
les styles de fontes, les notes de bas de page, les caractères
grecs, les mathématiques, les tableaux simples, les accents
européens, ainsi que les commandes \def et \renewcommand.

Ce logiciel est payant (et cher). Pour plus de détails, voir :
http://www.ktalk.com/.

# 23.4 # Comment convertir du word en LaTeX ?
---------------------------------------------
* Il y a l'outil "Publishing Companion" de K-Talk (voir
http://www.ktalk.com).

* Wd2latex, pour MS-DOS, est disponible sur CTAN dans
/dviware/wd2latex/. Cet utilitaire paraît somme toutes assez
rudimentaire.

* Word2x disponible sur CTAN dans /tools/word2x/ permet de
convertir du Word 6.0 en texte ou en LaTeX.

* Voir également texcnven dans
http://www.kfa-juelich.de/isr/1/texcnven.html.

# 23.5 # Comment convertir du scribe en LaTeX ?
------------------------------------------------
s2latex, de V. Jacobson, fait partie de la ditribution GUTenberg
pour Unix. Celle-ci est disponible par ftp à ftp.univ-rennes1.fr
dans /pub/GUTenberg/distribunix/.

# 23.6 # Comment convertir du WordPerfect en LaTeX ?
----------------------------------------------------
* wp2latex, de R.C. Houtepen, est disponible sur
wuarchive.wustl.edu dans ./mirrors/msdos/tex et sur CTAN dans
./support/wp2latex. wp2latex a été écrit pour PC en Turbo
Pascal. Il travaille à partir d'un document WordPerfect5.0. On
note quelques limitations concernant les indices, la table des
matières, les marges et les graphiques.

* wp2latex, de G. Geers (glenn@qed.physics.su.oz.au), a été
écrit en C. Il devrait être étendu à WordPerfect 5.1. La version
la plus récente est disponible par ftp à suphys.physics.su.oz.au
dans ./wp2latex ou sur CTAN dans /support/wp2latex/glenn/.

* texperf est disponible sur CTAN dans : /support/texperf/.

# 23.7 # Comment convertir du LaTeX en RTF ?
--------------------------------------------
Le format RTF (Rich Text Format) correspond à un format ASCII
contenant des informations de formattage lisibles (entre autres)
par Word pour DOS, Word pour Windows et Word pour Macintosh.
Pour plus d'informations sur ce format, voir :
ftp://ftp.primate.wisc.edu/pub/RTF/index.html ou 
ftp://ftp.lps.u-psud.fr/pub/doc/gc0165.zip et
ftp://ftp.lps.u-psud.fr/pub/doc/gc1282.exe.

* TeX2RTF, est disponible sur CTAN dans /support/tex2rtf/ ou
par ftp à ftp.aiai.ed.ac.uk dans /pub/packages/tex2rtf/.  Il
tourne sous SPARC Open Look, SPARC Motif et Windows3.1. 
TeX2RTF ne gère pas les formules mathématiques ni les tableaux
compliqués.

* LaTeX2rtf, de F. Dorner et A. Granzer, est disponible sur CTAN
dans /support/latex2rtf. Il s'appuie sur LaTeX 2.09. Une version
est également disponible sur
ftp://ftp.lps.u-psud.fr/pub/ltx2rtf/ltx2rtf.zip.

LaTeX2rtf produit du RTF avec la simple commande (sous DOS): 
	ltx2rtf srcltx.tex
qui produit
	srcltx.rtf
 
ATTENTION : 1. Ça ne traite pas tous les maths mais ça traduit
	    du texte LaTeX pour être relu en Word.
	    2. L'exécutable 386 est fourni mais il y a un
	    makefile qui compile le tout pour UNIX
	    3. Les lettres accentuées au codage 850 ne sont pas
	    traduites correctement, utiliser le codage 7bits
	    (\'e, \^i, etc). 
	    4. Ça utilise la numérotation automatique pour les
	    sections, les chapitres, etc. Mais les nombreux bugs
	    que j'ai découverts dans Word 6.0 rendent la
	    présentation un peu aléatoire. 
	    5. Ça traite les << et les >> pour les guillemets. 
	    6. Ça traite (sauf erreur) les commandes de
	    changements de polices de LaTeX2e du genre
	    \bfseries, \ttfamily, \sffamily, \slshape et les
	    tailles de polices.

# 23.8 # Comment convertir du RTF en (La)TeX ?
----------------------------------------------
* rtf2TeX (Unix), de R. Lupton (rhl@astro.princeton.edu), est
disponible sur CTAN dans /support/rtf2tex/. 

* rtf2latex (Unix), de E. Wechtl, est disponible sur CTAN dans
/support/rtf2latex/.

* w2latex, de J. Garmendia et J.L. Maltret, est disponible sur
CTAN dans /support/w2latex/. w2latex est un outil de conversion
entre deux formats descripteurs de  texte, permettant de
traduire un document rédigé sous certaines versions de 
Word pour obtenir du code LaTeX . 

* RTFLATEX, de D. Taupin, est capable de transcrire un fichier
RTF en LaTeX et de lui associer des fichiers de macros (.sty).
Toutefois, il ne traite pas encore les formules ni les tables.
RTFLATEX est disponible sur CTAN dans /support/rtflatex/ ou par
ftp à hprib.lps.u-psud.fr dans /pub/rtflatex/.

# 23.9 # Comment convertir du Excel en LaTeX ?
-----------------------------------------------
* Le package 'Tabular', de A. Gjestland, est disponible par ftp
à ftp.ssh.no dans pub/tabular. Il existe deux versions
Tabular4.xla pour Excel4 et Tabular5.xla pour Excel5. Une
documentation est également disponible : docu-tab.ps.Z. Vous
pouvez aussi consulter la page WEB
http://www.ssh.no/~ag/tabular/docu-tab.html.  Pour tous
renseignements, contacter l'auteur par e-mail : ag@hsh.no.

* Il existe égaleemtn l'utilitaire Excel2LaTeX disponible sur le
WEB à
http://www.informatik.uni-trier.de/CIP/marder/xl2latex.zip.

# 23.10 # Comment convertir du HTML en LaTeX ?
----------------------------------------------
* http://www.w3.org/hypertext/WWW/Tools/html2things.html
propose un certain nombre d'outils de conversion à partir d'un
document html.

* html2latex, de N. Torkington, est disponible à
http://www.w3.org/hypertext/WWW/Tools/html2latex.html ou sur
CTAN dans /support/html2latex. Cet outil semble assez limité. Il
est basé sur le parser HTML de Mosaic (NCSA).

* h2l, de J. Korpela, est disponible à
http://www.hut.fi/jkorpela/h2l/. Il est un peu plus complet que
le précédent mais doit encore être complété. Une documentation
est également prévue.

Remarque : HTML étant à la base du SGML, une autre solution (non
	   testée) serait d'utiliser un traducteur SGML->LaTeX. 
	   Le système 'linuxdoc-sgml' devrait pouvoir faire ça
	   si on lui donne la DTD de la version d'HTML concernée
	   et les règles de traduction. Pour plus de détails
	   consulter le document
	   /pub/linux/sunsite/utils/text/linuxdoc-sgml-*.tar.gz
	   disponible par ftp à ftp.loria.fr

* techexplorer disponible sur
http://www.ics.raleigh.ibm.com/ics/techexp.htm est un Browser
Hypermedia qui met en forme des documents scientifiques écrit en
LaTeX pour les présenter sous forme HTML. Il gère notamment les
expressions mathématiques. Il est compatible avec les
navigateurs Netscape 3.0 et avec MicroSoft Internet Explorer.
Pour plus de détails voir la mailing liste
techexplorer@LISTSERV.NODAK.EDU.

* Le package 'typehtml' disponible sur CTAN dans
/macros/latex/contrib/supported/carlisle/ permet de lire des
fichiers HTML2 et les mathématiques dans HTML3.0.

# 23.11 # Comment convertir du LaTeX en HTML ?
----------------------------------------------
 Remarque : IDVI est un outil qui permet de présenter des
	    documents WWW à partir de sources LaTeX. IDVI 
	    est une implémentation Java d'un viewer dvi qui
	    permet d'afficher des pages LaTeX sur le WEB et non
	    plus un document HTML. Pour plus de détails,
	    consulter : http://www.geom.umn.edu/java/idvi/

* LaTeX2HTML pour Windows 95, NT et UNIX, de N. Drakos (Perl),
est disponible sur CTAN dans /support/latex2html/. Pour plus de
détails, consulter :
http://cbl.leeds.ac.uk/nikos/tex2html/doc/latex2html/.

Remarque : le package 'html' permet d'insérer dans le source
	   LaTeX des commandes traitées de manière spéciale par 
	   le convertisseur latex2html.

Il existe également une liste de discussion latex2html à
laquelle on peut s'abonner en envoyant un mail subscribe
latex2html [<address>] à majordomo@mcs.anl.gov

La nouvelle version de LaTeX2HTML est la 96.1. Une documentation
est disponible en ligne à l'irisa dans 
/usr/local/doc/LaTeX/latex2html.ps. 

* Il est possible également d'utiliser hyperlatex, qui produit
des documents HTML plus jolis pour peu que votre source LaTeX
suive certaines conventions. Pour plus de détails, consulter :
http://www.cs.ruu.nl/pub/SGI/IPE/Hyperlatex-1.4pl2.tar.gz ou
encore sur CTAN dans /support/hyperlatex/.

ATTENTION : cet utilitaire nécessite l'utilisation de latex2e et
	    de emacs.

* A voir également : OmniMark  sur http://www.omnimark.com.

* Il existe également ltx2x disponible sur CTAN dans /support/.

* TeX4ht est un environnement configurable qui permet de
générer des documents hypertextes. Pour plus de détails, voir :
http://www.cis.ohio-state.edu/~gurari/TeX4ht/mn.html

* ltoh est un script perl paramètrable. Il sait gérer différents
types de macros, les tables, la plupart des caractères spéciaux,
etc. Pour plus de détails, voir :
http://www.best.com/~quong/ltoh

* mn de E. Gurari est un convertisseur plain TeX ou LaTeX vers
HTML. Il est hautement configurable. Cet outil est disponible
sur : http://www.cis.ohio-state.edu/~gurari/TeX4ht/mn.html.

* Webbuilder de MicroPress, est un éditeur TeX qui permet de
générer du code HTML. Il gère aussi bien les commandes TeX que
les macros utilisateur. Tous les environnements mathématiques,
tables, notes de bas de page, table des matières, référencesm,
listes, etc, sont gérés. La plupart des documents LaTeX peuvent
facilement être convertis. Webbuilder est disponible sous Win95,
NT, ou  Win 3.1 (Win32s nécessaire). Pour plus de détails et
quelques exemples, consulter : http://www.micropress-inc.com.
Pour toutes questions écrire à support@micropress-inc.com.

* http://venus.pfc.mit.edu/tth/tth.html présente un
convertisseur (La)TeX to HTML capable de gérer les
mathématiques. Sa taille est <400ko.

* TTH est un convertisseur TeX to HTML disponible à :
http://venus.pfc.mit.edu/tth/tth.html. Il gère les mathématiques
(il convertit les formules mathématiques au lieu d'en faire des
images) et reconnait les structures de document plain TeX et
LaTeX qu'il convertit en hyperliens. TTH est rapide et portable 

* Le package 'typehtml' de D. Carlisle permet de gérer des
documents HTML directement depuis le source LaTeX. Ce package
est disponible sur CTAN dans
/macros/latex/contrib/supported/carlisle/.

# 23.12 # Comment convertir un fichier dvi en ascii ?
----------------------------------------------------- 
* dvi2tty est disponible sur CTAN dans /dviware/dvi2tty/.

* dvispell de la distribution EmTeX permet également de
convertir un fichier dvi en fichier texte.

# 23.13 # Comment convertir du WEB en LaTeX ?
--------------------------------------------
SchemeWEB, de J. Ramsdell, est disponible sur CTAN dans
/web/schemeweb/.

# 23.14 # Comment convertir du TeX en Framemaker ?
--------------------------------------------------
Framemaker dispose d'un filtre permettant d'importer des
fichiers TeX.

# 23.15 # Comment enlever les balises LaTeX d'un document ?
-----------------------------------------------------------
detex, disponible sur CTAN dans /support/detex/, permet
d'enlever toutes les commandes et séquences de contrôle LaTeX
d'un document. Il existe sous Unix, Doc et Mac.

ATTENTION : detex n'enlève que les macros, et pas leurs
	    arguments, ce qui donne des résultats pas
	    toujours très propres avec des documents LaTeX. 

# 23.16 # Comment convertir du SGML en (La)TeX ?
------------------------------------------------
Remarque : SGML = Standard Generic Markup Language 
	   SGML est une norme de balisage de documents structurés
	   
	   Pour plus de détails, consulter :
	   http://www.univ-rennes1.fr/pub/GUTenberg/
	   	publicationsPS/19-sgml.ps.gz
	   http://www.sil.org/sgml/sgml.html
	   http://cals.debbs.ndhq.dnd.ca/french/bulletin/
	   	issue02/index.html (en francais !)

* sgmlspm, de D. Megginson, (Perl) est disponible à
http://www.connection.co.uk/bob/sgml/SGMLSpm/sgmlspl/sgmlspl.html.

* stil, de J. Schrod et C. Detig, (Common Lisp) est disponible
par ftp à ftp.th-darmstadt.de dans /pub/text/sgml/stil.

Ces deux outils s'appuient sur le parser nsgmls de J. Clark qui
traduit du SGML en ESIS.

* linuxdoc-sgml s'appuie aussi sur sgmls de J.Clark.

* sgml2tex, de P. Flynn, sur PC est disponible sur CTAN dans
/support/sgml2tex.

# 23.17 # Comment convertir du WinWord en LaTeX ?
-------------------------------------------------
* WINW2LTX, de A. Cottrell, est disponible sur CTAN dans
/support/winw2ltx/english/ww2 pour WinWord2, et
/support/winw2ltx/english/ww6 pour WinWord6. Il ne traite ni les
équations, ni les graphiques.

# 23.18 # Comment convertir un fichier 8 bits en fichier 7 bits ?
----------------------------------------------------------------- 
* B. Raichle a fourni un tel convertisseur parfaitement portable
qui se présente sous forme d'un programme ".tex" appelé
convert.tex. Celui-ci est disponible sur CTAN 
dans /language/typingtex/.

Il existe également une version modifiée par L. Siebenmann dans
/Convert-RaichleHacked.dir/ (interface modifiée, ajout de
quelques tables de transformation dont mac2dek.tbl ou pc2dek
pour la conversion du Macintosh ou du PC vers la syntaxe
classique de Knuth \'e, \c{c} etc.).

* L'outil Tower of Babel (avec option TeX activee), permet
également de réaliser de telles conversions. Il est disponible
par ftp à ftp.ibp.fr
dans /pub/mac/info-mac/text/tower-of-babel-13.hqx.

* recode de F. Pinard est un programme unix (GNU) qui convertit
tous types de fichiers texte. Denombreux formats sont supportés
(ASCIIs, EBCDIC, CDC, latex, etc).

Exemple :
recode latin1:applemac <fichier>
pour une conversion 7 bits vers 8 bits
%%%% fin exemple %%%%

* dans emacs, le package iso-cvt.el, peut convertir
automatiquement un fichier codé 7 bits en fichier codé 8 bits
(et réciproquement) lors de la lecture et de l'écriture. Pour
l'utiliser, ajouter (require iso-cvt) dans .emacs. Le fichier
sera alors en 7bits sur le disque.

* De même, il existe le package x-symbol pour (X)emacs. Pour
plus de détails, voir
http://brahms.fmi.uni-passau.de/~wedler/x-symbol.html.

* Il existe également les utilitaires kb7to8/8to7 distribués
avec 'french'.

# 23.19 # Comment convertir un fichier ChiWriter en TeX ?
---------------------------------------------------------
chi2tex est disponible sur CTAN dans /support/chi2tex/. Il y a
plusieurs versions du convertisseur, selon la version de
ChiWriter à convertir.  A partir des versions 2 ou 3 cela ne
marchait que pour des fichiers très simples (pas plus d'un
niveau d'exposant et d'indice, etc). Il est probable que le
convertisseur de la version 4 marche beaucoup mieux : il fait
une analyse syntaxique des formules, alors que les versions 2 et
3  étaient purement graphiques.

# 23.20 # Où trouver une FAQ de convertisseurs (La)TeX/
-------------------------------------------------------
Traitement de texte ?  
---------------------
* La FAQ de  W. Hennings est disponible sur
http://www.kfa-juelich.de/isr/1/texconv.html ou sur CTAN dans
/help/wp-conv/. Elle est également postée toutes les semaines
dans comp.text.tex.

* Voir également la page http://www.wotsit.demon.co.uk/text.htm
ou la page http://wotsit.simware.com.

# 23.21 # Comment convertir une image en police metafont ?
----------------------------------------------------------
C'est le programme bm2font qui permet de faire cela. Il est
disponible sur CTAN. La documentation est aussi sur le LaTeX
Navigator (http://www.loria.fr/tex).

Pour plus de détails sur metafont il existe la liste
metafont@ens.fr. Pour s'inscrire, envoyez à 
              listserv@ens.fr 
le message :
	      SUBSCRIBE metafont nom de forme libre 

# 23.22 # Comment convertir un fichier postscript en ascii ?
------------------------------------------------------------
pstotext est un outil Unix freeware qui permet d'extraire du
texte ascii d'un fichier postscript. Il utilise Ghostscript.
pstotext est disponible à
http://www.research.digital.com/SRC/virtualpaper/pstotext.html.

Sous Windows et OS/2 pstotext est accessible via l'outil GSview
de R Lang (version 2.0 minimum). Voir
http://www.cs.wisc.edu/~ghost/gsview/.

Pour DOS, pstotext est disponible à
http://www.cs.ruu.nl/~piet/software.html.

# 23.23 # Comment convertir un fichier pdf en ascii ?
-----------------------------------------------------
L'outil pstotext présenté à la question précédente permet
également d'extraire du texte ascii d'un fichier pdf.

# 23.24 # Comment convertir du LaTeX en PDF ?
---------------------------------------------
Remarque : il vaut nettement mieux demander à LaTeX de travailler
	   avec des polices PostScript, si l'on compte 
	   transformer le document en PDF par la suite. Si vous
	   utilisez  des polices à résolution fixe, le texte
	   aura une apparence  on ne peut plus laide sur votre
	   écran.

* L'utilitaire ps2pdf de ghostscript (version 4.01 au moins)
permet de convertir des fichiers postscript au format PDF
d'Adobe. Ghostscript version 4.02 est disponible par ftp à
ftp.cs.wisc.edu dans /pub/ghost/aladdin/. 
Sur mac, ps2pdf livré avec cmactex, nécessite l'installation de
psview disponible par ftp à ftp.ibp.fr dans
/pub/mac/local/tex/cmactex/.

* il existe une version préliminaire de PDFTeX (disponible pour
faire des tests). PDFTeX est un moteur tex qui permet de
produire directement un fichier PDF sans passer par DVI. Il
dispose donc en natif d'un support pour les objets graphiques et
les liens hypertextes. PDFTeX est disponible pour WinNT/Win95
par ftp à ftp.ese-metz.fr dans
/pub/TeX/private/pdftex.

T. Bouche a créé une page w3 de présentation de pdftex avec
trois fichiers pdf créés de cette façon :
http://www-fourier.ujf-grenoble.fr/~bouche/PDFtex/

Il existe également une liste de discussion à ce sujet :
pdftex@tug.cs.umb.edu.

* Adobe Acrobat Distiller permet avec des fontes simples de
générer des fichiers PDF à partir de postscripts. Dans ce cas,
il vaut mieux utiliser des fontes de type1 car les bitmaps de
tex sont très très mal rendues pas acrobat reader. Pour plus de
détails consulter www.adobe.com.

* Netpbm est un paquet d'utilitaires domaine public permettant
des manipulations d'images, en les convertissant en un format
PPM (Portable PixMap), très facile à manipuler par programmes.
Il est disponible pour MSDOS dans
ftp://ftp.lps.u-psud;fr/pub/pc/netpbm/. Une version Win32
(Win95, NT) est également disponible sur tout site CTAN tel que
ftp://ftp.loria.fr/pub/ctan/systems/win32/web2c.

# 23.25 # Comment définir son propre format de sortie ?
-------------------------------------------------------
ltx2x  disponible sur CTAN dans /support/ltx2x/ permet de
remplacer des commandes LaTeX par des commandes définies par
l'utilisateur.

================================================================
[24] PRÉVIEWERS ET VIEWERS
================================================================

Les viewers et previewers présentés ci-dessous peuvent permettre
entre autres de visualiser des documents .dvi et .ps.
Toutefois, ils ne sont pas attachés à LaTeX.

# 24.1 # Où trouver un previewer ?
----------------------------------
* dvipage pour SunView est disponible par ftp anonyme à :
archive.cis.ohio-state.edu ou sur CTAN dans /dviware/dvipage/.

* xtex pour X Window System disponible par ftp anonyme à
aftp.cs.colorado.edu dans
./pub/cs/misc/SeeTeX/SeeTeX/SeeTeX-*.tar.Z ou sur CTAN dans
/dviware/seetex/.

* dviapollo pour stations Apollo disponible par ftp anonyme à
alabrea.stanford.edu dans ./pub/dviapollo.tar.Z ou sur CTAN dans
/dviware/dviapollo/.

* dvidis pour VAXstation sous VWS disponible par ftp anonyme à
src.doc.ic.ac.uk dans /packages/tex/dviware/dvidis ou sur CTAN
dans /dviware/dvidis/.

* xdvi pour X Window System disponible par ftp anonyme à
ftp.x.org dans ./contrib/xdvi.tar.Z ou sur CTAN dans
/dviware/xdvi.

* dviwin sous Windows est disponible sur CTAN.

* xdvik de K. Berry est disponible sur CTAN dans
/dviware/xdvik.

* dvitovdu pour Tektronix 4010 et autres terminaux sous Unix 
est disponible sur CTAN dans /dviware/dvitovdu.

* texsgi pour SGI sous Irix disponible par ftp anonyme à
ftp.brl.mil dans ./info-iris/tex ou sur CTAN dans 
/dviware/texsgi.

# 24.2 # Où trouver un viewer ?
-------------------------------
* Ghostscript, Ghostview et GSview pour PC, Mac et station de
travail sont disponibles sur
http://www.cs.wisc.edu/~ghost/index.html.

* viewps de T. Kiffe est inclu dans la distribution CMacTeX
disponible sur CTAN.

* TrueTeX est un viewer pour PC sous windows.

* gv est une interface basée sur Ghostview et améliorée. Les
actions disponibles sont nombreuses et il est possible de
lire un document sur écran. On dispose aussi de l'anti-aliasing
et de zooms impressionnants sur les parties de la page que l'on
veut. gv peut même afficher des fichiers PDF si on dispose de
la version de GhostScript adéquate.

Pour plus de détails consulter :
http://wwwthep.physik.uni-mainz.de/~plass/gv/ ou un site FTP : 
ftp://thep.physik.uni-mainz.de/pub/gv/.

gv tourne sur les versions d'Unix les plus courantes, il faut
néanmoins disposer du widget Xaw3d.

# 24.3 # Comment visualiser des fichiers non postscript sous xdvi ?
-------------------------------------------------------------------
D. Barbier propose le script suivant pour inclure des fichier MPS
générés pas Metapost. 

La démarche retenue est de pomper dans le .ps toutes les
définitions qui manquent à ce pauver xdvi. Par exemple, pour voir
les dessins dans le fichier essai.tex, je fais :
    makepro essai.tex
Cela genere essai.ps (s'il est vieux) et produit un fichier
essai.pro Il ne reste plus qu'à mettre \special{header=essai.pro}
avant le \begin{document} et le tour est joué. Quand on modifie
le source (on rajoute des dessins), il suffit de relancer
makepro, et de recompiler le document.

Quelques remarques :
+ il faut une version de xdvi >= 20
+ on peut sans encombre utiliser plusieurs fois cette commande
sur le meme fichier ;
+ pour faire le .ps final, il faut enlever
\special{header=essai.pro} et recompiler ;
+ s'il y a des pbs d'échelle, essayer de modifier des paramètres
dans la définition de fshow et fstore.
+ je travaille en 600dpi ;

Comme j'y connais pas grand chose en Postscript, toutes les
remarques seront les bienvenues. Par exemple, les paramètres 
dans fshow et fstore sont mis au pif. Quelles sont les bonnes
valeurs ? Comment faire pour que Psfrag passe à la moulinette ?
Et bien d'autres choses.

%%%% debut macro %%%%
 #!/bin/sh
 # D. Barbier 31/10/97  barbier@cmapx.polytechnique.fr
 # Commande : makepro nom_de_fichier
 # Usage    : voir ci-dessous (ou taper makepro -h)
 
 usage="Usage: `basename $0` nom[.tex]\n\
 Cree un preambule \"nom\".pro qui permet l affichage
 des fichiers non postscript (inclus par \"nom\") avec
 xdvi (version 20 et plus).\n\
 Les applications sont notamment l inclusion de fichiers
 generes par Metapost."

 case "$#:$1" in
    1:-h*|1:--h*) echo "$usage"; exit 0;;
    1:*) ;;
    *) echo "$usage"; exit 1;;
 esac
 
 if test -r "$1" ; then
    filetex=$1
    file=`echo "$filetex" | sed -e 's/\.[^.]*$//'`
 else
    file=$1
    filetex=$file.tex
    if test ! -r "$filetex" ; then
        echo "Erreur: le fichier $file n existe pas"
        exit 1
    fi
 fi
 filedvi=$file.dvi
 fileps=$file.ps
 filepro=$file.pro
 rm -f $filepro
 
 # On teste si la commande \special{header=...}
 # est dans le fichier
 # Autant ne faire qu'une compilation avant de
 # voir le resultat
 ligne="\\\\special{header=$filepro}"
 if test -z "`grep $ligne $filetex`" ; then
    echo "Rajouter la comande $ligne avant \\\\begin{document}"
    exit 1
 fi
 
 echo "%!" > $filepro
 
 # On ne compile le .tex que si necessaire. Il y a
 # plusieurs possibilites pour voir la date de modification
 # des fichiers :
 # 1) utiliser newer fourni avec certaines distributions de TeX
 #    (je n'ai pas reussi a le faire marcher).
 # 2) test (si l'option -nt est supportee)
 # 3) creer un makefile.
 # J'ai choisi cette derniere solution
 
 echo "$filedvi: $filetex\n\tlatex $filetex\n\
 $fileps: $filedvi\n\tdvips -o $fileps $filedvi\n" > .tmp$$
 
 make -f .tmp$$ $fileps
 
 rm -f .tmp$$
 
 awk '
 # Liste des preambules qu on veut utiliser
 BEGIN {header["tex.pro"]=1;header["texps.pro"]=1}
 /%%BeginProcSet:/ { if ( header[$2] == 1 ) {getline
 while ( $1 != "%%EndProcSet" ) {print;getline}}}
 /%%EndProlog/ {exit 0}
 ' $fileps |
 # On supprime la creation des dictionnaires.
 sed -e 's%/TeXDict [[:digit:]]* dict \([[:alpha:]]*\)%%' \
    -e 's%/SDict [[:digit:]]* dict \([[:alpha:]]*\)%%' \
      >> $filepro
     
 # Ce sont les commandes qui font l affichage.
 # En remplacant les commandes de finclude.pro par celles-ci,
 # ca a l air de marcher
 
 cat << EOF >> $filepro
 /fstore{TeXDict begin /VResolution 120 def /Resolution 120
 def end
 dup dict exch{dup 4 2 roll put}repeat def}bind def
 /fshow{gsave 72 TeXDict /Resolution get div -72 TeXDict
 /VResolution get div scale 1
 5 div dup scale get cvx exec show grestore}bind def
 EOF
 
 # Et la, ce sont les commandes de fontes
 awk '
 /TeXDict begin ([[:digit:]]* ){5}/ {i++}
 /TeXDict begin ([[:digit:]]* ){5}/,/end/ {if (i==1) print}
 /%%EndProlog/ {exit 0}
 ' $fileps >> $filepro
 
 echo "Fichier $filepro genere"
 
 exit 0
%%%% fin macro %%%%

================================================================
[25] LOGICIELS DE DESSINS
================================================================

# 25.1 # Où trouver un logiciel de dessin ?
-------------------------------------------
* Xfig est un logiciel de dessin disponible sur station de
travail Unix sous X Window System. Il permet via des menus de
manipuler des objets de façon interactive dans une fenêtre X
Window. Il nécessite une souris à trois boutons. Il est
disponible par ftp anonyme à ftp.x.org dans
./contrib/applications/drawing_tools/xfig ou sur CTAN dans
/graphics/xfig/. Son gros avantage est de permettre
l'utilisation de commande LaTeX (formules mathématiques). Il est
capable d'exporter une figure directement en format TeX ou de
générer de l'encapsulated postscript (si l'on veut des zones
grisées ou des choses de ce type, il faut passer par un fichier
postscript).

* PSfrag permet également de combiner du dessin et des textes
LaTeX. Il nécessite LaTeX2e et le package 'graphics'. Il est
disponible sur CTAN dans /macros/latex/contrib/supported/psfrag.

* TeXcad, permet de créer des fichiers de dessin. Le principe
est intéressant puisque cet outil permet de dessiner à l'aide de
la souris et de menus et lui le transforme en commandes LaTeX.
Il permet l'utilisation de la commande \special (cf. paragraphe 
29.8). TeXcad est disponible sur PC (il fait partie de la
distribution emTeX) et sous Unix et Linux (on peut le trouver
dans /systems/unix/linux/).

* Xy-pic permet de réaliser des diagrammes commutatifs, des
automates, et plein d'autres choses (cf. paragraphe 8.6).

* xgraphic offre une très bonne qualité de dessin. Il est
disponible à
http://blanche.polytechnique.fr/XGRAPHICS/xgraphics.html.

* tgif permet également de dessiner des figures. Il est
disponible à http://bourbon.cs.columbia.edu:8001/tgif/. Il peut
faire appel à différentes librairies (cf.
http://bourbon.cs.columbia.edu:8001/tgif/current.html) dont une
LaTeX qui permet entre autres de gérer des équations
mathématiques. 

* LaTeXcad sous Windows3.x et Windows '95 permet de convertir
des figures en commandes LaTeX. Il est disponible sur CTAN dans
CTAN : /systems/msdos/latexcad/.

* MetaPost que l'on peut trouver dans la distribution CMacTeX
peut produire des figures PostScript. Les commandes MetaPost
permettent entre autres d'obtenir directement des cercles, des
segments et des courbes de Bezier ; en outre, on peut nommer des
points en précisant leurs coordonnées ou en indiquant les
chemins à l'intersection desquels ils se trouvent. MetaPost
offre d'autres possibilités, bien décrites dans le manuel qui
l'accompagne.  

Pour plus de détails,
consulter http://www.loria.fr/~roegel/metapost.html.

* Pagedraw sous Windows 3.1/95/NT permet de générer des fichiers
postscript. Il est disponible sur CTAN dans :
/graphics/pagedraw/.

Remarque : Il y a un excellent éditeur vectoriel GRATUIT sous
	   windows, nommé MayuraDraw (anciennement PageDraw) 
	   et que l'on peut trouver sous
	   http://www.wix.com/PageDraw
	   
	   Avec Ps2ai, cet éditeur permet d'importer des
	   fichiers ps (presque) quelconques, de les manipuler
	   et de les exporter au format pdf, eps, wmf, ai, ps,
	   bmp et tif.

* Qfig est un logiciel de dessin sous DOS. Il génère des
fichiers PicTeX et EPIC. Il est disponible sur CTAN dans
/support/qfig/.

* PovRay est un outil de ray-tracing. Il permet de manipuler
des formes géométriques, des plans, des textures des sources de
lumières, etc. 

* Gimp est une application UNIX qui s'appuie sur X Window
system. GIMP permet de manipuler des images pour faire des
retouches sur des photos, des compositions d'images, etc. Pour
plus de détails, consulter :
http://www.xcf.berkeley.edu/~gimp/gimp.html

* Sous Windows 3.1/95/NT il existe également Paint Shop Pro qui
est shareware. Pour plus d'informations, consulter
http://www.jasc.com/.

* Le package 'mfpic' de T. E. Leathrum et G. Tobin permet
également de faire des dessins, directement dans le source. Son
intérêt est de rendre le document parfaitement portable sans
aucun soucis de compatibilité de format, ni d'envoi de fichiers
multiples. 

Le source d'un dessin mfpic doit être compilé par TeX puis
MetaFont et TeX à nouveau. Ce package est très bien adapté pour
des dessins mathématiques et géométriques. Les programmes
offrent une complexité remarquable (for .. upto .., if .. then
.. else .., calculs numériques, etc).

Le principe de base du fonctionnement de mfpic est de créer une
police de caractère, dont chaque caractère sera un dessin (d'ou
la nécessité de la compilation par Metafont, comme pour toute
nouvelle police). 

Remarque (R. Roussillon) : Ce package mériterait d'être plus
	   connu que ce qu'il est actuellement.

Exemple :
\polyline{(0,0),(1,2),(3,-1)}
\arc[t]{(1,0),(1,1),(0.5,1)}
%%%% fin exemple %%%%

# 25.2 # Comment inclure des formules Latex dans Xfig ?
-------------------------------------------------------
* Il suffit de mettre le flag special au texte, de taper son
texte LaTeX en incluant des commandes, d'exporter son fichier
(toto.fig par exemple) en deux parties : Combined PS/LaTeX (PS
part) Combined PS/LaTeX (LaTeX part) et de faire
\input{toto.pstex_t}, en ayant bien sûr chargé au préalable 
le package 'epsfig' par la commande \usepackage{epsfig} placée
dans le préambule. 

* On peut utiliser également tgif qui permet d'insérer du LaTeX
dans les figures. Son fonctionnement est différent : le source
est compilé dans tgif même, et le résultat dvi est converti en
Postscript et apparaît dans la figure. Le positionnement dans la
figure de l'élément compilé est donc plus aisé, mais il est
assez contraignant de lancer LaTeX pour compiler chaque élément.

# 25.3 # Comment gérer différents formats de figures ?
------------------------------------------------------
* Sous Unix, Win95, Mac, VMS, l'outil ImageMagick, de J. Cristy,
permet de convertir de nombreux formats d'image vers un autre.
Il permet l'édition et la manipulation d'images. Pour plus de
renseignements, consulter
http://www.wizards.dupont.com/cristy/ImageMagick.html.
ImageMagick est disponible par ftp à ftp.wizards.dupont.com dans
/pub/ImageMagick/.

ImageMagick est également disponible pour VMS par ftp à
ftp.wizards.dupont.com dans /pub/ImageMagick/vms/ ou à
ftp.x.org dans contrib/applications/vms/.

* Transfig permet entre autres de convertir un fichier au format
fig en format postscript. Il est disponible sur CTAN dans
/graphics/transfig/.

* GraphicConverter sur mac (en anglais, français ou allemand)
est capable de lire pratiquement tous types de fichiers
graphiques de toutes origines et de le sauvegarder dans un autre
format dont EPSF. Le programme est shareware et est disponible
sur info-mac.

* tiff2ps (sous Unix), de S. Leffler, permet de convertir des
images au format tiff en format ps.

* GWSWIN11 ou Graphic Workshop pour Windows est disponible par
ftp à hprib.lps.u-psud.fr dans /pub/pc/utils/. Cet outil
(shareware à $40) permet de convertir du PCX, TIFF, JPEG, GIF,
BMP, etc. Il sait convertir des fichiers à niveaux de gris en
fichier tramés ("dithered" en anglais) utilisable pour
l'impression sur des imprimantes noir-et-blanc comme nos
imprimantes laser. Pour le tramage, il propose 7 algorithmes et
la doc de 60 pages donne des conseils. Son tramage paraît
meilleur que celui d'ImageIn ou des scanners usuels.

* Paint Shop Pro, outil pour PC, permet d'exporter des fichiers
en postscript qui pourront être appelés directement sous LaTeX.
Il est disponible à http://www.jasc.com/index.html en shareware
ou par ftp à ftp.ibp.fr.pub dans /pc/win95/desktop/psp311.zip ou
dans /pc/simtelnet/win3/Graphics/psp311.zip.

* L'utilitaire gif2eps disponible par ftp à qiclab.scn.rain.com
dans : \\ /pub/graphics/.

* Voir également les pages http://wotsit.simware.com ou
http://www.wotsit.demon.co.uk/text.htm pour des informations sur
des convertisseurs.

================================================================
[26] CORRECTEUR 
================================================================

# 26.1 # Où trouver un correcteur orthographique ?
--------------------------------------------------
* ispell est disponible sur CTAN dans /support/ispell/ ou à
ftp.inria.fr dans/gnu/. Il peut être associé au dictionnaire
français de M. Boyer disponible par ftp à ftp.inria.fr dans
/gnu/. ispell peut être associé à emacs (xemacs), NeXT. 
Pour plus de renseignements, consulter
http://ficus-www.cs.ucla.edu/ficus-members/geoff/ispell.html.

* Pour MS-DOS :
+ il existe amspell disponible sur CTAN dans
/support/amspell/ ou jspell dans /support/jspell/.
+ Micropell (commercial) peut être appelé depuis PCTeX pour
windows.

* Pour Macintosh, Excalibur est disponible sur CTAN dans
/systems/mac/support/excalibur/ avec plusieurs dictionnaires.
Pour plus de détails, voir :
http://www.eg.bucknell.edu/~excalibr/excalibur.html.

* Pour VMS, il existe vmspell  disponible sur CTAN dans
/support/vmspell/.

* On note également le mode ispell-minor-mode de emacs, qui est
capable de vérifier l'orthographe en ligne sans prendre en
compte les commandes LaTeX.

* La distribution Full VTeX [DOS/Win] inclut un correcteur
orthographique (américain, anglais, français, allemand,
hollandais et italien). Pour plus de détails, consulter :
http://www.micropress-inc.com.

* L'éditeur textpad sous Win3.1x et Win95 est capable de
supporter des textes LaTeX et comprend de nombreux
dictionnaires. Pour plus de détails, consulter :
http://www.textpad.com/

* Le dictionnaire de R. Cougnenc peut s'utiliser en mode shell
sous DOS comme sous Linux. Il contient 95 000 mots et 39 000
codes postaux, et permet  de vérifier très rapidement une
orthographe. Ce dictionnaire est disponible sur la page web de
D. Trystram :
http://www.starnet.fr/Homepages/dtrystram/index.html.

# 26.2 # Où trouver un vérificateur de syntaxe LaTeX ?
------------------------------------------------------
* TeX est un outil puissant disponible par ftp à ftp.tex.ac.uk.

* lacheck, disponible avec la distribution AUC-TeX (mode (La)TeX
pour emacs) est capable de vérifier la syntaxe LaTeX et de
détecter les erreurs les plus fréquentes.

* Le package 'syntonly' permet également de vérifier la syntaxe
LaTeX.

Utilisation :
 \documentclass[syntonly]{...} 
 
* ChkTeX, de J. T. Berger Thielemann (jensthi@ifi.uio.no), dont
la version v1.5 est disponible sur CTAN dans /support/chktex/.
Il est capable de détecter des erreurs typographiques dans
LaTeX. Cet outil permet de s'affranchir de certaines
constructions LaTeX non intuitives. Les binaires pour UNIX,
Amiga, MSDOS et OS/2 sont disponibles.

Quelques exemples de services :
+ pas d'espace ou assimilé après/avant une parenthèse
+ indique les espaces multiples qui ne sont pas équivalents à un
seul
+ gère la ponctuation en mode mathématique
+ indique les espaces avant une note de bas de page
+ gère les fichiers inclus 
+ détecte les blancs avant une référence au lieu de ~
+ vérifie les couples de parenthèses
+ gère l'espace après un passage en italique
+ ...

Cet outil est configurable. Il supporte LaTeX209 et LaTeX2e.

* Le package 'refcheck' disponible sur CTAN dans
/macros/latex/contrib/supported/refcheck/ permet de vérifier les
références d'un document.

================================================================
[27] ASSOCIATIONS
================================================================

# 27.1 # Qu'est ce que l'association GUTenberg ?
------------------------------------------------
L'association GUTenberg (loi 1901) a pour objectifs de
regrouper les utilisateurs francophones de TeX, de favoriser
les échanges techniques permettant d'augmenter les possibilités
d'impression et de publications scientifiques et d'offrir à ses
adhérents un certain nombre de services dont des ditributions
TeX et LaTeX francisées. Le serveur d'archives de GUTenberg est
herbergé sur le serveur ftp anonyme du CRI à Rennes :
ftp.univ-rennes1.fr dans ./pub/GUTenberg/ ou sur le WEB à
http://www.univ-rennes1.fr/pub/GUTenberg.

GUTenberg publie la Lettre GUTenberg ainsi que les cahiers
GUTenberg.

Remarque : Le cahier 23 de GUTenberg est également une FAQ
	   LaTeX.

ATTENTION : la FAQ que vous êtes en train de lire est
	    indépendante de l'association GUTenberg.

# 27.2 # Qu'est ce que l'association TUG ?
------------------------------------------
TUG (TeX Users Group) est une organisation internationale dont
un tiers des membres est européen. TUGboat est la lettre de ce
groupe. Pour plus de renseignements, contacter tug@tug.org par
mail ou consulter le site WEB http://www.tug.org/.

# 27.3 # Qu'est ce que l'association AsTeX ?
--------------------------------------------
L'association AsTeX a comme objectif principal d'essayer de
faire du travail utile au plus grand nombre, dans le domaine des
logiciels scientifiques, et d'essayer de faire ce travail aussi
bien que les éditeurs privés, mais dans un esprit de service
public.

Cela passe par l'écriture d'utilitaires d'installation et de
configuration automatisés (pour que le débutant en TeX/LaTeX
n'ait pas à lire 1000 pages de docs disparates, en anglais de
surcroit, avant de pouvoir imprimer "Bonjour"), par l'écriture 
de docs raisonnablement bien rédigées et agréables à consulter,
par des distributions sur disquettes bien présentées. Cela passe
également par la traduction de docs originales dans un français
correct, etc.

================================================================
[28] FONTES
================================================================

# 28.1 # Que signifient les sigles T1, mf, fd etc. ?
----------------------------------------------------
Contribution de P. Pichaureau (ppichaur@grannus.u-strasbg.fr) :

Voici une mise au point rapide, histoire que vous compreniez 
de quoi ça parle.

En 1990, lors d'une reunion d'utilisateurs de TeX, à Cork, il a
été décidé de développer une table d'encodage particulière  pour
les fontes de TeX. Cette table contient des signes  diacritiques
et un certains nombre de symboles qui permettent de composer des
textes dans un bon nombre de langues européennes.

Ce codage s'appelle T1 (parfois Cork encoding), et l'ancien
codage de TeX s'appelle OT1 (Old T1). Les autres codages (U,
etc.) concernent des polices particulières et/ou des polices qui
ne  respectent ni T1 ni OT1.

Les fontes « standard » de TeX qui respectent ce codage
s'appellent fontes EC (pour european coding, il me semble). Les
fontes DC étaient une pré-version des fontes EC. La phase de
mise au point des fontes EC ayant duré un certain nombre
d'années, on s'y perd un peu.

Les fontes TC (text companion) contiennent un certain nombre de
caractères textuels utilisés en mode mathématique. À l'origine,
Knuth prenait ces caractères dans les polices textes normales,
mais cela pose des problèmes si vous essayez d'utiliser d'autres
polices de texte. C'est pour cela qu'on préfere maintenant les
mettre à part.

Ça c'est pour les pb de codage.

Pour les pk, mf, etc. je refuse de rentrer dans les détails,
mais voici un rapide aperçu de la question :

fichiers mf -> sources metafont. À partir de la, metafont génère
les fichiers tfm et pk.

fichiers tfm -> métriques des fontes. Contient la taille des
caractères, les corrections d'espacement éventuelles, etc. TeX a
imperativement  besoin de ces fichiers pour compiler un
document.

fichiers pk -> polices au format bitmap. C'est ce qui est
utilisé pour la prévisualisation et l'impression (meme en
postscript, et ne me demandez pas pourquoi !).

fichiers vf -> vf pour Virtual Font. Les fontes virtuelles ont
été mises au point par Knuth pour permettre vous permettre
d'utiliser des fontes de provenance diverses. Les fichiers vf
sont utiles lorsque vous essayez d'utiliser des fontes
postscripts.

fichiers fd -> description des fontes. Ça, c'est en rapport avec
NFSS. Bon, là, je suis obligé de m'étendre.

NFSS, c'est la manière dont latex2e sélectionne une fonte. LaTeX
ne le faisait pas assez proprement, alors on a fait le ménage.
Un fichier .fd dit a LaTeX2e quels sont les fichiers .mf à
utiliser pour telle police, dans telle taille, dans telle
famille, avec telle variation. C'est avec ce fichier que vous
dites a latex2e de prendre la version sans serif dans tel
fichier, la taille 9pt dans tel autre, et le gras dans ce
troisième fichier.

En tout état de cause, tfm et fd sont indispensables à la bonne
marche de latex2e. Les mf sont indispensables à la creation des
tfm et despk, et les pk sont indispensables à la visualisation
et à l'impression.

# 28.2 # Quels sont les attributs d'une fonte ?
-----------------------------------------------
Une fonte possède :
+ une famille (family) qui par défaut vaut cmr
	Autre valeurs : cmtt, cmss, cmdh, cmfib.

	La famille correspond à l'allure générale de la
	fonte. cmtt pour les fontes « machines à écrire »
	cmss pour les sans serifs, cmdh et cmfib pour
	respectivement les polices dunhill et fibonacci.

+ un codage (encoding) qui par défaut vaut OT1 (cf. question
28.1)
	Autres valeurs : T1, OML, OMS, ...

+ une série (series) de valeur m par défaut
	Les autres valeurs sont obtenues par une combinaison 
	de deux attributs : 
	- un poids (qui correspond à la graisse de la fonte) :
	ul (ultral), el (extral), l (light), sl (semil), sb
	(semib), b (bold), eb (extrab), ub (ultrab), 
	- une largeur : uc (ultrac), ec (extrac), c (condensed),
	sc (semic), m (medium), sx (semix), x (expanded), ex
	(extrax), ux (ultrax).

+ une forme (shape) dont la valeur par défaut est n
	Autres valeurs : n, it, sl, sc, ui, ol

	La forme correspond aux différents variations 
	de la fonte : n pour normal, it pour italique,
	sl pour penché (slanted), sc pour les petites
	capitales (small capital).

+ une taille (size) qui vaut par défaut 10pt. Lorsque deux
valeurs sont précisées, la première correspond effectivement à
la taille de la fonte et la seconde généralement supérieure
correspond aa la taille de l'interligne.

# 28.3 # Comment utiliser une fonte ?
-------------------------------------
* Pour déclarer une fonte par défaut dans un document, il
existe les commandes \familydefault, \encodingdefault,
\seriesdefault et \shapedefault.

Exemple :
\documentclass{report}
\usepackage{french}
\pagestyle{empty}
\renewcommand{\familydefault}{cmtt}

\begin{document}
\begin{verbatim}
\renewcommand{\familydefault}{cmtt}
\end{verbatim}

dans le préambule d'un document permet de sélectionner la fonte
computer moderne de type machine à écrire pour tout le corps du
document.
\end{document}
%%%% fin exemple %%%%

* En LaTeX2e, un certain nombre de packages permettent de faire
appel à une fonte particulière.

Exemple :
\documentclass{report}
\usepackage{french}
\pagestyle{empty}
\usepackage{times}
\begin{document}
\begin{verbatim}
\usepackage{times}
\end{verbatim}

dans le préambule d'un document permet de sélectionner la fonte
 times pour tout le corps du document.
\end{document}
%%%% fin exemple %%%%

* A un niveau plus bas, dans la création d'un style par
exemple, la sélection d'une fonte peut se faire de la manière
suivante :
\fontfamily{ccr}\fontencoding{T1}\fontseries{c}\fontshape{sl}% 
\fontsize{9}{11pt}\selectfont

ou encore :

\fontsize{14}{16pt}\usefont{OT1}{cmdh}{bc}{it}

* Pour définir une commande de changement de fonte, on peut
utiliser \DeclareFixedFont.

Exemple :
\DeclareFixedFont{\petitefonte}{\familydefault}%
{\encodingdefault}{\seriesdefault}{\shapedefault}{6pt}
\newcommand{\petit}{\petitefonte}
%%%% fin exemple %%%%

# 28.4 # Comment changer la forme d'une fonte ?
-----------------------------------------------
* En LaTeX2e, pour un changement ponctuel de fonte, un certain
nombre de commandes sont disponibles par défaut : 
+ \textrm pour romain 
+ \textsf pour sans sérif
+ \texttt pour du type machine à écrire
+ \textmd pour une série moyenne
+ \textbf pour du gras
+ \textup pour des lettres droites
+ \textit pour de l'italique
+ \textsl pour des lettres penchées
+ \textsc pour des petites capitales
+ \textnormal pour la fonte par défaut du document.

Exemple :
Un \textbf{bel} arbre.
Un \textbf{\textit{très bel}} arbre.
%%%% fin exemple %%%%

* Pour changer la fonte de tout un paragraphe, on utilisera
plutôt les commandes \rmfamily, \sffamily, \ttfamily, \bfseries,
\mdseries, \itshape, \slshape, \upshape et \scshape.

Remarque : si on utilise ces commandes sur un seul mot ou sur 
	   un groupe de mot dans un paragraphe, alors l'espace
	   suivant une telle déclaration ne sera pas géré (il
	   vaut mieux dans ce cas utiliser les commandes
	   \textxx).

Exemple :
{\scshape BlaBla }
ou
\begin{itshape}
	blabla
\end{itshape}
%%%% fin exemple %%%%

# 28.5 # Comment changer la taille d'une fonte ?
------------------------------------------------
* Il existe les commandes \tiny, \scriptsize, \footnotesize,
\small, \normalsize, \large, \Large, \LARGE, \huge, \Huge,
classées dans l'ordre croissant de taille. Ces commandes sont
prédéfinies en fonction de la classe de votre document.

Remarque : Le changement de taille de la fonte entraine
automatiquement un changement de l'interligne.

* Plus globalement, vous pouvez utilisez la commande \fontsize
(cf. 28.3).

# 28.6 # Comment modifier la fonte des numéros de paragraphe ?
--------------------------------------------------------------
Pour modifier la fonte des numéros de paragraphe, il faut
redéfinir seccntformat.

Exemple (LaTeX2e) :
\makeatletter
\renewcommand\@seccntformat[1]{\texttt{\@nameuse{the#1}\quad}}
\makeatother
%%%% fin exemple %%%%

# 28.7 # Comment modifier la fonte du mode verbatim ?
-----------------------------------------------------
* Le package 'verbatim' disponible sur CTAN dans
/macros/latex/packages/tools/ permet de faire cela. Il est alors
conseillé d'utiliser des fontes aux normes T1.

* L'environnement verbatimcmd du package 'moreverb', disponible
sur CTAN dans /macros/latex/contrib/other/misc/, permet de
garder les caractères backslash (\) et les accolades ({, et })
actifs. On peut donc entre autres opérer des changements de
fonte.

* Pour changer la taille de la fonte du mode verbatim, il faut
l'encapsuler dans des commandes de modification de taille.

Exemple :
Texte avant.

\begin{small}
\begin{verbatim}
   Texte...
\end{verbatim}
\end{small}

Texte après.
%%%% fin exemple %%%%

# 28.8 # Comment réaliser des changements de fontes relatifs ?
--------------------------------------------------------------
* Le package 'relsize' disponible sur CTAN dans
/macros/latex/contrib/other/misc/ permet de faire ce genre de
chose. Les commandes offertes sont du type :

+ \relsize{n} permet d'augmenter (n positif) ou de diminuer (n
négatif) la taille de la fonte par rapport à la taille courante.

Exemple :
Un \relsize{1}texte \relsize{2}de \relsize{3}toutes
\relsize{-1}les \relsize{-4}tailles.
%%%% fin exemple %%%%

+ \smaller == \relsize{-1}

+ \larger  == \relsize{1}

+ avec un argument, on trouve :
\textsmaller{text}, \textlarger{text}, \mathsmaller{A},
\mathlarger{B}
%%%% fin exemple %%%%

* Le package 'scalefnt' de D. Carlisle disponible sur CTAN dans
//macros/latex/contrib/supported/carlisle/ permet d'augmenter
ou de diminuer suivant un facteur proportionnel, la taille de
la fonte courante.

Exemple :
\scalefont{2} double la taille de la fonte courante
\scalefont{.75} réduit de trois quarts la taille de la fonte
courante.
%%%% fin exemple %%%%

# 28.9 # Comment mettre en évidence une portion de texte ?
----------------------------------------------------------
Utiliser la commande \emph. Cette commande est définie dans la
classe de votre document, et sert spécifiquement à mettre en
évidence un mot, une expression ou toute une  phrase. La plupart
du temps, elle se contente de mettre en italique votre texte.

# 28.10 # Où trouver des fontes ?
---------------------------------
Sur CTAN bien sûr, dans /fonts/.

# 28.11 # Comment suivre le chargement des fontes ?
---------------------------------------------------
Le package 'tracefnt' permet de suivre le chargement des fontes
lors de la compilation d'un document. Ce package définit
plusieurs options :
+ infoshow pour avoir des informations sur le chargement des
polices,
+ errorshow permet de n'afficher que les erreurs,
etc.

# 28.12 # Pourquoi MakeTeXPK est lancé alors que la fonte 
---------------------------------------------------------
existe ?
--------
P. Terray :
C'est un problème de mise à jour de la base lié à kpathsea.
Normalement, MakeTeXPK met à jour la base "ls-R" de la TDS, à
chaque ajout de police. Si cette base n'est pas autorisée pour
tout le monde, ou si la variable TEXMF est mal réglée, dvips ou
xdvi ne peuvent pas vérifier que cette police existe. Du coup,
ils lancent MakeTeXPK pour la fabriquer. Et MakeTeXPK sachant
par ailleurs où mettre la police, il vérifie qu'elle existe, et
c'est pour ça qu'il donne le message comme quoi elle existe
déjà.

Les solutions (UNIX) :
- vérifier que $TEXMF est bien réglée
- ls-R, fichier qui se trouve dans le répertoire texmf, doit
être autorisé en lecture écriture pour tout le monde
- reconstruire la base ls-R avec la commande texhash (tout
court). 

ATTENTION : il faut avoir les droits de gestionnaire
LaTeX (ou root) pour executer texhash.

# 28.13 # Comment utiliser \textsc dans un titre en conservant
--------------------------------------------------------------
le gras ?
---------
Remarque : les sc grasses n'existent pas dans les fontes de
	   Knuth. En revanche, elles existent dans les fontes 
	   EC mais pas directement.

Pour les générer, C. Souche, suggère (en gros) de définir
la commande \scgras :
\newcommand\scgras[1]{{%
   \usefont{T1}{cmr2}{bx}{sc} #1}}

Il faut auparavant avoir créé le fichier t1cmr2.fd (ou
T1cmr2.fd, ça dépend de la version de LaTeX) dans un répertoire
connu de LaTeX 

%%%% debut macro %%%%
%% This is file `t1cmr2.fd',
%% Fabrication maison pour les petites caps bold et italiques
%% Merci a Cecile Souche
\ProvidesFile{t1cmr2.fd}
\providecommand{\EC@family}[5]{%
  \DeclareFontShape{#1}{#2}{#3}{#4}
  {<5><6><7><8><9><10><10.95><12><14.4>
   <17.28><20.74><24.88> genb * #5}{}}
\DeclareFontFamily{T1}{cmr2}{}
\EC@family{T1}{cmr2}{bx}{sc}    {ecxc}
\EC@family{T1}{cmr2}{m}{scsl}   {ecsc}
\EC@family{T1}{cmr2}{bx}{scsl}  {ecoc}
\EC@family{T1}{cmr2}{m}{it}     {ecci}
\endinput
%%
%% End of file `t1cmr2.fd'.
%%%% fin macro %%%%

Exemple d'utilisation (D. Barbier) :
\documentclass[12pt]{book}
\usepackage[T1]{fontenc}
\usepackage{relsize} % Pour pouvoir avoir des tailles relatives

\makeatletter
\DeclareRobustCommand{\montextsc}[1]{%
   \ifmmode \mathsmaller{\uppercase{#1}}% En mode math c'est OK
   \else
      \ifx\f@series\bfdefault  %  Mais à partir d'ici, ça coince ???
        \textsmaller{\textsmaller{\uppercase{#1}}}%
      \else
        \ifx\f@series\sldefault
          \textsmaller{\textsmaller{\uppercase{#1}}}%
        \else
          {\fontfamily{cmr2}\selectfont\scshape #1}%
        \fi
      \fi
   \fi}
\makeatother

\begin{document}
\section{\montextsc{toTo}TOTO}
\montextsc{Toto} \textbf{jfdkg\montextsc{macHine}}
\textsf{ERT\montextsc{eRt}}
$\montextsc{dFg}jdfkg$
\end{document}
%%%% fin exemple %%%%

================================================================
[29] DIVERS
================================================================

# 29.1 # A quoi sert la commande \par ?
---------------------------------------
Elle permet de marquer explicitement la fin d'un paragraphe pour
permettre à \LaTeX\ de le mettre en page. L'utilité de cette
commande se justifie par le fait que \LaTeX\ met en page un texte
par paragraphe. Elle est, le plus souvent, utilisée dans la
définition de macros.

# 29.2 # Comment commenter une partie d'un source \LaTeX\ ?
---------------------------------------------------------
* Sous \LaTeX2.09, il suffit d'utiliser l'environnement
comment du package 'version'. 

Exemple :
Un paragraphe qui intéresse tout le monde et qui est donc
visible par tout le monde.

\begin{comment}
   Un paragraphe qui n'intéresse que moi et qui n'est visible
   que dans le source de mon document.
\end{comment}

Un autre paragraphe qui intéresse tout le monde.
%%%% fin exemple %%%%

* Un environnement comment est également défini dans le package
'verbatim' compatible LaTeX2.09 et LaTeX2e.

* Il est également possible de mettre des parties d'un document
source en commentaire grâce à l'environnement comment défini
dans le package 'comment' de V. Eijkhout. Ce package est 
disponible sur CTAN dans /macros/latex209/contrib/misc/. 

* Sous emacs, il y a une commande `comment-region' qui fait ça
très bien. Avec un argument, elle décommente.

# 29.3 # Comment utiliser LaTeX sur des petites machines ?
----------------------------------------------------------
La capacité de TeX est limitée de manière interne. Cela signifie
que ce sont des variables de TeX qui fixent le nombre de
variables (et la taille mémoire) maximal que TeX s'autorisera à
utiliser. Si vous utilisez plus de variables que prévu, TeX
s'arrètera sur le message d'erreur :
   
   sorry, TeX capacity exceeded.

Tout ceci est destiné à << préserver >> votre machine, c'est à
dire à empêcher TeX d'utiliser la totalité de la mémoire de
la machine, ce qui conduit la plupart du temps à un plantage.

Sur une station, aucun problème, mais sur un micro-ordinateur,
les configurations peuvent-être nombreuses. C'est pourquoi le
TeX fournit en << standard >> sur les macs, par exemple, a ces
variables fixées assez bas (on suppose que le Mac a une toute
petite mémoire comparée à une station). Mais il existe
également un BigTeX, dont la seule différence avec le TeX
normal est qu'il est autorisé à utiliser plus de mémoire (les
variables en questions ont des valeurs plus importantes).

Du coup, si votre micro a une configuration plutôt musclée, vous
pouvez compiler des documents plus gros, plus complexes, etc...

Heureusement Kiffe a changé de stratégie et dans les futures
versions des outils les paramètres internes seront
configurables (en passant par ResEdit) et donc on décidera
soi-même la << bigness >> de son TeX (cf. distributions emTeX
et AsTeX). Pour changer les paramètres de compilation (pool size,
stack, font mem, main mem etc.) cf. fichier
emtex/doc/english/tex.doc, chapitre 6.

La  version 7.0 de web2c est configurable par le fichier
texmf.cnf.

Remarque : pour un gros document, il peut être utile de le
	   découper en chapitres à inclure par la commande 
	   \include (cf. paragraphe 9.2 ).

# 29.4 # Comment visualiser des paramètres ?
--------------------------------------------
Pour visualiser des paramètres spécifiques, il existe :
* \showt\baselinestretch  (n'importe où ou presque, donc
affichage des éventuelles modifs, locales ou globales). Ou
pour avoir le résultat à la volée :
\message{Valeur de /baselinestretch = \the\baselinestretch}

* Il existe aussi la commande \showthe. Celle ci affiche les
paramètres demandés dans le log. En outre, pendant la
compilation, elle affiche la valeur demandée puis met LaTeX en
attente. Il faut alors taper s ou <RC> pour continuer.

Exemple :
\documentclass{report}
\usepackage{french}
\pagestyle{empty}
\begin{document}
Texte.
\showthe\baselineskip
Texte. 
\end{document}
%%%% fin exemple %%%%

* Pour afficher une valeur à l'écran lors de la compilation, il
faut utiliser : \message{** Textwidth = \the\textwidth **}. Le
message s'insère alors milieu des milliers d'autres choses que
latex affiche : bien surveiller !

* Il existe également le package 'showkeys' disponible sur CTAN
dans macros/latex/package/tools/. Il modifie les commandes
\label, \ref, \pageref, \cite et \bibitem de manière à
visualiser les paramètres internes utilisés.

* Pour visualiser les paramètres d'une page, il faut utiliser la
commande \layout du package 'layout'. Ce dernier est disponible
sur CTAN dans /macros/latex/packages/tools/.

* Pour visualiser des labels, il existe le package 'showlabels'
disponible sur CTAN dans
/macros/latex/contrib/supported/showlabels/. Les noms des labels
utilisés par \label ou par la numérotation automatique des
équations apparaîtront dans la marge du document. Ce package ne
définit pas de commande particulière, il suffit d'appeler
\usepackage{showlabels} dans le préambule du document. Dans le
cas où des packages AMS sont utilisés, showlabels doit être
appelé après. Les options [inner] ou [outer] ou [twocolumn]
permettent de définir dans quelle marge vont apparaître les
labels. 

Remarque : ce package n'est pas compatible avec les styles
	   multicolonnes ni avec l'option leqno.

# 29.5 # Comment visualiser des compteurs ?
--------------------------------------------
Pour visualiser la valeur d'un compteur, il suffit de demander
\immediate\write{16}{\the\nomducompteur}
ou
\message{\the\nomducompteur}

# 29.6 # A quoi servent \makeatletter et \makeatother ?
-------------------------------------------------------
Le caractère "@" est spécial pour LaTeX, et ne peut pas être
utilisé directement comme partie d'un nom de macro dans un
document LaTeX. Pour utiliser certaines macros internes de LaTeX
(celles qui contiennent un "@"), directement dans un document
(au lieu d'utiliser un fichier .sty), il faut les encapsuler
dans une macro dont le nom ne contient pas de "@". En outre,
cette macro doit impérativement être déclarée dans le
préambule du document, et être encadrée par les commandes
\makeatletter et \makeatother.

En fait ces commandes permettent d'indiquer à LaTeX que l'on
veut effectivement travailler sur ses commandes internes  en le
forçant à considérer le "@" (at) comme une lettre
(makeatletter).

ATTENTION : les commandes internes de LaTeX sont à manipuler
	    avec précaution.

# 29.7 # Comment numéroter les lignes d'un document ?
-----------------------------------------------------
* Le package 'lineno' disponible sur CTAN dans
/macros/latex/contrib/supported/lineno/ permet de numéroter les
lignes d'un document.

* Il existe également le package 'numline' de M. Jaegermann et
J. Fortune, pour du texte essentiellement. Ce package  est
disponible sur CTAN dans
/macros/latex/contrib/supported/numline/.

* Pour numéroter les lignes d'un document inclu en mode
verbatim, il faut utiliser la commande \listinginput du package
'moreverb' disponible sur CTAN dans
/macros/latex/contrib/supported/moreverb/.

* Le package 'vruler' disponible sur CTAN dans
/macros/latex/contrib/supported/vrsion/ permet également de
numéroter les lignes d'un document.

# 29.8 # A quoi sert la commande \special ?
-------------------------------------------
La commande \special permet à TeX d'envoyer des instructions
particulières (non TeX) à un driver sans les interpréter. Les
instructions ainsi passées sont généralement dépendantes du
driver qui lui, saura les interprèter. L'utilisateur n'a en
général pas à se soucier de cette commande (\special), elle est
gérée par des packages tels que 'psfig' pour LaTeX2.09 ou
'graphics' et 'graphicx' pour LaTeX2e.

Remarque : \includegraphics est standard dans latex2e et
	   indépendant de la plateforme alors que le format de 
	   \special est dramatiquement dépendant de la
	   plateforme de travail. Seul, le \includegraphics
	   préserve l'aspect universel d'un document source et
	   donc l'esprit universel de Tex.

# 29.9 # Comment réaliser des calculs avec les variables LaTeX ?
----------------------------------------------------------------
* Pour pouvoir utiliser des expressions du type \truc * \machin
dans une macro, il faut charger le package 'calc' disponible sur
CTAN dans /macros/latex/contrib/supported/calc/.

Exemple :
\setcounter{x}{3*\real{1.3}}
%%%% fin exemple %%%%

* Une autre solution consiste à utiliser les commandes
\addtolength\dim\dim, \divide \dim by \dim, etc.

* Le package 'realcalc' disponible sur CTAN dans
/macros/generic/realcalc/ permet de faire des calculs sur des
réels.

* Plus difficile à utiliser, il y a aussi le package 'trig'.

# 29.10 # Où trouver une fonte 9pt ?
------------------------------------
* La classe de document 'amsart' disponible sur CTAN offre
l'option 9pt.

* De même les classes 'extarticle' et 'extreport' sont
disponibles à
http://www.informatik.uni-freiburg.de/~may/extsizes.html. 

* size9.clo de H. Steffani est disponible à 
http://www.tu-chemnitz.de/~hfst/size9.clo.

# 29.11 # Comment automatiser les compilations LaTeX ?
------------------------------------------------------
* latexmk est un script perl, disponible sur CTAN dans
/support/latexmk/, qui automatise la compilation d'un document
LaTeX. Il tourne en démon et relance une compilation à
chaque fois qu'un fichier source (.tex, .bib, \input, etc) est
sauvegardé. "latexmk fichier" lance latex/makeindex/bibtex autant
de fois qu'il le faut pour que le dvi soit à jour.

* latexn disponible sur CTAN dans support/latexn/ est un script
csh qui permet également d'automatiser les compilations latex.

* Le package AUC-TeX sous emacs conseille l'utilisateur sur la
prochaine opération à effectuer (latex, bibtex, makeindex, xdvi,
etc.), en fonction des dépendances entre les différents
fichiers.

# 29.12 # Comment obtenir des cadres gris ?
-------------------------------------------
* Le package 'shade' disponible sur CTAN dans /macro/generic/
permet de tracer des cadres gris.

* Le package 'psboxit', disponible sur CTAN dans
/macros/latex2.09/contrib/misc/, permet d'obtenir du gris ou de
la couleur.

# 29.13 # Comment obtenir certaines abbréviations ?
---------------------------------------------------
* Pour obtenir des abbréviations dont certaines lettres doivent
être rehaussées et de taille réduite, on peut utiliser les
indices mathématiques. Mais, ce n'est pas une technique
recommandable.

Exemple :
M$^{\mathrm{lle}}$
%%%% fin exemple %%%%

* Le package 'babel' propose la commande \ieme pour les
quantièmes.

* Le package 'french' de B. Gaulle, définit la commande \fup
pour écrire une chaîne de caractères en exposant, ainsi que les
commandes \ier \iers \iere \iere \ieme \iemes pour les
quantièmes.

Exemple :
M\fup{lle}
%%%% fin exemple %%%%

Remarque : pour que la commande \fup suive les changements de
	   taille de fonte, il faut utiliser l'une des extensions
	   prévues à cet effet, à savoir les extensions
	   "smaller" et "relsize" (\usepackage{smaller,french}
	   par exemple). Une copie de l'extension smaller est
	   distribuée depuis 94 avec la distribution des
	   fichiers du style french (sous le nom mysmall.sty).
	   En revanche, la surélévation ne tient pas compte de
	   l'inclinaison de la police.

* Le package 'smaller' de D. Taupin est disponible par ftp à
ftp.lps.u-psud.fr dans /pub/latex/contrib/smaller.sty. Il
propose également une commande \fup qui définit smaller et
l@rger pour être compris par french.sty. Cette commande gère
l'inclinaison des \sl et des \it.

ATTENTION : le fup de B. Gaulle étant installé au
	    \begin{document}, pour utiliser mon \fup modifié 
	    avec french.sty, il faut après le \begin{document}
	    écrire:
	    \makeatletter
	    \let\fup\f@up
	    \makeatother
	    
* On peut également définir une nouvelle commande \abbr dans le
préambule du document :
\newcommand{\abbr}[1]{\raisebox{1ex}{\footnotesize #1}}
Cette solution a l'avantage d'éviter d'utiliser le mode
mathématique improprement.

* Il existe aussi la commande \textsuperscript qui permet
d'obtenir un exposant sans passer en mode mathématique.

# 29.14 # Comment gérer les espaces après une macro ?
-----------------------------------------------------
* Pour forcer LaTeX à introduire un espace après une macro il
suffit de faire suivre son appel d'un backslash (\).

Exemple :
texte \oe\ texte \oe, texte

texte \oe texte \oe, texte
%%%% fin exemple %%%%

* Pour que LaTeX gère lui même les espaces, il suffit d'utiliser
systématiquement les caractères {}.

Exemple :
texte \oe{} texte \oe{}, texte \oe{}uf
%%%% fin exemple %%%%

* On peut également définir une macro TeX \keepspace :
%%%% debut macro %%%%
\def\keepspace{\ifnum\catcode`\ =10
  \let\next\keepspacebis \else \let\next\relax \fi
  \next}
\def \keepspacebis{\obeyspaces
  \afterassignment\keepspaceaux\let\next= }
{\obeyspaces%
\gdef\keepspaceaux{%
\ifx \next\space\let\next\ignorespaces\fi%
\catcode`\  =10\relax\next}}
%%%%
%%%% fin macro %%%%
puis l'utiliser dans une autre définition  de macro.

Exemple :
\newcommand{\macro}{\textit{blablabla}\keepspace}
%%%% fin exemple %%%%

* Le package 'xspace' intègre ces définitions qui lui permette
de gérer automatiquement l'espace après une macro suivant le
contexte.

Exemple :
\documentclass{report}
\usepackage{french,xspace}
\pagestyle{empty}

\newcommand{\macro}{aaaaa\xspace}

\begin{document}
\macro bbbb \macro, bbbb
\end{document}
%%%% fin exemple %%%%

Remarque : à noter que le package xspace est conforme aux règles
	   de typographie anglo-saxones donc la gestion des 
	   caractères de ponctuation composés tels que : où ; ne
	   sera pas correcte en français. La solution consiste
	   alors à utiliser le blanc insécable qui de toutes
	   façons est recommandé dans ce cas : \macro~: blabla.
	   On peut également se créer son propre package
	   'fxspace'.

# 29.15 # Où trouver les notices d'utilisation des packages ?
-------------------------------------------------------------
Généralement la notice d'utilisation d'un package est incluse
dans le package lui même (fichier .dtx). Il suffit alors de
compiler ce fichier. Il existe également le fichier doc
disponible sur CTAN dans /macros/latex/base/ qui décrit comment
exploiter ces notices.

Si on lance "latex package.dtx" il sera produit le fichier
package.sty ou package.cls correspondant et le fichier
package.dvi de documentation de l'extension.

# 29.16 # Comment obtenir des listes d'objets flottants ?
---------------------------------------------------------
Certaines sont disponibles par défaut, il s'agit des listes de
figures et de tables, il suffit alors d'appeler les commandes 
\listoffigures et \listoftables. D'autres sont liées à certains
packages. Par exemple, le package 'algorithms' de P. Williams
offre la commande \listofalgorithms.

Remarque : la mise à jour de ces listes nécessite généralement
	   plusieurs compilations LaTeX.

Exemple :
\documentclass{report}
\usepackage{algorithm,algorithmic}

\begin{document}

\listofalgorithms

\chapter{toto}

\begin{algorithm}[h!tp]
   \begin{algorithmic}[2]
      \REQUIRE $T_1$ et $T_2$ doivent \^etre des tableaux de
      valeurs additionnables, et doivent \^etre de la m\^eme
      longueur $n$. \ENSURE $\forall 0\leq k< n \;\;
      Result[k]=T_1[k]+T_2[k]$.
      \FOR{$i\rightarrow 0$ to $n$}
      \STATE $Result[i]\rightarrow T_1[i]+T_2[i]$
      \ENDFOR
   \end{algorithmic}
   \caption{Somme terme \`a terme de deux tableaux3}
   \label{algo-ex-3}
\end{algorithm}
[recopie en trois exemplaires]
\end{document}
%%%% fin exemple %%%%

# 29.17 # Comment connaître les versions des fichiers utilisés
--------------------------------------------------------------
lors d'une compilation ?
------------------------
Il suffit d'utiliser la commande \listfiles.

Exemple :
\documentclass{report}
\listfiles
\usepackage{french}
\usepackage{graphics}

\begin{document}
   texte  ...
\end{document}
%%%% fin exemple %%%%

# 29.18 # Pourquoi certaines commandes sont elles indépendantes ?
-----------------------------------------------------------------
Les commandes LaTeX de type verbatim sont particulières du fait
qu'elles changent les codes de catégorie de leurs arguments. De
ce fait, elles ne sont plus compatibles avec d'autres commandes
et ne doivent pas être appelées par ces dernières. Certains
caractères spéciaux doivent alors être obtenus par \texttt.

Exemple :
\texttt{\char`\\}
%%%% fin exemple %%%%

On peut également utiliser l'environement lrbox de LaTeX2e pour
sauver le texte qui doit apparaître en verbatim dans une boîte 
et ensuite utiliser cette boîte.

# 29.19 # Comment installer un package ?
----------------------------------------
Lorsqu'il s'agit d'un package conçu pour LaTeX2e et utilisant
les procédures et outils définis dans ce cadre, c'est simple :
un package est fourni avec deux (ou plus, pour les packages plus
complexes) fichiers, package.ins et package.dtx

Il faut commencer par exécuter "latex package.ins" pour créer
le(s) fichier(s) de commandes lui(eux)-même(s) (typiquement
package.sty) puis "latex package.dtx" pour générer la
documentation, avec si besoin construction d'un index :
makeindex -s gind.ist -o package.ind package.idx, et d'un
glossaire : makeindex -s gglo.ist -o package.gls package.glo. 

Ces fichiers doivent ensuite être déclarés dans une variable
d'environnement afin d'être rendus visibles. 

Exemple (UNIX) :
TEXINPUTS=.:/usr/local/TEX/texmf/tex:/users/ADMIN/NG/LATEX:
/users/home/kluth/Section-equit/Modele
%%%% fin exemple %%%%

Remarques :
* on ne peut évidemment générer la documentation en premier,
parce qu'elle aura toujours besoin du fichiers des commandes ; 
* si l'on ne veut obtenir que la documentation <<utilisateur>>,
il faut ajouter la ligne "\OnlyDescription" dans le fichier
package.dtx, avant la ligne "\DocInput{package.dtx}". Sinon on
obtient aussi le listage commenté du code, ce dont on peut ne
pas vouloir se soucier et qui peut être volumineux pour les
packages importants.

Néanmoins, il est clair que ce mode d'organisation et de
distribution n'est que le mode encouragé par l'équipe de
développement de LaTeX et n'est en rien une obligation. Un bon
nombre de packages disponibles ne le suit d'ailleurs pas (!),
pour diverses raisons (packages qui se veulent utilisables aussi
bien avec Plain TeX qu'avec LaTeX, << vieux >> packages écrits
pour LaTeX209, packages écrits par des personnes qui veulent
faire << comme ça leur plait >>, etc.)... Dans ces différents
cas, il faut << aller y voir de plus près >> pour comprendre
l'organisation choisie.

C'est justement le cas pour slashbox (!) : un seul fichier .sty
est fourni. Il faut l'éditer pour extraire le fichier de
documentation qui se trouve après la ligne 80 "\endinput".

# 29.20 # Comment générer des codes barres ?
--------------------------------------------
* Il existe les packages 'ean' et 'code128' disponibles sur CTAN
dans /macros/generic/ean/ et /macros/generic/code128/.

* De même les packages 'envelopes' et 'labels' sont disponibles
sur CTAN dans /macros/latex/contrib/supported/envlab/.

* On peut également trouver le package 'barcodes' sur CTAN dans
/fonts/barcodes/.

# 29.21 # Comment gérer des abbréviations ?
-------------------------------------------
* Le package 'abbrevs' disponible sur CTAN dans
/macros/latex/contrib/supported/monster/ permet automatiquement
de remplacer des abbréviations par leur formule développée
notamment lors d'un premier appel.

* Le package 'acronym' disponible sur CTAN dans
/macros/latex/contrib/supported/acronym/ permet de s'assurer que
tous les acronymes utilisés dans un document apparaîssent au
moins une fois sous une forme développée.

# 29.22 # Comment imprimer un fichier postscript sur une
--------------------------------------------------------
imprimante non postscript ?
---------------------------
alladin est un excellent programme qui permet d'imprimer du
postscript sur à peu près n'importe quelle imprimante. Cet outil
est disponible par ftp à ftp.ibp.fr dans /pub/ghost/aladdin/.

Remarque : on ne peut pas dire que ce soit d'une très grande
	   facilité d'installation, mais une fois que ce mauvais
	   moment est passé, on ne peut plus s'en passer :-)

# 29.23 # Comment surcharger une commande déjà existante ?
----------------------------------------------------------
* Pour pouvoir ajouter des définitions sur une commande
prédéfinie sans la réécrire complètement, il faut utiliser la
commande \let.

Exemple :
\let\standardsection=\section
\def\section{\newpage\standardsection}
%%%% fin exemple %%%%

* Il existe aussi la commande expandafter.

Exemples :
\toks0 \expandafter{\section}
\edef\section{\noexpand\newpage\the\toks0 }

\expandafter\def\expandafter\section\expandafter{\expandafter%
\newpage\section}
%%%% fin exemple %%%%

* Le package 'babel' propose également la commande \addto.

# 29.24 # Comment reporter l'exécution d'une commande à la fin
--------------------------------------------------------------
d'une page ?
------------
Il existe pour cela le package 'afterpage' disponible sur CTAN
dans /macros/latex/packages/tools/.

Exemple :
\afterpage{\clearpage}
%%%% fin exemple %%%%

# 29.25 # Comment définir des scripts interactifs ?
---------------------------------------------------
Le package 'dialogl' disponible sur CTAN dans
/macros/latex/contrib/supported/dialogl/ permet de définir des
scripts LaTeX interactifs.

# 29.26 # Comment identifier une version provisoire ?
-----------------------------------------------------
* Le package 'draftcopy' disponible sur CTAN dans
/macros/latex/contrib/supported/draftcopy/ permet par exemple
d'écrire le mot DRAFT en grisé en diagonale sur toutes ou
certaines pages d'un document. Il permet également de faire
moins voyant.

Exemple :
\documentclass{report}
\usepackage{french}
\usepackage{draftcopy}
\begin{document}
Voici une version provisoire de mon texte. Pourriez vous la
relire et me faire part de vos commentaires avant la fin de
la semaine.

Merci d'avance.

\paragraph{Proposition.}
Texte provisoire -- Texte provisoire -- Texte provisoire --
Texte provisoire -- Texte provisoire -- Texte provisoire --
Texte provisoire -- Texte provisoire -- Texte provisoire --
Texte provisoire -- Texte provisoire -- Texte provisoire --
Texte provisoire -- Texte provisoire -- Texte provisoire --
Texte provisoire -- Texte provisoire -- Texte provisoire --
Texte provisoire -- Texte provisoire -- Texte provisoire --
Texte provisoire -- Texte provisoire -- Texte provisoire --
Texte provisoire -- Texte provisoire -- Texte provisoire

\end{document}
%%%% fin exemple %%%%

* Le package 'drafthead' également disponible sur CTAN dans
/macros/latex209/contrib/misc/ permet lui de n'agir que sur les
en-têtes des documents.

* On peut également utiliser la macro :
%%%% debut macro %%%%
\special{
! userdict begin /bop-hook{
stroke
gsave 240 100 translate
65 rotate /Times-Roman findfont 220 scalefont setfont
0 0 moveto 0.9 setgray (DRAFT) show grestore
}def end}
dans le préambule de son document.
%%%% fin macro %%%%

* Le package 'prelim2e' disponible sur CTAN dans
/macros/latex/contrib/supported/prelim2e/ offre également un
marquage des versions preliminaires d'un document.

# 29.27 # Comment obtenir des caractères barrés ?
-------------------------------------------------
* Le package 'ulem' disponible sur CTAN dans
/macros/latex/contrib/other/misc/ permet de
barrer des caractères.

Exemple :
\sout{je barre tout}
%%%% fin exemple %%%%

# 29.28 # A quoi sert la commande \ensuremath ?
-----------------------------------------------
La commande \ensuremath assure que son argument sera imprimé en
mode mathématique quel que soit le mode courant.

Exemple :
\documentclass{report}
\usepackage{french}
\pagestyle{empty}
\newcommand{\mc}{\ensuremath{(\alpha, \beta)}}
\begin{document}
Le couple \mc\ définit par $\mc = x+y, x-y$, ...
\end{document}
%%%% fin exemple %%%%

# 29.29 # A quoi servent les commandes \(re)newcommand ?
--------------------------------------------------------
La commande \newcommand permet à l'utilisateur de définir ses
propres commandes. La commande \renewcommand permet de
redéfinir des commandes LaTeX déjà existantes. Elle s'utilise
dans le préambule du document :
	\newcommand{nom_commande}[nb_arguments]{définition}
nb_arguments définit le nombre d'arguments de la nouvelle
commande LaTeX. Il est compris entre 0 et 9. Ils sont
référencés par #no_argument dans la définition.

Exemple :
\documentclass{report}
\usepackage{french}
\pagestyle{empty}
\newcommand{\be}{\begin{enumerate}}
\newcommand{\ee}{\end{enumerate}}
\newcommand{\bold}[1]{\textbf{#1}}
\begin{document}
\bold{Faites votre choix~:}
\be
\item premier choix~: A
\item deuxième choix~: B
\item troisième choix~: C
\ee
\end{document}
%%%% fin exemple %%%%

Remarques : La commande \providecommand permet de ne prendre en
	    compte la nouvelle commande que si elle n'existe pas
	    déjà.
	    
	    Pour définir un argument optionnel, on utilise la
	    syntaxe :
	    	\newcommand{nom}[nb_arg][defaut]{definition}
	    defaut permet de préciser une valeur par défaut de
	    la variable qui sera utilisée en l'absence
	    d'argument. L'argument optionnel ne peut être que
	    #1.

# 29.30 # Où trouver des hirondelles ?
--------------------------------------
On peut trouver la package 'cropmark' sur CTAN dans
/macros/generic/.

# 29.31 # Comment tracer des lignes ?
-------------------------------------
* On peut mettre la définition suivante dans le préambule du
document :
\def\ligne#1{\leaders\hrule height #1\linethickness \hfill}
puis utiliser :
\ligne{5}
dans le texte.

* Il existe également la commande \rule qui prend en premier
argument, la longueur horizontale du trait et, en deuxième, son
épaisseur. Elle possède également un argument optionnel qui
permet de positionner la ligne traçée par rapport à la ligne
d'écriture.

Exemple :
\rule[0.5ex]{\textwidth}{0.1mm}
%%%% fin exemple %%%%

* On peut aussi utiliser les commandes \hrule pour des lignes
horizontales et \vrule pour des lignes verticales.

# 29.32 # Comment imprimer le caractère ~ ?
-------------------------------------------
* LaTeX2e fournit la commande \textasciitilde sous fonte T1.
Sous OT1, il faut définir
\ProvideTextCommand{\textasciitilde}{OT1}{\~{}}.

* Il est possible de passer par le mode verbatim via la commande
\verb$~$.

* On peut aussi définir sa propre commande :
\def\mytilde{\raisebox{-.8ex}{\~~}\hspace{-0.15em}}

* \~{} permet également d'obtenir un tilde.

* Une autre solution consiste à utiliser $\sim$.

* Autre solution, utiliser : \char`\~

Remarque : la première solution est de loin la meilleure.

# 29.33 # Comment visualiser tous les caractères d'une fonte ?
--------------------------------------------------------------
Le plus simple consiste à utiliser :
latex nfssfont
nfssfont.tex est un fichier disponible sur CTAN.

Il faut ensuite donner le nom de la fonte à examiner par
exemple cmr10 puis construire la table des caractères en
utilisant la commande \table. Cela permet de construire un
fichier .dvi contenant les codes de tous les caractères.

L'appel d'un symbole se fait alors via la commande \symbol{x} où
x est le code associé au caractère voulu (c'est un entier
compris entre 0 et 255).

On peut également utiliser \char"<octal> ou \char^^<hexa>
ou encore \char<decimal> mais ses commandes sont moins robustes.

# 29.34 # A quoi sert % dans les macros ?
-----------------------------------------
Le % en fin de ligne d'une macro permet d'indiquer à latex que
la définition qu'il est en train de lire continue à la ligne
suivante. De manière générale, les espaces après une macro sont
ignorés, mais pas après les accolades. Ce caractère permet de
s'assurer que des espaces non voulus ne seront pas pris en
compte. Ainsi, il est prudent de mettre un % après chaque
accolade qui se trouve en fin de ligne. 

# 29.35 # Comment inclure l'heure dans un document ?
----------------------------------------------------
* La macro décrite ci-dessous, à inclure dans le préambule de
votre document, définit la commande \timenow :

%%%% debut macro %%%%
\makeatletter
\def\timenow{\@tempcnta\time
  \@tempcntb\@tempcnta
  \divide\@tempcntb60
  \ifnum10>\@tempcntb0\fi\number\@tempcntb
  \multiply\@tempcntb60
  \advance\@tempcnta-\@tempcntb
  :\ifnum10>\@tempcnta0\fi\number\@tempcnta}
\makeatother
%%%% fin macro %%%%

* Le package 'time' disponible sur CTAN dans
/macros/generic/time.sty permet d'inclure l'heure courante dans
un document.

* En ajoutant la macro suivante de H. Hanche-Olsen dans le
préambule de son document, on peut via la commande
%%%% debut macro %%%%
\isodayandtime obtenir la date et l'heure courante :
\begingroup
\count0=\time \divide\count0by60 % Hour
\count2=\count0 \multiply\count2by-60 \advance\count2by\time 
% Min
\def\2#1{\ifnum#1<10 0\fi\the#1}
\xdef\isodayandtime{\the\year-\2\month-\2\day\space\2{\count0}:%
\2{\count2}}
\endgroup
%%%% fin macro %%%%

Autre exemple d'utilisation (qui nécessite dvips) :
%%%% debut macro %%%%
\special{!userdict begin /bop-hook
 {gsave -90 rotate -780 560 moveto 1.0 0.7 0.7 setrgbcolor 
 % 0.8 setgray 
 106 45 {dup mul exch dup mul add 1.0 exch sub} setscreen
 /Times-Roman findfont 25 scalefont setfont (DRAFT
 \isodayandtime)  show grestore} def}
%%%% fin macro %%%%

* On peut également utiliser la macro \time qui donne l'heure
en minutes. Pour afficher l'heure en heures et minutes, il faut
les calculer puis les afficher avec la macro \the.

Exemple 1 :
\documentclass{article}
\usepackage{french}
\pagestyle{empty}
\begin{document}
Cette compilation a démarré à \the\time\ minutes après minuit
le \today.
\end{document}
%%%% fin exemple %%%%

Exemple 2 :
\usepackage{calc}
\newcounter{hours}\newcounter{minutes}
\newcommand{\printtime}{%
  \setcounter{hours}{\time/60}%
  \setcounter{minutes}{\time-\value{hours}*60}%
  \thehours :\theminutes}
%%%% fin exemple %%%%

* Il existe également le package 'heure' de T. Bouche donné
ci-dessous : 
%%%% debut macro %%%%
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{heure}
[1996/6/11v0.1 affiche le jour et l'heure de production d'un
document] 
\newif\if@heure@fin\@heure@finfalse
\newif\if@heure@final\@heure@finalfalse
\DeclareOption{fin}{\@heure@fintrue}
\DeclareOption{final}{\@heure@finaltrue}
\DeclareOption{draft}{}
\ProcessOptions
%%% définition de hours prise dans testfont
\newcount\m \newcount\n 
\def\hours{\n=\time \divide\n 60
  \m=-\n \multiply\m 60 \advance\m \time
  \twodigits\n\ :\ \twodigits\m}
\def\twodigits#1{\ifnum #1<10 0\fi \number#1}
%%%%%%% Tant que ça n'est pas définitif.
\if@heure@final\else
\AtBeginDocument{\begin{center}%
  {\bfseries\itshape\large Version du \today\ à \hours }%
\end{center}}
\fi
\if@heure@fin
\AtEndDocument{%
  \begin{flushright}%
    \small \itshape (Le  \today\ à \hours )\hspace*{3em}%
  \end{flushright}}
\fi
\endinput
%%%% fin macro %%%%

Utilisation :
Il suffit de passer fin, final ou draft en option de classe.

Exemple 1 :
\documentclass[11pt,draft]{article}
\usepackage{heure}

\begin{document}
Voici le résumé de notre expérience avec le Brome~:

Bla bla bla.
\end{document}
%%%% fin exemple %%%%

Exemple 2 :
\documentclass[11pt,fin]{article}
\usepackage{heure}

\begin{document}
Voici le résumé de notre expérience avec le Brome~:

Bla bla bla.
\end{document}
%%%% fin exemple %%%%

Exemple 3 :
\documentclass[11pt,final]{article}
\usepackage{heure}

\begin{document}
Voici le résumé de notre expérience avec le Brome~:

Bla bla bla.
\end{document}
%%%% fin exemple %%%%

# 29.36 # Comment compter le nombre de mots d'un fichier ?
----------------------------------------------------------
A priori, il n'y a pas de solution simple à ce problème :
* A partir du fichier source .tex, il faut enlever toutes les
commandes LaTeX avec un utilitaire tel que detex (disponible sur
CTAN dans /support/detex/) puis utiliser un autre utilitaire tel
que wc sous UNIX.

* On peut également travailler à partir du fichier .dvi en
appliquant dvitty (ou dvi2tty).

ATTENTION : aucune de ces méthodes n'est idéale comme l'indique
	    l'essai comparatif de T. Bouche :
	    	detex -i grfguide.tex | wc -w	donne 4420
	    	dvitty grfguide.dvi |wc -w	donne 4524
	    	wc -w grfguide.tex		donne 4539 
	    	ps2ascii grfguide.ps |wc -w	donne 5066

# 29.37 # Comment rendre inactif un caractère ?
-----------------------------------------------
La commande \string permet de désactiver un caractère rendu
actif par une macro.

Exemple :
En français le : est rendu actif pour que LaTeX gère lui même
l'espace à mettre avant. En revanche, dans une URL ou une
adresse mail cet espace est superflu. On utilise donc :
mailto\string:moi.meme@chez.mon.site
%%%% fin exemple %%%%

# 29.38 # Comment utiliser le mode verbatim dans une commande ?
---------------------------------------------------------------
LaTeX2e fournit l'environnement lrbox. 

Exemple :
\documentclass{article}
\usepackage{alltt}
\pagestyle{empty}

% ---------------
\newsavebox{\inverbatim}
\begin{lrbox}{\inverbatim}%
\noindent\begin{minipage}{\linewidth}
\begin{alltt}
                           1
 -8 + 7 Sqrt[2] ArcTanh[-------]
                        Sqrt[2]
\end{alltt}
\end{minipage}%
\end{lrbox}% box
% ------------------------------------

\begin{document}
\noindent
L'expression : \usebox{\inverbatim} démontrée au paragraphe
précédent prend ici tout son sens.

En effet l'expression \usebox{\inverbatim} permet\ldots
\end{document}
%%%% fin exemple %%%%

# 29.39 # Comment redéfinir la commande \year ?
-----------------------------------------------
Pour ne faire apparaître que deux chiffres au lieu de quatre, il
faut utiliser :
\newcommand{\ignoretwo}[2]{}
\newcommand{\shortyear}{\expandafter\ignoretwo\the\year}
dans le préambule du document.

# 29.40 # Qu'est ce que la magnification ?
------------------------------------------
* La commande magnification permet de faire un zoom d'un
document.

Exemple :
\mag=1440
\documentclass{...}
%%%% fin exemple %%%%

* On peut également travailler sur le fichier postscript via
dvips avec l'option -x nombre où nombre vaut par exemple 1200
pour un agrandissement de 20%.

* De la même manière, le package 'scale' disponible sur CTAN
dans /macros/latex/contrib/supported/scale/ permet de modifier
l'échelle d'un document avant impression.

# 29.41 # Comment sont gérés les postscripts dans LaTeX ?
---------------------------------------------------------
P. Perichon :
TeX/LaTeX + DVIPS procèdent en 2 temps : 
* Lorsque l'on a une figure PostScript (EPS : Encapsulated
PostScrit), on met les commandes nécessaires dans son source
(fichier .tex) pour dire à TeX/LaTeX que l'on veut cette figure
à telle place dans son document avec telles dimensions (en
incluant la bonne extension : graphicx, psfig, epsfig) . 

Lors de la phase d'interprètation du code TeX/LaTeX,
l'interprète TeX/LaTeX va seulement consulter dans le fichier
externe contenant la figure les dimensions/proportions de
l'image (les fameuses bounding box chères au PostScript
Encapsulé). 

En fin de course, dans le fichier DVI on aura le nom et les
dimensions de l'image mais PAS CELLE-CI (qui est toujours
externe). Donc si on visualise juste le fichier DVI, on voit
l'emplacement de l'image mais pas cette dernière (en particulier
la commande \psdraft génère un cadre genre \fbox{...} aux
dimensions de l'image à l'emplacement de celle-ci).

* Dans un deuxième temps, la commande DVIPS, transformera le
fichier DVI en PostScript et incluera à ce moment les fichiers
images EPS. Donc si on visualise/imprime le fichier PostScript,
on voit le texte et les images.

* Toutefois, certains visualiseurs DVI, par exemple XDVI sous
UNIX pour ne pas le citer, détectent quelque chose du genre :
     PSfile="toto.eps" llx=0 lly=-1 urx=57 ury=29 rwi=4252
dans le fichier DVI, et appellent gentiment GostScript/GhostView 
qui vont préparer une image bitmap que le visualiseur DVI
s'empressera de montrer (quand ça marche : avec psfig.sty pas de
problème, mais avec l'extension graphicx...). Mais d'autres
visualiseurs, comme DVIWIN, ne savent pas que faire d'un fichier
PS.

DVI signifie DeVice Independent : ceci est un format de document
indépendant du système d'impression. Donc non lié à un langage
de description de page utilisé en interne par une quelconque
imprimante (PostScript, PCL, HPGL, Windows GDI, ...). Il suffit
après d'utiliser un convertisseur qui transforme le DVI en
quelque chose que comprend votre imprimante (PostScript, HPGL,
PCL, ...). Cette méthode permet d'imprimer sur n'importe quel
type d'imprimante (il suffit d'avoir le bon convertisseur). Mais
hélas en DVI, il n'a point été prévu d'y mettre une image (le
problème est en effet pas simple). D'où l'utilisation de fichier
EPS.

# 29.42 # Pourquoi LaTeX n'accepte t'il pas tous les formats
------------------------------------------------------------
d'image ?
---------
P. Perichon :
Le problème est le suivant : un fichier DVI + image TIFF, GIF,
TGA,... comment faire digérer tout ça par votre imprimante ????
Le fichier DVI peut se faire convertir en un langage
d'impression compréhensible par votre imprimante... mais vos
formats d'images... faudrait-il en plus prévoir un système de
conversion de TIFF, GIF, TGA, ... vers le langage d'impression
de votre imprimante (Alladin avec GhostScript/GhostView propose
quelques filtres, mais bon). A part quelques langages de
description de pages comme PostScript et un ou deux autres qui
pratiquent une compatibilité ascendante quant aux versions du
langage qu'ils utilisent, les autres fabricants d'imprimantes
changent de langage quasiment à chaque modèle ou série
d'imprimante (impossible de tenir à jour autant de
convertisseurs). 

Pour tout cela le langage PostScript (PS et EPS) nous rend
grandement service en nous simplifiant la vie (et pour d'autres
raisons aussi). C'est peut-être un peu plus lourd à manipuler,
mais plus simple pour tout le monde de convertir vos images en
EPS. De plus, si vous ne disposez pas d'imprimante PostScript,
GhostScript/GhostView se chargera d'interprèter le fichier PS
(texte + images), fabriquera une bitmap à la bonne résolution et
pourra l'envoyer à votre imprimante via votre pilote
d'impression. Tout cela automatisé dans une bonne distribution
est transparent à l'utilisateur.

Pour plus de détails, consulter le grfguide disponible sur CTAN
dans /macros/latex/packages/graphics/ et le document epslatex
disponible sur CTAN dans /info/.

# 29.43 # A quoi sert la commande \(re)newenvironment ?
-------------------------------------------------------
Les commandes \newenvironment et \renewenvironment permettent de
définir des actions qui seront appliquées entre les commandes
\begin{mon_environnement} et \end{mon_environnement}. Ces
commandes doivent être appelées dans le préambule du document
suivant la syntaxe :
	\newenvironment{nom}[nb_arg]{avant}{après}
avant et après sont les actions qui auront lieu à l'entrée et à
la sortie du nouvel environnement.

Exemple :
\documentclass{report}
\usepackage{french}

\newenvironment{Relief}[1]
{\mbox{\Large{\uppercase{#1}}}}

\begin{document}
\begin{Relief}
   {Il}~était une fois~\ldots
\end{Relief}
\begin{Relief}
   {U}n jour peut être~\ldots
\end{Relief}
%%%% fin exemple %%%%

# 29.44 # Comment récupérer le nom du fichier compilé ?
-------------------------------------------------------
Pour récupérer le nom du fichier compilé et l'afficher lors
d'une compilation, il faut utiliser la commande \jobname.

Exemple :
Le fichier source est \texttt{\jobname.tex}.
%%%% fin exemple %%%%

# 29.45 # Comment gérer des conditions de traitement dans un
------------------------------------------------------------
style ?
-------
Le package 'ifthen' disponible sur CTAN dans /macros/latex/base/
permet d'implémenter des traitements conditionnels tels que
\ifthenelse et \whiledo. 

# 29.46 # A quoi servent les commandes \setlength et
----------------------------------------------------
\addtolength ?
--------------
Ces deux commandes permettent de modifier la longueur de
certains paramètres.

Exemples :
+ \setlength{nom_parametre}{longueur}
+ \addtolength{nom_parametre}{longueur}
%%%% fin exemple %%%%

# 29.47 # Quelles sont les unités de mesure de TeX ?
----------------------------------------------------
TeX comprend six unités de mesure :
+ pt point = 0,35 mm
+ mm millimètre
+ ex correspond à la hauteur d'un x dans la fonte courante
+ em correspond à la largeur d'un m dans la fonte courante
+ cm centimètre
+ in pouce = 2,54 cm

# 29.48 # A quoi sert la commande mbox ?
-----------------------------------------
La commande \mbox permet à LaTeX de considérer son argument
comme une seule entité. Elle peut ainsi empêcher la coupure 
d'un mot ou d'un groupe de mots.

Exemple :
Mon numéro de téléphone est le~\mbox{01 69 63 12 68}.
%%%% fin exemple %%%%

# 29.49 # Comment obtenir des points de suspension ?
----------------------------------------------------
La commande \ldots permet d'obtenir trois points de suspension
espacés correctement.

# 29.50 # Comment désactiver une ligature ?
-------------------------------------------
Pour désactiver une ligature, il faut introduire {} ou une
\mbox{} entre les lettres ligaturées.

Exemple :
comparez effacer, ef{}facer et ef\mbox{}facer
%%%% fin exemple %%%%

# 29.51 # Comment gérer les versions d'un document ?
----------------------------------------------------
* Pour les versions provisoires, voir la question 29.26.

* Il existe le package 'vrsion' disponible sur CTAN dans
/macros/latex/contrib/supported/vrsion/ qui permet via la
commande \version d'inclure un numéro de version dans un
document LaTeX. Ce numéro est incrémenté à chaque compilation.

* On peut également se reporter à la question 29.35 pour inclure
le jour et l'heure de compilation dans un document.

# 29.52 # Comment changer certains titres ?
-------------------------------------------
Il suffit de renommer les variables suivantes :
   \def\refname{R\'ef\'erences}%
   \def\abstractname{R\'esum\'e}%
   \def\bibname{Bibliographie}%
   \def\prefacename{Pr\'eface}%
   \def\chaptername{Chapitre}%
   \def\appendixname{Annexe}%
   \def\contentsname{Table des mati\`eres}%
   \def\listfigurename{Table des figures}%
   \def\listtablename{Liste des tableaux}%
   \def\indexname{Index}%
   \def\figurename{{\scshape Fig.}}%
   \def\tablename{{\scshape Tab.}}%
   \def\partname{\protect\@Fpt partie}%
   \def\@Fpt{{\ifcase\value{part}\or Premi\`ere\or Deuxi\`eme\or
   Troisi\`eme\or Quatri\`eme\or Cinqui\`eme\or Sixi\`eme\or
   Septi\`eme\or Huiti\`eme\or Neuvi\`eme\or Dixi\`eme\or 
   Onzi\`eme\or  Douzi\`eme\or Treizi\`eme\or Quatorzi\`eme\or 
   Quinzi\`eme\or Seizi\`eme\or Dix-septi\`eme\or 
   Dix-huiti\`eme\or Dix-neuvi\`eme\or Vingti\`eme\fi}}%
   \space\def\thepart{}}%
   \def\pagename{page}%
   \def\seename{{\emph{voir}}}%
   \def\alsoname{{\emph{voir aussi}}}%
   \def\enclname{P.~J. }%
   \def\ccname{Copie \`a }%
   \def\headtoname{}%
   \def\proofname{D\'emonstration}% for AMS-\LaTeX

Remarque : lorsque certains changements de noms sont déjà gérés
	   par un package (french par exemple) il faut placer 
	   les définitions ci-dessus après le \begin{document}.

# 29.53 # Comment insérer un code source dans un document ?
-----------------------------------------------------------
* Le package 'listings' disponible sur CTAN dans
/macros/latex/contrib/supported/listings/ permet de gérer la
mise en page de code source avec notamment la mise en relief de
mots clés.

* La distribution GUTenberg contient un package du nom de
'lgrind' (executable+lgrind.sty) qui, entre autres (C, C++,
Pascal, BASIC, Modula-2, Fortran, RATFOR, Yacc, PostScript,
Prolog, MLisp, Icon, LaTeX, Perl, CSH, Bourne Shell, assembler,
68000 assembler, asm68, VMS assembler, ISP, LDL, Linda, MODEL,
MatLab, Russell), formatte du code C++ en LaTeX. Ce programme
disponible sur CTAN permet à partir de code source C de générer
du code LaTeX respectant l'indentation. Ce package est également
disponible sur CTAN dans support/lgrind/.

* wflman disponible par ftp à ftp.keck.hawaii.edu
dans /pub/wlupton/wflman-2.2.2.tar.gz peut aussi être utile.

* Il existe également DOC++ qui peut créer une documentation
HTML ou LaTeX à partir des infos ajoutées dans les commentaires
du code C++. Pour plus de détails, voir :
http://www.ZIB-Berlin.DE/VisPar/doc++/doc++.html

* Le package 'tgrind', qui vient avec un .sty et une moulinette
permet de transformer un .c en .tex

* Le package 'c++2latex' sous license GNU est capable de
convertir des fichiers C, C++ et JAVA en LaTeX2e. Les lignes
peuvent être numérotées.

* Le package 'cprog' disponible sur CTAN permet de formater des
programmes C en TeX.

* Le package 'c2ltx', de M. Plugge
(plugge@biv7.sr.fh-mannheim.de), appartient à la famille de
convertisseurs cvt2ltx. Il numérote les lignes, traduit != en
$\neq$ , gère les commentaires, les en-tête de procédures, etc.
Il supporte plusieurs fichiers d'entrée et gère automatiquement
les changements de section et la génération d'index. Une
documentation est disponible par ftp à axp3.sr.fh-mannheim.de
dans /cvt2latex/cvt2ltx.zip. Ce package sera bientôt disponible
sur CTAN.

# 29.54 # Comment tracer une ligne horizontale ?
------------------------------------------------
* Pour obtenir une ligne centrée par rapport à la mi-hauteur au
dessus de la ligne d'écriture, on peut utiliser ceci :
\hbox{\raisebox{0.4em}{\vrule depth 0pt height 0.4pt width 1cm}
Toto}

# 29.55 # Comment générer un espace invisible de taille donnée ?
----------------------------------------------------------------
Il existe pour cela la commande \phantom. Celle-ci génère un
espace invisible de la même longueur que son argument.

Exemple :
Complète les mots qui manquent dans le texte suivant~:

Le petit chaperon \phantom{rouge} se promène~\ldots.
%%%% fin exemple %%%%

# 29.56 # Qu'est ce qu'une correction italique ?
------------------------------------------------
Pour que LaTeX puisse gérer correctement le passage d'une fonte
italique à une fonte droite, il peut être utile d'utiliser la
commande \/. Cela permet d'augmenter légèrement l'espace qui
sépare la dernière lettre en italique, de la première lettre
droite.

Exemple :
Un \textit{cheval}\/ file au galop.
%%%% fin exemple %%%%

# 29.57 # Quels sont les accents accessibles sous LaTeX ?
---------------------------------------------------------
Les accents accessibles sous LaTeX sont les suivants :
+ \`{a} ou \`a accent grave
+ \'{e} ou \'e accent aigu
+ \^{i} ou \^i accent circonflexe
+ \"{o} ou \"o trema
+ \~{u} ou \~u tilde
+ \={o} ou \=o surligné
+ \.{o} ou \.o point
+ \u{o}
+ \v{o}
+ \H{o} trema hongrois
+ \t{oo}
+ \c{c} cédille
+ \d{o} point en dessous
+ \b{o} sousligné

# 29.58 # Comment écrire dans un fichier pendant une compilation ?
------------------------------------------------------------------
* On dispose pour cela des commandes \write et \newwrite.

Exemple :
\newwrite\test
\openout\test=toto
\write\test{Je m'appelle Paul}
\write\test{\noexpand\thesection}
\closeout\test
\bye
%%%% fin exemple %%%%

Remarque : \noexpand permet d'inclure des commandes LaTeX sans
	   quelles soient interprêtées.

* Le package 'french' propose la commande
\originaloutput[fichier]{texte} pour écrire le "texte", tel
qu'il est fourni, dans le "fichier". Dans ce cas, les caracteres
actifs de french sont automatiquement desactivés. C'est donc
l'equivalent de \immediate\write\fichier{texte}.

* Le package 'sverb' disponible sur CTAN propose
l'environnement verbwrite.

Exemple :
\begin{verbwrite}{fichier.tmp}
   Ce texte va être sauvé dans le fichier fichier.tmp.
\end{verbwrite}
%%%% fin exemple %%%%

# 29.59 # Comment gérer des compteurs ?
---------------------------------------
Un certain nombre de compteurs sont prédéfinis dans LaTeX, il
s'agit :
+ des compteurs de structuration du document : part, chapter,
section, subsection, subsubsection, paragraph, subparagraph,
+ du compteur de page,
+ du compteur d'équation,
+ du compteur de figure,
+ du compteur de tables,
+ des compteur de notes : footnote et mpfootnote, 
+ et des compteurs de liste : enumi, enumii, enumiii et enumiv.

Pour définir son propre compteur, il faut utiliser la commande
\newcounter{nv_cptr}[ref_cptr]. Lorsque qu'un compteur déjà
existant est passé en argument (ref_cptr), le nouveau compteur
nv_cptr sera réinitialisé à chaque incrément (via \stepcounter
ou \refstepcounter) du compteur ref_cptr.

Par défaut, la valeur d'un nouveau compteur est 0. La commande
\setcounter{cptr}{val} permet de lui donner une autre valeur. On
peut également incrémenter la valeur d'un compteur via la
commande \addtocounter{cptr}{val}. La valeur d'un compteur peut
être récupérée, dans un calcul par exemple, grâce à la commande
\value{cptr}.

\stepcounter{cptr} permet d'incrémenter le compteur cptr et de
réinitialiser tous les compteurs liés par référence (argument
ref_cptr de la commande \newcounter). La commande
\refstepcounter{cptr} permet en outre de mettre à jour la valeur
courante du compteur qui pourrait être appelé par un \ref.

\thecptr ou cptr est le nom d'un compteur permet d'afficher sa
valeur.

Exemple :
\newcounter{section}
\newcounter{subsection}[section]
%%%% fin exemple %%%%

# 29.60 # Quels sont les différents styles de compteurs ?
---------------------------------------------------------
Il en existe six prédéfinis :
+ \arabic{cptr} pour un nombre arabe,
+ \roman{cptr} pour un nombre romain minuscule,
+ \Roman{cptr} pour un nombre romain majuscule,
+ \alph{cptr} pour une lettre minuscule,
+ \Alph{cptr} pour une lettre majuscule,
+ \fnsymbol{cptr} pour un symbole.

Exemple :
\renewcommand{\thesection}{\Roman{section}}
\renewcommand{\thesubsection}{\thesection.\roman{subsection}}
%%%% fin exemple %%%%

# 29.61 # Comment programmer un traitement itératif ?
-----------------------------------------------------
Le package 'multido' propose une commande \multido qui est une
boucle TeX. Sa syntaxe est la suivante :
	\multido{variables}{nbiteration}{code}
Le code sera ainsi répété nbiteration fois. Les déclarations de
variables sont séparées par des virgules. Un déclaration prend
la forme :
	variable = valeurinitiale + increment
Elle est utile notamment pour le dessin de figures.

Exemple (doc package) :
\setlength{\unitlength}{1cm}
\small
\begin{picture}(8,1)(0,-.5)
   \put(0,0){\vector(1,0){8}}
   \multido{\i=0+1, \n=0+0.25}{8}{%
   \put(\i,-.1){\line(0,1){.2}}
   \put(\i,-.2){\makebox(0,0)[t]{\n}}}
\end{picture}
%%%% fin exemple %%%%

# 29.62 # A quoi servent les commandes savebox ?
------------------------------------------------
Il existe les commandes :
+ \newsavebox{ma_boite} pour déclarer une boite
+ \sbox{ma_boite}{contenu} pour remplir ma_boite
+ \savebox{ma_boite}[lagr][pos]{contenu} pour remplir une
boite de largeur lagr et de position pos
+ \usebox{ma_boite} pour appeler le contenu de ma_boite
+ lrbox est l'environnement équivalent à sbox

Exemple :
\newsavebox{\maboite}
\sbox{\maboite}{\textbf{Alcatel Alsthom Recherche}}
\usebox{maboite} se situe à Marcoussis. Je travaille à
\usebox{maboite} depuis~\ldots...
%%%% fin exemple %%%%

# 29.63 # Comment résoudre certaines incompatibilités de
--------------------------------------------------------
packages ?
----------
Il arrive parfois lorsque plusieurs packages sont utilisés
simultanément que des macros différentes portent le même nom, ou
que certaines macros perturbent le fonctionnement d'autres
macros. Dans certains cas le problème peut se résoudre en
changeant l'ordre d'appel des packages.

Exemple (J.P. Drucbert) :
Le paquetage psboxit définit des commandes \psboxit qui
engendrent \special{ps: ...}. Le problème vient de ce
deux-points. Si vous chargez psboxit.sty AVANT babel (option
french), pas de problème, le deux-points est un caractère
ordinaire (other) lors de la déclaration de la macro \psboxit et
donc le \special écrira bien un ":".

Par contre si psboxit.sty est chargé APRES babel (option
french), le deux-points est alors un caractère actif au moment
de la déclaration de la macro \psboxit, et le \special n'écrira
pas un deux-points, mais un espace insécable (en fait une macro
interne de babel) et un :, d'où les erreurs. C'est un cas
classique de catcodes pas très bien gérés (en fait psboxit.sty
devrait sauver le catcode de : , donner la catégorie other au
caractère :, définir \psboxit, puis restaurer le catcode).
%%%% fin exemple %%%%

# 29.64 # Combien d'internautes abonnés à une liste de
------------------------------------------------------
discussion faut-il pour changer une ampoule électrique (GAG) ? 
--------------------------------------------------------------
Réponse: 1347 

+ 1 pour changer l'ampoule et informer le groupe de discussion
que l'ampoule a été changée 
+ 14 pour partager une expérience similaire et discutant des
différentes manières de changer une ampoule 
+ 7 pour présenter les dangers liés au changement d'une ampoule 
+ 27 pour faire remarquer diverses erreurs de syntaxe et de
grammaire dans les différents courriers relatifs au changement
d'ampoule 
+ 53 pour insulter les correcteurs grammaticaux précédents 
+ 41 pour corriger les corrections des correcteurs grammaticaux 
+ 156 pour écrire à l'administrateur de groupe ou au modérateur
pour se plaindre que les discussions relatives au changement
d'ampoule n'ont rien à faire dans ce groupe de discussion 
+ 109 pour se plaindre que ces discussions n'ont rien à voir
avec les ampoules électriques et qu'elles doivent se limiter à
alt.change.ampoules
+ 203 pour demander d'arrêter le crossposting vers
alt.grammaire, alt.ponctuation, alt.vocabulaire, alt.adjectif,
soc.culture.french et
alt.binaries.pictures.erotica.pon-pon-girls 
+ 111 pour défendre le crossposting vers ces listes arguant que
nous sommes tous des ampoules et que par conséquent les
courriers sont pertinents dans ces groupes 
+ 306 pour débattre de la méthode la mieux appropriée pour
changer une ampoule, du meilleur endroit pour les acheter, de la
meilleure marque d'ampoule, de celles qui sont changées le plus
facilement 
+ 27 pour poster des URL ou on peut voir de magnifiques exemples
d'ampoules 
+ 14 pour écrire que ces URLs contiennent des erreurs et pour
poster les URLS corrects concernant le changement d'ampoule 
+ 7 pour corriger les URL corrigés précédemment 
+ 3 pour poster des URLs qui contiennent des références à des
URLs intéressant ce groupe de discussion 
+ 33 pour rassembler tous les courriers précédents, en y
incluant les headers complets, pour y ajouter 1 seule ligne 'moi
aussi' 
+ 12 qui écrivent qu'ils de désinscrivent de la liste
alt.change.ampoule 
+ 8 qui leur expliquent que ce n'est pas la peine, qu'on s'en
fout, qu'ils feraient mieux de lire la FAQ 
+ 4 pour demander une FAQ sur alt.change.ampoule 
+ 1 qui propose la création du groupe fr.change.ampoule 
+ 47 pour dire que c'est justement le sujet traité dans le
groupe de discussion alt.physique.fusion-froide et qu'il faut
laisser ce genre discussion dans ce groupe
+ 143 qui votent pour fr.change.ampoule 
+ 2 qui votent contre 
+ 7 'Make money fast' 
+ 5 'Test ne pas lire' 
+ 3 'My baby and me doin it - marylin.jpg 1/1' 
+ 1 'À vendre : autoradio et planche à repasser' 
+ 2 'C'est quoi le sujet de ce groupe' 

================================================================
[30] REMERCIEMENTS
================================================================

Je remercie vivement les personnes qui ont contribué de près
ou de loin à l'élaboration de cette FAQ. Je remercie également 
les personnes qui me soutiennent et m'encouragent.

================================================================

--
mpk.                                                   _  _
                                                      / |/ |
                                               _  _   () () \
                                              /o\/o\\\\\||\\/
                                              \vvvv/////|\\\\
Bad Wally.                                     wwww**** \\\\\\
---------------------------------------------------------------
 Marie-Paule KLUTH    Marie-Paule.Kluth@aar.alcatel-alsthom.fr
...............................................................
 Alcatel Alsthom Recherche       Tel : +33 (0)1 69 63 12 68
 Route de Nozay                  Fax : +33 (0)1 69 63 18 12
 91460 Marcoussis                			FRANCE
---------------------------------------------------------------

