<refentry id="rsvg-Convenience-Functions">
<refmeta>
<refentrytitle>Utility/Convenience Functions</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>RSVG Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Utility/Convenience Functions</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



<link linkend="GdkPixbuf">GdkPixbuf</link>*  <link linkend="rsvg-pixbuf-from-file">rsvg_pixbuf_from_file</link>           (const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="GError">GError</link> **error);
<link linkend="GdkPixbuf">GdkPixbuf</link>*  <link linkend="rsvg-pixbuf-from-file-at-zoom">rsvg_pixbuf_from_file_at_zoom</link>   (const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="double">double</link> x_zoom,
                                             <link linkend="double">double</link> y_zoom,
                                             <link linkend="GError">GError</link> **error);
<link linkend="GdkPixbuf">GdkPixbuf</link>*  <link linkend="rsvg-pixbuf-from-file-at-size">rsvg_pixbuf_from_file_at_size</link>   (const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height,
                                             <link linkend="GError">GError</link> **error);
<link linkend="GdkPixbuf">GdkPixbuf</link>*  <link linkend="rsvg-pixbuf-from-file-at-max-size">rsvg_pixbuf_from_file_at_max_size</link>
                                            (const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="gint">gint</link> max_width,
                                             <link linkend="gint">gint</link> max_height,
                                             <link linkend="GError">GError</link> **error);
<link linkend="GdkPixbuf">GdkPixbuf</link>*  <link linkend="rsvg-pixbuf-from-file-at-zoom-with-max">rsvg_pixbuf_from_file_at_zoom_with_max</link>
                                            (const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="double">double</link> x_zoom,
                                             <link linkend="double">double</link> y_zoom,
                                             <link linkend="gint">gint</link> max_width,
                                             <link linkend="gint">gint</link> max_height,
                                             <link linkend="GError">GError</link> **error);
<link linkend="GdkPixbuf">GdkPixbuf</link>*  <link linkend="rsvg-pixbuf-from-file-ex">rsvg_pixbuf_from_file_ex</link>        (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="GError">GError</link> **error);
<link linkend="GdkPixbuf">GdkPixbuf</link>*  <link linkend="rsvg-pixbuf-from-file-at-zoom-ex">rsvg_pixbuf_from_file_at_zoom_ex</link>
                                            (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="double">double</link> x_zoom,
                                             <link linkend="double">double</link> y_zoom,
                                             <link linkend="GError">GError</link> **error);
<link linkend="GdkPixbuf">GdkPixbuf</link>*  <link linkend="rsvg-pixbuf-from-file-at-size-ex">rsvg_pixbuf_from_file_at_size_ex</link>
                                            (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height,
                                             <link linkend="GError">GError</link> **error);
<link linkend="GdkPixbuf">GdkPixbuf</link>*  <link linkend="rsvg-pixbuf-from-file-at-max-size-ex">rsvg_pixbuf_from_file_at_max_size_ex</link>
                                            (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="gint">gint</link> max_width,
                                             <link linkend="gint">gint</link> max_height,
                                             <link linkend="GError">GError</link> **error);
<link linkend="GdkPixbuf">GdkPixbuf</link>*  <link linkend="rsvg-pixbuf-from-file-at-zoom-with-max-ex">rsvg_pixbuf_from_file_at_zoom_with_max_ex</link>
                                            (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="double">double</link> x_zoom,
                                             <link linkend="double">double</link> y_zoom,
                                             <link linkend="gint">gint</link> max_width,
                                             <link linkend="gint">gint</link> max_height,
                                             <link linkend="GError">GError</link> **error);
</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="rsvg-pixbuf-from-file">rsvg_pixbuf_from_file ()</title>
<programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*  rsvg_pixbuf_from_file           (const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="GError">GError</link> **error);</programlisting>
<para>
Loads a new <link linkend="GdkPixbuf">GdkPixbuf</link> from <parameter>file_name</parameter> and returns it.  The caller must
assume the reference to the reurned pixbuf. If an error occurred, <parameter>error</parameter> is
set and <literal>NULL</literal> is returned.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>file_name</parameter>&nbsp;:</term>
<listitem><simpara> A file name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly allocated <link linkend="GdkPixbuf">GdkPixbuf</link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-pixbuf-from-file-at-zoom">rsvg_pixbuf_from_file_at_zoom ()</title>
<programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*  rsvg_pixbuf_from_file_at_zoom   (const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="double">double</link> x_zoom,
                                             <link linkend="double">double</link> y_zoom,
                                             <link linkend="GError">GError</link> **error);</programlisting>
<para>
Loads a new <link linkend="GdkPixbuf">GdkPixbuf</link> from <parameter>file_name</parameter> and returns it.  This pixbuf is scaled
from the size indicated by the file by a factor of <parameter>x_zoom</parameter> and <parameter>y_zoom</parameter>.  The
caller must assume the reference to the returned pixbuf. If an error
occurred, <parameter>error</parameter> is set and <literal>NULL</literal> is returned.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>file_name</parameter>&nbsp;:</term>
<listitem><simpara> A file name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x_zoom</parameter>&nbsp;:</term>
<listitem><simpara> The horizontal zoom factor
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y_zoom</parameter>&nbsp;:</term>
<listitem><simpara> The vertical zoom factor
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly allocated <link linkend="GdkPixbuf">GdkPixbuf</link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-pixbuf-from-file-at-size">rsvg_pixbuf_from_file_at_size ()</title>
<programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*  rsvg_pixbuf_from_file_at_size   (const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height,
                                             <link linkend="GError">GError</link> **error);</programlisting>
<para>
Loads a new <link linkend="GdkPixbuf">GdkPixbuf</link> from <parameter>file_name</parameter> and returns it.  This pixbuf is scaled
from the size indicated to the new size indicated by <parameter>width</parameter> and <parameter>height</parameter>.  If
either of these are -1, then the default size of the image being loaded is
used.  The caller must assume the reference to the returned pixbuf. If an
error occurred, <parameter>error</parameter> is set and <literal>NULL</literal> is returned.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>file_name</parameter>&nbsp;:</term>
<listitem><simpara> A file name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> The new width, or -1
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> The new height, or -1
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly allocated <link linkend="GdkPixbuf">GdkPixbuf</link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-pixbuf-from-file-at-max-size">rsvg_pixbuf_from_file_at_max_size ()</title>
<programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*  rsvg_pixbuf_from_file_at_max_size
                                            (const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="gint">gint</link> max_width,
                                             <link linkend="gint">gint</link> max_height,
                                             <link linkend="GError">GError</link> **error);</programlisting>
<para>
Loads a new <link linkend="GdkPixbuf">GdkPixbuf</link> from <parameter>file_name</parameter> and returns it.  This pixbuf is uniformly
scaled so that the it fits into a rectangle of size max_width * max_height. The
caller must assume the reference to the returned pixbuf. If an error occurred,
<parameter>error</parameter> is set and <literal>NULL</literal> is returned.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>file_name</parameter>&nbsp;:</term>
<listitem><simpara> A file name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max_width</parameter>&nbsp;:</term>
<listitem><simpara> The requested max width
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max_height</parameter>&nbsp;:</term>
<listitem><simpara> The requested max heigh
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly allocated <link linkend="GdkPixbuf">GdkPixbuf</link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-pixbuf-from-file-at-zoom-with-max">rsvg_pixbuf_from_file_at_zoom_with_max ()</title>
<programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*  rsvg_pixbuf_from_file_at_zoom_with_max
                                            (const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="double">double</link> x_zoom,
                                             <link linkend="double">double</link> y_zoom,
                                             <link linkend="gint">gint</link> max_width,
                                             <link linkend="gint">gint</link> max_height,
                                             <link linkend="GError">GError</link> **error);</programlisting>
<para>
Loads a new <link linkend="GdkPixbuf">GdkPixbuf</link> from <parameter>file_name</parameter> and returns it.  This pixbuf is scaled
from the size indicated by the file by a factor of <parameter>x_zoom</parameter> and <parameter>y_zoom</parameter>. If the
resulting pixbuf would be larger than max_width/max_heigh it is uniformly scaled
down to fit in that rectangle. The caller must assume the reference to the
returned pixbuf. If an error occurred, <parameter>error</parameter> is set and <literal>NULL</literal> is returned.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>file_name</parameter>&nbsp;:</term>
<listitem><simpara> A file name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x_zoom</parameter>&nbsp;:</term>
<listitem><simpara> The horizontal zoom factor
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y_zoom</parameter>&nbsp;:</term>
<listitem><simpara> The vertical zoom factor
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max_width</parameter>&nbsp;:</term>
<listitem><simpara> The requested max width
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max_height</parameter>&nbsp;:</term>
<listitem><simpara> The requested max heigh
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly allocated <link linkend="GdkPixbuf">GdkPixbuf</link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-pixbuf-from-file-ex">rsvg_pixbuf_from_file_ex ()</title>
<programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*  rsvg_pixbuf_from_file_ex        (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="GError">GError</link> **error);</programlisting>
<para>
Loads a new <link linkend="GdkPixbuf">GdkPixbuf</link> from <parameter>file_name</parameter> and returns it.  The caller must
assume the reference to the reurned pixbuf. If an error occurred, <parameter>error</parameter> is
set and <literal>NULL</literal> is returned. Returned handle is closed by this call and must be
freed by the caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> The RSVG handle you wish to render with (either normal or gzipped)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>file_name</parameter>&nbsp;:</term>
<listitem><simpara> A file name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly allocated <link linkend="GdkPixbuf">GdkPixbuf</link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-pixbuf-from-file-at-zoom-ex">rsvg_pixbuf_from_file_at_zoom_ex ()</title>
<programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*  rsvg_pixbuf_from_file_at_zoom_ex
                                            (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="double">double</link> x_zoom,
                                             <link linkend="double">double</link> y_zoom,
                                             <link linkend="GError">GError</link> **error);</programlisting>
<para>
Loads a new <link linkend="GdkPixbuf">GdkPixbuf</link> from <parameter>file_name</parameter> and returns it.  This pixbuf is scaled
from the size indicated by the file by a factor of <parameter>x_zoom</parameter> and <parameter>y_zoom</parameter>.  The
caller must assume the reference to the returned pixbuf. If an error
occurred, <parameter>error</parameter> is set and <literal>NULL</literal> is returned. Returned handle is closed by this 
call and must be freed by the caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> The RSVG handle you wish to render with (either normal or gzipped)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>file_name</parameter>&nbsp;:</term>
<listitem><simpara> A file name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x_zoom</parameter>&nbsp;:</term>
<listitem><simpara> The horizontal zoom factor
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y_zoom</parameter>&nbsp;:</term>
<listitem><simpara> The vertical zoom factor
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly allocated <link linkend="GdkPixbuf">GdkPixbuf</link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-pixbuf-from-file-at-size-ex">rsvg_pixbuf_from_file_at_size_ex ()</title>
<programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*  rsvg_pixbuf_from_file_at_size_ex
                                            (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="gint">gint</link> width,
                                             <link linkend="gint">gint</link> height,
                                             <link linkend="GError">GError</link> **error);</programlisting>
<para>
Loads a new <link linkend="GdkPixbuf">GdkPixbuf</link> from <parameter>file_name</parameter> and returns it.  This pixbuf is scaled
from the size indicated to the new size indicated by <parameter>width</parameter> and <parameter>height</parameter>.  If
either of these are -1, then the default size of the image being loaded is
used.  The caller must assume the reference to the returned pixbuf. If an
error occurred, <parameter>error</parameter> is set and <literal>NULL</literal> is returned. Returned handle is closed
by this call and must be freed by the caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> The RSVG handle you wish to render with (either normal or gzipped)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>file_name</parameter>&nbsp;:</term>
<listitem><simpara> A file name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> The new width, or -1
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> The new height, or -1
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly allocated <link linkend="GdkPixbuf">GdkPixbuf</link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-pixbuf-from-file-at-max-size-ex">rsvg_pixbuf_from_file_at_max_size_ex ()</title>
<programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*  rsvg_pixbuf_from_file_at_max_size_ex
                                            (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="gint">gint</link> max_width,
                                             <link linkend="gint">gint</link> max_height,
                                             <link linkend="GError">GError</link> **error);</programlisting>
<para>
Loads a new <link linkend="GdkPixbuf">GdkPixbuf</link> from <parameter>file_name</parameter> and returns it.  This pixbuf is uniformly
scaled so that the it fits into a rectangle of size max_width * max_height. The
caller must assume the reference to the returned pixbuf. If an error occurred,
<parameter>error</parameter> is set and <literal>NULL</literal> is returned. Returned handle is closed by this call and 
must be freed by the caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> The RSVG handle you wish to render with (either normal or gzipped)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>file_name</parameter>&nbsp;:</term>
<listitem><simpara> A file name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max_width</parameter>&nbsp;:</term>
<listitem><simpara> The requested max width
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max_height</parameter>&nbsp;:</term>
<listitem><simpara> The requested max heigh
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly allocated <link linkend="GdkPixbuf">GdkPixbuf</link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-pixbuf-from-file-at-zoom-with-max-ex">rsvg_pixbuf_from_file_at_zoom_with_max_ex ()</title>
<programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*  rsvg_pixbuf_from_file_at_zoom_with_max_ex
                                            (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             const <link linkend="gchar">gchar</link> *file_name,
                                             <link linkend="double">double</link> x_zoom,
                                             <link linkend="double">double</link> y_zoom,
                                             <link linkend="gint">gint</link> max_width,
                                             <link linkend="gint">gint</link> max_height,
                                             <link linkend="GError">GError</link> **error);</programlisting>
<para>
Loads a new <link linkend="GdkPixbuf">GdkPixbuf</link> from <parameter>file_name</parameter> and returns it.  This pixbuf is scaled
from the size indicated by the file by a factor of <parameter>x_zoom</parameter> and <parameter>y_zoom</parameter>. If the
resulting pixbuf would be larger than max_width/max_heigh it is uniformly scaled
down to fit in that rectangle. The caller must assume the reference to the
returned pixbuf. If an error occurred, <parameter>error</parameter> is set and <literal>NULL</literal> is returned.
Returned handle is closed by this call and must be freed by the caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> The RSVG handle you wish to render with (either normal or gzipped)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>file_name</parameter>&nbsp;:</term>
<listitem><simpara> A file name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x_zoom</parameter>&nbsp;:</term>
<listitem><simpara> The horizontal zoom factor
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y_zoom</parameter>&nbsp;:</term>
<listitem><simpara> The vertical zoom factor
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max_width</parameter>&nbsp;:</term>
<listitem><simpara> The requested max width
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max_height</parameter>&nbsp;:</term>
<listitem><simpara> The requested max heigh
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A newly allocated <link linkend="GdkPixbuf">GdkPixbuf</link>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
