<refentry id="rsvg-Core-API">
<refmeta>
<refentrytitle>Core API</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>RSVG Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Core API</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



<link linkend="GQuark">GQuark</link>      <link linkend="rsvg-error-quark">rsvg_error_quark</link>                (void);
void        (<link linkend="RsvgSizeFunc">*RsvgSizeFunc</link>)                 (<link linkend="gint">gint</link> *width,
                                             <link linkend="gint">gint</link> *height,
                                             <link linkend="gpointer">gpointer</link> user_data);
void        <link linkend="rsvg-set-default-dpi">rsvg_set_default_dpi</link>            (<link linkend="double">double</link> dpi);
<link linkend="RsvgHandle">RsvgHandle</link>* <link linkend="rsvg-handle-new">rsvg_handle_new</link>                 (void);
void        <link linkend="rsvg-handle-set-dpi">rsvg_handle_set_dpi</link>             (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             <link linkend="double">double</link> dpi);
void        <link linkend="rsvg-handle-set-size-callback">rsvg_handle_set_size_callback</link>   (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             <link linkend="RsvgSizeFunc">RsvgSizeFunc</link> size_func,
                                             <link linkend="gpointer">gpointer</link> user_data,
                                             <link linkend="GDestroyNotify">GDestroyNotify</link> user_data_destroy);
<link linkend="gboolean">gboolean</link>    <link linkend="rsvg-handle-write">rsvg_handle_write</link>               (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             const <link linkend="guchar">guchar</link> *buf,
                                             <link linkend="gsize">gsize</link> count,
                                             <link linkend="GError">GError</link> **error);
<link linkend="gboolean">gboolean</link>    <link linkend="rsvg-handle-close">rsvg_handle_close</link>               (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             <link linkend="GError">GError</link> **error);
<link linkend="GdkPixbuf">GdkPixbuf</link>*  <link linkend="rsvg-handle-get-pixbuf">rsvg_handle_get_pixbuf</link>          (<link linkend="RsvgHandle">RsvgHandle</link> *handle);
void        <link linkend="rsvg-handle-free">rsvg_handle_free</link>                (<link linkend="RsvgHandle">RsvgHandle</link> *handle);
</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="rsvg-error-quark">rsvg_error_quark ()</title>
<programlisting><link linkend="GQuark">GQuark</link>      rsvg_error_quark                (void);</programlisting>
<para>
The error domain for RSVG</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The error domain
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="RsvgSizeFunc">RsvgSizeFunc ()</title>
<programlisting>void        (*RsvgSizeFunc)                 (<link linkend="gint">gint</link> *width,
                                             <link linkend="gint">gint</link> *height,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> the ouput width the SVG should be
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> the output height the SVG should be
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> user data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-set-default-dpi">rsvg_set_default_dpi ()</title>
<programlisting>void        rsvg_set_default_dpi            (<link linkend="double">double</link> dpi);</programlisting>
<para>
Sets the DPI for the all future outgoing pixbufs. Common values are
72, 90, and 300 DPI. Passing a number &lt;= 0 to <link linkend="dpi">dpi</link> will 
reset the DPI to whatever the default value happens to be.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dpi</parameter>&nbsp;:</term>
<listitem><simpara> Dots Per Inch (aka Pixels Per Inch)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-new">rsvg_handle_new ()</title>
<programlisting><link linkend="RsvgHandle">RsvgHandle</link>* rsvg_handle_new                 (void);</programlisting>
<para>
Returns a new rsvg handle.  Must be freed with <parameter>rsvg_handle_free</parameter>.  This
handle can be used for dynamically loading an image.  You need to feed it
data using <parameter>rsvg_handle_write</parameter>, then call <parameter>rsvg_handle_close</parameter> when done.  No
more than one image can be loaded with one handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> A new <link linkend="RsvgHandle">RsvgHandle</link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-set-dpi">rsvg_handle_set_dpi ()</title>
<programlisting>void        rsvg_handle_set_dpi             (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             <link linkend="double">double</link> dpi);</programlisting>
<para>
Sets the DPI for the outgoing pixbuf. Common values are
72, 90, and 300 DPI. Passing a number &lt;= 0 to <link linkend="dpi">dpi</link> will 
reset the DPI to whatever the default value happens to be.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> An <link linkend="RsvgHandle">RsvgHandle</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dpi</parameter>&nbsp;:</term>
<listitem><simpara> Dots Per Inch (aka Pixels Per Inch)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-set-size-callback">rsvg_handle_set_size_callback ()</title>
<programlisting>void        rsvg_handle_set_size_callback   (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             <link linkend="RsvgSizeFunc">RsvgSizeFunc</link> size_func,
                                             <link linkend="gpointer">gpointer</link> user_data,
                                             <link linkend="GDestroyNotify">GDestroyNotify</link> user_data_destroy);</programlisting>
<para>
Sets the sizing function for the <parameter>handle</parameter>.  This function is called right
after the size of the image has been loaded.  The size of the image is passed
in to the function, which may then modify these values to set the real size
of the generated pixbuf.  If the image has no associated size, then the size
arguments are set to -1.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> An <link linkend="RsvgHandle">RsvgHandle</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size_func</parameter>&nbsp;:</term>
<listitem><simpara> A sizing function, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> User data to pass to <parameter>size_func</parameter>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data_destroy</parameter>&nbsp;:</term>
<listitem><simpara> Destroy function for <parameter>user_data</parameter>, or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-write">rsvg_handle_write ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    rsvg_handle_write               (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             const <link linkend="guchar">guchar</link> *buf,
                                             <link linkend="gsize">gsize</link> count,
                                             <link linkend="GError">GError</link> **error);</programlisting>
<para>
Loads the next <parameter>count</parameter> bytes of the image.  This will return <link linkend="TRUE-CAPS">TRUE</link> if the data
was loaded successful, and <link linkend="FALSE-CAPS">FALSE</link> if an error occurred.  In the latter case,
the loader will be closed, and will not accept further writes. If FALSE is
returned, <parameter>error</parameter> will be set to an error from the <link linkend="RSVG-ERROR-CAPS">RSVG_ERROR</link> domain.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> An <link linkend="RsvgHandle">RsvgHandle</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara> Pointer to svg data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>count</parameter>&nbsp;:</term>
<listitem><simpara> length of the <parameter>buf</parameter> buffer in bytes
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <link linkend="TRUE-CAPS">TRUE</link> if the write was successful, or <link linkend="FALSE-CAPS">FALSE</link> if there was an
error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-close">rsvg_handle_close ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    rsvg_handle_close               (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                             <link linkend="GError">GError</link> **error);</programlisting>
<para>
Closes <parameter>handle</parameter>, to indicate that loading the image is complete.  This will
return <link linkend="TRUE-CAPS">TRUE</link> if the loader closed successfully.  Note that <parameter>handle</parameter> isn't
freed until <parameter>rsvg_handle_free</parameter> is called.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="RsvgHandle">RsvgHandle</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GError">GError</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <link linkend="TRUE-CAPS">TRUE</link> if the loader closed successfully, or <link linkend="FALSE-CAPS">FALSE</link> if there was
an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-get-pixbuf">rsvg_handle_get_pixbuf ()</title>
<programlisting><link linkend="GdkPixbuf">GdkPixbuf</link>*  rsvg_handle_get_pixbuf          (<link linkend="RsvgHandle">RsvgHandle</link> *handle);</programlisting>
<para>
Returns the pixbuf loaded by <link linkend="handle">handle</link>.  The pixbuf returned will be reffed, so
the caller of this function must assume that ref.  If insufficient data has
been read to create the pixbuf, or an error occurred in loading, then <literal>NULL</literal>
will be returned.  Note that the pixbuf may not be complete until
<parameter>rsvg_handle_close</parameter> has been called.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> An <link linkend="RsvgHandle">RsvgHandle</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the pixbuf loaded by <link linkend="handle">handle</link>, or <literal>NULL</literal>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-free">rsvg_handle_free ()</title>
<programlisting>void        rsvg_handle_free                (<link linkend="RsvgHandle">RsvgHandle</link> *handle);</programlisting>
<para>
Frees <link linkend="handle">handle</link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> An <link linkend="RsvgHandle">RsvgHandle</link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
