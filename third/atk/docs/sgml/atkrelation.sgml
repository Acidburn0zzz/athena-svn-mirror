<refentry id="AtkRelation">
<refmeta>
<refentrytitle>AtkRelation</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>ATK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>AtkRelation</refname><refpurpose>An object used to describe a relation between a object and one or more
other objects.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



struct      <link linkend="AtkRelation-struct">AtkRelation</link>;
enum        <link linkend="AtkRelationType">AtkRelationType</link>;
<link linkend="AtkRelationType">AtkRelationType</link> <link linkend="atk-relation-type-register">atk_relation_type_register</link>  (const <link linkend="gchar">gchar</link> *name);
G_CONST_RETURN <link linkend="gchar">gchar</link>* <link linkend="atk-relation-type-get-name">atk_relation_type_get_name</link>
                                            (<link linkend="AtkRelationType">AtkRelationType</link> type);
<link linkend="AtkRelationType">AtkRelationType</link> <link linkend="atk-relation-type-for-name">atk_relation_type_for_name</link>  (const <link linkend="gchar">gchar</link> *name);
<link linkend="AtkRelation">AtkRelation</link>* <link linkend="atk-relation-new">atk_relation_new</link>               (<link linkend="AtkObject">AtkObject</link> **targets,
                                             <link linkend="gint">gint</link> n_targets,
                                             <link linkend="AtkRelationType">AtkRelationType</link> relationship);
<link linkend="AtkRelationType">AtkRelationType</link> <link linkend="atk-relation-get-relation-type">atk_relation_get_relation_type</link>
                                            (<link linkend="AtkRelation">AtkRelation</link> *relation);
<link linkend="GPtrArray">GPtrArray</link>*  <link linkend="atk-relation-get-target">atk_relation_get_target</link>         (<link linkend="AtkRelation">AtkRelation</link> *relation);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----AtkRelation
</synopsis>

</refsect1>




<refsect1>
<title>Description</title>
<para>
An AtkRelation describes a relation between an object and one or more
other objects. The actual relations that an object has with other objects
are defined as an AtkRelationSet, which is a set of AtkRelations.


</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="AtkRelation-struct">struct AtkRelation</title>
<programlisting>struct AtkRelation;</programlisting>
<para>
The AtkRelation structure should not be accessed directly.

</para></refsect2>
<refsect2>
<title><anchor id="AtkRelationType">enum AtkRelationType</title>
<programlisting>typedef enum
{
  ATK_RELATION_NULL = 0,
  ATK_RELATION_CONTROLLED_BY,
  ATK_RELATION_CONTROLLER_FOR,
  ATK_RELATION_LABEL_FOR,
  ATK_RELATION_LABELLED_BY,
  ATK_RELATION_MEMBER_OF,
  ATK_RELATION_NODE_CHILD_OF,
  ATK_RELATION_FLOWS_TO,
  ATK_RELATION_FLOWS_FROM,
  ATK_RELATION_SUBWINDOW_OF, 
  ATK_RELATION_EMBEDS, 
  ATK_RELATION_EMBEDDED_BY, 
  ATK_RELATION_LAST_DEFINED
} AtkRelationType;
</programlisting>
<para>
Describes the type of the relation</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><literal>ATK_RELATION_NULL</literal></term>
<listitem><para>
</para></listitem>
</varlistentry>
<varlistentry>
<term><literal>ATK_RELATION_CONTROLLED_BY</literal></term>
<listitem><para> Indicates an object controlled by one or more target objects.
</para></listitem>
</varlistentry>
<varlistentry>
<term><literal>ATK_RELATION_CONTROLLER_FOR</literal></term>
<listitem><para> Indicates an object is an controller for one or more target objects.
</para></listitem>
</varlistentry>
<varlistentry>
<term><literal>ATK_RELATION_LABEL_FOR</literal></term>
<listitem><para> Indicates an object is a label for one or more target objects.
</para></listitem>
</varlistentry>
<varlistentry>
<term><literal>ATK_RELATION_LABELLED_BY</literal></term>
<listitem><para> Indicates an object is labelled by one or more target objects.
</para></listitem>
</varlistentry>
<varlistentry>
<term><literal>ATK_RELATION_MEMBER_OF</literal></term>
<listitem><para> Indicates an object is a member of a group of one or more target objects.
</para></listitem>
</varlistentry>
<varlistentry>
<term><literal>ATK_RELATION_NODE_CHILD_OF</literal></term>
<listitem><para> Indicates an object is a cell in a treetable which is displayed because a cell in the same column is expanded and identifies that cell.
</para></listitem>
</varlistentry>
<varlistentry>
<term><literal>ATK_RELATION_FLOWS_TO</literal></term>
<listitem><para> Indicates that the object has content that flows logically to another
 AtkObject in a sequential way, (for instance text-flow).
</para></listitem>
</varlistentry>
<varlistentry>
<term><literal>ATK_RELATION_FLOWS_FROM</literal></term>
<listitem><para> Indicates that the object has content that flows logically from
 another AtkObject in a sequential way, (for instance text-flow).
</para></listitem>
</varlistentry>
<varlistentry>
<term><literal>ATK_RELATION_SUBWINDOW_OF</literal></term>
<listitem><para> [not sure about this one, ask Peter]
</para></listitem>
</varlistentry>
<varlistentry>
<term><literal>ATK_RELATION_EMBEDS</literal></term>
<listitem><para> Indicates that the object visually embeds 
 another object's content, i.e. this object's content flows around 
 another's content.
</para></listitem>
</varlistentry>
<varlistentry>
<term><literal>ATK_RELATION_EMBEDDED_BY</literal></term>
<listitem><para> Inverse of <literal>ATK_RELATION_EMBEDS</literal>, indicates that
 this object's content is visualy embedded in another object.
</para></listitem>
</varlistentry>
<varlistentry>
<term><literal>ATK_RELATION_LAST_DEFINED</literal></term>
<listitem><para>
</para></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-relation-type-register">atk_relation_type_register ()</title>
<programlisting><link linkend="AtkRelationType">AtkRelationType</link> atk_relation_type_register  (const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>
Associate <parameter>name</parameter> with a new <link linkend="AtkRelationType">AtkRelationType</link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><para> a name string
</para></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para> an <link linkend="AtkRelationType">AtkRelationType</link> associated with <parameter>name</parameter>
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-relation-type-get-name">atk_relation_type_get_name ()</title>
<programlisting>G_CONST_RETURN <link linkend="gchar">gchar</link>* atk_relation_type_get_name
                                            (<link linkend="AtkRelationType">AtkRelationType</link> type);</programlisting>
<para>
Gets the description string describing the <link linkend="AtkRelationType">AtkRelationType</link> <parameter>type</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><para> The <link linkend="AtkRelationType">AtkRelationType</link> whose name is required
</para></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para> the string describing the AtkRelationType
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-relation-type-for-name">atk_relation_type_for_name ()</title>
<programlisting><link linkend="AtkRelationType">AtkRelationType</link> atk_relation_type_for_name  (const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>
Get the <link linkend="AtkRelationType">AtkRelationType</link> type corresponding to a relation name.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><para> a string which is the (non-localized) name of an ATK relation type.
</para></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para> the <link linkend="AtkRelationType">AtkRelationType</link> enumerated type corresponding to the specified name,
         or <link linkend="ATK-RELATION-NULL-CAPS">ATK_RELATION_NULL</link> if no matching relation type is found.
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-relation-new">atk_relation_new ()</title>
<programlisting><link linkend="AtkRelation">AtkRelation</link>* atk_relation_new               (<link linkend="AtkObject">AtkObject</link> **targets,
                                             <link linkend="gint">gint</link> n_targets,
                                             <link linkend="AtkRelationType">AtkRelationType</link> relationship);</programlisting>
<para>
Create a new relation for the specified key and the specified list
of targets.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>targets</parameter>&nbsp;:</term>
<listitem><para> an array of pointers to <link linkend="AtkObjects">AtkObjects</link>  
</para></listitem></varlistentry>
<varlistentry><term><parameter>n_targets</parameter>&nbsp;:</term>
<listitem><para> number of <link linkend="AtkObjects">AtkObjects</link> pointed to by <parameter>targets</parameter>
</para></listitem></varlistentry>
<varlistentry><term><parameter>relationship</parameter>&nbsp;:</term>
<listitem><para> an <link linkend="AtkRelationType">AtkRelationType</link> with which to create the new
 <link linkend="AtkRelation">AtkRelation</link>
</para></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para> a pointer to a new <link linkend="AtkRelation">AtkRelation</link>
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-relation-get-relation-type">atk_relation_get_relation_type ()</title>
<programlisting><link linkend="AtkRelationType">AtkRelationType</link> atk_relation_get_relation_type
                                            (<link linkend="AtkRelation">AtkRelation</link> *relation);</programlisting>
<para>
Gets the type of <parameter>relation</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>relation</parameter>&nbsp;:</term>
<listitem><para> an <link linkend="AtkRelation">AtkRelation</link> 
</para></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para> the type of <parameter>relation</parameter>
</para></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-relation-get-target">atk_relation_get_target ()</title>
<programlisting><link linkend="GPtrArray">GPtrArray</link>*  atk_relation_get_target         (<link linkend="AtkRelation">AtkRelation</link> *relation);</programlisting>
<para>
Gets the target list of <parameter>relation</parameter></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>relation</parameter>&nbsp;:</term>
<listitem><para> an <link linkend="AtkRelation">AtkRelation</link>
</para></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><para> the target list of <parameter>relation</parameter>
</para></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
