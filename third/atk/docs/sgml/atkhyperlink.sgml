<refentry id="AtkHyperlink">
<refmeta>
<refentrytitle>AtkHyperlink</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>ATK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>AtkHyperlink</refname><refpurpose>An ATK object which encapsulates a link or set of links in a hypertext document.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



struct      <link linkend="AtkHyperlink-struct">AtkHyperlink</link>;
enum        <link linkend="AtkHyperlinkStateFlags">AtkHyperlinkStateFlags</link>;
<link linkend="gchar">gchar</link>*      <link linkend="atk-hyperlink-get-uri">atk_hyperlink_get_uri</link>           (<link linkend="AtkHyperlink">AtkHyperlink</link> *link_,
                                             <link linkend="gint">gint</link> i);
<link linkend="AtkObject">AtkObject</link>*  <link linkend="atk-hyperlink-get-object">atk_hyperlink_get_object</link>        (<link linkend="AtkHyperlink">AtkHyperlink</link> *link_,
                                             <link linkend="gint">gint</link> i);
<link linkend="gint">gint</link>        <link linkend="atk-hyperlink-get-end-index">atk_hyperlink_get_end_index</link>     (<link linkend="AtkHyperlink">AtkHyperlink</link> *link_);
<link linkend="gint">gint</link>        <link linkend="atk-hyperlink-get-start-index">atk_hyperlink_get_start_index</link>   (<link linkend="AtkHyperlink">AtkHyperlink</link> *link_);
<link linkend="gboolean">gboolean</link>    <link linkend="atk-hyperlink-is-valid">atk_hyperlink_is_valid</link>          (<link linkend="AtkHyperlink">AtkHyperlink</link> *link_);
<link linkend="gboolean">gboolean</link>    <link linkend="atk-hyperlink-is-inline">atk_hyperlink_is_inline</link>         (<link linkend="AtkHyperlink">AtkHyperlink</link> *link_);
<link linkend="gint">gint</link>        <link linkend="atk-hyperlink-get-n-anchors">atk_hyperlink_get_n_anchors</link>     (<link linkend="AtkHyperlink">AtkHyperlink</link> *link_);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----AtkHyperlink
</synopsis>

</refsect1>

<refsect1>
<title>Implemented Interfaces</title>
<para>
AtkHyperlink implements <link linkend="AtkAction">AtkAction</link>.
</para>
</refsect1>





<refsect1>
<title>Description</title>
<para>
An ATK object which encapsulates a link or set of links in a hypertext document.
It implements the AtkAction interface.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="AtkHyperlink-struct">struct AtkHyperlink</title>
<programlisting>struct AtkHyperlink;</programlisting>
<para>
The AtkHyperlink structure should not be accessed directly.

</para></refsect2>
<refsect2>
<title><anchor id="AtkHyperlinkStateFlags">enum AtkHyperlinkStateFlags</title>
<programlisting>typedef enum 
{
  ATK_HYPERLINK_IS_INLINE = 1 &lt;&lt; 0
} AtkHyperlinkStateFlags;
</programlisting>
<para>
Describes the type of link</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><literal>ATK_HYPERLINK_IS_INLINE</literal></term>
<listitem><simpara> Link is inline
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-hyperlink-get-uri">atk_hyperlink_get_uri ()</title>
<programlisting><link linkend="gchar">gchar</link>*      atk_hyperlink_get_uri           (<link linkend="AtkHyperlink">AtkHyperlink</link> *link_,
                                             <link linkend="gint">gint</link> i);</programlisting>
<para>
Get a the URI associated with the anchor specified 
by <parameter>i</parameter> of <parameter>link_</parameter>. 
</para>
<para>
Multiple anchors are primarily used by client-side image maps.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>link_</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkHyperlink">AtkHyperlink</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&nbsp;:</term>
<listitem><simpara> a (zero-index) integer specifying the desired anchor
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a string specifying the URI 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-hyperlink-get-object">atk_hyperlink_get_object ()</title>
<programlisting><link linkend="AtkObject">AtkObject</link>*  atk_hyperlink_get_object        (<link linkend="AtkHyperlink">AtkHyperlink</link> *link_,
                                             <link linkend="gint">gint</link> i);</programlisting>
<para>
Returns the item associated with this hyperlinks nth anchor.
For instance, the returned <link linkend="AtkObject">AtkObject</link> will implement <link linkend="AtkText">AtkText</link>
if <parameter>link_</parameter> is a text hyperlink, <link linkend="AtkImage">AtkImage</link> if <parameter>link_</parameter> is an image
hyperlink etc. 
</para>
<para>
Multiple anchors are primarily used by client-side image maps.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>link_</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkHyperlink">AtkHyperlink</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&nbsp;:</term>
<listitem><simpara> a (zero-index) integer specifying the desired anchor
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> an <link linkend="AtkObject">AtkObject</link> associated with this hyperlinks i-th anchor
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-hyperlink-get-end-index">atk_hyperlink_get_end_index ()</title>
<programlisting><link linkend="gint">gint</link>        atk_hyperlink_get_end_index     (<link linkend="AtkHyperlink">AtkHyperlink</link> *link_);</programlisting>
<para>
Gets the index with the hypertext document at which this link ends.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>link_</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkHyperlink">AtkHyperlink</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the index with the hypertext document at which this link ends
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-hyperlink-get-start-index">atk_hyperlink_get_start_index ()</title>
<programlisting><link linkend="gint">gint</link>        atk_hyperlink_get_start_index   (<link linkend="AtkHyperlink">AtkHyperlink</link> *link_);</programlisting>
<para>
Gets the index with the hypertext document at which this link begins.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>link_</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkHyperlink">AtkHyperlink</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the index with the hypertext document at which this link begins
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-hyperlink-is-valid">atk_hyperlink_is_valid ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    atk_hyperlink_is_valid          (<link linkend="AtkHyperlink">AtkHyperlink</link> *link_);</programlisting>
<para>
Since the document that a link is associated with may have changed
this method returns <literal>TRUE</literal> if the link is still valid (with
respect to the document it references) and <literal>FALSE</literal> otherwise.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>link_</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkHyperlink">AtkHyperlink</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> whether or not this link is still valid
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-hyperlink-is-inline">atk_hyperlink_is_inline ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    atk_hyperlink_is_inline         (<link linkend="AtkHyperlink">AtkHyperlink</link> *link_);</programlisting>
<para>
Indicates whether the link currently displays some or all of its
          content inline.  Ordinary HTML links will usually return
          <literal>FALSE</literal>, but an inline &amp;lt;src&amp;gt; HTML element will return
          <literal>TRUE</literal>.
a *</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>link_</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkHyperlink">AtkHyperlink</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> whether or not this link displays its content inline.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="atk-hyperlink-get-n-anchors">atk_hyperlink_get_n_anchors ()</title>
<programlisting><link linkend="gint">gint</link>        atk_hyperlink_get_n_anchors     (<link linkend="AtkHyperlink">AtkHyperlink</link> *link_);</programlisting>
<para>
Gets the number of anchors associated with this hyperlink.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>link_</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="AtkHyperlink">AtkHyperlink</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the number of anchors associated with this hyperlink
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
