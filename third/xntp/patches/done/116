Received: from copland.udel.edu by huey.udel.edu id aa28257; 28 Mar 97 20:35 EST
Received: from socrates.ucsf.EDU (gregc@socrates.ucsf.EDU [128.218.27.3]) by copland.udel.edu (8.8.5/8.7.3) with ESMTP id UAA00484 for <mills@udel.edu>; Fri, 28 Mar 1997 20:35:21 -0500 (EST)
From: gregc@cgl.ucsf.edu
Received: (from gregc@localhost) by socrates.ucsf.EDU (8.8.5/GSC4.26)
	id RAA25778 for mills@udel.edu; Fri, 28 Mar 1997 17:35:15 -0800 (PST)
Date: Fri, 28 Mar 1997 17:35:15 -0800 (PST)
Message-Id: <199703290135.RAA25778@socrates.ucsf.EDU>
To: mills@udel.edu
Subject: bug fix for xntpd

We were having a problem with xntpd not listening on all addresses,
in particular on interface aliases, i.e. interfaces with more than
one address associated with them.  This became apparent with the
newer versions of the nameserver that round-robin all of the addresses
associated with a host -- we had one alias out of three addresses, so
one third of the time ntp wouldn't work.  Enclosed is the patch, it
removes an unnecessary ioctl and works like a charm.

	Greg Couch
	gregc@cgl.ucsf.edu

===================================================================
xntp3-5.89/xntpd
===================================================================
RCS file: RCS/ntp_io.c,v
retrieving revision 1.1
diff -r1.1 ntp_io.c
492,513c492
< # ifndef SYS_WINNT
< #  ifdef STREAMS_TLI
<       ioc.ic_cmd = SIOCGIFADDR;
<       ioc.ic_timout = 0;
<       ioc.ic_dp = (caddr_t)&ifreq;
<       ioc.ic_len = sizeof(struct ifreq);
<       if (ioctl(vs, I_STR, &ioc))
< 	{
< 	  msyslog(LOG_ERR, "Failed to get interface addr: %m");
< 	  continue;
< 	}
< #  else /* not STREAMS_TLI */
<       if (ioctl(vs, SIOCGIFADDR, (char *)&ifreq) < 0)
< 	{
< 	  msyslog(LOG_ERR, "Failed to get interface addr: %m");
< 	  continue;
< 	}
< #  endif /* not STREAMS_TLI */
< 
< # endif /* not SYS_WINNT */
< 
<       (void)strncpy(inter_list[i].name, ifreq.ifr_name,
---
>       (void)strncpy(inter_list[i].name, ifr->ifr_name,
515c494
<       inter_list[i].sin = *(struct sockaddr_in *)&ifreq.ifr_addr;
---
>       inter_list[i].sin = *(struct sockaddr_in *)&ifr->ifr_addr;
