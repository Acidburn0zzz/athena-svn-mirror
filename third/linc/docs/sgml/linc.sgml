<refentry id="linc-linc">
<refmeta>
<refentrytitle>linc</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LINC Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>linc</refname><refpurpose>the main setup and loop methods</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



extern      GMainLoop *<link linkend="linc-loop">linc_loop</link>;
void        <link linkend="linc-set-threaded">linc_set_threaded</link>               (<link linkend="gboolean">gboolean</link> threaded);
void        <link linkend="linc-init">linc_init</link>                       (<link linkend="gboolean">gboolean</link> init_threads);
<link linkend="LincWatch">LincWatch</link>*  <link linkend="linc-io-add-watch">linc_io_add_watch</link>               (<link linkend="GIOChannel">GIOChannel</link> *channel,
                                             <link linkend="GIOCondition">GIOCondition</link> condition,
                                             <link linkend="GIOFunc">GIOFunc</link> func,
                                             <link linkend="gpointer">gpointer</link> user_data);
void        <link linkend="linc-io-remove-watch">linc_io_remove_watch</link>            (<link linkend="LincWatch">LincWatch</link> *watch);
void        <link linkend="linc-main-iteration">linc_main_iteration</link>             (<link linkend="gboolean">gboolean</link> block_for_reply);
<link linkend="gboolean">gboolean</link>    <link linkend="linc-main-pending">linc_main_pending</link>               (void);
void        <link linkend="linc-main-loop-run">linc_main_loop_run</link>              (void);
</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="linc-loop">linc_loop</title>
<programlisting>extern GMainLoop *linc_loop;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="linc-set-threaded">linc_set_threaded ()</title>
<programlisting>void        linc_set_threaded               (<link linkend="gboolean">gboolean</link> threaded);</programlisting>
<para>
This routine turns threading on or off for the whole
ORB, it should be called (TRUE) if threading is desired
before any of the ORB initialization occurs.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>threaded</parameter>&nbsp;:</entry>
<entry> whether to do locking
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="linc-init">linc_init ()</title>
<programlisting>void        linc_init                       (<link linkend="gboolean">gboolean</link> init_threads);</programlisting>
<para>
Initialize linc.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>init_threads</parameter>&nbsp;:</entry>
<entry> if we want threading enabled.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="linc-io-add-watch">linc_io_add_watch ()</title>
<programlisting><link linkend="LincWatch">LincWatch</link>*  linc_io_add_watch               (<link linkend="GIOChannel">GIOChannel</link> *channel,
                                             <link linkend="GIOCondition">GIOCondition</link> condition,
                                             <link linkend="GIOFunc">GIOFunc</link> func,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
This routine creates a watch on an IO channel that operates both in
the standard glib mainloop, but also in the 'linc' mainloop so we
can iterate that without causing re-enterancy.
</para>
<para>
This method is deprecated.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>channel</parameter>&nbsp;:</entry>
<entry> the GIOChannel to watch
</entry></row>
<row><entry align="right"><parameter>condition</parameter>&nbsp;:</entry>
<entry> the condition mask to watch for
</entry></row>
<row><entry align="right"><parameter>func</parameter>&nbsp;:</entry>
<entry> the function to invoke when a condition is met
</entry></row>
<row><entry align="right"><parameter>user_data</parameter>&nbsp;:</entry>
<entry> a user data closure
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> a pointer identifying the watch.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="linc-io-remove-watch">linc_io_remove_watch ()</title>
<programlisting>void        linc_io_remove_watch            (<link linkend="LincWatch">LincWatch</link> *watch);</programlisting>
<para>
This removes a watch by it's handle in <parameter>w</parameter></para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>watch</parameter>&nbsp;:</entry>
<entry> the handle of a watch on a GIOChannel
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="linc-main-iteration">linc_main_iteration ()</title>
<programlisting>void        linc_main_iteration             (<link linkend="gboolean">gboolean</link> block_for_reply);</programlisting>
<para>
This routine iterates the linc mainloop, which has
only the linc sources registered against it.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>block_for_reply</parameter>&nbsp;:</entry>
<entry> whether we should wait for a reply
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="linc-main-pending">linc_main_pending ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    linc_main_pending               (void);</programlisting>
<para>
determines if the linc mainloop has any pending work to process.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> TRUE if the linc mainloop has any pending work to process.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="linc-main-loop-run">linc_main_loop_run ()</title>
<programlisting>void        linc_main_loop_run              (void);</programlisting>
<para>
Runs the linc mainloop; blocking until the loop is exited.</para>
<para>

</para></refsect2>

</refsect1>




</refentry>
