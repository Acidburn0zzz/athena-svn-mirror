<!-- ##### SECTION Title ##### -->
Glyph Storage

<!-- ##### SECTION Short_Description ##### -->
Structures for storing information about glyphs

<!-- ##### SECTION Long_Description ##### -->
<para>
pango_shape() produces a string of glyphs which
can be measured or drawn to the screen. The following
structures are used to store information about
glyphs.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### MACRO PANGO_SCALE ##### -->
<para>
The PANGO_SCALE macro represents the scale between dimensions used
for Pango distances and device units. (The definition of device
units is dependent on the output device; it will typically be pixels
for a screen, and points for a printer.) PANGO_SCALE is currently
1024, but this may be changed in the future.
</para>
<para>
When setting font sizes, device units are always considered to be
points (as in "12 point font"), rather than pixels. 
</para>



<!-- ##### MACRO PANGO_PIXELS ##### -->
<para>
Converts a dimension to device units.
</para>

@d: a dimension in Pango units.


<!-- ##### STRUCT PangoRectangle ##### -->
<para>
The #PangoRectangle structure represents a rectangle. It is frequently
used to represent the logical or ink extents of a single glyph or section
of text. (See, for instance, pango_font_get_glyph_extents())
</para>

@x: X coordinate of the left side of the rectangle.
@y: Y coordinate of the the top side of the rectangle.
@width: width of the rectangle.
@height: height of the rectangle.

<!-- ##### MACRO PANGO_ASCENT ##### -->
<para>
Extracts the <firstterm>ascent</firstterm> from a #PangoRectangle
representing glyph extents. The ascent is the distance from the
baseline to the highest point of the character. This is positive if the
glyph ascends above the baseline.
</para>

@rect: a #PangoRectangle


<!-- ##### MACRO PANGO_DESCENT ##### -->
<para>
Extracts the <firstterm>descent</firstterm> from a #PangoRectangle
representing glyph extents. The descent is the distance from the
baseline to the lowest point of the character. This is positive if the
glyph descends below the baseline.
</para>

@rect: a #PangoRectangle


<!-- ##### MACRO PANGO_LBEARING ##### -->
<para>
Extracts the <firstterm>left bearing</firstterm> from a #PangoRectangle
representing glyph extents. The left bearing is the distance from the
horizontal origin to the farthest left point of the character.
This is positive for characters drawn completely to the right of the
glyph origin.
</para>

@rect: a #PangoRectangle


<!-- ##### MACRO PANGO_RBEARING ##### -->
<para>
Extracts the <firstterm>right bearing</firstterm> from a #PangoRectangle
representing glyph extents. The right bearing is the distance from the
horizontal origin to the farthest right point of the character.
This is positive except for characters drawn completely to the left of the
horizontal origin.
</para>

@rect: a #PangoRectangle


<!-- ##### TYPEDEF PangoGlyph ##### -->
<para>
The #PangoGlyph structure represents a single glyph in the output
form of a string. It contains the following fields.

<informaltable pgwide="1" frame="none" role="struct">
<tgroup cols="2"><colspec colwidth="2*"/><colspec colwidth="8*"/>
<tbody>

<row>
<entry>#PangoGlyphIndex glyph;</entry>
<entry>the index of the glyph into the font. (Rendering system
       dependent).</entry>
</row>

<row>
<entry>#PangoCFont *font;</entry>
<entry>the rendering-system-specific font information for this glyph.</entry>
</row>

</tbody></tgroup></informaltable>
</para>


<!-- ##### STRUCT PangoGlyphInfo ##### -->
<para>
The #PangoGlyphInfo structure represents a single glyph together with
positioning information and visual attributes.
It contains the following fields.
</para>

@glyph: the glyph itself.
@geometry: the positional information about the glyph.
@attr: the visual attributes of the glyph.

<!-- ##### STRUCT PangoGlyphGeometry ##### -->
<para>
The #PangoGlyphGeometry structure contains width and positioning
information for a single glyph. Distances are in
1/64ths of a point.

<informaltable pgwide="1" frame="none" role="struct">
<tgroup cols="2"><colspec colwidth="2*"/><colspec colwidth="8*"/>
<tbody>

<row>
<entry>#PangoGlyphUnit width;</entry>
<entry>the logical width to use for the the character.</entry>
</row>

<row>
<entry>#PangoCFont *x_offset;</entry>
<entry>horizontal offset from nominal character position.</entry>
</row>

<row>
<entry>#PangoCFont *y_offset;</entry>
<entry>vertical offset from nominal character position.</entry>
</row>

</tbody></tgroup></informaltable>
</para>

@width: 
@x_offset: 
@y_offset: 

<!-- ##### TYPEDEF PangoGlyphUnit ##### -->
<para>
The #PangoGlyphUnit type is used to store dimensions within
Pango. Dimensions are stored in 1/PANGO_SCALE of a device unit.
(A device unit might be a pixel for screen display, or
a point on a printer.) PANGO_SCALE is currently 1024, and
is unlikely to change, but you should not depend on its
exact value. The PANGO_PIXELS() macro can be used to convert
from glyph units into device units with correct rounding.
</para>


<!-- ##### STRUCT PangoGlyphVisAttr ##### -->
<para>
The PangoGlyphVisAttr is used to communicate information between
the shaping phase and the rendering phase. It's contents
are still evolving.

<informaltable pgwide="1" frame="none" role="struct">
<tgroup cols="2"><colspec colwidth="2*"/><colspec colwidth="8*"/>
<tbody>

<row>
<entry>#guint is_cluster_start : 1;</entry>
<entry>set for the first logical glyph in each cluster. (Clusters
       are stored in visual order, within the cluster, glyphs
       are always ordered in logical order, since visual
       order is meaningless; that is, in Arabic text, accent glyphs
       follow the glyphs for the base character.)
</entry>
</row>

</tbody></tgroup></informaltable>
</para>

@is_cluster_start: 

<!-- ##### STRUCT PangoGlyphString ##### -->
<para>
The #PangoGlyphString structure is used to store strings
of glyphs with geometry and visual attribute information.
The storage for the glyph information is owned
by the structure which simplifies memory management.
</para>
<para>
#PangoGlyphString contains the following publically
accessible fields

<informaltable pgwide="1" frame="none" role="struct">
<tgroup cols="2"><colspec colwidth="2*"/><colspec colwidth="8*"/>
<tbody>

<row>
<entry>gint #num_glyphs;</entry>
<entry>the number of glyphs in the string.</entry>
</row>

<row>
<entry>PangoGlyphInfo *#glyphs;</entry>
<entry>an array of #PangoGlyphInfo structures of length <structfield>num_glyphs</structfield>.</entry>
</row>

<row>
<entry>gint *#log_clusters;</entry>
<entry>for each glyph, byte index of the starting character for the
cluster. The indices are relative to the start of the text
corresponding to the PangoGlyphString.</entry>
</row>

</tbody></tgroup></informaltable>
</para>

@num_glyphs: 
@glyphs: 
@log_clusters: 

<!-- ##### STRUCT PangoGlyphItem ##### -->
<para>
A #PangoGlyphItem is a pair of a #PangoItem and the glyphs
resulting from shaping the text corresponding to an item.
As an example of the usage of #PangoGlyphItem, the results
of shaping text with #PangoLayout is a list of #PangoLayoutLine,
each of which contains a list of #PangoGlyphItem.
</para>

@item: a #PangoItem structure that provides information
       about a segment of text.
@glyphs: the glyphs obtained by shaping the text
         corresponding to @item.

<!-- ##### MACRO PANGO_TYPE_GLYPH_STRING ##### -->
<para>
The GObject type for #PangoGlyphString.
</para>



<!-- ##### FUNCTION pango_glyph_string_new ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION pango_glyph_string_copy ##### -->
<para>

</para>

@string: 
@Returns: 


<!-- ##### FUNCTION pango_glyph_string_set_size ##### -->
<para>

</para>

@string: 
@new_len: 


<!-- ##### FUNCTION pango_glyph_string_free ##### -->
<para>

</para>

@string: 


<!-- ##### FUNCTION pango_glyph_string_extents ##### -->
<para>

</para>

@glyphs: 
@font: 
@ink_rect: 
@logical_rect: 


<!-- ##### FUNCTION pango_glyph_string_extents_range ##### -->
<para>

</para>

@glyphs: 
@start: 
@end: 
@font: 
@ink_rect: 
@logical_rect: 


<!-- ##### FUNCTION pango_glyph_string_index_to_x ##### -->
<para>

</para>

@glyphs: 
@text: 
@length: 
@analysis: 
@index_: 
@trailing: 
@x_pos: 


<!-- ##### FUNCTION pango_glyph_string_x_to_index ##### -->
<para>

</para>

@glyphs: 
@text: 
@length: 
@analysis: 
@x_pos: 
@index_: 
@trailing: 


<!-- ##### FUNCTION pango_glyph_string_get_logical_widths ##### -->
<para>

</para>

@glyphs: 
@text: 
@length: 
@embedding_level: 
@logical_widths: 


<!-- ##### FUNCTION pango_glyph_item_split ##### -->
<para>

</para>

@orig: 
@text: 
@split_index: 
@Returns: 


<!-- ##### FUNCTION pango_glyph_item_apply_attrs ##### -->
<para>

</para>

@glyph_item: 
@text: 
@list: 
@Returns: 


