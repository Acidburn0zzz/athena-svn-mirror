<refentry id="pango-Xft-Fonts-and-Rendering">
<refmeta>
<refentrytitle>Xft Fonts and Rendering</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>PANGO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Xft Fonts and Rendering</refname><refpurpose>Functions for shape engines to manipulate Xft fonts</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



#define     <link linkend="PANGO-RENDER-TYPE-XFT-CAPS">PANGO_RENDER_TYPE_XFT</link>
<link linkend="PangoContext">PangoContext</link>* <link linkend="pango-xft-get-context">pango_xft_get_context</link>         (<link linkend="Display">Display</link> *display,
                                             int screen);
<link linkend="PangoFontMap">PangoFontMap</link>* <link linkend="pango-xft-get-font-map">pango_xft_get_font_map</link>        (<link linkend="Display">Display</link> *display,
                                             int screen);
void        <link linkend="pango-xft-set-default-substitute">pango_xft_set_default_substitute</link>
                                            (<link linkend="Display">Display</link> *display,
                                             int screen,
                                             <link linkend="PangoXftSubstituteFunc">PangoXftSubstituteFunc</link> func,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="GDestroyNotify">GDestroyNotify</link> notify);
void        (<link linkend="PangoXftSubstituteFunc">*PangoXftSubstituteFunc</link>)       (<link linkend="FcPattern">FcPattern</link> *pattern,
                                             <link linkend="gpointer">gpointer</link> data);
void        <link linkend="pango-xft-substitute-changed">pango_xft_substitute_changed</link>    (<link linkend="Display">Display</link> *display,
                                             int screen);
void        <link linkend="pango-xft-shutdown-display">pango_xft_shutdown_display</link>      (<link linkend="Display">Display</link> *display,
                                             int screen);
void        <link linkend="pango-xft-render">pango_xft_render</link>                (<link linkend="XftDraw">XftDraw</link> *draw,
                                             <link linkend="XftColor">XftColor</link> *color,
                                             <link linkend="PangoFont">PangoFont</link> *font,
                                             <link linkend="PangoGlyphString">PangoGlyphString</link> *glyphs,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y);
void        <link linkend="pango-xft-picture-render">pango_xft_picture_render</link>        (<link linkend="Display">Display</link> *display,
                                             <link linkend="Picture">Picture</link> src_picture,
                                             <link linkend="Picture">Picture</link> dest_picture,
                                             <link linkend="PangoFont">PangoFont</link> *font,
                                             <link linkend="PangoGlyphString">PangoGlyphString</link> *glyphs,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y);
<link linkend="XftFont">XftFont</link>*    <link linkend="pango-xft-font-get-font">pango_xft_font_get_font</link>         (<link linkend="PangoFont">PangoFont</link> *font);
<link linkend="Display">Display</link>*    <link linkend="pango-xft-font-get-display">pango_xft_font_get_display</link>      (<link linkend="PangoFont">PangoFont</link> *font);
<link linkend="gboolean">gboolean</link>    <link linkend="pango-xft-font-has-char">pango_xft_font_has_char</link>         (<link linkend="PangoFont">PangoFont</link> *font,
                                             <link linkend="gunichar">gunichar</link> wc);
<link linkend="FT-Face">FT_Face</link>     <link linkend="pango-xft-font-lock-face">pango_xft_font_lock_face</link>        (<link linkend="PangoFont">PangoFont</link> *font);
void        <link linkend="pango-xft-font-unlock-face">pango_xft_font_unlock_face</link>      (<link linkend="PangoFont">PangoFont</link> *font);
<link linkend="guint">guint</link>       <link linkend="pango-xft-font-get-glyph">pango_xft_font_get_glyph</link>        (<link linkend="PangoFont">PangoFont</link> *font,
                                             <link linkend="gunichar">gunichar</link> wc);
<link linkend="PangoGlyph">PangoGlyph</link>  <link linkend="pango-xft-font-get-unknown-glyph">pango_xft_font_get_unknown_glyph</link>
                                            (<link linkend="PangoFont">PangoFont</link> *font,
                                             <link linkend="gunichar">gunichar</link> wc);


</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="PANGO-RENDER-TYPE-XFT-CAPS"/>PANGO_RENDER_TYPE_XFT</title>
<programlisting>#define PANGO_RENDER_TYPE_XFT "PangoRenderXft"
</programlisting>
<para>
A string constant identifying the Xft renderer. The associated quark (see
<link linkend="g-quark-from-string">g_quark_from_string</link>()) is used to identify the renderer in <link linkend="pango-find-map">pango_find_map</link>().
</para></refsect2>
<refsect2>
<title><anchor id="pango-xft-get-context"/>pango_xft_get_context ()</title>
<programlisting><link linkend="PangoContext">PangoContext</link>* pango_xft_get_context         (<link linkend="Display">Display</link> *display,
                                             int screen);</programlisting>
<para>
Retrieves a <link linkend="PangoContext">PangoContext</link> appropriate for rendering with
Xft fonts on the given screen of the given display.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>display</parameter>&nbsp;:</term>
<listitem><simpara> an X display.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> an X screen.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the new <link linkend="PangoContext">PangoContext</link>. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pango-xft-get-font-map"/>pango_xft_get_font_map ()</title>
<programlisting><link linkend="PangoFontMap">PangoFontMap</link>* pango_xft_get_font_map        (<link linkend="Display">Display</link> *display,
                                             int screen);</programlisting>
<para>
Returns the <link linkend="PangoXftFontmap">PangoXftFontmap</link> for the given display and screen.
The fontmap is owned by Pango and will be valid until
the display is closed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>display</parameter>&nbsp;:</term>
<listitem><simpara> an X display
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> the screen number of a screen within <parameter>display</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a <link linkend="PangoFontMap">PangoFontMap</link> object, owned by Pango.

</simpara></listitem></varlistentry>
</variablelist><para>Since  1.2
</para></refsect2>
<refsect2>
<title><anchor id="pango-xft-set-default-substitute"/>pango_xft_set_default_substitute ()</title>
<programlisting>void        pango_xft_set_default_substitute
                                            (<link linkend="Display">Display</link> *display,
                                             int screen,
                                             <link linkend="PangoXftSubstituteFunc">PangoXftSubstituteFunc</link> func,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="GDestroyNotify">GDestroyNotify</link> notify);</programlisting>
<para>
Sets a function that will be called to do final configuration
substitution on a <link linkend="FcPattern">FcPattern</link> before it is used to load
the font. This function can be used to do things like set
hinting and antiasing options.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>display</parameter>&nbsp;:</term>
<listitem><simpara> an X Display
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> the screen number of a screen within <parameter>display</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara> function to call to to do final config tweaking
       on <link linkend="FcPattern">FcPattern</link> objects.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> data to pass to <parameter>func</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>notify</parameter>&nbsp;:</term>
<listitem><simpara> function to call when <parameter>data</parameter> is no longer used.
</simpara></listitem></varlistentry>
</variablelist><para>Since  1.2
</para></refsect2>
<refsect2>
<title><anchor id="PangoXftSubstituteFunc"/>PangoXftSubstituteFunc ()</title>
<programlisting>void        (*PangoXftSubstituteFunc)       (<link linkend="FcPattern">FcPattern</link> *pattern,
                                             <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
Function type for doing final config tweaking on prepared FcPatterns.
</para><variablelist role="params">
<varlistentry><term><parameter>pattern</parameter>&nbsp;:</term>
<listitem><simpara>the FcPattern to tweak.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>user data.


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pango-xft-substitute-changed"/>pango_xft_substitute_changed ()</title>
<programlisting>void        pango_xft_substitute_changed    (<link linkend="Display">Display</link> *display,
                                             int screen);</programlisting>
<para>
Call this function any time the results of the
default substitution function set with
<link linkend="pango-xft-set-default-substitute">pango_xft_set_default_substitute</link>() change.
That is, if your subsitution function will return different
results for the same input pattern, you must call this function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>display</parameter>&nbsp;:</term>
<listitem><simpara> an X Display
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> the screen number of a screen within <parameter>display</parameter>
</simpara></listitem></varlistentry>
</variablelist><para>Since  1.2
</para></refsect2>
<refsect2>
<title><anchor id="pango-xft-shutdown-display"/>pango_xft_shutdown_display ()</title>
<programlisting>void        pango_xft_shutdown_display      (<link linkend="Display">Display</link> *display,
                                             int screen);</programlisting>
<para>
Release any resources that have been cached for the
combination of <parameter>display</parameter> and <parameter>screen</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>display</parameter>&nbsp;:</term>
<listitem><simpara> an X display
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> the screen number of a screen within <parameter>display</parameter>
</simpara></listitem></varlistentry>
</variablelist><para>Since  1.2
</para></refsect2>
<refsect2>
<title><anchor id="pango-xft-render"/>pango_xft_render ()</title>
<programlisting>void        pango_xft_render                (<link linkend="XftDraw">XftDraw</link> *draw,
                                             <link linkend="XftColor">XftColor</link> *color,
                                             <link linkend="PangoFont">PangoFont</link> *font,
                                             <link linkend="PangoGlyphString">PangoGlyphString</link> *glyphs,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y);</programlisting>
<para>
Renders a <link linkend="PangoGlyphString">PangoGlyphString</link> onto an <type>XftDraw</type> object wrapping an X drawable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>draw</parameter>&nbsp;:</term>
<listitem><simpara>    the <type>XftDraw</type> object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>color</parameter>&nbsp;:</term>
<listitem><simpara>   the color in which to draw the string
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>    the font in which to draw the string
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyphs</parameter>&nbsp;:</term>
<listitem><simpara>  the glyph string to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara>       the x position of start of string (in pixels)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara>       the y position of baseline (in pixels)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pango-xft-picture-render"/>pango_xft_picture_render ()</title>
<programlisting>void        pango_xft_picture_render        (<link linkend="Display">Display</link> *display,
                                             <link linkend="Picture">Picture</link> src_picture,
                                             <link linkend="Picture">Picture</link> dest_picture,
                                             <link linkend="PangoFont">PangoFont</link> *font,
                                             <link linkend="PangoGlyphString">PangoGlyphString</link> *glyphs,
                                             <link linkend="gint">gint</link> x,
                                             <link linkend="gint">gint</link> y);</programlisting>
<para>
Renders a <link linkend="PangoGlyphString">PangoGlyphString</link> onto an Xrender <type>Picture</type> object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>display</parameter>&nbsp;:</term>
<listitem><simpara>      an X display
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src_picture</parameter>&nbsp;:</term>
<listitem><simpara>  the source picture to draw the string with
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dest_picture</parameter>&nbsp;:</term>
<listitem><simpara> the destination picture to draw the strign onto
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara>         the font in which to draw the string
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>glyphs</parameter>&nbsp;:</term>
<listitem><simpara>       the glyph string to draw
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara>            the x position of start of string (in pixels)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara>            the y position of baseline (in pixels)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pango-xft-font-get-font"/>pango_xft_font_get_font ()</title>
<programlisting><link linkend="XftFont">XftFont</link>*    pango_xft_font_get_font         (<link linkend="PangoFont">PangoFont</link> *font);</programlisting>
<para>
Returns the XftFont of a font.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoFont">PangoFont</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the XftFont associated to <parameter>font</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pango-xft-font-get-display"/>pango_xft_font_get_display ()</title>
<programlisting><link linkend="Display">Display</link>*    pango_xft_font_get_display      (<link linkend="PangoFont">PangoFont</link> *font);</programlisting>
<para>
Returns the X display of the XftFont of a font.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoFont">PangoFont</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the X display of the XftFont associated to <parameter>font</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pango-xft-font-has-char"/>pango_xft_font_has_char ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    pango_xft_font_has_char         (<link linkend="PangoFont">PangoFont</link> *font,
                                             <link linkend="gunichar">gunichar</link> wc);</programlisting>
<para>
Determines whether <parameter>font</parameter> has a glyph for the codepoint <parameter>wc</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoFont">PangoFont</link> for the Xft backend
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>wc</parameter>&nbsp;:</term>
<listitem><simpara> Unicode codepoint to look up
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> <literal>TRUE</literal> if <parameter>font</parameter> has the requested codepoint.

</simpara></listitem></varlistentry>
</variablelist><para>Since  1.2
</para></refsect2>
<refsect2>
<title><anchor id="pango-xft-font-lock-face"/>pango_xft_font_lock_face ()</title>
<programlisting><link linkend="FT-Face">FT_Face</link>     pango_xft_font_lock_face        (<link linkend="PangoFont">PangoFont</link> *font);</programlisting>
<para>
Gets the FreeType FT_Face associated with a font,
This face will be kept around until you call
<link linkend="pango-xft-font-unlock-face">pango_xft_font_unlock_face</link>().</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoFont">PangoFont</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the FreeType FT_Face associated with <parameter>font</parameter>.

</simpara></listitem></varlistentry>
</variablelist><para>Since  1.2
</para></refsect2>
<refsect2>
<title><anchor id="pango-xft-font-unlock-face"/>pango_xft_font_unlock_face ()</title>
<programlisting>void        pango_xft_font_unlock_face      (<link linkend="PangoFont">PangoFont</link> *font);</programlisting>
<para>
Releases a font previously obtained with
<link linkend="pango-xft-font-lock-face">pango_xft_font_lock_face</link>().</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoFont">PangoFont</link>.
</simpara></listitem></varlistentry>
</variablelist><para>Since  1.2
</para></refsect2>
<refsect2>
<title><anchor id="pango-xft-font-get-glyph"/>pango_xft_font_get_glyph ()</title>
<programlisting><link linkend="guint">guint</link>       pango_xft_font_get_glyph        (<link linkend="PangoFont">PangoFont</link> *font,
                                             <link linkend="gunichar">gunichar</link> wc);</programlisting>
<para>
Gets the glyph index for a given unicode codepoint
for <parameter>font</parameter>. If you only want to determine
whether the font has the glyph, use <link linkend="pango-xft-font-has-char">pango_xft_font_has_char</link>().</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoFont">PangoFont</link> for the Xft backend
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>wc</parameter>&nbsp;:</term>
<listitem><simpara> Unicode codepoint to look up
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the glyph index, or 0, if the unicode
 codepoint doesn't exist in the font.

</simpara></listitem></varlistentry>
</variablelist><para>Since  1.2
</para></refsect2>
<refsect2>
<title><anchor id="pango-xft-font-get-unknown-glyph"/>pango_xft_font_get_unknown_glyph ()</title>
<programlisting><link linkend="PangoGlyph">PangoGlyph</link>  pango_xft_font_get_unknown_glyph
                                            (<link linkend="PangoFont">PangoFont</link> *font,
                                             <link linkend="gunichar">gunichar</link> wc);</programlisting>
<para>
Returns the index of a glyph suitable for drawing <parameter>wc</parameter> as an
unknown character.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>font</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoFont">PangoFont</link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>wc</parameter>&nbsp;:</term>
<listitem><simpara> the Unicode character for which a glyph is needed.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a glyph index into <parameter>font</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
