<refentry id="pango-Tab-Stops">
<refmeta>
<refentrytitle>Tab Stops</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>PANGO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Tab Stops</refname><refpurpose>Structures for storing Tab Stops</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



struct      <link linkend="PangoTabArray">PangoTabArray</link>;
#define     <link linkend="PANGO-TYPE-TAB-ARRAY-CAPS">PANGO_TYPE_TAB_ARRAY</link>
enum        <link linkend="PangoTabAlign">PangoTabAlign</link>;
#define     <link linkend="PANGO-TYPE-TAB-ALIGN-CAPS">PANGO_TYPE_TAB_ALIGN</link>
<link linkend="PangoTabArray">PangoTabArray</link>* <link linkend="pango-tab-array-new">pango_tab_array_new</link>          (<link linkend="gint">gint</link> initial_size,
                                             <link linkend="gboolean">gboolean</link> positions_in_pixels);
<link linkend="PangoTabArray">PangoTabArray</link>* <link linkend="pango-tab-array-new-with-positions">pango_tab_array_new_with_positions</link>
                                            (<link linkend="gint">gint</link> size,
                                             <link linkend="gboolean">gboolean</link> positions_in_pixels,
                                             <link linkend="PangoTabAlign">PangoTabAlign</link> first_alignment,
                                             <link linkend="gint">gint</link> first_position,
                                             ...);
<link linkend="PangoTabArray">PangoTabArray</link>* <link linkend="pango-tab-array-copy">pango_tab_array_copy</link>         (<link linkend="PangoTabArray">PangoTabArray</link> *src);
void        <link linkend="pango-tab-array-free">pango_tab_array_free</link>            (<link linkend="PangoTabArray">PangoTabArray</link> *tab_array);
<link linkend="gint">gint</link>        <link linkend="pango-tab-array-get-size">pango_tab_array_get_size</link>        (<link linkend="PangoTabArray">PangoTabArray</link> *tab_array);
void        <link linkend="pango-tab-array-resize">pango_tab_array_resize</link>          (<link linkend="PangoTabArray">PangoTabArray</link> *tab_array,
                                             <link linkend="gint">gint</link> new_size);
void        <link linkend="pango-tab-array-set-tab">pango_tab_array_set_tab</link>         (<link linkend="PangoTabArray">PangoTabArray</link> *tab_array,
                                             <link linkend="gint">gint</link> tab_index,
                                             <link linkend="PangoTabAlign">PangoTabAlign</link> alignment,
                                             <link linkend="gint">gint</link> location);
void        <link linkend="pango-tab-array-get-tab">pango_tab_array_get_tab</link>         (<link linkend="PangoTabArray">PangoTabArray</link> *tab_array,
                                             <link linkend="gint">gint</link> tab_index,
                                             <link linkend="PangoTabAlign">PangoTabAlign</link> *alignment,
                                             <link linkend="gint">gint</link> *location);
void        <link linkend="pango-tab-array-get-tabs">pango_tab_array_get_tabs</link>        (<link linkend="PangoTabArray">PangoTabArray</link> *tab_array,
                                             <link linkend="PangoTabAlign">PangoTabAlign</link> **alignments,
                                             <link linkend="gint">gint</link> **locations);
<link linkend="gboolean">gboolean</link>    <link linkend="pango-tab-array-get-positions-in-pixels">pango_tab_array_get_positions_in_pixels</link>
                                            (<link linkend="PangoTabArray">PangoTabArray</link> *tab_array);

</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="PangoTabArray"/>struct PangoTabArray</title>
<programlisting>struct PangoTabArray;</programlisting>
<para>
A <structname>PangoTabArray</structname> struct contains an array
of tab stops. Each tab stop has an alignment and a position.
</para></refsect2>
<refsect2>
<title><anchor id="PANGO-TYPE-TAB-ARRAY-CAPS"/>PANGO_TYPE_TAB_ARRAY</title>
<programlisting>#define PANGO_TYPE_TAB_ARRAY (pango_tab_array_get_type ())
</programlisting>
<para>
The GObject type for <link linkend="PangoTabArray">PangoTabArray</link>.
</para></refsect2>
<refsect2>
<title><anchor id="PangoTabAlign"/>enum PangoTabAlign</title>
<programlisting>typedef enum
{
  PANGO_TAB_LEFT

  /* These are not supported now, but may be in the
   * future.
   *
   *  PANGO_TAB_RIGHT,
   *  PANGO_TAB_CENTER,
   *  PANGO_TAB_NUMERIC
   */
} PangoTabAlign;
</programlisting>
<para>
A <link linkend="PangoTabAlign">PangoTabAlign</link> specifies where a tab stop appears relative to the text.
</para><variablelist role="enum">
<varlistentry>
<term><literal>PANGO_TAB_LEFT</literal></term>
<listitem><simpara>the tab stop appears to the left of the text.

</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="PANGO-TYPE-TAB-ALIGN-CAPS"/>PANGO_TYPE_TAB_ALIGN</title>
<programlisting>#define PANGO_TYPE_TAB_ALIGN (pango_tab_align_get_type())
</programlisting>
<para>
The GObject type for <link linkend="PangoTabAlign">PangoTabAlign</link>.
</para></refsect2>
<refsect2>
<title><anchor id="pango-tab-array-new"/>pango_tab_array_new ()</title>
<programlisting><link linkend="PangoTabArray">PangoTabArray</link>* pango_tab_array_new          (<link linkend="gint">gint</link> initial_size,
                                             <link linkend="gboolean">gboolean</link> positions_in_pixels);</programlisting>
<para>
Creates an array of <parameter>initial_size</parameter> tab stops. Tab stops are specified in
pixel units if <parameter>positions_in_pixels</parameter> is TRUE, otherwise in Pango
units. All stops are initially at position 0.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>initial_size</parameter>&nbsp;:</term>
<listitem><simpara> Initial number of tab stops to allocate, can be 0
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>positions_in_pixels</parameter>&nbsp;:</term>
<listitem><simpara> whether positions are in pixel units
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a <link linkend="PangoTabArray">PangoTabArray</link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pango-tab-array-new-with-positions"/>pango_tab_array_new_with_positions ()</title>
<programlisting><link linkend="PangoTabArray">PangoTabArray</link>* pango_tab_array_new_with_positions
                                            (<link linkend="gint">gint</link> size,
                                             <link linkend="gboolean">gboolean</link> positions_in_pixels,
                                             <link linkend="PangoTabAlign">PangoTabAlign</link> first_alignment,
                                             <link linkend="gint">gint</link> first_position,
                                             ...);</programlisting>
<para>
This is a convenience function that creates a <link linkend="PangoTabArray">PangoTabArray</link>
and allows you to specify the alignment and position of each
tab stop. You <emphasis>must</emphasis> provide an alignment
and position for <parameter>size</parameter> tab stops.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara> number of tab stops in the array
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>positions_in_pixels</parameter>&nbsp;:</term>
<listitem><simpara> whether positions are in pixel units
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>first_alignment</parameter>&nbsp;:</term>
<listitem><simpara> alignment of first tab stop
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>first_position</parameter>&nbsp;:</term>
<listitem><simpara> position of first tab stop
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> additional alignment/position pairs
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a new <link linkend="PangoTabArray">PangoTabArray</link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pango-tab-array-copy"/>pango_tab_array_copy ()</title>
<programlisting><link linkend="PangoTabArray">PangoTabArray</link>* pango_tab_array_copy         (<link linkend="PangoTabArray">PangoTabArray</link> *src);</programlisting>
<para>
Copy a <link linkend="PangoTabArray">PangoTabArray</link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="PangoTabArray">PangoTabArray</link> to copy
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> Newly-allocated <link linkend="PangoTabArray">PangoTabArray</link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pango-tab-array-free"/>pango_tab_array_free ()</title>
<programlisting>void        pango_tab_array_free            (<link linkend="PangoTabArray">PangoTabArray</link> *tab_array);</programlisting>
<para>
Free a tab array and associated resources.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tab_array</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoTabArray">PangoTabArray</link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pango-tab-array-get-size"/>pango_tab_array_get_size ()</title>
<programlisting><link linkend="gint">gint</link>        pango_tab_array_get_size        (<link linkend="PangoTabArray">PangoTabArray</link> *tab_array);</programlisting>
<para>
Get the number of tab stops in <parameter>tab_array</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tab_array</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoTabArray">PangoTabArray</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> the number of tab stops in the array.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pango-tab-array-resize"/>pango_tab_array_resize ()</title>
<programlisting>void        pango_tab_array_resize          (<link linkend="PangoTabArray">PangoTabArray</link> *tab_array,
                                             <link linkend="gint">gint</link> new_size);</programlisting>
<para>
Resizes a tab array. You must subsequently initialize any tabs that
were added as a result of growing the array.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tab_array</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoTabArray">PangoTabArray</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>new_size</parameter>&nbsp;:</term>
<listitem><simpara> new size of the array
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pango-tab-array-set-tab"/>pango_tab_array_set_tab ()</title>
<programlisting>void        pango_tab_array_set_tab         (<link linkend="PangoTabArray">PangoTabArray</link> *tab_array,
                                             <link linkend="gint">gint</link> tab_index,
                                             <link linkend="PangoTabAlign">PangoTabAlign</link> alignment,
                                             <link linkend="gint">gint</link> location);</programlisting>
<para>
Sets the alignment and location of a tab stop.
<parameter>alignment</parameter> must always be <link linkend="PANGO-TAB-LEFT-CAPS">PANGO_TAB_LEFT</link> in the current
implementation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tab_array</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoTabArray">PangoTabArray</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tab_index</parameter>&nbsp;:</term>
<listitem><simpara> the index of a tab stop
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>alignment</parameter>&nbsp;:</term>
<listitem><simpara> tab alignment
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>location</parameter>&nbsp;:</term>
<listitem><simpara> tab location in pango units
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pango-tab-array-get-tab"/>pango_tab_array_get_tab ()</title>
<programlisting>void        pango_tab_array_get_tab         (<link linkend="PangoTabArray">PangoTabArray</link> *tab_array,
                                             <link linkend="gint">gint</link> tab_index,
                                             <link linkend="PangoTabAlign">PangoTabAlign</link> *alignment,
                                             <link linkend="gint">gint</link> *location);</programlisting>
<para>
Gets the alignment and position of a tab stop.
<parameter>alignment</parameter> or <parameter>location</parameter> may be NULL if you aren't
interested in their value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tab_array</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoTabArray">PangoTabArray</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tab_index</parameter>&nbsp;:</term>
<listitem><simpara> tab stop index
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>alignment</parameter>&nbsp;:</term>
<listitem><simpara> location to store alignment
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>location</parameter>&nbsp;:</term>
<listitem><simpara> location to store tab position
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pango-tab-array-get-tabs"/>pango_tab_array_get_tabs ()</title>
<programlisting>void        pango_tab_array_get_tabs        (<link linkend="PangoTabArray">PangoTabArray</link> *tab_array,
                                             <link linkend="PangoTabAlign">PangoTabAlign</link> **alignments,
                                             <link linkend="gint">gint</link> **locations);</programlisting>
<para>
If non-NULL, <parameter>alignments</parameter> and <parameter>locations</parameter> are filled with allocated
arrays of length <link linkend="pango-tab-array-get-size">pango_tab_array_get_size</link>(). You must free the
returned array.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tab_array</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoTabArray">PangoTabArray</link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>alignments</parameter>&nbsp;:</term>
<listitem><simpara> location to store an array of tab stop alignments
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>locations</parameter>&nbsp;:</term>
<listitem><simpara> location to store an array of tab positions
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="pango-tab-array-get-positions-in-pixels"/>pango_tab_array_get_positions_in_pixels ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    pango_tab_array_get_positions_in_pixels
                                            (<link linkend="PangoTabArray">PangoTabArray</link> *tab_array);</programlisting>
<para>
Returns TRUE if the tab positions are in pixels, FALSE if they are
in Pango units.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tab_array</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PangoTabArray">PangoTabArray</link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> whether positions are in pixels
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
