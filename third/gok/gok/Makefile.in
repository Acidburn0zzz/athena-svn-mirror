# Makefile.in generated by automake 1.7.9 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BONOBO_ACTIVATION_IDL_DIR = @BONOBO_ACTIVATION_IDL_DIR@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DATADIRNAME = @DATADIRNAME@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_GTK_DOC_FALSE = @ENABLE_GTK_DOC_FALSE@
ENABLE_GTK_DOC_TRUE = @ENABLE_GTK_DOC_TRUE@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GCONF_SCHEMAS_INSTALL_FALSE = @GCONF_SCHEMAS_INSTALL_FALSE@
GCONF_SCHEMAS_INSTALL_TRUE = @GCONF_SCHEMAS_INSTALL_TRUE@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GNOME_ACLOCAL_DIR = @GNOME_ACLOCAL_DIR@
GNOME_ACLOCAL_FLAGS = @GNOME_ACLOCAL_FLAGS@
GOK_BINARY_AGE = @GOK_BINARY_AGE@
GOK_CFLAGS = @GOK_CFLAGS@
GOK_INTERFACE_AGE = @GOK_INTERFACE_AGE@
GOK_LIBS = @GOK_LIBS@
GOK_MAJOR_VERSION = @GOK_MAJOR_VERSION@
GOK_MICRO_VERSION = @GOK_MICRO_VERSION@
GOK_MINOR_VERSION = @GOK_MINOR_VERSION@
GTK_DOC_USE_LIBTOOL_FALSE = @GTK_DOC_USE_LIBTOOL_FALSE@
GTK_DOC_USE_LIBTOOL_TRUE = @GTK_DOC_USE_LIBTOOL_TRUE@
HTML_DIR = @HTML_DIR@
INSIDE_GNOME_DOCU_FALSE = @INSIDE_GNOME_DOCU_FALSE@
INSIDE_GNOME_DOCU_TRUE = @INSIDE_GNOME_DOCU_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_CAVES_RULE = @INTLTOOL_CAVES_RULE@
INTLTOOL_DESKTOP_RULE = @INTLTOOL_DESKTOP_RULE@
INTLTOOL_DIRECTORY_RULE = @INTLTOOL_DIRECTORY_RULE@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_KBD_RULE = @INTLTOOL_KBD_RULE@
INTLTOOL_KEYS_RULE = @INTLTOOL_KEYS_RULE@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_OAF_RULE = @INTLTOOL_OAF_RULE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_PONG_RULE = @INTLTOOL_PONG_RULE@
INTLTOOL_PROP_RULE = @INTLTOOL_PROP_RULE@
INTLTOOL_SCHEMAS_RULE = @INTLTOOL_SCHEMAS_RULE@
INTLTOOL_SERVER_RULE = @INTLTOOL_SERVER_RULE@
INTLTOOL_SHEET_RULE = @INTLTOOL_SHEET_RULE@
INTLTOOL_SOUNDLIST_RULE = @INTLTOOL_SOUNDLIST_RULE@
INTLTOOL_THEME_RULE = @INTLTOOL_THEME_RULE@
INTLTOOL_UI_RULE = @INTLTOOL_UI_RULE@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_XAM_RULE = @INTLTOOL_XAM_RULE@
INTLTOOL_XML_RULE = @INTLTOOL_XML_RULE@
LDFLAGS = @LDFLAGS@
LIBBONOBO_IDL_DIR = @LIBBONOBO_IDL_DIR@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_AGE = @LT_AGE@
LT_CURRENT = @LT_CURRENT@
LT_RELEASE = @LT_RELEASE@
LT_REVISION = @LT_REVISION@
LT_VERSION_INFO = @LT_VERSION_INFO@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
OBJEXT = @OBJEXT@
ORBIT_IDL = @ORBIT_IDL@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
RANLIB = @RANLIB@
SCROLLKEEPER_CONFIG = @SCROLLKEEPER_CONFIG@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WARN_CFLAGS = @WARN_CFLAGS@
XGETTEXT = @XGETTEXT@
XINPUT_LIBS = @XINPUT_LIBS@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
bin_PROGRAMS = gok create-branching-keyboard

noinst_PROGRAMS = test-gok-action test-gok-feedback test-gok-sound test-gok-bounds test-gok-wordcomplete keyboard-geometry 

serverdir = $(libdir)/bonobo/servers
server_in_files = GNOME_Gok.server.in.in
server_DATA = $(server_in_files:.server.in.in=.server)

EXTRA_DIST = \
	test-gok-log.pl    \
	$(server_in_files)


CLEANFILES = $(server_DATA) $(server_DATA).in

INCLUDES = \
	-DGOK_LOCALEDIR=\""$(datadir)/locale"\"  \
	-DPREFIX=\""$(prefix)"\"                 \
	-DSYSCONFDIR=\""$(sysconfdir)"\"         \
	-DDATADIR=\""$(datadir)"\"               \
	-DLIBDIR=\""$(libdir)"\"                 \
	-I$(top_srcdir)                          \
	-I$(top_builddir)                        \
	$(GOK_CFLAGS)


LDADD = $(GOK_LIBS)\
	$(X_LIBS) \
	@LT_VERSION_INFO@


gok_LDFLAGS = -export-dynamic

TESTS = test-gok-action test-gok-feedback test-gok-bounds 

gok_SOURCES = \
	callbacks.c callbacks.h                          \
	gok-branchback-stack.c gok-branchback-stack.h    \
	gok-button.c gok-button.h                        \
	gok-chunker.c gok-chunker.h                      \
	gok-data.c gok-data.h                            \
	gok-repeat.c gok-repeat.h                        \
	gok-mousecontrol.c gok-mousecontrol.h            \
	gok-keyboard.c gok-keyboard.h                    \
	gok-key.c gok-key.h                              \
	gok-input.c gok-input.h				 \
	gok-scanner.c gok-scanner.h                      \
	gok-settings-dialog.c gok-settings-dialog.h      \
	gok-page-keysizespace.c gok-page-keysizespace.h  \
	gok-page-actions.c gok-page-actions.h            \
	gok-page-keyboard.c gok-page-keyboard.h          \
	gok-page-accessmethod.c gok-page-accessmethod.h  \
	gok-page-wordcomplete.c gok-page-wordcomplete.h  \
	gok-page-feedbacks.h gok-page-feedbacks.c        \
	gok-spy.c gok-spy.h gok-spy-priv.h               \
	gok.h                                            \
	main.c main.h                                    \
	switchapi.c switchapi.h                          \
	gtkjoyswitch.h                                   \
	gok-keyslotter.c gok-keyslotter.h                \
	gok-word-complete.c gok-word-complete.h          \
	word-complete.c word-complete.h                  \
	gok-utf8-word-complete.c			 \
	gok-utf8-word-complete.h			 \
	gok-sliding-window-word-complete.c		 \
	gok-sliding-window-word-complete.h		 \
	gok-sound.c gok-sound.h                          \
	gok-speech.c gok-speech.h                        \
	gok-modifier.c gok-modifier.h                    \
	gok-output.c gok-output.h                        \
	gok-action.c gok-action.h                        \
	gok-control.c gok-control.h                      \
	gok-log.c gok-log.h gok-log-priv.h               \
	gok-gconf-keys.h                                 \
	gok-editor.c gok-editor.h                        \
	global.h                                         \
	global.c                                         \
	arraylist.h                                      \
	arraylist.c                                      \
	command-common.h                                 \
	command-vertex-data.h                            \
	command-vertex-data.c                            \
	command-edge-data.h                              \
	command-edge-data.c                              \
	command-vertex.h                                 \
	command-vertex.c                                 \
	command-edge.h                                   \
	command-edge.c                                   \
	command-graph.h                                  \
	command-graph.c                                  \
	command-predictor.h                              \
	command-predictor.c                              \
	gok-log-reader.h                                 \
	gok-log-reader.c                                 \
	gok-predictor.h                                  \
	gok-predictor.c                                  \
	gok-gconf.c gok-gconf.h                          \
	gok-bounds.c gok-bounds.h                       \
	gok-feedback.c gok-feedback.h			\
	gok-composer.c	gok-composer.h			\
	gok-windowlister.c gok-windowlister.h		\
	gok-modifier-keymasks.c gok-modifier-keymasks.h \
	keysym2ucs.c					\
	gok-glade-helpers.c gok-glade-helpers.h


test_gok_action_SOURCES = \
	test-gok-action.c                                \
	gok-action.c gok-action.h                        \
	gok-gconf.c gok-gconf.h                          \
	gok-log.c gok-log.h gok-log-priv.h


test_gok_feedback_SOURCES = \
	test-gok-feedback.c                              \
	gok-feedback.c gok-feedback.h                    \
	gok-log.c gok-log.h gok-log-priv.h               \
	gok-gconf.c gok-gconf.h gok-gconf-keys.h         \
	gok-sound.c gok-sound.h				\
	gok-speech.c gok-speech.h


test_gok_sound_SOURCES = \
	test-gok-sound.c                                 \
	gok-sound.c gok-sound.h                          \
	gok-log.c gok-log.h gok-log-priv.h


test_gok_bounds_SOURCES = \
	test-gok-bounds.c                                \
	gok-bounds.c gok-bounds.h


test_gok_wordcomplete_SOURCES = \
	test-gok-wordcomplete.c \
	gok-word-complete.c \
	gok-word-complete.h \
	gok-utf8-word-complete.c \
	gok-utf8-word-complete.h \
	gok-sliding-window-word-complete.c \
	gok-sliding-window-word-complete.h \
	word-complete.c \
	word-complete.h 


keyboard_geometry_SOURCES = keyboard-geometry.c

create_branching_keyboard_SOURCES = create-branching-keyboard.c
subdir = gok
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = gok$(EXEEXT) create-branching-keyboard$(EXEEXT)
noinst_PROGRAMS = test-gok-action$(EXEEXT) test-gok-feedback$(EXEEXT) \
	test-gok-sound$(EXEEXT) test-gok-bounds$(EXEEXT) \
	test-gok-wordcomplete$(EXEEXT) keyboard-geometry$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)

am_create_branching_keyboard_OBJECTS = \
	create-branching-keyboard.$(OBJEXT)
create_branching_keyboard_OBJECTS = \
	$(am_create_branching_keyboard_OBJECTS)
create_branching_keyboard_LDADD = $(LDADD)
create_branching_keyboard_DEPENDENCIES =
create_branching_keyboard_LDFLAGS =
am_gok_OBJECTS = callbacks.$(OBJEXT) gok-branchback-stack.$(OBJEXT) \
	gok-button.$(OBJEXT) gok-chunker.$(OBJEXT) gok-data.$(OBJEXT) \
	gok-repeat.$(OBJEXT) gok-mousecontrol.$(OBJEXT) \
	gok-keyboard.$(OBJEXT) gok-key.$(OBJEXT) gok-input.$(OBJEXT) \
	gok-scanner.$(OBJEXT) gok-settings-dialog.$(OBJEXT) \
	gok-page-keysizespace.$(OBJEXT) gok-page-actions.$(OBJEXT) \
	gok-page-keyboard.$(OBJEXT) gok-page-accessmethod.$(OBJEXT) \
	gok-page-wordcomplete.$(OBJEXT) gok-page-feedbacks.$(OBJEXT) \
	gok-spy.$(OBJEXT) main.$(OBJEXT) switchapi.$(OBJEXT) \
	gok-keyslotter.$(OBJEXT) gok-word-complete.$(OBJEXT) \
	word-complete.$(OBJEXT) gok-utf8-word-complete.$(OBJEXT) \
	gok-sliding-window-word-complete.$(OBJEXT) gok-sound.$(OBJEXT) \
	gok-speech.$(OBJEXT) gok-modifier.$(OBJEXT) \
	gok-output.$(OBJEXT) gok-action.$(OBJEXT) gok-control.$(OBJEXT) \
	gok-log.$(OBJEXT) gok-editor.$(OBJEXT) global.$(OBJEXT) \
	arraylist.$(OBJEXT) command-vertex-data.$(OBJEXT) \
	command-edge-data.$(OBJEXT) command-vertex.$(OBJEXT) \
	command-edge.$(OBJEXT) command-graph.$(OBJEXT) \
	command-predictor.$(OBJEXT) gok-log-reader.$(OBJEXT) \
	gok-predictor.$(OBJEXT) gok-gconf.$(OBJEXT) \
	gok-bounds.$(OBJEXT) gok-feedback.$(OBJEXT) \
	gok-composer.$(OBJEXT) gok-windowlister.$(OBJEXT) \
	gok-modifier-keymasks.$(OBJEXT) keysym2ucs.$(OBJEXT) \
	gok-glade-helpers.$(OBJEXT)
gok_OBJECTS = $(am_gok_OBJECTS)
gok_LDADD = $(LDADD)
gok_DEPENDENCIES =
am_keyboard_geometry_OBJECTS = keyboard-geometry.$(OBJEXT)
keyboard_geometry_OBJECTS = $(am_keyboard_geometry_OBJECTS)
keyboard_geometry_LDADD = $(LDADD)
keyboard_geometry_DEPENDENCIES =
keyboard_geometry_LDFLAGS =
am_test_gok_action_OBJECTS = test-gok-action.$(OBJEXT) \
	gok-action.$(OBJEXT) gok-gconf.$(OBJEXT) gok-log.$(OBJEXT)
test_gok_action_OBJECTS = $(am_test_gok_action_OBJECTS)
test_gok_action_LDADD = $(LDADD)
test_gok_action_DEPENDENCIES =
test_gok_action_LDFLAGS =
am_test_gok_bounds_OBJECTS = test-gok-bounds.$(OBJEXT) \
	gok-bounds.$(OBJEXT)
test_gok_bounds_OBJECTS = $(am_test_gok_bounds_OBJECTS)
test_gok_bounds_LDADD = $(LDADD)
test_gok_bounds_DEPENDENCIES =
test_gok_bounds_LDFLAGS =
am_test_gok_feedback_OBJECTS = test-gok-feedback.$(OBJEXT) \
	gok-feedback.$(OBJEXT) gok-log.$(OBJEXT) gok-gconf.$(OBJEXT) \
	gok-sound.$(OBJEXT) gok-speech.$(OBJEXT)
test_gok_feedback_OBJECTS = $(am_test_gok_feedback_OBJECTS)
test_gok_feedback_LDADD = $(LDADD)
test_gok_feedback_DEPENDENCIES =
test_gok_feedback_LDFLAGS =
am_test_gok_sound_OBJECTS = test-gok-sound.$(OBJEXT) gok-sound.$(OBJEXT) \
	gok-log.$(OBJEXT)
test_gok_sound_OBJECTS = $(am_test_gok_sound_OBJECTS)
test_gok_sound_LDADD = $(LDADD)
test_gok_sound_DEPENDENCIES =
test_gok_sound_LDFLAGS =
am_test_gok_wordcomplete_OBJECTS = test-gok-wordcomplete.$(OBJEXT) \
	gok-word-complete.$(OBJEXT) gok-utf8-word-complete.$(OBJEXT) \
	gok-sliding-window-word-complete.$(OBJEXT) \
	word-complete.$(OBJEXT)
test_gok_wordcomplete_OBJECTS = $(am_test_gok_wordcomplete_OBJECTS)
test_gok_wordcomplete_LDADD = $(LDADD)
test_gok_wordcomplete_DEPENDENCIES =
test_gok_wordcomplete_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/arraylist.Po \
@AMDEP_TRUE@	./$(DEPDIR)/callbacks.Po \
@AMDEP_TRUE@	./$(DEPDIR)/command-edge-data.Po \
@AMDEP_TRUE@	./$(DEPDIR)/command-edge.Po \
@AMDEP_TRUE@	./$(DEPDIR)/command-graph.Po \
@AMDEP_TRUE@	./$(DEPDIR)/command-predictor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/command-vertex-data.Po \
@AMDEP_TRUE@	./$(DEPDIR)/command-vertex.Po \
@AMDEP_TRUE@	./$(DEPDIR)/create-branching-keyboard.Po \
@AMDEP_TRUE@	./$(DEPDIR)/global.Po ./$(DEPDIR)/gok-action.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-bounds.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-branchback-stack.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-button.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-chunker.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-composer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-control.Po ./$(DEPDIR)/gok-data.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-editor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-feedback.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-gconf.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-glade-helpers.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-input.Po ./$(DEPDIR)/gok-key.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-keyboard.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-keyslotter.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-log-reader.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-log.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-modifier-keymasks.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-modifier.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-mousecontrol.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-output.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-page-accessmethod.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-page-actions.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-page-feedbacks.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-page-keyboard.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-page-keysizespace.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-page-wordcomplete.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-predictor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-repeat.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-scanner.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-settings-dialog.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-sliding-window-word-complete.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-sound.Po ./$(DEPDIR)/gok-speech.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-spy.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-utf8-word-complete.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-windowlister.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gok-word-complete.Po \
@AMDEP_TRUE@	./$(DEPDIR)/keyboard-geometry.Po \
@AMDEP_TRUE@	./$(DEPDIR)/keysym2ucs.Po ./$(DEPDIR)/main.Po \
@AMDEP_TRUE@	./$(DEPDIR)/switchapi.Po \
@AMDEP_TRUE@	./$(DEPDIR)/test-gok-action.Po \
@AMDEP_TRUE@	./$(DEPDIR)/test-gok-bounds.Po \
@AMDEP_TRUE@	./$(DEPDIR)/test-gok-feedback.Po \
@AMDEP_TRUE@	./$(DEPDIR)/test-gok-sound.Po \
@AMDEP_TRUE@	./$(DEPDIR)/test-gok-wordcomplete.Po \
@AMDEP_TRUE@	./$(DEPDIR)/word-complete.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(create_branching_keyboard_SOURCES) $(gok_SOURCES) \
	$(keyboard_geometry_SOURCES) $(test_gok_action_SOURCES) \
	$(test_gok_bounds_SOURCES) $(test_gok_feedback_SOURCES) \
	$(test_gok_sound_SOURCES) $(test_gok_wordcomplete_SOURCES)
DATA = $(server_DATA)

DIST_COMMON = $(srcdir)/Makefile.in Makefile.am
SOURCES = $(create_branching_keyboard_SOURCES) $(gok_SOURCES) $(keyboard_geometry_SOURCES) $(test_gok_action_SOURCES) $(test_gok_bounds_SOURCES) $(test_gok_feedback_SOURCES) $(test_gok_sound_SOURCES) $(test_gok_wordcomplete_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  gok/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
create-branching-keyboard$(EXEEXT): $(create_branching_keyboard_OBJECTS) $(create_branching_keyboard_DEPENDENCIES) 
	@rm -f create-branching-keyboard$(EXEEXT)
	$(LINK) $(create_branching_keyboard_LDFLAGS) $(create_branching_keyboard_OBJECTS) $(create_branching_keyboard_LDADD) $(LIBS)
gok$(EXEEXT): $(gok_OBJECTS) $(gok_DEPENDENCIES) 
	@rm -f gok$(EXEEXT)
	$(LINK) $(gok_LDFLAGS) $(gok_OBJECTS) $(gok_LDADD) $(LIBS)
keyboard-geometry$(EXEEXT): $(keyboard_geometry_OBJECTS) $(keyboard_geometry_DEPENDENCIES) 
	@rm -f keyboard-geometry$(EXEEXT)
	$(LINK) $(keyboard_geometry_LDFLAGS) $(keyboard_geometry_OBJECTS) $(keyboard_geometry_LDADD) $(LIBS)
test-gok-action$(EXEEXT): $(test_gok_action_OBJECTS) $(test_gok_action_DEPENDENCIES) 
	@rm -f test-gok-action$(EXEEXT)
	$(LINK) $(test_gok_action_LDFLAGS) $(test_gok_action_OBJECTS) $(test_gok_action_LDADD) $(LIBS)
test-gok-bounds$(EXEEXT): $(test_gok_bounds_OBJECTS) $(test_gok_bounds_DEPENDENCIES) 
	@rm -f test-gok-bounds$(EXEEXT)
	$(LINK) $(test_gok_bounds_LDFLAGS) $(test_gok_bounds_OBJECTS) $(test_gok_bounds_LDADD) $(LIBS)
test-gok-feedback$(EXEEXT): $(test_gok_feedback_OBJECTS) $(test_gok_feedback_DEPENDENCIES) 
	@rm -f test-gok-feedback$(EXEEXT)
	$(LINK) $(test_gok_feedback_LDFLAGS) $(test_gok_feedback_OBJECTS) $(test_gok_feedback_LDADD) $(LIBS)
test-gok-sound$(EXEEXT): $(test_gok_sound_OBJECTS) $(test_gok_sound_DEPENDENCIES) 
	@rm -f test-gok-sound$(EXEEXT)
	$(LINK) $(test_gok_sound_LDFLAGS) $(test_gok_sound_OBJECTS) $(test_gok_sound_LDADD) $(LIBS)
test-gok-wordcomplete$(EXEEXT): $(test_gok_wordcomplete_OBJECTS) $(test_gok_wordcomplete_DEPENDENCIES) 
	@rm -f test-gok-wordcomplete$(EXEEXT)
	$(LINK) $(test_gok_wordcomplete_LDFLAGS) $(test_gok_wordcomplete_OBJECTS) $(test_gok_wordcomplete_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arraylist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/callbacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command-edge-data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command-edge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command-graph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command-predictor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command-vertex-data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command-vertex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/create-branching-keyboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/global.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-action.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-bounds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-branchback-stack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-button.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-chunker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-composer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-control.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-editor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-feedback.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-gconf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-glade-helpers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-key.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-keyboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-keyslotter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-log-reader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-modifier-keymasks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-modifier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-mousecontrol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-output.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-page-accessmethod.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-page-actions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-page-feedbacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-page-keyboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-page-keysizespace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-page-wordcomplete.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-predictor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-repeat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-scanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-settings-dialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-sliding-window-word-complete.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-speech.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-spy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-utf8-word-complete.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-windowlister.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gok-word-complete.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keyboard-geometry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keysym2ucs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/switchapi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-gok-action.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-gok-bounds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-gok-feedback.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-gok-sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-gok-wordcomplete.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/word-complete.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCC_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCC_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCC_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
serverDATA_INSTALL = $(INSTALL_DATA)
install-serverDATA: $(server_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(serverdir)
	@list='$(server_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(serverDATA_INSTALL) $$d$$p $(DESTDIR)$(serverdir)/$$f"; \
	  $(serverDATA_INSTALL) $$d$$p $(DESTDIR)$(serverdir)/$$f; \
	done

uninstall-serverDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(server_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(serverdir)/$$f"; \
	  rm -f $(DESTDIR)$(serverdir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -gt `echo "$$banner" | wc -c` && \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -gt `echo "$$banner" | wc -c` && \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -n "$$skipped" && echo "$$skipped"; \
	  test -n "$$report" && echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(serverdir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-serverDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-serverDATA

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-serverDATA \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool pdf \
	pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am uninstall-serverDATA

$(server_in_files:.server.in.in=.server.in): $(server_in_files)
	sed -e "s|\@BINDIR\@|$(bindir)|" $< > $@
@INTLTOOL_SERVER_RULE@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
