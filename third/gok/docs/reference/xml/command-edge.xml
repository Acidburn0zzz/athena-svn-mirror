<refentry id="gok-command-edge">
<refmeta>
<refentrytitle>command-edge</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GOK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>command-edge</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



const <link linkend="Boolean">Boolean</link> <link linkend="command-edge-equals">command_edge_equals</link>           (const <link linkend="Object">Object</link> edge_1,
                                             const <link linkend="Object">Object</link> edge_2);
<link linkend="void">void</link>        <link linkend="command-edge-free">command_edge_free</link>               (const <link linkend="Command-Edge">Command_Edge</link> edge);
<link linkend="Command-Edge">Command_Edge</link> <link linkend="command-edge-create">command_edge_create</link>            (const <link linkend="Command-Vertex">Command_Vertex</link> next_vertex,
                                             const <link linkend="Command-Edge-Data">Command_Edge_Data</link> edge_data);
<link linkend="void">void</link>        <link linkend="command-edge-set-edge-data">command_edge_set_edge_data</link>      (const <link linkend="Command-Edge">Command_Edge</link> edge,
                                             const <link linkend="Command-Edge-Data">Command_Edge_Data</link> edge_data);
const <link linkend="Command-Edge-Data">Command_Edge_Data</link> <link linkend="command-edge-get-edge-data">command_edge_get_edge_data</link>
                                            (const <link linkend="Command-Edge">Command_Edge</link> edge);
const <link linkend="Command-Vertex">Command_Vertex</link> <link linkend="command-edge-get-next-vertex">command_edge_get_next_vertex</link>
                                            (const <link linkend="Command-Edge">Command_Edge</link> edge);
<link linkend="void">void</link>        <link linkend="command-edge-dump-text">command_edge_dump_text</link>          (const <link linkend="Command-Edge">Command_Edge</link> edge,
                                             <link linkend="FILE:CAPS">FILE</link> *stream);
<link linkend="void">void</link>        <link linkend="command-edge-dump-binary">command_edge_dump_binary</link>        (const <link linkend="Command-Edge">Command_Edge</link> edge,
                                             <link linkend="FILE:CAPS">FILE</link> *stream);
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="command-edge-equals"/>command_edge_equals ()</title>
<indexterm><primary>command_edge_equals</primary></indexterm><programlisting>const <link linkend="Boolean">Boolean</link> command_edge_equals           (const <link linkend="Object">Object</link> edge_1,
                                             const <link linkend="Object">Object</link> edge_2);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>edge_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>edge_2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-edge-free"/>command_edge_free ()</title>
<indexterm><primary>command_edge_free</primary></indexterm><programlisting><link linkend="void">void</link>        command_edge_free               (const <link linkend="Command-Edge">Command_Edge</link> edge);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>edge</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-edge-create"/>command_edge_create ()</title>
<indexterm><primary>command_edge_create</primary></indexterm><programlisting><link linkend="Command-Edge">Command_Edge</link> command_edge_create            (const <link linkend="Command-Vertex">Command_Vertex</link> next_vertex,
                                             const <link linkend="Command-Edge-Data">Command_Edge_Data</link> edge_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>next_vertex</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>edge_data</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-edge-set-edge-data"/>command_edge_set_edge_data ()</title>
<indexterm><primary>command_edge_set_edge_data</primary></indexterm><programlisting><link linkend="void">void</link>        command_edge_set_edge_data      (const <link linkend="Command-Edge">Command_Edge</link> edge,
                                             const <link linkend="Command-Edge-Data">Command_Edge_Data</link> edge_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>edge</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>edge_data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-edge-get-edge-data"/>command_edge_get_edge_data ()</title>
<indexterm><primary>command_edge_get_edge_data</primary></indexterm><programlisting>const <link linkend="Command-Edge-Data">Command_Edge_Data</link> command_edge_get_edge_data
                                            (const <link linkend="Command-Edge">Command_Edge</link> edge);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>edge</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-edge-get-next-vertex"/>command_edge_get_next_vertex ()</title>
<indexterm><primary>command_edge_get_next_vertex</primary></indexterm><programlisting>const <link linkend="Command-Vertex">Command_Vertex</link> command_edge_get_next_vertex
                                            (const <link linkend="Command-Edge">Command_Edge</link> edge);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>edge</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-edge-dump-text"/>command_edge_dump_text ()</title>
<indexterm><primary>command_edge_dump_text</primary></indexterm><programlisting><link linkend="void">void</link>        command_edge_dump_text          (const <link linkend="Command-Edge">Command_Edge</link> edge,
                                             <link linkend="FILE:CAPS">FILE</link> *stream);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>edge</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-edge-dump-binary"/>command_edge_dump_binary ()</title>
<indexterm><primary>command_edge_dump_binary</primary></indexterm><programlisting><link linkend="void">void</link>        command_edge_dump_binary        (const <link linkend="Command-Edge">Command_Edge</link> edge,
                                             <link linkend="FILE:CAPS">FILE</link> *stream);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>edge</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
