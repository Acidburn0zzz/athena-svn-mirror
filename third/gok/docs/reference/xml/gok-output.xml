<refentry id="gok-gok-output">
<refmeta>
<refentrytitle>gok-output</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GOK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gok-output</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



<link linkend="void">void</link>        <link linkend="gok-output-delete-all">gok_output_delete_all</link>           (<link linkend="GokOutput">GokOutput</link> *pOutput);
<link linkend="GokOutput">GokOutput</link>*  <link linkend="gok-output-new">gok_output_new</link>                  (<link linkend="gint">gint</link> Type,
                                             <link linkend="gchar">gchar</link> *Name,
                                             <link linkend="AccessibleKeySynthType">AccessibleKeySynthType</link> Flag);
<link linkend="GokOutput">GokOutput</link>*  <link linkend="gok-output-new-from-xml">gok_output_new_from_xml</link>         (<link linkend="xmlNode">xmlNode</link> *pNode);
<link linkend="void">void</link>        <link linkend="gok-output-send-to-system">gok_output_send_to_system</link>       (<link linkend="GokOutput">GokOutput</link> *pOutput,
                                             <link linkend="gboolean">gboolean</link> bNoWordCompletion);
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="gok-output-delete-all"/>gok_output_delete_all ()</title>
<indexterm><primary>gok_output_delete_all</primary></indexterm><programlisting><link linkend="void">void</link>        gok_output_delete_all           (<link linkend="GokOutput">GokOutput</link> *pOutput);</programlisting>
<para>
Deletes the given GokOutput and other GokOutputs that are in its list.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pOutput</parameter>&nbsp;:</term>
<listitem><simpara> Pointer to the GokOutput that you want deleted.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gok-output-new"/>gok_output_new ()</title>
<indexterm><primary>gok_output_new</primary></indexterm><programlisting><link linkend="GokOutput">GokOutput</link>*  gok_output_new                  (<link linkend="gint">gint</link> Type,
                                             <link linkend="gchar">gchar</link> *Name,
                                             <link linkend="AccessibleKeySynthType">AccessibleKeySynthType</link> Flag);</programlisting>
<para>
Creates a new GokOutput and initializes it to the given values.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>Type</parameter>&nbsp;:</term>
<listitem><simpara> Type of output (e.g. keysym or keycode).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Name</parameter>&nbsp;:</term>
<listitem><simpara> Keycode, Keysym, or UTF-8 string.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Flag</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A pointer to the new GokOutput, NULL if not created. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gok-output-new-from-xml"/>gok_output_new_from_xml ()</title>
<indexterm><primary>gok_output_new_from_xml</primary></indexterm><programlisting><link linkend="GokOutput">GokOutput</link>*  gok_output_new_from_xml         (<link linkend="xmlNode">xmlNode</link> *pNode);</programlisting>
<para>
Creates a new GokOutput and initializes it from the given XML node.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pNode</parameter>&nbsp;:</term>
<listitem><simpara> Pointer to the XML node.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A pointer to the new GokOutput, NULL if not created. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gok-output-send-to-system"/>gok_output_send_to_system ()</title>
<indexterm><primary>gok_output_send_to_system</primary></indexterm><programlisting><link linkend="void">void</link>        gok_output_send_to_system       (<link linkend="GokOutput">GokOutput</link> *pOutput,
                                             <link linkend="gboolean">gboolean</link> bNoWordCompletion);</programlisting>
<para>
Sends the given GokOutput to the system. All other GokOutputs that are
linked to this output are also sent.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>pOutput</parameter>&nbsp;:</term>
<listitem><simpara> Pointer to a GokOutput that will be sent to the system.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bNoWordCompletion</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
