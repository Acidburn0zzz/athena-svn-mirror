<refentry id="gok-switchapi">
<refmeta>
<refentrytitle>switchapi</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GOK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>switchapi</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



<link linkend="gint">gint</link>        <link linkend="initSwitchApi">initSwitchApi</link>                   ();
<link linkend="gint">gint</link>        <link linkend="closeSwitchApi">closeSwitchApi</link>                  ();
<link linkend="gint">gint</link>        <link linkend="registerSwitchDownListener">registerSwitchDownListener</link>      (<link linkend="gint">gint</link> switch_num,
                                             <link linkend="void">void</link> *callback);
<link linkend="gint">gint</link>        <link linkend="registerSwitchUpListener">registerSwitchUpListener</link>        (<link linkend="gint">gint</link> switch_num,
                                             <link linkend="void">void</link> *callback);
<link linkend="gint">gint</link>        <link linkend="deregisterSwitchDownListener">deregisterSwitchDownListener</link>    (<link linkend="gint">gint</link> switch_num);
<link linkend="gint">gint</link>        <link linkend="deregisterSwitchUpListener">deregisterSwitchUpListener</link>      (<link linkend="gint">gint</link> switch_num);
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="initSwitchApi"/>initSwitchApi ()</title>
<indexterm><primary>initSwitchApi</primary></indexterm><programlisting><link linkend="gint">gint</link>        initSwitchApi                   ();</programlisting>
<para>
Initializes the swithc API. This must be called before using the switches.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The number of switches that the device can possibly use. Returns -1  
if the switch API can't be initialized (so don't use it). 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="closeSwitchApi"/>closeSwitchApi ()</title>
<indexterm><primary>closeSwitchApi</primary></indexterm><programlisting><link linkend="gint">gint</link>        closeSwitchApi                  ();</programlisting>
<para>
Closes the switch API. This must be called at the end of the program.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Always zero. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="registerSwitchDownListener"/>registerSwitchDownListener ()</title>
<indexterm><primary>registerSwitchDownListener</primary></indexterm><programlisting><link linkend="gint">gint</link>        registerSwitchDownListener      (<link linkend="gint">gint</link> switch_num,
                                             <link linkend="void">void</link> *callback);</programlisting>
<para>
Registers a switch down listener.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>switch_num</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Always zero. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="registerSwitchUpListener"/>registerSwitchUpListener ()</title>
<indexterm><primary>registerSwitchUpListener</primary></indexterm><programlisting><link linkend="gint">gint</link>        registerSwitchUpListener        (<link linkend="gint">gint</link> switch_num,
                                             <link linkend="void">void</link> *callback);</programlisting>
<para>
Registers a switch up listener.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>switch_num</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Always zero. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="deregisterSwitchDownListener"/>deregisterSwitchDownListener ()</title>
<indexterm><primary>deregisterSwitchDownListener</primary></indexterm><programlisting><link linkend="gint">gint</link>        deregisterSwitchDownListener    (<link linkend="gint">gint</link> switch_num);</programlisting>
<para>
Removes a switch down listener.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>switch_num</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Always zero. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="deregisterSwitchUpListener"/>deregisterSwitchUpListener ()</title>
<indexterm><primary>deregisterSwitchUpListener</primary></indexterm><programlisting><link linkend="gint">gint</link>        deregisterSwitchUpListener      (<link linkend="gint">gint</link> switch_num);</programlisting>
<para>
Removes a switch up listener.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>switch_num</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Always zero. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
