<refentry id="gok-command-vertex">
<refmeta>
<refentrytitle>command-vertex</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GOK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>command-vertex</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



const <link linkend="Boolean">Boolean</link> <link linkend="command-vertex-equals">command_vertex_equals</link>         (const <link linkend="Object">Object</link> vertex_1,
                                             const <link linkend="Object">Object</link> vertex_2);
<link linkend="void">void</link>        <link linkend="command-vertex-free">command_vertex_free</link>             (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);
<link linkend="Command-Vertex">Command_Vertex</link> <link linkend="command-vertex-create">command_vertex_create</link>        (const <link linkend="Command-Vertex-Data">Command_Vertex_Data</link> vertex_data);
<link linkend="void">void</link>        <link linkend="command-vertex-set-vertex-data">command_vertex_set_vertex_data</link>  (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                             const <link linkend="Command-Vertex-Data">Command_Vertex_Data</link> vertex_data);
const <link linkend="Command-Vertex-Data">Command_Vertex_Data</link> <link linkend="command-vertex-get-vertex-data">command_vertex_get_vertex_data</link>
                                            (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);
<link linkend="void">void</link>        <link linkend="command-vertex-sort-by-stat">command_vertex_sort_by_stat</link>     (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);
const <link linkend="Command-Edge">Command_Edge</link> <link linkend="command-vertex-get-edge">command_vertex_get_edge</link>  (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                             const <link linkend="Command-Edge">Command_Edge</link> edge);
<link linkend="void">void</link>        <link linkend="command-vertex-remove-edge">command_vertex_remove_edge</link>      (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                             const <link linkend="Command-Edge">Command_Edge</link> edge);
<link linkend="void">void</link>        <link linkend="command-vertex-add-edge">command_vertex_add_edge</link>         (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                             const <link linkend="Command-Edge">Command_Edge</link> edge);
const <link linkend="Arraylist">Arraylist</link> <link linkend="command-vertex-get-edges">command_vertex_get_edges</link>    (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);
<link linkend="void">void</link>        <link linkend="command-vertex-dump-text">command_vertex_dump_text</link>        (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                             <link linkend="FILE:CAPS">FILE</link> *stream);
<link linkend="void">void</link>        <link linkend="command-vertex-dump-binary">command_vertex_dump_binary</link>      (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                             <link linkend="FILE:CAPS">FILE</link> *stream);
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="command-vertex-equals"/>command_vertex_equals ()</title>
<indexterm><primary>command_vertex_equals</primary></indexterm><programlisting>const <link linkend="Boolean">Boolean</link> command_vertex_equals         (const <link linkend="Object">Object</link> vertex_1,
                                             const <link linkend="Object">Object</link> vertex_2);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>vertex_1</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>vertex_2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-vertex-free"/>command_vertex_free ()</title>
<indexterm><primary>command_vertex_free</primary></indexterm><programlisting><link linkend="void">void</link>        command_vertex_free             (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-vertex-create"/>command_vertex_create ()</title>
<indexterm><primary>command_vertex_create</primary></indexterm><programlisting><link linkend="Command-Vertex">Command_Vertex</link> command_vertex_create        (const <link linkend="Command-Vertex-Data">Command_Vertex_Data</link> vertex_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>vertex_data</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-vertex-set-vertex-data"/>command_vertex_set_vertex_data ()</title>
<indexterm><primary>command_vertex_set_vertex_data</primary></indexterm><programlisting><link linkend="void">void</link>        command_vertex_set_vertex_data  (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                             const <link linkend="Command-Vertex-Data">Command_Vertex_Data</link> vertex_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>vertex_data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-vertex-get-vertex-data"/>command_vertex_get_vertex_data ()</title>
<indexterm><primary>command_vertex_get_vertex_data</primary></indexterm><programlisting>const <link linkend="Command-Vertex-Data">Command_Vertex_Data</link> command_vertex_get_vertex_data
                                            (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-vertex-sort-by-stat"/>command_vertex_sort_by_stat ()</title>
<indexterm><primary>command_vertex_sort_by_stat</primary></indexterm><programlisting><link linkend="void">void</link>        command_vertex_sort_by_stat     (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-vertex-get-edge"/>command_vertex_get_edge ()</title>
<indexterm><primary>command_vertex_get_edge</primary></indexterm><programlisting>const <link linkend="Command-Edge">Command_Edge</link> command_vertex_get_edge  (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                             const <link linkend="Command-Edge">Command_Edge</link> edge);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>edge</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-vertex-remove-edge"/>command_vertex_remove_edge ()</title>
<indexterm><primary>command_vertex_remove_edge</primary></indexterm><programlisting><link linkend="void">void</link>        command_vertex_remove_edge      (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                             const <link linkend="Command-Edge">Command_Edge</link> edge);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>edge</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-vertex-add-edge"/>command_vertex_add_edge ()</title>
<indexterm><primary>command_vertex_add_edge</primary></indexterm><programlisting><link linkend="void">void</link>        command_vertex_add_edge         (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                             const <link linkend="Command-Edge">Command_Edge</link> edge);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>edge</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-vertex-get-edges"/>command_vertex_get_edges ()</title>
<indexterm><primary>command_vertex_get_edges</primary></indexterm><programlisting>const <link linkend="Arraylist">Arraylist</link> command_vertex_get_edges    (const <link linkend="Command-Vertex">Command_Vertex</link> vertex);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-vertex-dump-text"/>command_vertex_dump_text ()</title>
<indexterm><primary>command_vertex_dump_text</primary></indexterm><programlisting><link linkend="void">void</link>        command_vertex_dump_text        (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                             <link linkend="FILE:CAPS">FILE</link> *stream);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="command-vertex-dump-binary"/>command_vertex_dump_binary ()</title>
<indexterm><primary>command_vertex_dump_binary</primary></indexterm><programlisting><link linkend="void">void</link>        command_vertex_dump_binary      (const <link linkend="Command-Vertex">Command_Vertex</link> vertex,
                                             <link linkend="FILE:CAPS">FILE</link> *stream);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>vertex</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stream</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
