dnl Process this file with autoconf to produce a configure script.

dnl required versions of other tools.
m4_define([req_ver_glib],	[1.3.11])
m4_define([req_ver_gtk],	[2.1.0])
m4_define([req_ver_libbonobo],	[1.107.0])
m4_define([req_ver_libspi],	[0.12.1])
m4_define([req_ver_orbit],	[2.3.100])

AC_INIT(magnifier/magnifier.c)

dnl libtool versioning from libgnome

GNOME_MAG_MAJOR_VERSION=0
GNOME_MAG_MINOR_VERSION=11
GNOME_MAG_INTERFACE_AGE=9
dnl below should change if the interface has additions, changes, removals.
GNOME_MAG_CURRENT=`expr $GNOME_MAG_MINOR_VERSION - $GNOME_MAG_INTERFACE_AGE`

dnl increment any time the source you release changes; set to
dnl 0 if you increment CURRENT
GNOME_MAG_REVISION=14
GNOME_MAG_MICRO_VERSION=$GNOME_MAG_REVISION

dnl increment if any interfaces have been added; set to 0
dnl  if any interfaces have been removed. removasl has
dnl  precedence over adding, so set to 0 if both happened.
GNOME_MAG_AGE=0

AC_SUBST(GNOME_MAG_CURRENT)
AC_SUBST(GNOME_MAG_REVISION)
AC_SUBST(GNOME_MAG_AGE)
LT_VERSION_INFO='-version-info ${GNOME_MAG_CURRENT}:${GNOME_MAG_REVISION}:${GNOME_MAG_AGE}'
AC_SUBST(LT_VERSION_INFO)

AM_CONFIG_HEADER(config.h)
GNOME_MAG_VERSION="$GNOME_MAG_MAJOR_VERSION.$GNOME_MAG_MINOR_VERSION.$GNOME_MAG_MICRO_VERSION"
AM_INIT_AUTOMAKE(gnome-mag, $GNOME_MAG_VERSION)
AM_MAINTAINER_MODE

AC_PROG_INTLTOOL

AC_PROG_CC
AC_LIBTOOL_WIN32_DLL
AC_PROG_INSTALL
AC_ISC_POSIX

dnl GNOME_COMPILE_WARNINGS(maximum)

AM_DISABLE_STATIC
AM_PROG_LIBTOOL

ALL_LINGUAS="ang ar az be bg bn br bs ca cs cy da de el en_CA en_GB es et eu fa fi fr ga gu he hi hr hu id is it ja ka ko lt lv mi mn ms nb ne nl nn no or pa pl pt pt_BR ro ru sk sl sq sr sr@Latn sv ta th tk tr uk vi zh_CN zh_TW"
GETTEXT_PACKAGE=gnome-mag
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [The gettext package])

AM_GLIB_GNU_GETTEXT

AC_MSG_CHECKING([for Win32])
case "$host" in
  *-*-mingw*)
    gnome_mag_native_win32=yes
    ;;
  *)
    gnome_mag_native_win32=no
    ;;
esac
AC_MSG_RESULT([$gnome_mag_native_win32])
AM_CONDITIONAL(OS_WIN32, test "$gnome_mag_native_win32" = "yes")

if test "$gnome_mag_native_win32" = "yes"; then
  AC_CHECK_PROG(ms_librarian, lib.exe, yes, no)
fi
AM_CONDITIONAL(MS_LIB_AVAILABLE, test x$ms_librarian = xyes)

dnl Cache $ACLOCAL_FLAGS
AC_CACHE_CHECK([for aclocal flags], ac_cv_atk_aclocal_flags,[
   ac_cv_atk_aclocal_flags="$ACLOCAL_FLAGS"
])
ACLOCAL="$ACLOCAL $ac_cv_atk_aclocal_flags"

AC_ARG_ENABLE(rebuilds, [  --disable-rebuilds	   disable all source autogeneration rules],,enable_rebuilds=yes)

AC_ARG_ENABLE(debug, [  --enable-debug=[no/yes] turn on debugging [default=no]],,enable_debug=no)
if test "$enable_debug" = "yes"; then
  GNOME_MAG_DEBUG_CFLAGS="-DG_ENABLE_DEBUG"
else
  GNOME_MAG_DEBUG_CFLAGS="-DG_DISABLE_DEPRECATED -DGDK_DISABLE_DEPRECATED -DGDK_PIXBUF_DISABLE_DEPRECATED -DGTK_DISABLE_DEPRECATED -DGNOME_DISABLE_DEPRECATED"
fi
AC_SUBST(GNOME_MAG_DEBUG_CFLAGS)

changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \ ]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

AC_PATH_XTRA

dnl test for X libraries
if test x$no_x = xyes ; then
  AC_MSG_ERROR([X development libraries not found])
else
  X_LIBS="$X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS"
fi

dnl path to Xtst
AC_CHECK_LIB(Xtst, XTestFakeKeyEvent, XTST_LIBS=-lXtst)
if test "x$XTST_LIBS" = x; then
  save_LIBS="$LIBS"
  for xtstpath in /usr/X11R6/lib /usr/openwin/lib $x_libraries; do
    LIBS="-L$xtstpath -lXtst"
    case "$host" in
    *solaris*) XTST_RPATH_FLAGS="-R$xtstpath" ;;
    esac
    AC_MSG_CHECKING(for -lXtst in $xtstpath)
    AC_TRY_LINK([], [XTestFakeKeyEvent()], [
	AC_MSG_RESULT(yes)
	XTST_LIBS="$XTST_RPATH_FLAGS -L$xtstpath -lXtst"
        LIBS="$save_LIBS"
	break],[AC_MSG_RESULT(no)])
  done
  if test "x$XTST_LIBS" = x; then
    AC_MSG_ERROR(Couldn't find the Xtst library. Check config.log for details)
  else
    X_LIBS="$X_LIBS $XTST_LIBS"
    AC_DEFINE(HAVE_XTST, 1, [The XTest extension is present])
  fi
fi

dnl path to DAMAGE
AC_CHECK_LIB(Xdamage, XDamageCreate, XDAMAGE_LIBS=-lXdamage)
if test "x$XDAMAGE_LIBS" = x; then
  save_LIBS="$LIBS"
  for xdamagepath in /usr/X11R6/lib /usr/openwin/lib /usr/openwin/sfw/lib /opt/fdo/lib $x_libraries; do
    LIBS="-L$xdamagepath -lXdamage -lX11"
    case "$host" in
    *solaris*) XDAMAGE_RPATH_FLAGS="-R$xdamagepath" ;;
    esac
    AC_MSG_CHECKING(for -lXdamage in $xdamagepath)
    AC_TRY_LINK([], [XDamageCreate()], [
	AC_MSG_RESULT(yes)
	XDAMAGE_LIBS="$XDAMAGE_RPATH_FLAGS -L$xdamagepath -lXdamage"
        LIBS="$save_LIBS"
	break],[AC_MSG_RESULT(no)])
  done
  if test "x$XDAMAGE_LIBS" = x; then
    AC_MSG_WARN(Couldn't find the DAMAGE library. Check config.log for details)
    LIBS="$save_LIBS"
  else
    X_LIBS="$X_LIBS $XDAMAGE_LIBS"
    CFLAGS="-I /opt/fdo/include $CFLAGS"
    AC_CHECK_HEADER(X11/extensions/Xdamage.h, have_xdamage=yes)
    if test "x$have_xdamage" = x; then
      AC_CHECK_HEADER(X11/Xdamage.h, have_xdamage=yes)
    fi
    AC_DEFINE(HAVE_DAMAGE, 1, [The DAMAGE extension is present])
  fi
fi

dnl path to XFIXES
AC_CHECK_LIB(Xfixes, XFixesCreateRegion, XFIXES_LIBS=-lXfixes)
if test "x$XFIXES_LIBS" = x; then
  save_LIBS="$LIBS"
  for xfixespath in /usr/X11R6/lib /usr/openwin/lib /usr/openwin/sfw/lib /opt/fdo/lib $x_libraries; do
    LIBS="-L$xfixespath -lXfixes -lX11"
    case "$host" in
    *solaris*) XFIXES_RPATH_FLAGS="-R$xfixespath" ;;
    esac
    AC_MSG_CHECKING(for -lXfixes in $xfixespath)
    AC_TRY_LINK([], [XFixesCreateRegion()], [
	AC_MSG_RESULT(yes)
	XFIXES_LIBS="$XFIXES_RPATH_FLAGS -L$xfixespath -lXfixes"
        LIBS="$save_LIBS"
	break],[AC_MSG_RESULT(no)])
  done
  if test "x$XFIXES_LIBS" = x; then
    AC_MSG_WARN(Couldn't find the XFIXES library. Check config.log for details)
    LIBS="$save_LIBS"
  else
    X_LIBS="$X_LIBS $XFIXES_LIBS"
    CFLAGS="-I /opt/fdo/include $CFLAGS"
    AC_CHECK_HEADER(X11/extensions/Xfixes.h, have_xfixes=yes)
    AC_DEFINE(HAVE_XFIXES, 1, [The XFIXES extension is present])
  fi
fi

AC_SUBST(X_LIBS)

PKG_CHECK_MODULES(DEPS, [
	libloginhelper-1.0	>= 1.5.2
	libbonobo-2.0		>= 1.107.0
	ORBit-2.0		>= 2.3.100
	glib-2.0		>= 1.3.11
	gtk+-2.0		>= 2.1.0
	gdk-pixbuf-2.0		>= 2.1.0
	gdk-pixbuf-xlib-2.0	>= 2.1.0
])
AC_SUBST(DEPS_LIBS)
DEPS_CFLAGS="-I /opt/fdo/include $DEPS_CFLAGS"
AC_SUBST(DEPS_CFLAGS)

PKG_CHECK_MODULES(TEST, [
	libspi-1.0		>= 1.5.0
	libbonobo-2.0		>= 1.107.0
	ORBit-2.0		>= 2.3.100
	glib-2.0		>= 1.3.11
	gtk+-2.0		>= 2.1.0
	gdk-pixbuf-2.0		>= 2.1.0
	gdk-pixbuf-xlib-2.0	>= 2.1.0
])
AC_SUBST(TEST_LIBS)
AC_SUBST(TEST_CFLAGS)

old_LIBS="$LIBS"
dnl Checks for inet libraries:
AC_SEARCH_LIBS(gethostent, nsl)
AC_SEARCH_LIBS(setsockopt, socket)
AC_SEARCH_LIBS(connect, inet)

INET_LIBS="$LIBS"
AC_SUBST(INET_LIBS)

LIBS="$old_LIBS"


dnl orbit-idl.
ORBIT_IDL="`$PKG_CONFIG --variable=orbit_idl ORBit-2.0`"
AC_SUBST(ORBIT_IDL)

dnl Bonobo and Bonobo-Activation idl files
BONOBO_ACTIVATION_IDL_DIR="`$PKG_CONFIG --variable=idldir bonobo-activation-2.0`"
LIBBONOBO_IDL_DIR="`$PKG_CONFIG --variable=idldir libbonobo-2.0`"
AC_SUBST(BONOBO_ACTIVATION_IDL_DIR)
AC_SUBST(LIBBONOBO_IDL_DIR)

AC_CHECK_LIB(popt, poptGetContext, [POPT_LIBS="-lpopt"],
AC_MSG_ERROR([popt is required to build gnome-mag.
You can download the latest version from ftp://ftp.rpm.org/pub/rpm/dist/rpm-4.0.x/]))
AC_SUBST(POPT_LIBS)
AC_MSG_CHECKING([for POPT_ARG_FLOAT in popt.h])
AC_TRY_CPP([#include <popt.h>
#ifndef POPT_ARG_FLOAT
#error popt too old
#endif], AC_MSG_RESULT(yes), [
  AC_MSG_RESULT(no)
  AC_MSG_ERROR([A newer version of popt is required to build gnome-mag.
You can download the latest version from ftp://ftp.rpm.org/pub/rpm/dist/rpm-4.0.x/])
])


AC_OUTPUT([
Makefile
gnome-mag-1.0.pc
po/Makefile.in
idl/Makefile
magnifier/Makefile
cursors/Makefile
cursors/1_32/Makefile
test/Makefile
])
