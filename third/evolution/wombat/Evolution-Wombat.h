/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef Evolution_Wombat_H
#define Evolution_Wombat_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 19
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C"
{
#endif				/* __cplusplus */

/** typedefs **/
#include <bonobo/Bonobo.h>
#if !defined(ORBIT_DECL_GNOME_Evolution_WombatClient) && !defined(_GNOME_Evolution_WombatClient_defined)
#define ORBIT_DECL_GNOME_Evolution_WombatClient 1
#define _GNOME_Evolution_WombatClient_defined 1
#define GNOME_Evolution_WombatClient__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_WombatClient;
   extern CORBA_unsigned_long GNOME_Evolution_WombatClient__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_WombatClient_0)
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_5 't'
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_8 'n'
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_9 '_'
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_10 'W'
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_11 'o'
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_12 'm'
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_13 'b'
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_14 'a'
#define TC_IMPL_TC_GNOME_Evolution_WombatClient_15 't'
#ifdef ORBIT_IDL_C_IMODULE_Evolution_Wombat
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_WombatClient_struct;
#define TC_GNOME_Evolution_WombatClient ((CORBA_TypeCode)&TC_GNOME_Evolution_WombatClient_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_Config) && !defined(_GNOME_Evolution_Config_defined)
#define ORBIT_DECL_GNOME_Evolution_Config 1
#define _GNOME_Evolution_Config_defined 1
#define GNOME_Evolution_Config__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_Config;
   extern CORBA_unsigned_long GNOME_Evolution_Config__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_Config_0)
#define TC_IMPL_TC_GNOME_Evolution_Config_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_Config_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_Config_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_Config_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_Config_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_Config_5 't'
#define TC_IMPL_TC_GNOME_Evolution_Config_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_Config_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_Config_8 'n'
#define TC_IMPL_TC_GNOME_Evolution_Config_9 '_'
#define TC_IMPL_TC_GNOME_Evolution_Config_10 'W'
#define TC_IMPL_TC_GNOME_Evolution_Config_11 'o'
#define TC_IMPL_TC_GNOME_Evolution_Config_12 'm'
#define TC_IMPL_TC_GNOME_Evolution_Config_13 'b'
#define TC_IMPL_TC_GNOME_Evolution_Config_14 'a'
#define TC_IMPL_TC_GNOME_Evolution_Config_15 't'
#ifdef ORBIT_IDL_C_IMODULE_Evolution_Wombat
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Evolution_Config_struct;
#define TC_GNOME_Evolution_Config ((CORBA_TypeCode)&TC_GNOME_Evolution_Config_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Evolution_WombatInterfaceCheck) && !defined(_GNOME_Evolution_WombatInterfaceCheck_defined)
#define ORBIT_DECL_GNOME_Evolution_WombatInterfaceCheck 1
#define _GNOME_Evolution_WombatInterfaceCheck_defined 1
#define GNOME_Evolution_WombatInterfaceCheck__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Evolution_WombatInterfaceCheck;
   extern CORBA_unsigned_long GNOME_Evolution_WombatInterfaceCheck__classid;
#if !defined(TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_0)
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_0 'E'
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_1 'v'
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_2 'o'
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_3 'l'
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_4 'u'
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_5 't'
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_6 'i'
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_7 'o'
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_8 'n'
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_9 '_'
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_10 'W'
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_11 'o'
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_12 'm'
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_13 'b'
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_14 'a'
#define TC_IMPL_TC_GNOME_Evolution_WombatInterfaceCheck_15 't'
#ifdef ORBIT_IDL_C_IMODULE_Evolution_Wombat
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct
      TC_GNOME_Evolution_WombatInterfaceCheck_struct;
#define TC_GNOME_Evolution_WombatInterfaceCheck ((CORBA_TypeCode)&TC_GNOME_Evolution_WombatInterfaceCheck_struct)
#endif
#endif

/** POA structures **/
#ifndef _defined_POA_GNOME_Evolution_WombatClient
#define _defined_POA_GNOME_Evolution_WombatClient 1
   typedef struct
   {
      void *_private;
       CORBA_string(*getPassword) (PortableServer_Servant _servant,
				   const CORBA_char * prompt,
				   const CORBA_char * key,
				   CORBA_Environment * ev);
      void (*forgetPassword) (PortableServer_Servant _servant,
			      const CORBA_char * key, CORBA_Environment * ev);
   }
   POA_GNOME_Evolution_WombatClient__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_GNOME_Evolution_WombatClient__epv *GNOME_Evolution_WombatClient_epv;
   }
   POA_GNOME_Evolution_WombatClient__vepv;
   typedef struct
   {
      void *_private;
      POA_GNOME_Evolution_WombatClient__vepv *vepv;
   }
   POA_GNOME_Evolution_WombatClient;
   extern void POA_GNOME_Evolution_WombatClient__init(PortableServer_Servant
						      servant,
						      CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_WombatClient__fini(PortableServer_Servant
						      servant,
						      CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_WombatClient */
#ifndef _defined_POA_GNOME_Evolution_Config
#define _defined_POA_GNOME_Evolution_Config 1
   typedef struct
   {
      void *_private;
   }
   POA_GNOME_Evolution_Config__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_GNOME_Evolution_Config__epv *GNOME_Evolution_Config_epv;
   }
   POA_GNOME_Evolution_Config__vepv;
   typedef struct
   {
      void *_private;
      POA_GNOME_Evolution_Config__vepv *vepv;
   }
   POA_GNOME_Evolution_Config;
   extern void POA_GNOME_Evolution_Config__init(PortableServer_Servant
						servant,
						CORBA_Environment * ev);
   extern void POA_GNOME_Evolution_Config__fini(PortableServer_Servant
						servant,
						CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_Config */
#ifndef _defined_POA_GNOME_Evolution_WombatInterfaceCheck
#define _defined_POA_GNOME_Evolution_WombatInterfaceCheck 1
   typedef struct
   {
      void *_private;
       CORBA_string(*_get_interfaceVersion) (PortableServer_Servant _servant,
					     CORBA_Environment * ev);
   }
   POA_GNOME_Evolution_WombatInterfaceCheck__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Evolution_WombatInterfaceCheck__epv
	 *GNOME_Evolution_WombatInterfaceCheck_epv;
   }
   POA_GNOME_Evolution_WombatInterfaceCheck__vepv;
   typedef struct
   {
      void *_private;
      POA_GNOME_Evolution_WombatInterfaceCheck__vepv *vepv;
   }
   POA_GNOME_Evolution_WombatInterfaceCheck;
   extern void
      POA_GNOME_Evolution_WombatInterfaceCheck__init(PortableServer_Servant
						     servant,
						     CORBA_Environment * ev);
   extern void
      POA_GNOME_Evolution_WombatInterfaceCheck__fini(PortableServer_Servant
						     servant,
						     CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Evolution_WombatInterfaceCheck */

/** skel prototypes **/
   void
      _ORBIT_skel_small_GNOME_Evolution_WombatClient_getPassword
      (POA_GNOME_Evolution_WombatClient * _ORBIT_servant,
       gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx,
       CORBA_Environment * ev,
       CORBA_string(*_impl_getPassword) (PortableServer_Servant _servant,
					 const CORBA_char * prompt,
					 const CORBA_char * key,
					 CORBA_Environment * ev));
   void
      _ORBIT_skel_small_GNOME_Evolution_WombatClient_forgetPassword
      (POA_GNOME_Evolution_WombatClient * _ORBIT_servant,
       gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx,
       CORBA_Environment * ev,
       void (*_impl_forgetPassword) (PortableServer_Servant _servant,
				     const CORBA_char * key,
				     CORBA_Environment * ev));
   void
      _ORBIT_skel_small_GNOME_Evolution_WombatInterfaceCheck__get_interfaceVersion
      (POA_GNOME_Evolution_WombatInterfaceCheck * _ORBIT_servant,
       gpointer _ORBIT_retval, gpointer * _ORBIT_args, CORBA_Context ctx,
       CORBA_Environment * ev,
       CORBA_string(*_impl__get_interfaceVersion) (PortableServer_Servant
						   _servant,
						   CORBA_Environment * ev));

/** stub prototypes **/
   CORBA_string
      GNOME_Evolution_WombatClient_getPassword(GNOME_Evolution_WombatClient
					       _obj,
					       const CORBA_char * prompt,
					       const CORBA_char * key,
					       CORBA_Environment * ev);
   void
      GNOME_Evolution_WombatClient_forgetPassword(GNOME_Evolution_WombatClient
						  _obj,
						  const CORBA_char * key,
						  CORBA_Environment * ev);
#define GNOME_Evolution_WombatInterfaceCheck_ref Bonobo_Unknown_ref
#define GNOME_Evolution_WombatInterfaceCheck_unref Bonobo_Unknown_unref
#define GNOME_Evolution_WombatInterfaceCheck_queryInterface Bonobo_Unknown_queryInterface
   CORBA_string
      GNOME_Evolution_WombatInterfaceCheck__get_interfaceVersion
      (GNOME_Evolution_WombatInterfaceCheck _obj, CORBA_Environment * ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_Evolution_Wombat
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_WombatClient__iinterface;
#define GNOME_Evolution_WombatClient_IMETHODS_LEN 2
#ifdef ORBIT_IDL_C_IMODULE_Evolution_Wombat
   static
#else
   extern
#endif
   ORBit_IMethod
      GNOME_Evolution_WombatClient__imethods
      [GNOME_Evolution_WombatClient_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Evolution_Wombat
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_Config__iinterface;
#define GNOME_Evolution_Config_IMETHODS_LEN 0
#define GNOME_Evolution_Config__imethods (ORBit_IMethod*) NULL
#ifdef ORBIT_IDL_C_IMODULE_Evolution_Wombat
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Evolution_WombatInterfaceCheck__iinterface;
#define GNOME_Evolution_WombatInterfaceCheck_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_Evolution_Wombat
   static
#else
   extern
#endif
   ORBit_IMethod
      GNOME_Evolution_WombatInterfaceCheck__imethods
      [GNOME_Evolution_WombatInterfaceCheck_IMETHODS_LEN];
#ifdef __cplusplus
}
#endif				/* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif				/* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
