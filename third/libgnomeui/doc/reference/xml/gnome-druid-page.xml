<refentry id="GnomeDruidPage">
<refmeta>
<refentrytitle>GnomeDruidPage</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOMEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GnomeDruidPage</refname><refpurpose>A widget representing a single page inside a druid.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;libgnomeui/libgnomeui.h&gt;


struct      <link linkend="GnomeDruidPage-struct">GnomeDruidPage</link>;
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-druid-page-new">gnome_druid_page_new</link>            (void);
<link linkend="gboolean">gboolean</link>    <link linkend="gnome-druid-page-next">gnome_druid_page_next</link>           (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druid_page);
<link linkend="void">void</link>        <link linkend="gnome-druid-page-prepare">gnome_druid_page_prepare</link>        (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druid_page);
<link linkend="gboolean">gboolean</link>    <link linkend="gnome-druid-page-back">gnome_druid_page_back</link>           (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druid_page);
<link linkend="gboolean">gboolean</link>    <link linkend="gnome-druid-page-cancel">gnome_druid_page_cancel</link>         (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druid_page);
<link linkend="void">void</link>        <link linkend="gnome-druid-page-finish">gnome_druid_page_finish</link>         (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druid_page);


</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----<link linkend="GtkWidget">GtkWidget</link>
               +----<link linkend="GtkContainer">GtkContainer</link>
                     +----<link linkend="GtkBin">GtkBin</link>
                           +----GnomeDruidPage
                                 +----<link linkend="GnomeDruidPageEdge">GnomeDruidPageEdge</link>
                                 +----<link linkend="GnomeDruidPageStandard">GnomeDruidPageStandard</link>
</synopsis>

</refsect1>



<refsect1>
<title>Implemented Interfaces</title>
<para>
GnomeDruidPage implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link>.</para>

</refsect1>



<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="GnomeDruidPage-back">back</link>&quot;      <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druidpage,
                                            <link linkend="GtkWidget">GtkWidget</link> *widget,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GnomeDruidPage-cancel">cancel</link>&quot;    <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druidpage,
                                            <link linkend="GtkWidget">GtkWidget</link> *widget,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GnomeDruidPage-finish">finish</link>&quot;    <link linkend="void">void</link>        user_function      (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druidpage,
                                            <link linkend="GtkWidget">GtkWidget</link> *widget,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GnomeDruidPage-next">next</link>&quot;      <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druidpage,
                                            <link linkend="GtkWidget">GtkWidget</link> *widget,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GnomeDruidPage-prepare">prepare</link>&quot;   <link linkend="void">void</link>        user_function      (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druidpage,
                                            <link linkend="GtkWidget">GtkWidget</link> *widget,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>
The functions in this page are mostly only for the information of developers --
they should never needt o call them directly. Typically, a druid will connect
to the various signals described here as a way of controlling the behaviour of
druids that do not just proceed in a front-to-back fashion (for example, where
the subsequent pages depend upon the choice made at some point).

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GnomeDruidPage-struct"/>struct GnomeDruidPage</title>
<indexterm><primary>GnomeDruidPage</primary></indexterm><programlisting>struct GnomeDruidPage;</programlisting>
<para>
The widget for a aprticular page in a druid.
</para></refsect2>
<refsect2>
<title><anchor id="gnome-druid-page-new"/>gnome_druid_page_new ()</title>
<indexterm><primary>gnome_druid_page_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_druid_page_new            (void);</programlisting>
<para>
Creates a new <link linkend="GnomeDruidPage"><type>GnomeDruidPage</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> The newly created <link linkend="GnomeDruidPage"><type>GnomeDruidPage</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-druid-page-next"/>gnome_druid_page_next ()</title>
<indexterm><primary>gnome_druid_page_next</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gnome_druid_page_next           (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druid_page);</programlisting>
<para>
This will emit the "next" signal for that particular page.  It
is called by gnome-druid exclusively.  It is expected that non-linear Druid's
will override this signal and return TRUE if it handles changing pages.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>druid_page</parameter>&nbsp;:</term>
<listitem><simpara> A DruidPage widget.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> This function will return FALSE by default.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-druid-page-prepare"/>gnome_druid_page_prepare ()</title>
<indexterm><primary>gnome_druid_page_prepare</primary></indexterm><programlisting><link linkend="void">void</link>        gnome_druid_page_prepare        (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druid_page);</programlisting>
<para>
This emits the "prepare" signal for the page.  It is called by
gnome-druid exclusively. This function is called immediately prior to a druid
page being shown so that it can "prepare" for display.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>druid_page</parameter>&nbsp;:</term>
<listitem><simpara> A DruidPage widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-druid-page-back"/>gnome_druid_page_back ()</title>
<indexterm><primary>gnome_druid_page_back</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gnome_druid_page_back           (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druid_page);</programlisting>
<para>
This will emit the "back" signal for that particular page.  It
is called by gnome-druid exclusively.  It is expected that non-linear Druid's
will override this signal and return TRUE if it handles changing pages.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>druid_page</parameter>&nbsp;:</term>
<listitem><simpara> A DruidPage widget.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> This function will return FALSE by default.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-druid-page-cancel"/>gnome_druid_page_cancel ()</title>
<indexterm><primary>gnome_druid_page_cancel</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gnome_druid_page_cancel         (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druid_page);</programlisting>
<para>
This will emit the "cancel" signal for that particular page.  It
is called by gnome-druid exclusively.  It is expected that a Druid will
override this signal and return TRUE if it does not want to exit.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>druid_page</parameter>&nbsp;:</term>
<listitem><simpara> A DruidPage widget.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> This function will return FALSE by default.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-druid-page-finish"/>gnome_druid_page_finish ()</title>
<indexterm><primary>gnome_druid_page_finish</primary></indexterm><programlisting><link linkend="void">void</link>        gnome_druid_page_finish         (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druid_page);</programlisting>
<para>
This emits the "finish" signal for the page.  It is called by
gnome-druid exclusively.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>druid_page</parameter>&nbsp;:</term>
<listitem><simpara> A DruidPage widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="GnomeDruidPage-back"/>The &quot;back&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druidpage,
                                            <link linkend="GtkWidget">GtkWidget</link> *widget,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>druidpage</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>The <link linkend="GnomeDruid"><type>GnomeDruid</type></link> containg this page.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><literal>TRUE</literal> if the signal handler has changed the page (since this stops
all further emission of the signal), <literal>FALSE</literal> otherwise.

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GnomeDruidPage-cancel"/>The &quot;cancel&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druidpage,
                                            <link linkend="GtkWidget">GtkWidget</link> *widget,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>druidpage</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>The <link linkend="GnomeDruid"><type>GnomeDruid</type></link> containg this page.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><literal>TRUE</literal> if the druid does not want to exit yet, <literal>FALSE</literal> if the exit
should continue.

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GnomeDruidPage-finish"/>The &quot;finish&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druidpage,
                                            <link linkend="GtkWidget">GtkWidget</link> *widget,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>druidpage</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>The <link linkend="GnomeDruid"><type>GnomeDruid</type></link> containg this page.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GnomeDruidPage-next"/>The &quot;next&quot; signal</title>
<programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druidpage,
                                            <link linkend="GtkWidget">GtkWidget</link> *widget,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>druidpage</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>The <link linkend="GnomeDruid"><type>GnomeDruid</type></link> containg this page.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara><literal>TRUE</literal> if the signal handler has changed the page (since this stops
all further emission of the signal), <literal>FALSE</literal> otherwise.

</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GnomeDruidPage-prepare"/>The &quot;prepare&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="GnomeDruidPage">GnomeDruidPage</link> *druidpage,
                                            <link linkend="GtkWidget">GtkWidget</link> *widget,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>druidpage</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara>The <link linkend="GnomeDruid"><type>GnomeDruid</type></link> containg this page.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
