<refentry id="GnomeIconSelection">
<refmeta>
<refentrytitle>GnomeIconSelection</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOMEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GnomeIconSelection</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;libgnomeui/libgnomeui.h&gt;


struct      <link linkend="GnomeIconSelection-struct">GnomeIconSelection</link>;
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-icon-selection-new">gnome_icon_selection_new</link>        (void);
<link linkend="void">void</link>        <link linkend="gnome-icon-selection-add-defaults">gnome_icon_selection_add_defaults</link>
                                            (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis);
<link linkend="void">void</link>        <link linkend="gnome-icon-selection-add-directory">gnome_icon_selection_add_directory</link>
                                            (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis,
                                             const <link linkend="gchar">gchar</link> *dir);
<link linkend="void">void</link>        <link linkend="gnome-icon-selection-show-icons">gnome_icon_selection_show_icons</link> (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis);
<link linkend="void">void</link>        <link linkend="gnome-icon-selection-clear">gnome_icon_selection_clear</link>      (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis,
                                             <link linkend="gboolean">gboolean</link> not_shown);
<link linkend="gchar">gchar</link>*      <link linkend="gnome-icon-selection-get-icon">gnome_icon_selection_get_icon</link>   (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis,
                                             <link linkend="gboolean">gboolean</link> full_path);
<link linkend="void">void</link>        <link linkend="gnome-icon-selection-select-icon">gnome_icon_selection_select_icon</link>
                                            (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis,
                                             const <link linkend="gchar">gchar</link> *filename);
<link linkend="void">void</link>        <link linkend="gnome-icon-selection-stop-loading">gnome_icon_selection_stop_loading</link>
                                            (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-icon-selection-get-gil">gnome_icon_selection_get_gil</link>    (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-icon-selection-get-box">gnome_icon_selection_get_box</link>    (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis);


</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----<link linkend="GtkWidget">GtkWidget</link>
               +----<link linkend="GtkContainer">GtkContainer</link>
                     +----<link linkend="GtkBox">GtkBox</link>
                           +----<link linkend="GtkVBox">GtkVBox</link>
                                 +----GnomeIconSelection
</synopsis>

</refsect1>



<refsect1>
<title>Implemented Interfaces</title>
<para>
GnomeIconSelection implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link>.</para>

</refsect1>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GnomeIconSelection-struct"/>struct GnomeIconSelection</title>
<indexterm><primary>GnomeIconSelection</primary></indexterm><programlisting>struct GnomeIconSelection;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gnome-icon-selection-new"/>gnome_icon_selection_new ()</title>
<indexterm><primary>gnome_icon_selection_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_icon_selection_new        (void);</programlisting>
<para>
Creates a new icon selection widget, it uses GnomeIconList
for the listing of icons</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> Returns the new object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-selection-add-defaults"/>gnome_icon_selection_add_defaults ()</title>
<indexterm><primary>gnome_icon_selection_add_defaults</primary></indexterm><programlisting><link linkend="void">void</link>        gnome_icon_selection_add_defaults
                                            (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis);</programlisting>
<para>
Adds the default pixmap directory into the selection
widget. It doesn't show the icons in the selection until you
do <link linkend="gnome-icon-selection-show-icons"><type>gnome_icon_selection_show_icons</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gis</parameter>&nbsp;:</term>
<listitem><simpara> GnomeIconSelection to work with
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-selection-add-directory"/>gnome_icon_selection_add_directory ()</title>
<indexterm><primary>gnome_icon_selection_add_directory</primary></indexterm><programlisting><link linkend="void">void</link>        gnome_icon_selection_add_directory
                                            (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis,
                                             const <link linkend="gchar">gchar</link> *dir);</programlisting>
<para>
Adds the icons from the directory <parameter>dir</parameter> to the
selection widget. It doesn't show the icons in the selection
until you do <link linkend="gnome-icon-selection-show-icons"><type>gnome_icon_selection_show_icons</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gis</parameter>&nbsp;:</term>
<listitem><simpara> GnomeIconSelection to work with
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dir</parameter>&nbsp;:</term>
<listitem><simpara> directory with pixmaps
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-selection-show-icons"/>gnome_icon_selection_show_icons ()</title>
<indexterm><primary>gnome_icon_selection_show_icons</primary></indexterm><programlisting><link linkend="void">void</link>        gnome_icon_selection_show_icons (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis);</programlisting>
<para>
Shows the icons inside the widget that
were added with <link linkend="gnome-icon-selection-add-defaults"><type>gnome_icon_selection_add_defaults</type></link> and
<link linkend="gnome-icon-selection-add-directory"><type>gnome_icon_selection_add_directory</type></link>. Before this function
is called the icons aren't actually added to the listing 
and can't be picked by the user.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gis</parameter>&nbsp;:</term>
<listitem><simpara> GnomeIconSelection to work with
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-selection-clear"/>gnome_icon_selection_clear ()</title>
<indexterm><primary>gnome_icon_selection_clear</primary></indexterm><programlisting><link linkend="void">void</link>        gnome_icon_selection_clear      (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis,
                                             <link linkend="gboolean">gboolean</link> not_shown);</programlisting>
<para>
Clear the currently shown icons, the ones
that weren't shown yet are not cleared unless the not_shown
parameter is given, in which case even those are cleared.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gis</parameter>&nbsp;:</term>
<listitem><simpara> GnomeIconSelection to work with
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>not_shown</parameter>&nbsp;:</term>
<listitem><simpara> boolean
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-selection-get-icon"/>gnome_icon_selection_get_icon ()</title>
<indexterm><primary>gnome_icon_selection_get_icon</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      gnome_icon_selection_get_icon   (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis,
                                             <link linkend="gboolean">gboolean</link> full_path);</programlisting>
<para>
Gets the currently selected icon name, if
full_path is true, it returns the full path to the icon,
if none is selected it returns NULL</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gis</parameter>&nbsp;:</term>
<listitem><simpara> GnomeIconSelection to work with
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>full_path</parameter>&nbsp;:</term>
<listitem><simpara> boolean
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> internal string, it must not be changed or freed
or NULL
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-selection-select-icon"/>gnome_icon_selection_select_icon ()</title>
<indexterm><primary>gnome_icon_selection_select_icon</primary></indexterm><programlisting><link linkend="void">void</link>        gnome_icon_selection_select_icon
                                            (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis,
                                             const <link linkend="gchar">gchar</link> *filename);</programlisting>
<para>
Selects the icon <parameter>filename</parameter>. This icon must have
already been added and shown * (see <parameter>gnome_icon_selection_show_icons</parameter>)</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gis</parameter>&nbsp;:</term>
<listitem><simpara> GnomeIconSelection to work with
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> icon filename
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-selection-stop-loading"/>gnome_icon_selection_stop_loading ()</title>
<indexterm><primary>gnome_icon_selection_stop_loading</primary></indexterm><programlisting><link linkend="void">void</link>        gnome_icon_selection_stop_loading
                                            (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis);</programlisting>
<para>
Stop the loading of images when we are in
the loop in show_icons, otherwise it does nothing and is
harmless, it should be used say if the dialog was hidden
or when we want to quickly stop loading the images to do
something else without destroying the icon selection object.
The remaining icons can be shown by
<link linkend="gnome-icon-selection-show-icons"><type>gnome_icon_selection_show_icons</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gis</parameter>&nbsp;:</term>
<listitem><simpara> GnomeIconSelection to work with
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-selection-get-gil"/>gnome_icon_selection_get_gil ()</title>
<indexterm><primary>gnome_icon_selection_get_gil</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_icon_selection_get_gil    (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis);</programlisting>
<para>
Gets the <link linkend="GnomeIconList"><type>GnomeIconList</type></link> widget that is
used for the display of icons</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gis</parameter>&nbsp;:</term>
<listitem><simpara> GnomeIconSelection to work with
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link> pointer to the interal widget
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-selection-get-box"/>gnome_icon_selection_get_box ()</title>
<indexterm><primary>gnome_icon_selection_get_box</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_icon_selection_get_box    (<link linkend="GnomeIconSelection">GnomeIconSelection</link> *gis);</programlisting>
<para>
Gets the <link linkend="GtkVBox"><type>GtkVBox</type></link> widget that is
used to pack the different elements of the selection
into.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>gis</parameter>&nbsp;:</term>
<listitem><simpara> GnomeIconSelection to work with
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link> pointer to the interal widget
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
