<refentry id="GnomeIconEntry">
<refmeta>
<refentrytitle>GnomeIconEntry</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOMEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GnomeIconEntry</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>

#include &lt;libgnomeui/libgnomeui.h&gt;


struct      <link linkend="GnomeIconEntryPrivate">GnomeIconEntryPrivate</link>;
struct      <link linkend="GnomeIconEntry-struct">GnomeIconEntry</link>;
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-icon-entry-new">gnome_icon_entry_new</link>            (const <link linkend="gchar">gchar</link> *history_id,
                                             const <link linkend="gchar">gchar</link> *browse_dialog_title);
void        <link linkend="gnome-icon-entry-construct">gnome_icon_entry_construct</link>      (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                             const <link linkend="gchar">gchar</link> *history_id,
                                             const <link linkend="gchar">gchar</link> *browse_dialog_title);
void        <link linkend="gnome-icon-entry-set-pixmap-subdir">gnome_icon_entry_set_pixmap_subdir</link>
                                            (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                             const <link linkend="gchar">gchar</link> *subdir);
<link linkend="gchar">gchar</link>*      <link linkend="gnome-icon-entry-get-filename">gnome_icon_entry_get_filename</link>   (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);
<link linkend="gboolean">gboolean</link>    <link linkend="gnome-icon-entry-set-filename">gnome_icon_entry_set_filename</link>   (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                             const <link linkend="gchar">gchar</link> *filename);
void        <link linkend="gnome-icon-entry-set-browse-dialog-title">gnome_icon_entry_set_browse_dialog_title</link>
                                            (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                             const <link linkend="gchar">gchar</link> *browse_dialog_title);
void        <link linkend="gnome-icon-entry-set-history-id">gnome_icon_entry_set_history_id</link> (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                             const <link linkend="gchar">gchar</link> *history_id);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-icon-entry-pick-dialog">gnome_icon_entry_pick_dialog</link>    (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);
void        <link linkend="gnome-icon-entry-set-icon">gnome_icon_entry_set_icon</link>       (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                             const <link linkend="gchar">gchar</link> *filename);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-icon-entry-gnome-file-entry">gnome_icon_entry_gnome_file_entry</link>
                                            (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-icon-entry-gnome-entry">gnome_icon_entry_gnome_entry</link>    (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-icon-entry-gtk-entry">gnome_icon_entry_gtk_entry</link>      (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----<link linkend="GtkWidget">GtkWidget</link>
               +----<link linkend="GtkContainer">GtkContainer</link>
                     +----<link linkend="GtkBox">GtkBox</link>
                           +----<link linkend="GtkVBox">GtkVBox</link>
                                 +----GnomeIconEntry
</synopsis>

</refsect1>

<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="GnomeIconEntry--history-id">history-id</link>&quot;           <link linkend="gchararray">gchararray</link>           : Read / Write
  &quot;<link linkend="GnomeIconEntry--browse-dialog-title">browse-dialog-title</link>&quot;  <link linkend="gchararray">gchararray</link>           : Read / Write
  &quot;<link linkend="GnomeIconEntry--pixmap-subdir">pixmap-subdir</link>&quot;        <link linkend="gchararray">gchararray</link>           : Read / Write
  &quot;<link linkend="GnomeIconEntry--filename">filename</link>&quot;             <link linkend="gchararray">gchararray</link>           : Read / Write
  &quot;<link linkend="GnomeIconEntry--pick-dialog">pick-dialog</link>&quot;          <link linkend="GtkDialog">GtkDialog</link>            : Read
</synopsis>
</refsect1>

<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="GnomeIconEntry-browse">browse</link>&quot;    void        user_function      (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *iconentry,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GnomeIconEntry-changed">changed</link>&quot;   void        user_function      (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *iconentry,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GnomeIconEntryPrivate">struct GnomeIconEntryPrivate</title>
<programlisting>struct GnomeIconEntryPrivate;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GnomeIconEntry-struct">struct GnomeIconEntry</title>
<programlisting>struct GnomeIconEntry;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gnome-icon-entry-new">gnome_icon_entry_new ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_icon_entry_new            (const <link linkend="gchar">gchar</link> *history_id,
                                             const <link linkend="gchar">gchar</link> *browse_dialog_title);</programlisting>
<para>
Creates a new icon entry widget</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>history_id</parameter>&nbsp;:</entry>
<entry> the id given to <link linkend="gnome-entry-new">gnome_entry_new</link>
</entry></row>
<row><entry align="right"><parameter>browse_dialog_title</parameter>&nbsp;:</entry>
<entry> title of the browse dialog and icon selection dialog
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> Returns the new object
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-icon-entry-construct">gnome_icon_entry_construct ()</title>
<programlisting>void        gnome_icon_entry_construct      (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                             const <link linkend="gchar">gchar</link> *history_id,
                                             const <link linkend="gchar">gchar</link> *browse_dialog_title);</programlisting>
<para>
For language bindings and subclassing, from C use
<link linkend="gnome-icon-entry-new">gnome_icon_entry_new</link></para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ientry</parameter>&nbsp;:</entry>
<entry> the GnomeIconEntry to work with
</entry></row>
<row><entry align="right"><parameter>history_id</parameter>&nbsp;:</entry>
<entry> the id given to <link linkend="gnome-entry-new">gnome_entry_new</link> in the browse dialog
</entry></row>
<row><entry align="right"><parameter>browse_dialog_title</parameter>&nbsp;:</entry>
<entry> title of the icon selection dialog
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-icon-entry-set-pixmap-subdir">gnome_icon_entry_set_pixmap_subdir ()</title>
<programlisting>void        gnome_icon_entry_set_pixmap_subdir
                                            (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                             const <link linkend="gchar">gchar</link> *subdir);</programlisting>
<para>
Sets the subdirectory below gnome's default
pixmap directory to use as the default path for the file
entry.  The path can also be an absolute one.  If <literal>NULL</literal> is passed
then the pixmap directory itself is used.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ientry</parameter>&nbsp;:</entry>
<entry> the GnomeIconEntry to work with
</entry></row>
<row><entry align="right"><parameter>subdir</parameter>&nbsp;:</entry>
<entry> subdirectory
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-icon-entry-get-filename">gnome_icon_entry_get_filename ()</title>
<programlisting><link linkend="gchar">gchar</link>*      gnome_icon_entry_get_filename   (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);</programlisting>
<para>
Gets the file name of the image if it was possible
to load it into the preview. That is, it will only return a filename
if the image exists and it was possible to load it as an image.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ientry</parameter>&nbsp;:</entry>
<entry> the GnomeIconEntry to work with
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> a newly allocated string with the path or <literal>NULL</literal> if it
couldn't load the file
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-icon-entry-set-filename">gnome_icon_entry_set_filename ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    gnome_icon_entry_set_filename   (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                             const <link linkend="gchar">gchar</link> *filename);</programlisting>
<para>
Sets the icon of GnomeIconEntry to be the one pointed to by
<parameter>filename</parameter> (in the current subdirectory).</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ientry</parameter>&nbsp;:</entry>
<entry> the GnomeIconEntry to work with
</entry></row>
<row><entry align="right"><parameter>filename</parameter>&nbsp;:</entry>
<entry> a filename
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> <literal>TRUE</literal> if icon was loaded ok, <literal>FALSE</literal> otherwise
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-icon-entry-set-browse-dialog-title">gnome_icon_entry_set_browse_dialog_title ()</title>
<programlisting>void        gnome_icon_entry_set_browse_dialog_title
                                            (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                             const <link linkend="gchar">gchar</link> *browse_dialog_title);</programlisting>
<para>
Set the title of the browse dialog.  It will not effect
an existing dialog.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ientry</parameter>&nbsp;:</entry>
<entry> the GnomeIconEntry to work with
</entry></row>
<row><entry align="right"><parameter>browse_dialog_title</parameter>&nbsp;:</entry>
<entry> title of the icon selection dialog
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-icon-entry-set-history-id">gnome_icon_entry_set_history_id ()</title>
<programlisting>void        gnome_icon_entry_set_history_id (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                             const <link linkend="gchar">gchar</link> *history_id);</programlisting>
<para>
Set the history_id of the entry in the browse dialog
and reload the history</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ientry</parameter>&nbsp;:</entry>
<entry> the GnomeIconEntry to work with
</entry></row>
<row><entry align="right"><parameter>history_id</parameter>&nbsp;:</entry>
<entry> the id given to <link linkend="gnome-entry-new">gnome_entry_new</link> in the browse dialog
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-icon-entry-pick-dialog">gnome_icon_entry_pick_dialog ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_icon_entry_pick_dialog    (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);</programlisting>
<para>
If a pick dialog exists, return a pointer to it or
return NULL.  This is if you need to do something with all dialogs.
You would use the browse signal with connect_after to get the
pick dialog when it is displayed.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ientry</parameter>&nbsp;:</entry>
<entry> the GnomeIconEntry to work with
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> The pick dialog or <literal>NULL</literal> if none exists
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-icon-entry-set-icon">gnome_icon_entry_set_icon ()</title>
<programlisting>void        gnome_icon_entry_set_icon       (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry,
                                             const <link linkend="gchar">gchar</link> *filename);</programlisting>
<para>
Deprecated in favour of <link linkend="gnome-icon-entry-set-filename">gnome_icon_entry_set_filename</link></para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ientry</parameter>&nbsp;:</entry>
<entry> the GnomeIconEntry to work with
</entry></row>
<row><entry align="right"><parameter>filename</parameter>&nbsp;:</entry>
<entry> a filename
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-icon-entry-gnome-file-entry">gnome_icon_entry_gnome_file_entry ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_icon_entry_gnome_file_entry
                                            (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);</programlisting>
<para>
Get the GnomeFileEntry widget that's part of the entry
DEPRECATED! Use the "changed" signal for getting changes</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ientry</parameter>&nbsp;:</entry>
<entry> the GnomeIconEntry to work with
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> Returns GnomeFileEntry widget
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-icon-entry-gnome-entry">gnome_icon_entry_gnome_entry ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_icon_entry_gnome_entry    (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);</programlisting>
<para>
Get the GnomeEntry widget that's part of the entry
DEPRECATED! Use the "changed" signal for getting changes</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ientry</parameter>&nbsp;:</entry>
<entry> the GnomeIconEntry to work with
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> Returns GnomeEntry widget
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-icon-entry-gtk-entry">gnome_icon_entry_gtk_entry ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_icon_entry_gtk_entry      (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *ientry);</programlisting>
<para>
Get the GtkEntry widget that's part of the entry.
DEPRECATED! Use the "changed" signal for getting changes</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ientry</parameter>&nbsp;:</entry>
<entry> the GnomeIconEntry to work with
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> Returns GtkEntry widget
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<variablelist>
<varlistentry><term><anchor id="GnomeIconEntry--history-id">&quot;<literal>history-id</literal>&quot; (<link linkend="gchararray">gchararray</link> : Read / Write)</term>
<listitem>
<para>Unique identifier for the icon entry.  This will be used to save the history list.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GnomeIconEntry--browse-dialog-title">&quot;<literal>browse-dialog-title</literal>&quot; (<link linkend="gchararray">gchararray</link> : Read / Write)</term>
<listitem>
<para>Title for the Browse icon dialog.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GnomeIconEntry--pixmap-subdir">&quot;<literal>pixmap-subdir</literal>&quot; (<link linkend="gchararray">gchararray</link> : Read / Write)</term>
<listitem>
<para>Directory that will be searched for icons.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GnomeIconEntry--filename">&quot;<literal>filename</literal>&quot; (<link linkend="gchararray">gchararray</link> : Read / Write)</term>
<listitem>
<para>Filename that should be displayed in the icon entry.</para>
</listitem></varlistentry>
<varlistentry><term><anchor id="GnomeIconEntry--pick-dialog">&quot;<literal>pick-dialog</literal>&quot; (<link linkend="GtkDialog">GtkDialog</link> : Read)</term>
<listitem>
<para>Icon picker dialog.  You can use this property to get the GtkDialog if you need to modify or query any of its properties.</para>
</listitem></varlistentry>

</variablelist>
</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="GnomeIconEntry-browse">The &quot;browse&quot; signal</title>
<programlisting>void        user_function                  (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *iconentry,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>iconentry</parameter>&nbsp;:</entry>
<entry>the object which received the signal.

</entry></row>
<row><entry align="right"><parameter>user_data</parameter>&nbsp;:</entry>
<entry>user data set when the signal handler was connected.</entry></row>
</tbody></tgroup></informaltable></refsect2><refsect2><title><anchor id="GnomeIconEntry-changed">The &quot;changed&quot; signal</title>
<programlisting>void        user_function                  (<link linkend="GnomeIconEntry">GnomeIconEntry</link> *iconentry,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>iconentry</parameter>&nbsp;:</entry>
<entry>the object which received the signal.

</entry></row>
<row><entry align="right"><parameter>user_data</parameter>&nbsp;:</entry>
<entry>user data set when the signal handler was connected.</entry></row>
</tbody></tgroup></informaltable></refsect2>
</refsect1>



</refentry>
