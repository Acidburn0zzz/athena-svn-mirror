<refentry id="GnomeApp">
<refmeta>
<refentrytitle>GnomeApp</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOMEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GnomeApp</refname><refpurpose>The main application widget.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>

#include &lt;libgnomeui/libgnomeui.h&gt;


#define     <link linkend="GNOME-APP-MENUBAR-NAME-CAPS">GNOME_APP_MENUBAR_NAME</link>
#define     <link linkend="GNOME-APP-TOOLBAR-NAME-CAPS">GNOME_APP_TOOLBAR_NAME</link>
struct      <link linkend="GnomeApp-struct">GnomeApp</link>;
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-app-new">gnome_app_new</link>                   (const <link linkend="gchar">gchar</link> *appname,
                                             const <link linkend="gchar">gchar</link> *title);
void        <link linkend="gnome-app-construct">gnome_app_construct</link>             (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             const <link linkend="gchar">gchar</link> *appname,
                                             const <link linkend="gchar">gchar</link> *title);
void        <link linkend="gnome-app-set-menus">gnome_app_set_menus</link>             (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="GtkMenuBar">GtkMenuBar</link> *menubar);
void        <link linkend="gnome-app-set-toolbar">gnome_app_set_toolbar</link>           (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="GtkToolbar">GtkToolbar</link> *toolbar);
void        <link linkend="gnome-app-set-statusbar">gnome_app_set_statusbar</link>         (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="GtkWidget">GtkWidget</link> *statusbar);
void        <link linkend="gnome-app-set-statusbar-custom">gnome_app_set_statusbar_custom</link>  (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="GtkWidget">GtkWidget</link> *container,
                                             <link linkend="GtkWidget">GtkWidget</link> *statusbar);
void        <link linkend="gnome-app-set-contents">gnome_app_set_contents</link>          (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="GtkWidget">GtkWidget</link> *contents);
void        <link linkend="gnome-app-add-toolbar">gnome_app_add_toolbar</link>           (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="BonoboDockItemBehavior">BonoboDockItemBehavior</link> behavior,
                                             <link linkend="BonoboDockPlacement">BonoboDockPlacement</link> placement,
                                             <link linkend="gint">gint</link> band_num,
                                             <link linkend="gint">gint</link> band_position,
                                             <link linkend="gint">gint</link> offset);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gnome-app-add-docked">gnome_app_add_docked</link>            (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="BonoboDockItemBehavior">BonoboDockItemBehavior</link> behavior,
                                             <link linkend="BonoboDockPlacement">BonoboDockPlacement</link> placement,
                                             <link linkend="gint">gint</link> band_num,
                                             <link linkend="gint">gint</link> band_position,
                                             <link linkend="gint">gint</link> offset);
void        <link linkend="gnome-app-add-dock-item">gnome_app_add_dock_item</link>         (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="BonoboDockItem">BonoboDockItem</link> *item,
                                             <link linkend="BonoboDockPlacement">BonoboDockPlacement</link> placement,
                                             <link linkend="gint">gint</link> band_num,
                                             <link linkend="gint">gint</link> band_position,
                                             <link linkend="gint">gint</link> offset);
void        <link linkend="gnome-app-enable-layout-config">gnome_app_enable_layout_config</link>  (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="gboolean">gboolean</link> enable);
<link linkend="BonoboDock">BonoboDock</link>* <link linkend="gnome-app-get-dock">gnome_app_get_dock</link>              (<link linkend="GnomeApp">GnomeApp</link> *app);
<link linkend="BonoboDockItem">BonoboDockItem</link>* <link linkend="gnome-app-get-dock-item-by-name">gnome_app_get_dock_item_by_name</link>
                                            (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             const <link linkend="gchar">gchar</link> *name);


</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----<link linkend="GtkWidget">GtkWidget</link>
               +----<link linkend="GtkContainer">GtkContainer</link>
                     +----<link linkend="GtkBin">GtkBin</link>
                           +----<link linkend="GtkWindow">GtkWindow</link>
                                 +----GnomeApp
</synopsis>

</refsect1>

<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="GnomeApp--app-id">app-id</link>&quot;               <link linkend="gchararray">gchararray</link>           : Read / Write
</synopsis>
</refsect1>



<refsect1>
<title>Description</title>
<para>
The <parameter>GnomeApp</parameter> widget and associated functions provides the easiest way to
create an almost complete GNOME application in libgnomeui. Simple create an
instance of the widget, append any menus, toolbar(s) and a status bar, as
required (this will probably be done with some functions from the following
pages). Then fill in the main contents with a call to <link linkend="gnome-app-set-contents">gnome_app_set_contents</link>()
and start the main loop (with <link linkend="gtk-main">gtk_main</link>()).
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GNOME-APP-MENUBAR-NAME-CAPS">GNOME_APP_MENUBAR_NAME</title>
<programlisting>#define GNOME_APP_MENUBAR_NAME "Menubar"
</programlisting>
<para>
The name of the menubar as it is passed to libbonobo.
</para></refsect2>
<refsect2>
<title><anchor id="GNOME-APP-TOOLBAR-NAME-CAPS">GNOME_APP_TOOLBAR_NAME</title>
<programlisting>#define GNOME_APP_TOOLBAR_NAME "Toolbar"
</programlisting>
<para>
The name of the default toolbar that is added to the application widget by
default.
</para></refsect2>
<refsect2>
<title><anchor id="GnomeApp-struct">struct GnomeApp</title>
<programlisting>struct GnomeApp;</programlisting>
<para>
A widget representing an entire GNOME application, including the main window,
menus, toolbar(s) and status bar.
</para></refsect2>
<refsect2>
<title><anchor id="gnome-app-new">gnome_app_new ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_app_new                   (const <link linkend="gchar">gchar</link> *appname,
                                             const <link linkend="gchar">gchar</link> *title);</programlisting>
<para>
Create a new (empty) application window. You must specify the <parameter>appname</parameter> (used
internally as an identifier).  The <parameter>title</parameter> param can be left as NULL, in
which case the window's title will not be set.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>appname</parameter>&nbsp;:</entry>
<entry> Name of program, used in file names and paths.
</entry></row>
<row><entry align="right"><parameter>title</parameter>&nbsp;:</entry>
<entry> Window title for application.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> Pointer to new <link linkend="GnomeApp">GnomeApp</link> object.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-app-construct">gnome_app_construct ()</title>
<programlisting>void        gnome_app_construct             (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             const <link linkend="gchar">gchar</link> *appname,
                                             const <link linkend="gchar">gchar</link> *title);</programlisting>
<para>
Constructor for language bindings; you don't normally need this.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>app</parameter>&nbsp;:</entry>
<entry> A newly created <link linkend="GnomeApp">GnomeApp</link> object.
</entry></row>
<row><entry align="right"><parameter>appname</parameter>&nbsp;:</entry>
<entry> Name of program, using in file names and paths.
</entry></row>
<row><entry align="right"><parameter>title</parameter>&nbsp;:</entry>
<entry> Window title for application.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-app-set-menus">gnome_app_set_menus ()</title>
<programlisting>void        gnome_app_set_menus             (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="GtkMenuBar">GtkMenuBar</link> *menubar);</programlisting>
<para>
Sets the menu bar of the application window.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>app</parameter>&nbsp;:</entry>
<entry> A <link linkend="GnomeApp">GnomeApp</link> instance.
</entry></row>
<row><entry align="right"><parameter>menubar</parameter>&nbsp;:</entry>
<entry> Menu bar widget for main application window.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-app-set-toolbar">gnome_app_set_toolbar ()</title>
<programlisting>void        gnome_app_set_toolbar           (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="GtkToolbar">GtkToolbar</link> *toolbar);</programlisting>
<para>
Sets the main toolbar of the application window.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>app</parameter>&nbsp;:</entry>
<entry> A <link linkend="GnomeApp">GnomeApp</link> instance.
</entry></row>
<row><entry align="right"><parameter>toolbar</parameter>&nbsp;:</entry>
<entry> Toolbar widget for main app window.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-app-set-statusbar">gnome_app_set_statusbar ()</title>
<programlisting>void        gnome_app_set_statusbar         (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="GtkWidget">GtkWidget</link> *statusbar);</programlisting>
<para>
Sets the status bar of the application window.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>app</parameter>&nbsp;:</entry>
<entry> A <link linkend="GnomeApp">GnomeApp</link> instance
</entry></row>
<row><entry align="right"><parameter>statusbar</parameter>&nbsp;:</entry>
<entry> Statusbar widget for main app window
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-app-set-statusbar-custom">gnome_app_set_statusbar_custom ()</title>
<programlisting>void        gnome_app_set_statusbar_custom  (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="GtkWidget">GtkWidget</link> *container,
                                             <link linkend="GtkWidget">GtkWidget</link> *statusbar);</programlisting>
<para>
Sets the status bar of the application window, but use <parameter>container</parameter>
as its container.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>app</parameter>&nbsp;:</entry>
<entry> A <link linkend="GnomeApp">GnomeApp</link> instance
</entry></row>
<row><entry align="right"><parameter>container</parameter>&nbsp;:</entry>
<entry> container widget containing the statusbar
</entry></row>
<row><entry align="right"><parameter>statusbar</parameter>&nbsp;:</entry>
<entry> Statusbar widget for main app window
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-app-set-contents">gnome_app_set_contents ()</title>
<programlisting>void        gnome_app_set_contents          (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="GtkWidget">GtkWidget</link> *contents);</programlisting>
<para>
Sets the content area of the main window of <parameter>app</parameter>.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>app</parameter>&nbsp;:</entry>
<entry> A <link linkend="GnomeApp">GnomeApp</link> instance.
</entry></row>
<row><entry align="right"><parameter>contents</parameter>&nbsp;:</entry>
<entry> Widget to be application content area.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-app-add-toolbar">gnome_app_add_toolbar ()</title>
<programlisting>void        gnome_app_add_toolbar           (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="GtkToolbar">GtkToolbar</link> *toolbar,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="BonoboDockItemBehavior">BonoboDockItemBehavior</link> behavior,
                                             <link linkend="BonoboDockPlacement">BonoboDockPlacement</link> placement,
                                             <link linkend="gint">gint</link> band_num,
                                             <link linkend="gint">gint</link> band_position,
                                             <link linkend="gint">gint</link> offset);</programlisting>
<para>
Create a new <link linkend="BonoboDockItem">BonoboDockItem</link> widget containing <parameter>toolbar</parameter>, and add it
to <parameter>app</parameter>'s dock with the specified layout information.  Notice that,
if automatic layout configuration is enabled, the layout is
overridden by the saved configuration, if any.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>app</parameter>&nbsp;:</entry>
<entry> A <link linkend="GnomeApp">GnomeApp</link> widget
</entry></row>
<row><entry align="right"><parameter>toolbar</parameter>&nbsp;:</entry>
<entry> Toolbar to be added to <parameter>app</parameter>'s dock
</entry></row>
<row><entry align="right"><parameter>name</parameter>&nbsp;:</entry>
<entry> Name for the dock item that will contain <parameter>toolbar</parameter>
</entry></row>
<row><entry align="right"><parameter>behavior</parameter>&nbsp;:</entry>
<entry> Behavior for the new dock item
</entry></row>
<row><entry align="right"><parameter>placement</parameter>&nbsp;:</entry>
<entry> Placement for the new dock item
</entry></row>
<row><entry align="right"><parameter>band_num</parameter>&nbsp;:</entry>
<entry> Number of the band where the dock item should be placed
</entry></row>
<row><entry align="right"><parameter>band_position</parameter>&nbsp;:</entry>
<entry> Position of the new dock item in band <parameter>band_num</parameter>
</entry></row>
<row><entry align="right"><parameter>offset</parameter>&nbsp;:</entry>
<entry> Offset from the previous dock item in the band; if there is
no previous item, offset from the beginning of the band.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-app-add-docked">gnome_app_add_docked ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gnome_app_add_docked            (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="BonoboDockItemBehavior">BonoboDockItemBehavior</link> behavior,
                                             <link linkend="BonoboDockPlacement">BonoboDockPlacement</link> placement,
                                             <link linkend="gint">gint</link> band_num,
                                             <link linkend="gint">gint</link> band_position,
                                             <link linkend="gint">gint</link> offset);</programlisting>
<para>
Add <parameter>widget</parameter> as a dock item according to the specified layout
information.  Notice that, if automatic layout configuration is
enabled, the layout is overridden by the saved configuration, if
any.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>app</parameter>&nbsp;:</entry>
<entry> A <link linkend="GnomeApp">GnomeApp</link> widget.
</entry></row>
<row><entry align="right"><parameter>widget</parameter>&nbsp;:</entry>
<entry> Widget to be added to the <link linkend="GnomeApp">GnomeApp</link>.
</entry></row>
<row><entry align="right"><parameter>name</parameter>&nbsp;:</entry>
<entry> Name for the new dock item.
</entry></row>
<row><entry align="right"><parameter>behavior</parameter>&nbsp;:</entry>
<entry> Behavior for the new dock item.
</entry></row>
<row><entry align="right"><parameter>placement</parameter>&nbsp;:</entry>
<entry> Placement for the new dock item.
</entry></row>
<row><entry align="right"><parameter>band_num</parameter>&nbsp;:</entry>
<entry> Number of the band where the dock item should be placed.
</entry></row>
<row><entry align="right"><parameter>band_position</parameter>&nbsp;:</entry>
<entry> Position of the new dock item in band <parameter>band_num</parameter>.
</entry></row>
<row><entry align="right"><parameter>offset</parameter>&nbsp;:</entry>
<entry> Offset from the previous dock item in the band; if there is
no previous item, offset from the beginning of the band.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> The dock item used to contain the widget.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-app-add-dock-item">gnome_app_add_dock_item ()</title>
<programlisting>void        gnome_app_add_dock_item         (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="BonoboDockItem">BonoboDockItem</link> *item,
                                             <link linkend="BonoboDockPlacement">BonoboDockPlacement</link> placement,
                                             <link linkend="gint">gint</link> band_num,
                                             <link linkend="gint">gint</link> band_position,
                                             <link linkend="gint">gint</link> offset);</programlisting>
<para>
Add <parameter>item</parameter> according to the specified layout information.  Notice
that, if automatic layout configuration is enabled, the layout is
overridden by the saved configuration, if any.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>app</parameter>&nbsp;:</entry>
<entry> A &amp;GnomeApp widget.
</entry></row>
<row><entry align="right"><parameter>item</parameter>&nbsp;:</entry>
<entry> Dock item to be added to <parameter>app</parameter>'s dock.
</entry></row>
<row><entry align="right"><parameter>placement</parameter>&nbsp;:</entry>
<entry> Placement for the dock item.
</entry></row>
<row><entry align="right"><parameter>band_num</parameter>&nbsp;:</entry>
<entry> Number of the band where the dock item should be placed.
</entry></row>
<row><entry align="right"><parameter>band_position</parameter>&nbsp;:</entry>
<entry> Position of the dock item in band <parameter>band_num</parameter>.
</entry></row>
<row><entry align="right"><parameter>offset</parameter>&nbsp;:</entry>
<entry> Offset from the previous dock item in the band; if there is
no previous item, offset from the beginning of the band.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-app-enable-layout-config">gnome_app_enable_layout_config ()</title>
<programlisting>void        gnome_app_enable_layout_config  (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             <link linkend="gboolean">gboolean</link> enable);</programlisting>
<para>
Specify whether <parameter>app</parameter> should automatically save the dock's
layout configuration via gnome-config whenever it changes or not.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>app</parameter>&nbsp;:</entry>
<entry> A <link linkend="GnomeApp">GnomeApp</link> widget.
</entry></row>
<row><entry align="right"><parameter>enable</parameter>&nbsp;:</entry>
<entry> Boolean specifying whether automatic configuration saving
is enabled.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-app-get-dock">gnome_app_get_dock ()</title>
<programlisting><link linkend="BonoboDock">BonoboDock</link>* gnome_app_get_dock              (<link linkend="GnomeApp">GnomeApp</link> *app);</programlisting>
<para>
Retrieves the <link linkend="BonoboDock">BonoboDock</link> widget contained in <parameter>app</parameter>.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>app</parameter>&nbsp;:</entry>
<entry> A <link linkend="GnomeApp">GnomeApp</link> widget
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> The relevant <link linkend="BonoboDock">BonoboDock</link> widget.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gnome-app-get-dock-item-by-name">gnome_app_get_dock_item_by_name ()</title>
<programlisting><link linkend="BonoboDockItem">BonoboDockItem</link>* gnome_app_get_dock_item_by_name
                                            (<link linkend="GnomeApp">GnomeApp</link> *app,
                                             const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>
Retrieve the dock item whose name matches <parameter>name</parameter>.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>app</parameter>&nbsp;:</entry>
<entry> A <link linkend="GnomeApp">GnomeApp</link> widget.
</entry></row>
<row><entry align="right"><parameter>name</parameter>&nbsp;:</entry>
<entry> Name of the dock item to retrieve.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> The retrieved dock item.
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<variablelist>
<varlistentry><term><anchor id="GnomeApp--app-id">&quot;<literal>app-id</literal>&quot; (<link linkend="gchararray">gchararray</link> : Read / Write)</term>
<listitem>
<para>The application ID string.</para>
</listitem></varlistentry>

</variablelist>
</refsect1>




</refentry>
