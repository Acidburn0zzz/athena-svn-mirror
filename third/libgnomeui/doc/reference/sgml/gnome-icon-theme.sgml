<refentry id="libgnomeui-GnomeIconTheme">
<refmeta>
<refentrytitle>GnomeIconTheme</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBGNOMEUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GnomeIconTheme</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>

#include &lt;libgnomeui/libgnomeui.h&gt;


struct      <link linkend="GnomeIconThemeClass">GnomeIconThemeClass</link>;
struct      <link linkend="GnomeIconTheme">GnomeIconTheme</link>;
<link linkend="GnomeIconTheme">GnomeIconTheme</link>* <link linkend="gnome-icon-theme-new">gnome_icon_theme_new</link>        (void);
void        <link linkend="gnome-icon-theme-get-search-path">gnome_icon_theme_get_search_path</link>
                                            (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             char **path[],
                                             int *n_elements);
void        <link linkend="gnome-icon-theme-set-search-path">gnome_icon_theme_set_search_path</link>
                                            (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             const char *path[],
                                             int n_elements);
<link linkend="gboolean">gboolean</link>    <link linkend="gnome-icon-theme-get-allow-svg">gnome_icon_theme_get_allow_svg</link>  (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme);
void        <link linkend="gnome-icon-theme-set-allow-svg">gnome_icon_theme_set_allow_svg</link>  (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             <link linkend="gboolean">gboolean</link> allow_svg);
char*       <link linkend="gnome-icon-theme-get-example-icon-name">gnome_icon_theme_get_example_icon_name</link>
                                            (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme);
void        <link linkend="gnome-icon-theme-append-search-path">gnome_icon_theme_append_search_path</link>
                                            (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             const char *path);
void        <link linkend="gnome-icon-theme-prepend-search-path">gnome_icon_theme_prepend_search_path</link>
                                            (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             const char *path);
void        <link linkend="gnome-icon-theme-set-custom-theme">gnome_icon_theme_set_custom_theme</link>
                                            (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             const char *theme_name);
char*       <link linkend="gnome-icon-theme-lookup-icon">gnome_icon_theme_lookup_icon</link>    (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             const char *icon_name,
                                             int size,
                                             const <link linkend="GnomeIconData">GnomeIconData</link> **icon_data,
                                             int *base_size);
<link linkend="gboolean">gboolean</link>    <link linkend="gnome-icon-theme-has-icon">gnome_icon_theme_has_icon</link>       (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             const char *icon_name);
<link linkend="GList">GList</link>*      <link linkend="gnome-icon-theme-list-icons">gnome_icon_theme_list_icons</link>     (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             const char *context);
<link linkend="gboolean">gboolean</link>    <link linkend="gnome-icon-theme-rescan-if-needed">gnome_icon_theme_rescan_if_needed</link>
                                            (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme);
<link linkend="GnomeIconData">GnomeIconData</link>* <link linkend="gnome-icon-data-dup">gnome_icon_data_dup</link>          (const <link linkend="GnomeIconData">GnomeIconData</link> *icon_data);
void        <link linkend="gnome-icon-data-free">gnome_icon_data_free</link>            (<link linkend="GnomeIconData">GnomeIconData</link> *icon_data);


</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GnomeIconThemeClass">struct GnomeIconThemeClass</title>
<programlisting>struct GnomeIconThemeClass {

  GObjectClass parent_class;

  void (* changed)  (GnomeIconTheme *icon_theme);
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GnomeIconTheme">struct GnomeIconTheme</title>
<programlisting>struct GnomeIconTheme {

  GObject parent_instance;

  GnomeIconThemePrivate *priv;
};
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gnome-icon-theme-new">gnome_icon_theme_new ()</title>
<programlisting><link linkend="GnomeIconTheme">GnomeIconTheme</link>* gnome_icon_theme_new        (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-theme-get-search-path">gnome_icon_theme_get_search_path ()</title>
<programlisting>void        gnome_icon_theme_get_search_path
                                            (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             char **path[],
                                             int *n_elements);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>theme</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_elements</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-theme-set-search-path">gnome_icon_theme_set_search_path ()</title>
<programlisting>void        gnome_icon_theme_set_search_path
                                            (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             const char *path[],
                                             int n_elements);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>theme</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_elements</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-theme-get-allow-svg">gnome_icon_theme_get_allow_svg ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    gnome_icon_theme_get_allow_svg  (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>theme</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-theme-set-allow-svg">gnome_icon_theme_set_allow_svg ()</title>
<programlisting>void        gnome_icon_theme_set_allow_svg  (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             <link linkend="gboolean">gboolean</link> allow_svg);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>theme</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>allow_svg</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-theme-get-example-icon-name">gnome_icon_theme_get_example_icon_name ()</title>
<programlisting>char*       gnome_icon_theme_get_example_icon_name
                                            (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>theme</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-theme-append-search-path">gnome_icon_theme_append_search_path ()</title>
<programlisting>void        gnome_icon_theme_append_search_path
                                            (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             const char *path);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>theme</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-theme-prepend-search-path">gnome_icon_theme_prepend_search_path ()</title>
<programlisting>void        gnome_icon_theme_prepend_search_path
                                            (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             const char *path);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>theme</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-theme-set-custom-theme">gnome_icon_theme_set_custom_theme ()</title>
<programlisting>void        gnome_icon_theme_set_custom_theme
                                            (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             const char *theme_name);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>theme</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>theme_name</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-theme-lookup-icon">gnome_icon_theme_lookup_icon ()</title>
<programlisting>char*       gnome_icon_theme_lookup_icon    (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             const char *icon_name,
                                             int size,
                                             const <link linkend="GnomeIconData">GnomeIconData</link> **icon_data,
                                             int *base_size);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>theme</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon_name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon_data</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>base_size</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-theme-has-icon">gnome_icon_theme_has_icon ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    gnome_icon_theme_has_icon       (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             const char *icon_name);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>theme</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon_name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-theme-list-icons">gnome_icon_theme_list_icons ()</title>
<programlisting><link linkend="GList">GList</link>*      gnome_icon_theme_list_icons     (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme,
                                             const char *context);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>theme</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-theme-rescan-if-needed">gnome_icon_theme_rescan_if_needed ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    gnome_icon_theme_rescan_if_needed
                                            (<link linkend="GnomeIconTheme">GnomeIconTheme</link> *theme);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>theme</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-data-dup">gnome_icon_data_dup ()</title>
<programlisting><link linkend="GnomeIconData">GnomeIconData</link>* gnome_icon_data_dup          (const <link linkend="GnomeIconData">GnomeIconData</link> *icon_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>icon_data</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnome-icon-data-free">gnome_icon_data_free ()</title>
<programlisting>void        gnome_icon_data_free            (<link linkend="GnomeIconData">GnomeIconData</link> *icon_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>icon_data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
