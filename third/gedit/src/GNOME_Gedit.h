/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef GNOME_Gedit_H
#define GNOME_Gedit_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 19
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C"
{
#endif				/* __cplusplus */

/** typedefs **/
#include <bonobo/Bonobo.h>
#if !defined(_GNOME_Gedit_URI_defined)
#define _GNOME_Gedit_URI_defined 1
   typedef CORBA_string GNOME_Gedit_URI;
#define GNOME_Gedit_URI_marshal(x,y,z) CORBA_string_marshal((x),(y),(z))
#define GNOME_Gedit_URI_demarshal(x,y,z,i) CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Gedit_URI_0)
#define TC_IMPL_TC_GNOME_Gedit_URI_0 'G'
#define TC_IMPL_TC_GNOME_Gedit_URI_1 'N'
#define TC_IMPL_TC_GNOME_Gedit_URI_2 'O'
#define TC_IMPL_TC_GNOME_Gedit_URI_3 'M'
#define TC_IMPL_TC_GNOME_Gedit_URI_4 'E'
#define TC_IMPL_TC_GNOME_Gedit_URI_5 '_'
#define TC_IMPL_TC_GNOME_Gedit_URI_6 'G'
#define TC_IMPL_TC_GNOME_Gedit_URI_7 'e'
#define TC_IMPL_TC_GNOME_Gedit_URI_8 'd'
#define TC_IMPL_TC_GNOME_Gedit_URI_9 'i'
#define TC_IMPL_TC_GNOME_Gedit_URI_10 't'
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Gedit
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Gedit_URI_struct;
#define TC_GNOME_Gedit_URI ((CORBA_TypeCode)&TC_GNOME_Gedit_URI_struct)
#endif
#define GNOME_Gedit_URI__alloc() ((GNOME_Gedit_URI *)ORBit_small_alloc (TC_CORBA_string))
#define GNOME_Gedit_URI__freekids(m,d) ORBit_small_freekids (TC_CORBA_string,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'G'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'N'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'O'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'M'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'E'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_6 'G'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_7 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_8 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_9 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_10 't'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
   typedef struct
   {
      CORBA_unsigned_long _maximum,
       _length;
      CORBA_string *_buffer;
      CORBA_boolean _release;
   }
   CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'G'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'N'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'O'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'M'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'E'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_6 'G'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_7 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_8 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_9 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_10 't'
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Gedit
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_GNOME_Gedit_URI)
#define ORBIT_DECL_CORBA_sequence_GNOME_Gedit_URI 1
#define ORBIT_IMPL_CORBA_sequence_GNOME_Gedit_URI_0 'G'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Gedit_URI_1 'N'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Gedit_URI_2 'O'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Gedit_URI_3 'M'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Gedit_URI_4 'E'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Gedit_URI_5 '_'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Gedit_URI_6 'G'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Gedit_URI_7 'e'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Gedit_URI_8 'd'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Gedit_URI_9 'i'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Gedit_URI_10 't'
#if !defined(_CORBA_sequence_GNOME_Gedit_URI_defined)
#define _CORBA_sequence_GNOME_Gedit_URI_defined 1
   typedef CORBA_sequence_CORBA_string CORBA_sequence_GNOME_Gedit_URI;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_GNOME_Gedit_URI_0)
#define TC_IMPL_TC_CORBA_sequence_GNOME_Gedit_URI_0 'G'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Gedit_URI_1 'N'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Gedit_URI_2 'O'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Gedit_URI_3 'M'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Gedit_URI_4 'E'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Gedit_URI_5 '_'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Gedit_URI_6 'G'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Gedit_URI_7 'e'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Gedit_URI_8 'd'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Gedit_URI_9 'i'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Gedit_URI_10 't'
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Gedit
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct
      TC_CORBA_sequence_GNOME_Gedit_URI_struct;
#define TC_CORBA_sequence_GNOME_Gedit_URI ((CORBA_TypeCode)&TC_CORBA_sequence_GNOME_Gedit_URI_struct)
#endif
#define CORBA_sequence_GNOME_Gedit_URI__alloc CORBA_sequence_CORBA_string__alloc
#define CORBA_sequence_GNOME_Gedit_URI__freekids CORBA_sequence_CORBA_string__freekids
#define CORBA_sequence_GNOME_Gedit_URI_allocbuf CORBA_sequence_CORBA_string_allocbuf
#define CORBA_sequence_GNOME_Gedit_URI_marshal(x,y,z) CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define CORBA_sequence_GNOME_Gedit_URI_demarshal(x,y,z,i) CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#endif
#if !defined(_GNOME_Gedit_URIList_defined)
#define _GNOME_Gedit_URIList_defined 1
   typedef CORBA_sequence_GNOME_Gedit_URI GNOME_Gedit_URIList;
#define GNOME_Gedit_URIList_marshal(x,y,z) CORBA_sequence_GNOME_Gedit_URI_marshal((x),(y),(z))
#define GNOME_Gedit_URIList_demarshal(x,y,z,i) CORBA_sequence_GNOME_Gedit_URI_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Gedit_URIList_0)
#define TC_IMPL_TC_GNOME_Gedit_URIList_0 'G'
#define TC_IMPL_TC_GNOME_Gedit_URIList_1 'N'
#define TC_IMPL_TC_GNOME_Gedit_URIList_2 'O'
#define TC_IMPL_TC_GNOME_Gedit_URIList_3 'M'
#define TC_IMPL_TC_GNOME_Gedit_URIList_4 'E'
#define TC_IMPL_TC_GNOME_Gedit_URIList_5 '_'
#define TC_IMPL_TC_GNOME_Gedit_URIList_6 'G'
#define TC_IMPL_TC_GNOME_Gedit_URIList_7 'e'
#define TC_IMPL_TC_GNOME_Gedit_URIList_8 'd'
#define TC_IMPL_TC_GNOME_Gedit_URIList_9 'i'
#define TC_IMPL_TC_GNOME_Gedit_URIList_10 't'
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Gedit
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Gedit_URIList_struct;
#define TC_GNOME_Gedit_URIList ((CORBA_TypeCode)&TC_GNOME_Gedit_URIList_struct)
#endif
#define GNOME_Gedit_URIList__alloc() ((GNOME_Gedit_URIList *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Gedit_URI))
#define GNOME_Gedit_URIList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Gedit_URI,(m),(d))
#define GNOME_Gedit_URIList_allocbuf(l) ((GNOME_Gedit_URI*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Gedit_URI, (l)))
#endif
#if !defined(ORBIT_DECL_GNOME_Gedit_Document) && !defined(_GNOME_Gedit_Document_defined)
#define ORBIT_DECL_GNOME_Gedit_Document 1
#define _GNOME_Gedit_Document_defined 1
#define GNOME_Gedit_Document__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Gedit_Document;
   extern CORBA_unsigned_long GNOME_Gedit_Document__classid;
#if !defined(TC_IMPL_TC_GNOME_Gedit_Document_0)
#define TC_IMPL_TC_GNOME_Gedit_Document_0 'G'
#define TC_IMPL_TC_GNOME_Gedit_Document_1 'N'
#define TC_IMPL_TC_GNOME_Gedit_Document_2 'O'
#define TC_IMPL_TC_GNOME_Gedit_Document_3 'M'
#define TC_IMPL_TC_GNOME_Gedit_Document_4 'E'
#define TC_IMPL_TC_GNOME_Gedit_Document_5 '_'
#define TC_IMPL_TC_GNOME_Gedit_Document_6 'G'
#define TC_IMPL_TC_GNOME_Gedit_Document_7 'e'
#define TC_IMPL_TC_GNOME_Gedit_Document_8 'd'
#define TC_IMPL_TC_GNOME_Gedit_Document_9 'i'
#define TC_IMPL_TC_GNOME_Gedit_Document_10 't'
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Gedit
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Gedit_Document_struct;
#define TC_GNOME_Gedit_Document ((CORBA_TypeCode)&TC_GNOME_Gedit_Document_struct)
#endif
#endif
#undef ex_GNOME_Gedit_Document_DocumentReadOnly
#define ex_GNOME_Gedit_Document_DocumentReadOnly "IDL:GNOME/Gedit/Document/DocumentReadOnly:1.0"
#if !defined(_GNOME_Gedit_Document_DocumentReadOnly_defined)
#define _GNOME_Gedit_Document_DocumentReadOnly_defined 1
   typedef struct GNOME_Gedit_Document_DocumentReadOnly_type
      GNOME_Gedit_Document_DocumentReadOnly;
   struct GNOME_Gedit_Document_DocumentReadOnly_type
   {
      int dummy;
   };

#if !defined(TC_IMPL_TC_GNOME_Gedit_Document_DocumentReadOnly_0)
#define TC_IMPL_TC_GNOME_Gedit_Document_DocumentReadOnly_0 'G'
#define TC_IMPL_TC_GNOME_Gedit_Document_DocumentReadOnly_1 'N'
#define TC_IMPL_TC_GNOME_Gedit_Document_DocumentReadOnly_2 'O'
#define TC_IMPL_TC_GNOME_Gedit_Document_DocumentReadOnly_3 'M'
#define TC_IMPL_TC_GNOME_Gedit_Document_DocumentReadOnly_4 'E'
#define TC_IMPL_TC_GNOME_Gedit_Document_DocumentReadOnly_5 '_'
#define TC_IMPL_TC_GNOME_Gedit_Document_DocumentReadOnly_6 'G'
#define TC_IMPL_TC_GNOME_Gedit_Document_DocumentReadOnly_7 'e'
#define TC_IMPL_TC_GNOME_Gedit_Document_DocumentReadOnly_8 'd'
#define TC_IMPL_TC_GNOME_Gedit_Document_DocumentReadOnly_9 'i'
#define TC_IMPL_TC_GNOME_Gedit_Document_DocumentReadOnly_10 't'
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Gedit
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct
      TC_GNOME_Gedit_Document_DocumentReadOnly_struct;
#define TC_GNOME_Gedit_Document_DocumentReadOnly ((CORBA_TypeCode)&TC_GNOME_Gedit_Document_DocumentReadOnly_struct)
#endif
#define GNOME_Gedit_Document_DocumentReadOnly__alloc() ((GNOME_Gedit_Document_DocumentReadOnly *)ORBit_small_alloc (TC_GNOME_Gedit_Document_DocumentReadOnly))
#define GNOME_Gedit_Document_DocumentReadOnly__freekids(m,d) ORBit_small_freekids (TC_GNOME_Gedit_Document_DocumentReadOnly,(m),(d))
#endif
#if !defined(ORBIT_DECL_GNOME_Gedit_Window) && !defined(_GNOME_Gedit_Window_defined)
#define ORBIT_DECL_GNOME_Gedit_Window 1
#define _GNOME_Gedit_Window_defined 1
#define GNOME_Gedit_Window__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Gedit_Window;
   extern CORBA_unsigned_long GNOME_Gedit_Window__classid;
#if !defined(TC_IMPL_TC_GNOME_Gedit_Window_0)
#define TC_IMPL_TC_GNOME_Gedit_Window_0 'G'
#define TC_IMPL_TC_GNOME_Gedit_Window_1 'N'
#define TC_IMPL_TC_GNOME_Gedit_Window_2 'O'
#define TC_IMPL_TC_GNOME_Gedit_Window_3 'M'
#define TC_IMPL_TC_GNOME_Gedit_Window_4 'E'
#define TC_IMPL_TC_GNOME_Gedit_Window_5 '_'
#define TC_IMPL_TC_GNOME_Gedit_Window_6 'G'
#define TC_IMPL_TC_GNOME_Gedit_Window_7 'e'
#define TC_IMPL_TC_GNOME_Gedit_Window_8 'd'
#define TC_IMPL_TC_GNOME_Gedit_Window_9 'i'
#define TC_IMPL_TC_GNOME_Gedit_Window_10 't'
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Gedit
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Gedit_Window_struct;
#define TC_GNOME_Gedit_Window ((CORBA_TypeCode)&TC_GNOME_Gedit_Window_struct)
#endif
#endif
#if !defined(ORBIT_DECL_GNOME_Gedit_Application) && !defined(_GNOME_Gedit_Application_defined)
#define ORBIT_DECL_GNOME_Gedit_Application 1
#define _GNOME_Gedit_Application_defined 1
#define GNOME_Gedit_Application__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Gedit_Application;
   extern CORBA_unsigned_long GNOME_Gedit_Application__classid;
#if !defined(TC_IMPL_TC_GNOME_Gedit_Application_0)
#define TC_IMPL_TC_GNOME_Gedit_Application_0 'G'
#define TC_IMPL_TC_GNOME_Gedit_Application_1 'N'
#define TC_IMPL_TC_GNOME_Gedit_Application_2 'O'
#define TC_IMPL_TC_GNOME_Gedit_Application_3 'M'
#define TC_IMPL_TC_GNOME_Gedit_Application_4 'E'
#define TC_IMPL_TC_GNOME_Gedit_Application_5 '_'
#define TC_IMPL_TC_GNOME_Gedit_Application_6 'G'
#define TC_IMPL_TC_GNOME_Gedit_Application_7 'e'
#define TC_IMPL_TC_GNOME_Gedit_Application_8 'd'
#define TC_IMPL_TC_GNOME_Gedit_Application_9 'i'
#define TC_IMPL_TC_GNOME_Gedit_Application_10 't'
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Gedit
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Gedit_Application_struct;
#define TC_GNOME_Gedit_Application ((CORBA_TypeCode)&TC_GNOME_Gedit_Application_struct)
#endif
#endif

/** POA structures **/
#ifndef _defined_POA_GNOME_Gedit_Document
#define _defined_POA_GNOME_Gedit_Document 1
   typedef struct
   {
      void *_private;
      void (*setLinePosition) (PortableServer_Servant _servant,
			       const CORBA_long line, CORBA_Environment * ev);
      void (*insert) (PortableServer_Servant _servant,
		      const CORBA_long offset, const CORBA_char * str,
		      const CORBA_long length, CORBA_Environment * ev);
      void (*delete) (PortableServer_Servant _servant,
		      const CORBA_long offset, const CORBA_long length,
		      CORBA_Environment * ev);
       CORBA_string(*getChars) (PortableServer_Servant _servant,
				const CORBA_long offset,
				const CORBA_long length,
				CORBA_Environment * ev);
       CORBA_long(*getCharCount) (PortableServer_Servant _servant,
				  CORBA_Environment * ev);
   }
   POA_GNOME_Gedit_Document__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Gedit_Document__epv *GNOME_Gedit_Document_epv;
   }
   POA_GNOME_Gedit_Document__vepv;
   typedef struct
   {
      void *_private;
      POA_GNOME_Gedit_Document__vepv *vepv;
   }
   POA_GNOME_Gedit_Document;
   extern void POA_GNOME_Gedit_Document__init(PortableServer_Servant servant,
					      CORBA_Environment * ev);
   extern void POA_GNOME_Gedit_Document__fini(PortableServer_Servant servant,
					      CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Gedit_Document */
#ifndef _defined_POA_GNOME_Gedit_Window
#define _defined_POA_GNOME_Gedit_Window 1
   typedef struct
   {
      void *_private;
      void (*openURIList) (PortableServer_Servant _servant,
			   const GNOME_Gedit_URIList * locations,
			   CORBA_Environment * ev);
      void (*grabFocus) (PortableServer_Servant _servant,
			 CORBA_Environment * ev);
       GNOME_Gedit_Document(*newDocument) (PortableServer_Servant _servant,
					   CORBA_Environment * ev);
   }
   POA_GNOME_Gedit_Window__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Gedit_Window__epv *GNOME_Gedit_Window_epv;
   }
   POA_GNOME_Gedit_Window__vepv;
   typedef struct
   {
      void *_private;
      POA_GNOME_Gedit_Window__vepv *vepv;
   }
   POA_GNOME_Gedit_Window;
   extern void POA_GNOME_Gedit_Window__init(PortableServer_Servant servant,
					    CORBA_Environment * ev);
   extern void POA_GNOME_Gedit_Window__fini(PortableServer_Servant servant,
					    CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Gedit_Window */
#ifndef _defined_POA_GNOME_Gedit_Application
#define _defined_POA_GNOME_Gedit_Application 1
   typedef struct
   {
      void *_private;
       GNOME_Gedit_Window(*newWindow) (PortableServer_Servant _servant,
				       CORBA_Environment * ev);
       GNOME_Gedit_Document(*getActiveDocument) (PortableServer_Servant
						 _servant,
						 CORBA_Environment * ev);
       GNOME_Gedit_Window(*getActiveWindow) (PortableServer_Servant _servant,
					     CORBA_Environment * ev);
      void (*quit) (PortableServer_Servant _servant, CORBA_Environment * ev);
   }
   POA_GNOME_Gedit_Application__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Gedit_Application__epv *GNOME_Gedit_Application_epv;
   }
   POA_GNOME_Gedit_Application__vepv;
   typedef struct
   {
      void *_private;
      POA_GNOME_Gedit_Application__vepv *vepv;
   }
   POA_GNOME_Gedit_Application;
   extern void POA_GNOME_Gedit_Application__init(PortableServer_Servant
						 servant,
						 CORBA_Environment * ev);
   extern void POA_GNOME_Gedit_Application__fini(PortableServer_Servant
						 servant,
						 CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Gedit_Application */

/** skel prototypes **/
   void
      _ORBIT_skel_small_GNOME_Gedit_Document_setLinePosition
      (POA_GNOME_Gedit_Document * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       void (*_impl_setLinePosition) (PortableServer_Servant _servant,
				      const CORBA_long line,
				      CORBA_Environment * ev));
   void _ORBIT_skel_small_GNOME_Gedit_Document_insert(POA_GNOME_Gedit_Document
						      * _ORBIT_servant,
						      gpointer _ORBIT_retval,
						      gpointer * _ORBIT_args,
						      CORBA_Context ctx,
						      CORBA_Environment * ev,
						      void (*_impl_insert)
						      (PortableServer_Servant
						       _servant,
						       const CORBA_long
						       offset,
						       const CORBA_char * str,
						       const CORBA_long
						       length,
						       CORBA_Environment *
						       ev));
   void _ORBIT_skel_small_GNOME_Gedit_Document_delete(POA_GNOME_Gedit_Document
						      * _ORBIT_servant,
						      gpointer _ORBIT_retval,
						      gpointer * _ORBIT_args,
						      CORBA_Context ctx,
						      CORBA_Environment * ev,
						      void (*_impl_delete)
						      (PortableServer_Servant
						       _servant,
						       const CORBA_long
						       offset,
						       const CORBA_long
						       length,
						       CORBA_Environment *
						       ev));
   void
      _ORBIT_skel_small_GNOME_Gedit_Document_getChars(POA_GNOME_Gedit_Document
						      * _ORBIT_servant,
						      gpointer _ORBIT_retval,
						      gpointer * _ORBIT_args,
						      CORBA_Context ctx,
						      CORBA_Environment * ev,
						      CORBA_string
						      (*_impl_getChars)
						      (PortableServer_Servant
						       _servant,
						       const CORBA_long
						       offset,
						       const CORBA_long
						       length,
						       CORBA_Environment *
						       ev));
   void
      _ORBIT_skel_small_GNOME_Gedit_Document_getCharCount
      (POA_GNOME_Gedit_Document * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       CORBA_long(*_impl_getCharCount) (PortableServer_Servant _servant,
					CORBA_Environment * ev));
   void
      _ORBIT_skel_small_GNOME_Gedit_Window_openURIList(POA_GNOME_Gedit_Window
						       * _ORBIT_servant,
						       gpointer _ORBIT_retval,
						       gpointer * _ORBIT_args,
						       CORBA_Context ctx,
						       CORBA_Environment * ev,
						       void
						       (*_impl_openURIList)
						       (PortableServer_Servant
							_servant,
							const
							GNOME_Gedit_URIList *
							locations,
							CORBA_Environment *
							ev));
   void _ORBIT_skel_small_GNOME_Gedit_Window_grabFocus(POA_GNOME_Gedit_Window
						       * _ORBIT_servant,
						       gpointer _ORBIT_retval,
						       gpointer * _ORBIT_args,
						       CORBA_Context ctx,
						       CORBA_Environment * ev,
						       void (*_impl_grabFocus)
						       (PortableServer_Servant
							_servant,
							CORBA_Environment *
							ev));
   void
      _ORBIT_skel_small_GNOME_Gedit_Window_newDocument(POA_GNOME_Gedit_Window
						       * _ORBIT_servant,
						       gpointer _ORBIT_retval,
						       gpointer * _ORBIT_args,
						       CORBA_Context ctx,
						       CORBA_Environment * ev,
						       GNOME_Gedit_Document
						       (*_impl_newDocument)
						       (PortableServer_Servant
							_servant,
							CORBA_Environment *
							ev));
   void
      _ORBIT_skel_small_GNOME_Gedit_Application_newWindow
      (POA_GNOME_Gedit_Application * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       GNOME_Gedit_Window(*_impl_newWindow) (PortableServer_Servant _servant,
					     CORBA_Environment * ev));
   void
      _ORBIT_skel_small_GNOME_Gedit_Application_getActiveDocument
      (POA_GNOME_Gedit_Application * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       GNOME_Gedit_Document(*_impl_getActiveDocument) (PortableServer_Servant
						       _servant,
						       CORBA_Environment *
						       ev));
   void
      _ORBIT_skel_small_GNOME_Gedit_Application_getActiveWindow
      (POA_GNOME_Gedit_Application * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       GNOME_Gedit_Window(*_impl_getActiveWindow) (PortableServer_Servant
						   _servant,
						   CORBA_Environment * ev));
   void
      _ORBIT_skel_small_GNOME_Gedit_Application_quit
      (POA_GNOME_Gedit_Application * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       void (*_impl_quit) (PortableServer_Servant _servant,
			   CORBA_Environment * ev));

/** stub prototypes **/
#define GNOME_Gedit_Document_ref Bonobo_Unknown_ref
#define GNOME_Gedit_Document_unref Bonobo_Unknown_unref
#define GNOME_Gedit_Document_queryInterface Bonobo_Unknown_queryInterface
   void GNOME_Gedit_Document_setLinePosition(GNOME_Gedit_Document _obj,
					     const CORBA_long line,
					     CORBA_Environment * ev);
   void GNOME_Gedit_Document_insert(GNOME_Gedit_Document _obj,
				    const CORBA_long offset,
				    const CORBA_char * str,
				    const CORBA_long length,
				    CORBA_Environment * ev);
   void GNOME_Gedit_Document_delete(GNOME_Gedit_Document _obj,
				    const CORBA_long offset,
				    const CORBA_long length,
				    CORBA_Environment * ev);
   CORBA_string GNOME_Gedit_Document_getChars(GNOME_Gedit_Document _obj,
					      const CORBA_long offset,
					      const CORBA_long length,
					      CORBA_Environment * ev);
   CORBA_long GNOME_Gedit_Document_getCharCount(GNOME_Gedit_Document _obj,
						CORBA_Environment * ev);
#define GNOME_Gedit_Window_ref Bonobo_Unknown_ref
#define GNOME_Gedit_Window_unref Bonobo_Unknown_unref
#define GNOME_Gedit_Window_queryInterface Bonobo_Unknown_queryInterface
   void GNOME_Gedit_Window_openURIList(GNOME_Gedit_Window _obj,
				       const GNOME_Gedit_URIList * locations,
				       CORBA_Environment * ev);
   void GNOME_Gedit_Window_grabFocus(GNOME_Gedit_Window _obj,
				     CORBA_Environment * ev);
   GNOME_Gedit_Document GNOME_Gedit_Window_newDocument(GNOME_Gedit_Window
						       _obj,
						       CORBA_Environment *
						       ev);
#define GNOME_Gedit_Application_ref Bonobo_Unknown_ref
#define GNOME_Gedit_Application_unref Bonobo_Unknown_unref
#define GNOME_Gedit_Application_queryInterface Bonobo_Unknown_queryInterface
   GNOME_Gedit_Window
      GNOME_Gedit_Application_newWindow(GNOME_Gedit_Application _obj,
					CORBA_Environment * ev);
   GNOME_Gedit_Document
      GNOME_Gedit_Application_getActiveDocument(GNOME_Gedit_Application _obj,
						CORBA_Environment * ev);
   GNOME_Gedit_Window
      GNOME_Gedit_Application_getActiveWindow(GNOME_Gedit_Application _obj,
					      CORBA_Environment * ev);
   void GNOME_Gedit_Application_quit(GNOME_Gedit_Application _obj,
				     CORBA_Environment * ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_GNOME_Gedit
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Gedit_Document__iinterface;
#define GNOME_Gedit_Document_IMETHODS_LEN 5
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Gedit
   static
#else
   extern
#endif
   ORBit_IMethod
      GNOME_Gedit_Document__imethods[GNOME_Gedit_Document_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Gedit
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Gedit_Window__iinterface;
#define GNOME_Gedit_Window_IMETHODS_LEN 3
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Gedit
   static
#else
   extern
#endif
   ORBit_IMethod
      GNOME_Gedit_Window__imethods[GNOME_Gedit_Window_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Gedit
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Gedit_Application__iinterface;
#define GNOME_Gedit_Application_IMETHODS_LEN 4
#ifdef ORBIT_IDL_C_IMODULE_GNOME_Gedit
   static
#else
   extern
#endif
   ORBit_IMethod
      GNOME_Gedit_Application__imethods[GNOME_Gedit_Application_IMETHODS_LEN];
#ifdef __cplusplus
}
#endif				/* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif				/* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
