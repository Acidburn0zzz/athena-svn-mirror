<refentry id="GalViewFactory" revision="12 Jan 2001">
<refmeta>
<refentrytitle>GalViewFactory</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GAL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GalViewFactory</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



#define     <link linkend="GAL-VIEW-FACTORY-TYPE-CAPS">GAL_VIEW_FACTORY_TYPE</link>
typedef     <link linkend="GalViewFactory">GalViewFactory</link>;
const char* <link linkend="gal-view-factory-get-title">gal_view_factory_get_title</link>      (<link linkend="GalViewFactory">GalViewFactory</link> *factory);
const char* <link linkend="gal-view-factory-get-type-code">gal_view_factory_get_type_code</link>  (<link linkend="GalViewFactory">GalViewFactory</link> *factory);
<link linkend="GalView">GalView</link>*    <link linkend="gal-view-factory-new-view">gal_view_factory_new_view</link>       (<link linkend="GalViewFactory">GalViewFactory</link> *factory,
                                             const char *name);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GtkObject">GtkObject</link>
   +----GalViewFactory
</synopsis>

</refsect1>




<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GAL-VIEW-FACTORY-TYPE-CAPS">GAL_VIEW_FACTORY_TYPE</title>
<programlisting>#define GAL_VIEW_FACTORY_TYPE        (gal_view_factory_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GalViewFactory">GalViewFactory</title>
<programlisting>typedef struct {
	GtkObject base;
} GalViewFactory;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gal-view-factory-get-title">gal_view_factory_get_title ()</title>
<programlisting>const char* gal_view_factory_get_title      (<link linkend="GalViewFactory">GalViewFactory</link> *factory);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>factory</parameter>&nbsp;:</entry>
<entry> The factory to query.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> The title of the factory.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gal-view-factory-get-type-code">gal_view_factory_get_type_code ()</title>
<programlisting>const char* gal_view_factory_get_type_code  (<link linkend="GalViewFactory">GalViewFactory</link> *factory);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>factory</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gal-view-factory-new-view">gal_view_factory_new_view ()</title>
<programlisting><link linkend="GalView">GalView</link>*    gal_view_factory_new_view       (<link linkend="GalViewFactory">GalViewFactory</link> *factory,
                                             const char *name);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>factory</parameter>&nbsp;:</entry>
<entry> The factory to use
</entry></row>
<row><entry align="right"><parameter>name</parameter>&nbsp;:</entry>
<entry> the name for the view.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> The new view
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
