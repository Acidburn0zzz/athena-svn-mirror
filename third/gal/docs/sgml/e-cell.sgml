<refentry id="ECell" revision="12 Jan 2001">
<refmeta>
<refentrytitle>ECell</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GAL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>ECell</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



#define     <link linkend="E-CELL-TYPE-CAPS">E_CELL_TYPE</link>
typedef     <link linkend="ECellView">ECellView</link>;
enum        <link linkend="ECellFlags">ECellFlags</link>;
typedef     <link linkend="ECell">ECell</link>;
#define     <link linkend="E-CELL-IS-FOCUSED-CAPS">E_CELL_IS_FOCUSED</link>               (ecell_view)
<link linkend="ECellView">ECellView</link>*  <link linkend="e-cell-new-view">e_cell_new_view</link>                 (<link linkend="ECell">ECell</link> *ecell,
                                             <link linkend="ETableModel">ETableModel</link> *table_model,
                                             void *e_table_item_view);
void        <link linkend="e-cell-kill-view">e_cell_kill_view</link>                (<link linkend="ECellView">ECellView</link> *ecell_view);
<link linkend="gint">gint</link>        <link linkend="e-cell-event">e_cell_event</link>                    (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             <link linkend="GdkEvent">GdkEvent</link> *event,
                                             int model_col,
                                             int view_col,
                                             int row,
                                             <link linkend="ECellFlags">ECellFlags</link> flags);
void        <link linkend="e-cell-realize">e_cell_realize</link>                  (<link linkend="ECellView">ECellView</link> *ecell_view);
void        <link linkend="e-cell-unrealize">e_cell_unrealize</link>                (<link linkend="ECellView">ECellView</link> *ecell_view);
void        <link linkend="e-cell-draw">e_cell_draw</link>                     (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             <link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             int model_col,
                                             int view_col,
                                             int row,
                                             <link linkend="ECellFlags">ECellFlags</link> flags,
                                             int x1,
                                             int y1,
                                             int x2,
                                             int y2);
void        <link linkend="e-cell-print">e_cell_print</link>                    (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             <link linkend="GnomePrintContext">GnomePrintContext</link> *context,
                                             int model_col,
                                             int view_col,
                                             int row,
                                             <link linkend="double">double</link> width,
                                             <link linkend="double">double</link> height);
<link linkend="gdouble">gdouble</link>     <link linkend="e-cell-print-height">e_cell_print_height</link>             (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             <link linkend="GnomePrintContext">GnomePrintContext</link> *context,
                                             int model_col,
                                             int view_col,
                                             int row,
                                             <link linkend="gdouble">gdouble</link> width);
int         <link linkend="e-cell-max-width">e_cell_max_width</link>                (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             int model_col,
                                             int view_col);
void        <link linkend="e-cell-show-tooltip">e_cell_show_tooltip</link>             (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             int model_col,
                                             int view_col,
                                             int row,
                                             int col_width,
                                             <link linkend="ETableTooltip">ETableTooltip</link> *tooltip);
void        <link linkend="e-cell-focus">e_cell_focus</link>                    (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             int model_col,
                                             int view_col,
                                             int row,
                                             int x1,
                                             int y1,
                                             int x2,
                                             int y2);
void        <link linkend="e-cell-unfocus">e_cell_unfocus</link>                  (<link linkend="ECellView">ECellView</link> *ecell_view);
int         <link linkend="e-cell-height">e_cell_height</link>                   (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             int model_col,
                                             int view_col,
                                             int row);
void*       <link linkend="e-cell-enter-edit">e_cell_enter_edit</link>               (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             int model_col,
                                             int view_col,
                                             int row);
void        <link linkend="e-cell-leave-edit">e_cell_leave_edit</link>               (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             int model_col,
                                             int view_col,
                                             int row,
                                             void *edit_context);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GtkObject">GtkObject</link>
   +----ECell
</synopsis>

</refsect1>




<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="E-CELL-TYPE-CAPS">E_CELL_TYPE</title>
<programlisting>#define E_CELL_TYPE        (e_cell_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECellView">ECellView</title>
<programlisting>typedef struct {
	ECell *ecell;
	ETableModel *e_table_model;
	void        *e_table_item_view;
	
	gint   focus_x1, focus_y1, focus_x2, focus_y2;
	gint   focus_col, focus_row;
} ECellView;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECellFlags">enum ECellFlags</title>
<programlisting>typedef enum {
	E_CELL_SELECTED       = 1 &lt;&lt; 0,

	E_CELL_JUSTIFICATION  = 3 &lt;&lt; 1,
	E_CELL_JUSTIFY_CENTER = 0 &lt;&lt; 1,
	E_CELL_JUSTIFY_LEFT   = 1 &lt;&lt; 1,
	E_CELL_JUSTIFY_RIGHT  = 2 &lt;&lt; 1,
	E_CELL_JUSTIFY_FILL   = 3 &lt;&lt; 1,

	E_CELL_ALIGN_LEFT     = 1 &lt;&lt; 1,
	E_CELL_ALIGN_RIGHT    = 1 &lt;&lt; 2,

	E_CELL_FOCUSED        = 1 &lt;&lt; 3,

	E_CELL_EDITING        = 1 &lt;&lt; 4,
} ECellFlags;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="ECell">ECell</title>
<programlisting>typedef struct {
	GtkObject       object;
} ECell;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="E-CELL-IS-FOCUSED-CAPS">E_CELL_IS_FOCUSED()</title>
<programlisting>#define E_CELL_IS_FOCUSED(ecell_view) (ecell_view-&gt;focus_x1 != -1)
</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell_view</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-new-view">e_cell_new_view ()</title>
<programlisting><link linkend="ECellView">ECellView</link>*  e_cell_new_view                 (<link linkend="ECell">ECell</link> *ecell,
                                             <link linkend="ETableModel">ETableModel</link> *table_model,
                                             void *e_table_item_view);</programlisting>
<para>
ECell renderers new to be bound to a table_model and to the actual view
during their life time to actually render the data.  This method is invoked
by the ETableItem canvas item to instatiate a new view of the ECell.
</para>
<para>
This is invoked when the ETableModel is attached to the ETableItem (a CanvasItem
that can render ETableModels in the screen).</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell</parameter>&nbsp;:</entry>
<entry> the Ecell that will create the new view
</entry></row>
<row><entry align="right"><parameter>table_model</parameter>&nbsp;:</entry>
<entry> the table model the ecell is bound to
</entry></row>
<row><entry align="right"><parameter>e_table_item_view</parameter>&nbsp;:</entry>
<entry> An ETableItem object (the CanvasItem that reprensents the view of the table)
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> a new ECellView for this <parameter>ecell</parameter> on the <parameter>table_model</parameter> displayed on the <parameter>e_table_item_view</parameter>.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-kill-view">e_cell_kill_view ()</title>
<programlisting>void        e_cell_kill_view                (<link linkend="ECellView">ECellView</link> *ecell_view);</programlisting>
<para>
This method it used to destroy a view of an ECell renderer</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell_view</parameter>&nbsp;:</entry>
<entry> view to be destroyed.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-event">e_cell_event ()</title>
<programlisting><link linkend="gint">gint</link>        e_cell_event                    (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             <link linkend="GdkEvent">GdkEvent</link> *event,
                                             int model_col,
                                             int view_col,
                                             int row,
                                             <link linkend="ECellFlags">ECellFlags</link> flags);</programlisting>
<para>
Dispatches the event <parameter>event</parameter> to the <parameter>ecell_view</parameter> for.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell_view</parameter>&nbsp;:</entry>
<entry> The ECellView where the event will be dispatched
</entry></row>
<row><entry align="right"><parameter>event</parameter>&nbsp;:</entry>
<entry> The GdkEvent.
</entry></row>
<row><entry align="right"><parameter>model_col</parameter>&nbsp;:</entry>
<entry> the column in the model
</entry></row>
<row><entry align="right"><parameter>view_col</parameter>&nbsp;:</entry>
<entry> the column in the view
</entry></row>
<row><entry align="right"><parameter>row</parameter>&nbsp;:</entry>
<entry> the row
</entry></row>
<row><entry align="right"><parameter>flags</parameter>&nbsp;:</entry>
<entry> flags about the current state
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> processing state from the GdkEvent handling.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-realize">e_cell_realize ()</title>
<programlisting>void        e_cell_realize                  (<link linkend="ECellView">ECellView</link> *ecell_view);</programlisting>
<para>
This function is invoked to give a chance to the ECellView to allocate
any resources it needs from Gdk, equivalent to the GtkWidget::realize
signal.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell_view</parameter>&nbsp;:</entry>
<entry> The ECellView to be realized.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-unrealize">e_cell_unrealize ()</title>
<programlisting>void        e_cell_unrealize                (<link linkend="ECellView">ECellView</link> *ecell_view);</programlisting>
<para>
This function is invoked to give a chance to the ECellView to
release any resources it allocated during the realize method,
equivalent to the GtkWidget::unrealize signal.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell_view</parameter>&nbsp;:</entry>
<entry> The ECellView to be unrealized.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-draw">e_cell_draw ()</title>
<programlisting>void        e_cell_draw                     (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             <link linkend="GdkDrawable">GdkDrawable</link> *drawable,
                                             int model_col,
                                             int view_col,
                                             int row,
                                             <link linkend="ECellFlags">ECellFlags</link> flags,
                                             int x1,
                                             int y1,
                                             int x2,
                                             int y2);</programlisting>
<para>
This instructs the ECellView to render itself into the drawable.  The
region to be drawn in given by (x1,y1)-(x2,y2).
</para>
<para>
The most important flags are <literal>E_CELL_SELECTED</literal> and <literal>E_CELL_FOCUSED</literal>, other
flags include alignments and justifications.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell_view</parameter>&nbsp;:</entry>
<entry> the ECellView to redraw
</entry></row>
<row><entry align="right"><parameter>drawable</parameter>&nbsp;:</entry>
<entry> draw desination
</entry></row>
<row><entry align="right"><parameter>model_col</parameter>&nbsp;:</entry>
<entry> the column in the model being drawn.
</entry></row>
<row><entry align="right"><parameter>view_col</parameter>&nbsp;:</entry>
<entry> the column in the view being drawn (what the model maps to).
</entry></row>
<row><entry align="right"><parameter>row</parameter>&nbsp;:</entry>
<entry> the row being drawn
</entry></row>
<row><entry align="right"><parameter>flags</parameter>&nbsp;:</entry>
<entry> rendering flags.
</entry></row>
<row><entry align="right"><parameter>x1</parameter>&nbsp;:</entry>
<entry> boudary for the rendering
</entry></row>
<row><entry align="right"><parameter>y1</parameter>&nbsp;:</entry>
<entry> boudary for the rendering
</entry></row>
<row><entry align="right"><parameter>x2</parameter>&nbsp;:</entry>
<entry> boudary for the rendering
</entry></row>
<row><entry align="right"><parameter>y2</parameter>&nbsp;:</entry>
<entry> boudary for the rendering
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-print">e_cell_print ()</title>
<programlisting>void        e_cell_print                    (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             <link linkend="GnomePrintContext">GnomePrintContext</link> *context,
                                             int model_col,
                                             int view_col,
                                             int row,
                                             <link linkend="double">double</link> width,
                                             <link linkend="double">double</link> height);</programlisting>
<para>
FIXME:</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell_view</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>context</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>model_col</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>view_col</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>row</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>width</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>height</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-print-height">e_cell_print_height ()</title>
<programlisting><link linkend="gdouble">gdouble</link>     e_cell_print_height             (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             <link linkend="GnomePrintContext">GnomePrintContext</link> *context,
                                             int model_col,
                                             int view_col,
                                             int row,
                                             <link linkend="gdouble">gdouble</link> width);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell_view</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>context</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>model_col</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>view_col</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>row</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>width</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-max-width">e_cell_max_width ()</title>
<programlisting>int         e_cell_max_width                (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             int model_col,
                                             int view_col);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell_view</parameter>&nbsp;:</entry>
<entry> the ECellView that will leave editing
</entry></row>
<row><entry align="right"><parameter>model_col</parameter>&nbsp;:</entry>
<entry> the column in the model
</entry></row>
<row><entry align="right"><parameter>view_col</parameter>&nbsp;:</entry>
<entry> the column in the view.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the maximum width for the ECellview at <parameter>model_col</parameter> which
is being rendered as <parameter>view_col</parameter>
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-show-tooltip">e_cell_show_tooltip ()</title>
<programlisting>void        e_cell_show_tooltip             (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             int model_col,
                                             int view_col,
                                             int row,
                                             int col_width,
                                             <link linkend="ETableTooltip">ETableTooltip</link> *tooltip);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell_view</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>model_col</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>view_col</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>row</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>col_width</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>tooltip</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-focus">e_cell_focus ()</title>
<programlisting>void        e_cell_focus                    (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             int model_col,
                                             int view_col,
                                             int row,
                                             int x1,
                                             int y1,
                                             int x2,
                                             int y2);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell_view</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>model_col</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>view_col</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>row</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>x1</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>y1</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>x2</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>y2</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-unfocus">e_cell_unfocus ()</title>
<programlisting>void        e_cell_unfocus                  (<link linkend="ECellView">ECellView</link> *ecell_view);</programlisting>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell_view</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-height">e_cell_height ()</title>
<programlisting>int         e_cell_height                   (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             int model_col,
                                             int view_col,
                                             int row);</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell_view</parameter>&nbsp;:</entry>
<entry> the ECellView.
</entry></row>
<row><entry align="right"><parameter>model_col</parameter>&nbsp;:</entry>
<entry> the column in the model
</entry></row>
<row><entry align="right"><parameter>view_col</parameter>&nbsp;:</entry>
<entry> the column in the view.
</entry></row>
<row><entry align="right"><parameter>row</parameter>&nbsp;:</entry>
<entry> the row to me measured
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> the height of the cell at <parameter>model_col</parameter>, <parameter>row</parameter> rendered at
<parameter>view_col</parameter>, <parameter>row</parameter>.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-enter-edit">e_cell_enter_edit ()</title>
<programlisting>void*       e_cell_enter_edit               (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             int model_col,
                                             int view_col,
                                             int row);</programlisting>
<para>
Notifies the ECellView that it is about to enter editing mode for
<parameter>model_col</parameter>, <parameter>row</parameter> rendered at <parameter>view_col</parameter>, <parameter>row</parameter>.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell_view</parameter>&nbsp;:</entry>
<entry> the ECellView that will enter editing
</entry></row>
<row><entry align="right"><parameter>model_col</parameter>&nbsp;:</entry>
<entry> the column in the model
</entry></row>
<row><entry align="right"><parameter>view_col</parameter>&nbsp;:</entry>
<entry> the column in the view
</entry></row>
<row><entry align="right"><parameter>row</parameter>&nbsp;:</entry>
<entry> the row
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="e-cell-leave-edit">e_cell_leave_edit ()</title>
<programlisting>void        e_cell_leave_edit               (<link linkend="ECellView">ECellView</link> *ecell_view,
                                             int model_col,
                                             int view_col,
                                             int row,
                                             void *edit_context);</programlisting>
<para>
Notifies the ECellView that editing is finished at <parameter>model_col</parameter>, <parameter>row</parameter>
rendered at <parameter>view_col</parameter>, <parameter>row</parameter>.</para>
<para>

</para><informaltable pgwide=1 frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>ecell_view</parameter>&nbsp;:</entry>
<entry> the ECellView that will leave editing
</entry></row>
<row><entry align="right"><parameter>model_col</parameter>&nbsp;:</entry>
<entry> the column in the model
</entry></row>
<row><entry align="right"><parameter>view_col</parameter>&nbsp;:</entry>
<entry> the column in the view
</entry></row>
<row><entry align="right"><parameter>row</parameter>&nbsp;:</entry>
<entry> the row
</entry></row>
<row><entry align="right"><parameter>edit_context</parameter>&nbsp;:</entry>
<entry> the editing context
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
