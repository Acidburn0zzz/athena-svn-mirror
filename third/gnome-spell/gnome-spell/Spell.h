/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef Spell_H
#define Spell_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 19
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C"
{
#endif				/* __cplusplus */

/** typedefs **/
#include <bonobo/Bonobo.h>
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'S'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'l'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'l'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
   typedef struct
   {
      CORBA_unsigned_long _maximum,
       _length;
      CORBA_string *_buffer;
      CORBA_boolean _release;
   }
   CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'S'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'l'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'l'
#ifdef ORBIT_IDL_C_IMODULE_Spell
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(_GNOME_Spell_StringSeq_defined)
#define _GNOME_Spell_StringSeq_defined 1
   typedef CORBA_sequence_CORBA_string GNOME_Spell_StringSeq;
#define GNOME_Spell_StringSeq_marshal(x,y,z) CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define GNOME_Spell_StringSeq_demarshal(x,y,z,i) CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Spell_StringSeq_0)
#define TC_IMPL_TC_GNOME_Spell_StringSeq_0 'S'
#define TC_IMPL_TC_GNOME_Spell_StringSeq_1 'p'
#define TC_IMPL_TC_GNOME_Spell_StringSeq_2 'e'
#define TC_IMPL_TC_GNOME_Spell_StringSeq_3 'l'
#define TC_IMPL_TC_GNOME_Spell_StringSeq_4 'l'
#ifdef ORBIT_IDL_C_IMODULE_Spell
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Spell_StringSeq_struct;
#define TC_GNOME_Spell_StringSeq ((CORBA_TypeCode)&TC_GNOME_Spell_StringSeq_struct)
#endif
#define GNOME_Spell_StringSeq__alloc() ((GNOME_Spell_StringSeq *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define GNOME_Spell_StringSeq__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define GNOME_Spell_StringSeq_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(_GNOME_Spell_Language_defined)
#define _GNOME_Spell_Language_defined 1
   typedef struct GNOME_Spell_Language_type GNOME_Spell_Language;
   struct GNOME_Spell_Language_type
   {
      CORBA_string name;
      CORBA_string abbreviation;
   };

#if !defined(TC_IMPL_TC_GNOME_Spell_Language_0)
#define TC_IMPL_TC_GNOME_Spell_Language_0 'S'
#define TC_IMPL_TC_GNOME_Spell_Language_1 'p'
#define TC_IMPL_TC_GNOME_Spell_Language_2 'e'
#define TC_IMPL_TC_GNOME_Spell_Language_3 'l'
#define TC_IMPL_TC_GNOME_Spell_Language_4 'l'
#ifdef ORBIT_IDL_C_IMODULE_Spell
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Spell_Language_struct;
#define TC_GNOME_Spell_Language ((CORBA_TypeCode)&TC_GNOME_Spell_Language_struct)
#endif
#define GNOME_Spell_Language__alloc() ((GNOME_Spell_Language *)ORBit_small_alloc (TC_GNOME_Spell_Language))
#define GNOME_Spell_Language__freekids(m,d) ORBit_small_freekids (TC_GNOME_Spell_Language,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_GNOME_Spell_Language)
#define ORBIT_DECL_CORBA_sequence_GNOME_Spell_Language 1
#define ORBIT_IMPL_CORBA_sequence_GNOME_Spell_Language_0 'S'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Spell_Language_1 'p'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Spell_Language_2 'e'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Spell_Language_3 'l'
#define ORBIT_IMPL_CORBA_sequence_GNOME_Spell_Language_4 'l'
#if !defined(_CORBA_sequence_GNOME_Spell_Language_defined)
#define _CORBA_sequence_GNOME_Spell_Language_defined 1
   typedef struct
   {
      CORBA_unsigned_long _maximum,
       _length;
      GNOME_Spell_Language *_buffer;
      CORBA_boolean _release;
   }
   CORBA_sequence_GNOME_Spell_Language;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_GNOME_Spell_Language_0)
#define TC_IMPL_TC_CORBA_sequence_GNOME_Spell_Language_0 'S'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Spell_Language_1 'p'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Spell_Language_2 'e'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Spell_Language_3 'l'
#define TC_IMPL_TC_CORBA_sequence_GNOME_Spell_Language_4 'l'
#ifdef ORBIT_IDL_C_IMODULE_Spell
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct
      TC_CORBA_sequence_GNOME_Spell_Language_struct;
#define TC_CORBA_sequence_GNOME_Spell_Language ((CORBA_TypeCode)&TC_CORBA_sequence_GNOME_Spell_Language_struct)
#endif
#define CORBA_sequence_GNOME_Spell_Language__alloc() ((CORBA_sequence_GNOME_Spell_Language *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Spell_Language))
#define CORBA_sequence_GNOME_Spell_Language__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Spell_Language,(m),(d))
#define CORBA_sequence_GNOME_Spell_Language_allocbuf(l) ((GNOME_Spell_Language*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Spell_Language, (l)))
#define CORBA_sequence_GNOME_Spell_Language_allocbuf(l) ((GNOME_Spell_Language*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Spell_Language, (l)))
#endif
#if !defined(_GNOME_Spell_LanguageSeq_defined)
#define _GNOME_Spell_LanguageSeq_defined 1
   typedef CORBA_sequence_GNOME_Spell_Language GNOME_Spell_LanguageSeq;
#define GNOME_Spell_LanguageSeq_marshal(x,y,z) CORBA_sequence_GNOME_Spell_Language_marshal((x),(y),(z))
#define GNOME_Spell_LanguageSeq_demarshal(x,y,z,i) CORBA_sequence_GNOME_Spell_Language_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GNOME_Spell_LanguageSeq_0)
#define TC_IMPL_TC_GNOME_Spell_LanguageSeq_0 'S'
#define TC_IMPL_TC_GNOME_Spell_LanguageSeq_1 'p'
#define TC_IMPL_TC_GNOME_Spell_LanguageSeq_2 'e'
#define TC_IMPL_TC_GNOME_Spell_LanguageSeq_3 'l'
#define TC_IMPL_TC_GNOME_Spell_LanguageSeq_4 'l'
#ifdef ORBIT_IDL_C_IMODULE_Spell
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Spell_LanguageSeq_struct;
#define TC_GNOME_Spell_LanguageSeq ((CORBA_TypeCode)&TC_GNOME_Spell_LanguageSeq_struct)
#endif
#define GNOME_Spell_LanguageSeq__alloc() ((GNOME_Spell_LanguageSeq *)ORBit_small_alloc (TC_CORBA_sequence_GNOME_Spell_Language))
#define GNOME_Spell_LanguageSeq__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_GNOME_Spell_Language,(m),(d))
#define GNOME_Spell_LanguageSeq_allocbuf(l) ((GNOME_Spell_Language*)ORBit_small_allocbuf (TC_CORBA_sequence_GNOME_Spell_Language, (l)))
#endif
#if !defined(ORBIT_DECL_GNOME_Spell_Dictionary) && !defined(_GNOME_Spell_Dictionary_defined)
#define ORBIT_DECL_GNOME_Spell_Dictionary 1
#define _GNOME_Spell_Dictionary_defined 1
#define GNOME_Spell_Dictionary__freekids CORBA_Object__freekids
   typedef CORBA_Object GNOME_Spell_Dictionary;
   extern CORBA_unsigned_long GNOME_Spell_Dictionary__classid;
#if !defined(TC_IMPL_TC_GNOME_Spell_Dictionary_0)
#define TC_IMPL_TC_GNOME_Spell_Dictionary_0 'S'
#define TC_IMPL_TC_GNOME_Spell_Dictionary_1 'p'
#define TC_IMPL_TC_GNOME_Spell_Dictionary_2 'e'
#define TC_IMPL_TC_GNOME_Spell_Dictionary_3 'l'
#define TC_IMPL_TC_GNOME_Spell_Dictionary_4 'l'
#ifdef ORBIT_IDL_C_IMODULE_Spell
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Spell_Dictionary_struct;
#define TC_GNOME_Spell_Dictionary ((CORBA_TypeCode)&TC_GNOME_Spell_Dictionary_struct)
#endif
#endif
#undef ex_GNOME_Spell_Dictionary_Error
#define ex_GNOME_Spell_Dictionary_Error "IDL:GNOME/Spell/Dictionary/Error:1.0"
#if !defined(_GNOME_Spell_Dictionary_Error_defined)
#define _GNOME_Spell_Dictionary_Error_defined 1
   typedef struct GNOME_Spell_Dictionary_Error_type
      GNOME_Spell_Dictionary_Error;
   struct GNOME_Spell_Dictionary_Error_type
   {
      CORBA_string error;
   };

#if !defined(TC_IMPL_TC_GNOME_Spell_Dictionary_Error_0)
#define TC_IMPL_TC_GNOME_Spell_Dictionary_Error_0 'S'
#define TC_IMPL_TC_GNOME_Spell_Dictionary_Error_1 'p'
#define TC_IMPL_TC_GNOME_Spell_Dictionary_Error_2 'e'
#define TC_IMPL_TC_GNOME_Spell_Dictionary_Error_3 'l'
#define TC_IMPL_TC_GNOME_Spell_Dictionary_Error_4 'l'
#ifdef ORBIT_IDL_C_IMODULE_Spell
   static
#else
   extern
#endif
   const struct CORBA_TypeCode_struct TC_GNOME_Spell_Dictionary_Error_struct;
#define TC_GNOME_Spell_Dictionary_Error ((CORBA_TypeCode)&TC_GNOME_Spell_Dictionary_Error_struct)
#endif
#define GNOME_Spell_Dictionary_Error__alloc() ((GNOME_Spell_Dictionary_Error *)ORBit_small_alloc (TC_GNOME_Spell_Dictionary_Error))
#define GNOME_Spell_Dictionary_Error__freekids(m,d) ORBit_small_freekids (TC_GNOME_Spell_Dictionary_Error,(m),(d))
#endif

/** POA structures **/
#ifndef _defined_POA_GNOME_Spell_Dictionary
#define _defined_POA_GNOME_Spell_Dictionary 1
   typedef struct
   {
      void *_private;
      GNOME_Spell_LanguageSeq *(*getLanguages) (PortableServer_Servant
						_servant,
						CORBA_Environment * ev);
      void (*setLanguage) (PortableServer_Servant _servant,
			   const CORBA_char * language,
			   CORBA_Environment * ev);
       CORBA_boolean(*checkWord) (PortableServer_Servant _servant,
				  const CORBA_char * word,
				  CORBA_Environment * ev);
      GNOME_Spell_StringSeq *(*getSuggestions) (PortableServer_Servant
						_servant,
						const CORBA_char * word,
						CORBA_Environment * ev);
      void (*addWordToSession) (PortableServer_Servant _servant,
				const CORBA_char * word,
				CORBA_Environment * ev);
      void (*addWordToPersonal) (PortableServer_Servant _servant,
				 const CORBA_char * word,
				 const CORBA_char * language,
				 CORBA_Environment * ev);
      void (*setCorrection) (PortableServer_Servant _servant,
			     const CORBA_char * word,
			     const CORBA_char * replacement,
			     const CORBA_char * language,
			     CORBA_Environment * ev);
   }
   POA_GNOME_Spell_Dictionary__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_GNOME_Spell_Dictionary__epv *GNOME_Spell_Dictionary_epv;
   }
   POA_GNOME_Spell_Dictionary__vepv;
   typedef struct
   {
      void *_private;
      POA_GNOME_Spell_Dictionary__vepv *vepv;
   }
   POA_GNOME_Spell_Dictionary;
   extern void POA_GNOME_Spell_Dictionary__init(PortableServer_Servant
						servant,
						CORBA_Environment * ev);
   extern void POA_GNOME_Spell_Dictionary__fini(PortableServer_Servant
						servant,
						CORBA_Environment * ev);
#endif				/* _defined_POA_GNOME_Spell_Dictionary */

/** skel prototypes **/
   void
      _ORBIT_skel_small_GNOME_Spell_Dictionary_getLanguages
      (POA_GNOME_Spell_Dictionary * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       GNOME_Spell_LanguageSeq *
       (*_impl_getLanguages) (PortableServer_Servant _servant,
			      CORBA_Environment * ev));
   void
      _ORBIT_skel_small_GNOME_Spell_Dictionary_setLanguage
      (POA_GNOME_Spell_Dictionary * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       void (*_impl_setLanguage) (PortableServer_Servant _servant,
				  const CORBA_char * language,
				  CORBA_Environment * ev));
   void
      _ORBIT_skel_small_GNOME_Spell_Dictionary_checkWord
      (POA_GNOME_Spell_Dictionary * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       CORBA_boolean(*_impl_checkWord) (PortableServer_Servant _servant,
					const CORBA_char * word,
					CORBA_Environment * ev));
   void
      _ORBIT_skel_small_GNOME_Spell_Dictionary_getSuggestions
      (POA_GNOME_Spell_Dictionary * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       GNOME_Spell_StringSeq *
       (*_impl_getSuggestions) (PortableServer_Servant _servant,
				const CORBA_char * word,
				CORBA_Environment * ev));
   void
      _ORBIT_skel_small_GNOME_Spell_Dictionary_addWordToSession
      (POA_GNOME_Spell_Dictionary * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       void (*_impl_addWordToSession) (PortableServer_Servant _servant,
				       const CORBA_char * word,
				       CORBA_Environment * ev));
   void
      _ORBIT_skel_small_GNOME_Spell_Dictionary_addWordToPersonal
      (POA_GNOME_Spell_Dictionary * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       void (*_impl_addWordToPersonal) (PortableServer_Servant _servant,
					const CORBA_char * word,
					const CORBA_char * language,
					CORBA_Environment * ev));
   void
      _ORBIT_skel_small_GNOME_Spell_Dictionary_setCorrection
      (POA_GNOME_Spell_Dictionary * _ORBIT_servant, gpointer _ORBIT_retval,
       gpointer * _ORBIT_args, CORBA_Context ctx, CORBA_Environment * ev,
       void (*_impl_setCorrection) (PortableServer_Servant _servant,
				    const CORBA_char * word,
				    const CORBA_char * replacement,
				    const CORBA_char * language,
				    CORBA_Environment * ev));

/** stub prototypes **/
#define GNOME_Spell_Dictionary_ref Bonobo_Unknown_ref
#define GNOME_Spell_Dictionary_unref Bonobo_Unknown_unref
#define GNOME_Spell_Dictionary_queryInterface Bonobo_Unknown_queryInterface
   GNOME_Spell_LanguageSeq
      *GNOME_Spell_Dictionary_getLanguages(GNOME_Spell_Dictionary _obj,
					   CORBA_Environment * ev);
   void GNOME_Spell_Dictionary_setLanguage(GNOME_Spell_Dictionary _obj,
					   const CORBA_char * language,
					   CORBA_Environment * ev);
   CORBA_boolean GNOME_Spell_Dictionary_checkWord(GNOME_Spell_Dictionary _obj,
						  const CORBA_char * word,
						  CORBA_Environment * ev);
   GNOME_Spell_StringSeq
      *GNOME_Spell_Dictionary_getSuggestions(GNOME_Spell_Dictionary _obj,
					     const CORBA_char * word,
					     CORBA_Environment * ev);
   void GNOME_Spell_Dictionary_addWordToSession(GNOME_Spell_Dictionary _obj,
						const CORBA_char * word,
						CORBA_Environment * ev);
   void GNOME_Spell_Dictionary_addWordToPersonal(GNOME_Spell_Dictionary _obj,
						 const CORBA_char * word,
						 const CORBA_char * language,
						 CORBA_Environment * ev);
   void GNOME_Spell_Dictionary_setCorrection(GNOME_Spell_Dictionary _obj,
					     const CORBA_char * word,
					     const CORBA_char * replacement,
					     const CORBA_char * language,
					     CORBA_Environment * ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_Spell
   static
#else
   extern
#endif
   ORBit_IInterface GNOME_Spell_Dictionary__iinterface;
#define GNOME_Spell_Dictionary_IMETHODS_LEN 7
#ifdef ORBIT_IDL_C_IMODULE_Spell
   static
#else
   extern
#endif
   ORBit_IMethod
      GNOME_Spell_Dictionary__imethods[GNOME_Spell_Dictionary_IMETHODS_LEN];
#ifdef __cplusplus
}
#endif				/* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif				/* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
