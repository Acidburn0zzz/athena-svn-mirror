<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="gconf-gconf-listeners">
<refmeta>
<refentrytitle>gconf-listeners</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GCONF Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gconf-listeners</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



struct      <link linkend="GConfListeners">GConfListeners</link>;
<link linkend="void">void</link>        (<link linkend="GConfListenersCallback">*GConfListenersCallback</link>)       (<link linkend="GConfListeners">GConfListeners</link> *listeners,
                                             const <link linkend="gchar">gchar</link> *all_above_key,
                                             <link linkend="guint">guint</link> cnxn_id,
                                             <link linkend="gpointer">gpointer</link> listener_data,
                                             <link linkend="gpointer">gpointer</link> user_data);
<link linkend="GConfListeners">GConfListeners</link>* <link linkend="gconf-listeners-new">gconf_listeners_new</link>         (void);
<link linkend="void">void</link>        <link linkend="gconf-listeners-free">gconf_listeners_free</link>            (<link linkend="GConfListeners">GConfListeners</link> *listeners);
<link linkend="guint">guint</link>       <link linkend="gconf-listeners-add">gconf_listeners_add</link>             (<link linkend="GConfListeners">GConfListeners</link> *listeners,
                                             const <link linkend="gchar">gchar</link> *listen_point,
                                             <link linkend="gpointer">gpointer</link> listener_data,
                                             <link linkend="GFreeFunc">GFreeFunc</link> destroy_notify);
<link linkend="void">void</link>        <link linkend="gconf-listeners-remove">gconf_listeners_remove</link>          (<link linkend="GConfListeners">GConfListeners</link> *listeners,
                                             <link linkend="guint">guint</link> cnxn_id);
<link linkend="void">void</link>        <link linkend="gconf-listeners-notify">gconf_listeners_notify</link>          (<link linkend="GConfListeners">GConfListeners</link> *listeners,
                                             const <link linkend="gchar">gchar</link> *all_above,
                                             <link linkend="GConfListenersCallback">GConfListenersCallback</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data);
<link linkend="guint">guint</link>       <link linkend="gconf-listeners-count">gconf_listeners_count</link>           (<link linkend="GConfListeners">GConfListeners</link> *listeners);
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GConfListeners"/>struct GConfListeners</title>
<indexterm><primary>GConfListeners</primary></indexterm><programlisting>struct GConfListeners;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GConfListenersCallback"/>GConfListenersCallback ()</title>
<indexterm><primary>GConfListenersCallback</primary></indexterm><programlisting><link linkend="void">void</link>        (*GConfListenersCallback)       (<link linkend="GConfListeners">GConfListeners</link> *listeners,
                                             const <link linkend="gchar">gchar</link> *all_above_key,
                                             <link linkend="guint">guint</link> cnxn_id,
                                             <link linkend="gpointer">gpointer</link> listener_data,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>listeners</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>all_above_key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cnxn_id</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>listener_data</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-listeners-new"/>gconf_listeners_new ()</title>
<indexterm><primary>gconf_listeners_new</primary></indexterm><programlisting><link linkend="GConfListeners">GConfListeners</link>* gconf_listeners_new         (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-listeners-free"/>gconf_listeners_free ()</title>
<indexterm><primary>gconf_listeners_free</primary></indexterm><programlisting><link linkend="void">void</link>        gconf_listeners_free            (<link linkend="GConfListeners">GConfListeners</link> *listeners);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>listeners</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-listeners-add"/>gconf_listeners_add ()</title>
<indexterm><primary>gconf_listeners_add</primary></indexterm><programlisting><link linkend="guint">guint</link>       gconf_listeners_add             (<link linkend="GConfListeners">GConfListeners</link> *listeners,
                                             const <link linkend="gchar">gchar</link> *listen_point,
                                             <link linkend="gpointer">gpointer</link> listener_data,
                                             <link linkend="GFreeFunc">GFreeFunc</link> destroy_notify);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>listeners</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>listen_point</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>listener_data</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy_notify</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-listeners-remove"/>gconf_listeners_remove ()</title>
<indexterm><primary>gconf_listeners_remove</primary></indexterm><programlisting><link linkend="void">void</link>        gconf_listeners_remove          (<link linkend="GConfListeners">GConfListeners</link> *listeners,
                                             <link linkend="guint">guint</link> cnxn_id);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>listeners</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cnxn_id</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-listeners-notify"/>gconf_listeners_notify ()</title>
<indexterm><primary>gconf_listeners_notify</primary></indexterm><programlisting><link linkend="void">void</link>        gconf_listeners_notify          (<link linkend="GConfListeners">GConfListeners</link> *listeners,
                                             const <link linkend="gchar">gchar</link> *all_above,
                                             <link linkend="GConfListenersCallback">GConfListenersCallback</link> callback,
                                             <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>listeners</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>all_above</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-listeners-count"/>gconf_listeners_count ()</title>
<indexterm><primary>gconf_listeners_count</primary></indexterm><programlisting><link linkend="guint">guint</link>       gconf_listeners_count           (<link linkend="GConfListeners">GConfListeners</link> *listeners);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>listeners</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
