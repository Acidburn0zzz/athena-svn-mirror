# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AS = @AS@
AWK = @AWK@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
DATADIRNAME = @DATADIRNAME@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GTKDOC = @GTKDOC@
HTML_DIR = @HTML_DIR@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAINT = @MAINT@
MKINSTALLDIRS = @MKINSTALLDIRS@
OBJDUMP = @OBJDUMP@
OTHERLIBS = @OTHERLIBS@
PACKAGE = @PACKAGE@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
PYGTK_DATADIR = @PYGTK_DATADIR@
PYTHON = @PYTHON@
PYTHONMODULES = @PYTHONMODULES@
PYTHONREV = @PYTHONREV@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_INCLUDES = @PYTHON_INCLUDES@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ZVT_DEFS = @ZVT_DEFS@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
bin_PROGRAMS = vte
pkginclude_HEADERS = pty.h reaper.h vte.h vteaccess.h
lib_LTLIBRARIES = libvte.la
pkglib_PROGRAMS = interpret utf8echo nativeecho utf8mode iso8859mode slowcat
pkglib_SCRIPTS = decset osc window
noinst_PROGRAMS = buffer dumpkeys iso2022 pty reaper reflect-text-view reflect-vte $(REFLECT_ZVT) ring mev ssfe table termcap trie
EXTRA_DIST = \
	$(pkglib_SCRIPTS) \
	genkeysyms.py \
	marshal.list \
	unitable.CNS11643 \
	unitable.GB12345 \
	unitable.GB2312 \
	unitable.JIS0201 \
	unitable.JIS0208 \
	unitable.JIS0212 \
	unitable.KSC5601


CFLAGS = @CFLAGS@ @VTE_CFLAGS@ @X_CFLAGS@
DEFAULT_INCLUDES = 

EXTRA_libvte_la_SOURCES = keysyms.c

libvte_la_SOURCES = \
	buffer.c \
	buffer.h \
	caps.c \
	caps.h \
	debug.c \
	debug.h \
	iso2022.c \
	iso2022.h \
	keymap.c \
	keymap.h \
	marshal.c \
	marshal.h \
	matcher.c \
	matcher.h \
	pty.c \
	pty.h \
	reaper.c \
	reaper.h \
	ring.c \
	ring.h \
	table.c \
	table.h \
	termcap.c \
	termcap.h \
	trie.c \
	trie.h \
	vte.c \
	vte.h \
	vteaccess.c \
	vteaccess.h


libvte_la_LIBADD = @LIBS@ @VTE_LIBS@ @X_LIBS@
libvte_la_LDFLAGS = -version-info 4:0:0

CLEANFILES = marshal.c marshal.h

vte_SOURCES = \
	vteapp.c

vte_LDADD = libvte.la @LIBS@ @VTE_LIBS@ @X_LIBS@

reflect_text_view_CFLAGS = @CFLAGS@ -DUSE_TEXT_VIEW @VTE_CFLAGS@ @X_CFLAGS@
reflect_text_view_SOURCES = reflect.c
reflect_text_view_LDADD = @LIBS@ @VTE_LIBS@ @X_LIBS@

reflect_vte_CFLAGS = @CFLAGS@ -DUSE_VTE @VTE_CFLAGS@ @X_CFLAGS@
reflect_vte_SOURCES = reflect.c
reflect_vte_LDADD = libvte.la @LIBS@ @VTE_LIBS@ @X_LIBS@

@REFLECT_USE_ZVT_TRUE@REFLECT_ZVT = reflect-zvt
@REFLECT_USE_ZVT_FALSE@REFLECT_ZVT = 
@REFLECT_USE_ZVT_TRUE@reflect_zvt_CFLAGS = @CFLAGS@ -DUSE_ZVT @ZVT_DEFS@ @ZVT_CFLAGS@ @X_CFLAGS@
@REFLECT_USE_ZVT_TRUE@reflect_zvt_SOURCES = reflect.c
@REFLECT_USE_ZVT_TRUE@reflect_zvt_LDADD = @LIBS@ @ZVT_LIBS@ @X_LIBS@

interpret_CFLAGS = @CFLAGS@ @GOBJECT_CFLAGS@ -DINTERPRET_MAIN
interpret_SOURCES = \
	buffer.c \
	buffer.h \
	caps.c \
	caps.h \
	debug.c \
	debug.h \
	iso2022.c \
	iso2022.h \
	matcher.c \
	matcher.h \
	table.c \
	table.h \
	trie.c \
	trie.h \
	termcap.c \
	termcap.h \
	interpret.c

interpret_LDADD = @GOBJECT_LIBS@

iso2022_CFLAGS = @CFLAGS@ @GOBJECT_CFLAGS@ -DISO2022_MAIN
iso2022_SOURCES = \
	debug.c \
	debug.h \
	iso2022.c \
	iso2022.h \
	matcher.c \
	matcher.h \
	table.c \
	table.h \
	trie.c \
	trie.h

iso2022_LDADD = @LIBS@ @GOBJECT_LIBS@

utf8echo_CFLAGS = @CFLAGS@ @GOBJECT_CFLAGS@ -DUTF8ECHO_MAIN
utf8echo_SOURCES = \
	debug.c \
	debug.h \
	matcher.c \
	matcher.h \
	table.c \
	table.h \
	trie.c \
	trie.h \
	utf8echo.c

utf8echo_LDADD = @LIBS@ @GOBJECT_LIBS@

nativeecho_CFLAGS = @CFLAGS@ -DNATIVEECHO_MAIN
nativeecho_SOURCES = \
	nativeecho.c

nativeecho_LDADD = @LIBS@

ring_CFLAGS = @CFLAGS@ @GOBJECT_CFLAGS@ -DRING_MAIN
ring_SOURCES = \
	debug.c \
	debug.h \
	ring.c \
	ring.h

ring_LDADD = @LIBS@ @GOBJECT_LIBS@

slowcat_SOURCES = \
	slowcat.c

slowcat_LDADD = @LIBS@ @GOBJECT_LIBS@

table_CFLAGS = @CFLAGS@ @GOBJECT_CFLAGS@ -DTABLE_MAIN
table_SOURCES = \
	debug.c \
	debug.h \
	matcher.c \
	matcher.h \
	table.c \
	table.h \
	trie.c \
	trie.h

table_LDADD = @LIBS@ @GOBJECT_LIBS@

trie_CFLAGS = @CFLAGS@ @GOBJECT_CFLAGS@ -DTRIE_MAIN
trie_SOURCES = \
	debug.c \
	debug.h \
	matcher.c \
	matcher.h \
	table.c \
	table.h \
	termcap.c \
	termcap.h \
	trie.c \
	trie.h

trie_LDADD = @LIBS@ @GOBJECT_LIBS@

termcap_CFLAGS = @CFLAGS@ @GOBJECT_CFLAGS@ -DTERMCAP_MAIN
termcap_SOURCES = \
	debug.c \
	debug.h \
	termcap.c \
	termcap.h

termcap_LDADD = @LIBS@ @GOBJECT_LIBS@

pty_CFLAGS = @CFLAGS@ @GOBJECT_CFLAGS@ -DPTY_MAIN
pty_SOURCES = \
	debug.c \
	debug.h \
	pty.c \
	pty.h

pty_LDADD = @LIBS@ @GOBJECT_LIBS@

reaper_CFLAGS = @CFLAGS@ @GOBJECT_CFLAGS@ -DREAPER_MAIN
reaper_SOURCES = \
	debug.c \
	debug.h \
	marshal.c \
	marshal.h \
	reaper.c \
	reaper.h

reaper_LDADD = @LIBS@ @GOBJECT_LIBS@

buffer_CFLAGS = @CFLAGS@ -DBUFFER_MAIN
buffer_SOURCES = buffer.c
buffer_LDADD = @GOBJECT_LIBS@

dumpkeys_SOURCES = dumpkeys.c
dumpkeys_LDADD = @LIBS@ @GOBJECT_LIBS@

mev_SOURCES = mev.c
mev_LDADD = @LIBS@ @GOBJECT_LIBS@

ssfe_SOURCES = ssfe.c
ssfe_LDADD = @OTHERLIBS@
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libvte_la_DEPENDENCIES =
am_libvte_la_OBJECTS = buffer.lo caps.lo debug.lo iso2022.lo keymap.lo \
	marshal.lo matcher.lo pty.lo reaper.lo ring.lo table.lo \
	termcap.lo trie.lo vte.lo vteaccess.lo
libvte_la_OBJECTS = $(am_libvte_la_OBJECTS)
bin_PROGRAMS = vte$(EXEEXT)
@REFLECT_USE_ZVT_TRUE@noinst_PROGRAMS = buffer$(EXEEXT) \
@REFLECT_USE_ZVT_TRUE@	dumpkeys$(EXEEXT) iso2022$(EXEEXT) \
@REFLECT_USE_ZVT_TRUE@	pty$(EXEEXT) reaper$(EXEEXT) \
@REFLECT_USE_ZVT_TRUE@	reflect-text-view$(EXEEXT) \
@REFLECT_USE_ZVT_TRUE@	reflect-vte$(EXEEXT) reflect-zvt$(EXEEXT) \
@REFLECT_USE_ZVT_TRUE@	ring$(EXEEXT) mev$(EXEEXT) ssfe$(EXEEXT) \
@REFLECT_USE_ZVT_TRUE@	table$(EXEEXT) termcap$(EXEEXT) \
@REFLECT_USE_ZVT_TRUE@	trie$(EXEEXT)
@REFLECT_USE_ZVT_FALSE@noinst_PROGRAMS = buffer$(EXEEXT) \
@REFLECT_USE_ZVT_FALSE@	dumpkeys$(EXEEXT) iso2022$(EXEEXT) \
@REFLECT_USE_ZVT_FALSE@	pty$(EXEEXT) reaper$(EXEEXT) \
@REFLECT_USE_ZVT_FALSE@	reflect-text-view$(EXEEXT) \
@REFLECT_USE_ZVT_FALSE@	reflect-vte$(EXEEXT) ring$(EXEEXT) \
@REFLECT_USE_ZVT_FALSE@	mev$(EXEEXT) ssfe$(EXEEXT) \
@REFLECT_USE_ZVT_FALSE@	table$(EXEEXT) termcap$(EXEEXT) \
@REFLECT_USE_ZVT_FALSE@	trie$(EXEEXT)
pkglib_PROGRAMS = interpret$(EXEEXT) utf8echo$(EXEEXT) \
	nativeecho$(EXEEXT) utf8mode$(EXEEXT) iso8859mode$(EXEEXT) \
	slowcat$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS) $(pkglib_PROGRAMS)

am_buffer_OBJECTS = buffer-buffer.$(OBJEXT)
buffer_OBJECTS = $(am_buffer_OBJECTS)
buffer_DEPENDENCIES =
buffer_LDFLAGS =
am_dumpkeys_OBJECTS = dumpkeys.$(OBJEXT)
dumpkeys_OBJECTS = $(am_dumpkeys_OBJECTS)
dumpkeys_DEPENDENCIES =
dumpkeys_LDFLAGS =
am_interpret_OBJECTS = interpret-buffer.$(OBJEXT) \
	interpret-caps.$(OBJEXT) interpret-debug.$(OBJEXT) \
	interpret-iso2022.$(OBJEXT) interpret-matcher.$(OBJEXT) \
	interpret-table.$(OBJEXT) interpret-trie.$(OBJEXT) \
	interpret-termcap.$(OBJEXT) interpret-interpret.$(OBJEXT)
interpret_OBJECTS = $(am_interpret_OBJECTS)
interpret_DEPENDENCIES =
interpret_LDFLAGS =
am_iso2022_OBJECTS = iso2022-debug.$(OBJEXT) iso2022-iso2022.$(OBJEXT) \
	iso2022-matcher.$(OBJEXT) iso2022-table.$(OBJEXT) \
	iso2022-trie.$(OBJEXT)
iso2022_OBJECTS = $(am_iso2022_OBJECTS)
iso2022_DEPENDENCIES =
iso2022_LDFLAGS =
iso8859mode_SOURCES = iso8859mode.c
iso8859mode_OBJECTS = iso8859mode.$(OBJEXT)
iso8859mode_LDADD = $(LDADD)
iso8859mode_DEPENDENCIES =
iso8859mode_LDFLAGS =
am_mev_OBJECTS = mev.$(OBJEXT)
mev_OBJECTS = $(am_mev_OBJECTS)
mev_DEPENDENCIES =
mev_LDFLAGS =
am_nativeecho_OBJECTS = nativeecho-nativeecho.$(OBJEXT)
nativeecho_OBJECTS = $(am_nativeecho_OBJECTS)
nativeecho_DEPENDENCIES =
nativeecho_LDFLAGS =
am_pty_OBJECTS = pty-debug.$(OBJEXT) pty-pty.$(OBJEXT)
pty_OBJECTS = $(am_pty_OBJECTS)
pty_DEPENDENCIES =
pty_LDFLAGS =
am_reaper_OBJECTS = reaper-debug.$(OBJEXT) reaper-marshal.$(OBJEXT) \
	reaper-reaper.$(OBJEXT)
reaper_OBJECTS = $(am_reaper_OBJECTS)
reaper_DEPENDENCIES =
reaper_LDFLAGS =
am_reflect_text_view_OBJECTS = reflect_text_view-reflect.$(OBJEXT)
reflect_text_view_OBJECTS = $(am_reflect_text_view_OBJECTS)
reflect_text_view_DEPENDENCIES =
reflect_text_view_LDFLAGS =
am_reflect_vte_OBJECTS = reflect_vte-reflect.$(OBJEXT)
reflect_vte_OBJECTS = $(am_reflect_vte_OBJECTS)
reflect_vte_DEPENDENCIES = libvte.la
reflect_vte_LDFLAGS =
@REFLECT_USE_ZVT_TRUE@am_reflect_zvt_OBJECTS = \
@REFLECT_USE_ZVT_TRUE@	reflect_zvt-reflect.$(OBJEXT)
reflect_zvt_OBJECTS = $(am_reflect_zvt_OBJECTS)
@REFLECT_USE_ZVT_TRUE@reflect_zvt_DEPENDENCIES =
@REFLECT_USE_ZVT_FALSE@reflect_zvt_DEPENDENCIES =
reflect_zvt_LDFLAGS =
am_ring_OBJECTS = ring-debug.$(OBJEXT) ring-ring.$(OBJEXT)
ring_OBJECTS = $(am_ring_OBJECTS)
ring_DEPENDENCIES =
ring_LDFLAGS =
am_slowcat_OBJECTS = slowcat.$(OBJEXT)
slowcat_OBJECTS = $(am_slowcat_OBJECTS)
slowcat_DEPENDENCIES =
slowcat_LDFLAGS =
am_ssfe_OBJECTS = ssfe.$(OBJEXT)
ssfe_OBJECTS = $(am_ssfe_OBJECTS)
ssfe_DEPENDENCIES =
ssfe_LDFLAGS =
am_table_OBJECTS = table-debug.$(OBJEXT) table-matcher.$(OBJEXT) \
	table-table.$(OBJEXT) table-trie.$(OBJEXT)
table_OBJECTS = $(am_table_OBJECTS)
table_DEPENDENCIES =
table_LDFLAGS =
am_termcap_OBJECTS = termcap-debug.$(OBJEXT) termcap-termcap.$(OBJEXT)
termcap_OBJECTS = $(am_termcap_OBJECTS)
termcap_DEPENDENCIES =
termcap_LDFLAGS =
am_trie_OBJECTS = trie-debug.$(OBJEXT) trie-matcher.$(OBJEXT) \
	trie-table.$(OBJEXT) trie-termcap.$(OBJEXT) trie-trie.$(OBJEXT)
trie_OBJECTS = $(am_trie_OBJECTS)
trie_DEPENDENCIES =
trie_LDFLAGS =
am_utf8echo_OBJECTS = utf8echo-debug.$(OBJEXT) \
	utf8echo-matcher.$(OBJEXT) utf8echo-table.$(OBJEXT) \
	utf8echo-trie.$(OBJEXT) utf8echo-utf8echo.$(OBJEXT)
utf8echo_OBJECTS = $(am_utf8echo_OBJECTS)
utf8echo_DEPENDENCIES =
utf8echo_LDFLAGS =
utf8mode_SOURCES = utf8mode.c
utf8mode_OBJECTS = utf8mode.$(OBJEXT)
utf8mode_LDADD = $(LDADD)
utf8mode_DEPENDENCIES =
utf8mode_LDFLAGS =
am_vte_OBJECTS = vteapp.$(OBJEXT)
vte_OBJECTS = $(am_vte_OBJECTS)
vte_DEPENDENCIES = libvte.la
vte_LDFLAGS =
SCRIPTS = $(pkglib_SCRIPTS)


DEFS = @DEFS@
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/buffer-buffer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/buffer.Plo ./$(DEPDIR)/caps.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/debug.Plo ./$(DEPDIR)/dumpkeys.Po \
@AMDEP_TRUE@	./$(DEPDIR)/interpret-buffer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/interpret-caps.Po \
@AMDEP_TRUE@	./$(DEPDIR)/interpret-debug.Po \
@AMDEP_TRUE@	./$(DEPDIR)/interpret-interpret.Po \
@AMDEP_TRUE@	./$(DEPDIR)/interpret-iso2022.Po \
@AMDEP_TRUE@	./$(DEPDIR)/interpret-matcher.Po \
@AMDEP_TRUE@	./$(DEPDIR)/interpret-table.Po \
@AMDEP_TRUE@	./$(DEPDIR)/interpret-termcap.Po \
@AMDEP_TRUE@	./$(DEPDIR)/interpret-trie.Po \
@AMDEP_TRUE@	./$(DEPDIR)/iso2022-debug.Po \
@AMDEP_TRUE@	./$(DEPDIR)/iso2022-iso2022.Po \
@AMDEP_TRUE@	./$(DEPDIR)/iso2022-matcher.Po \
@AMDEP_TRUE@	./$(DEPDIR)/iso2022-table.Po \
@AMDEP_TRUE@	./$(DEPDIR)/iso2022-trie.Po ./$(DEPDIR)/iso2022.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/iso8859mode.Po ./$(DEPDIR)/keymap.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/keysyms.Plo ./$(DEPDIR)/marshal.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/matcher.Plo ./$(DEPDIR)/mev.Po \
@AMDEP_TRUE@	./$(DEPDIR)/nativeecho-nativeecho.Po \
@AMDEP_TRUE@	./$(DEPDIR)/pty-debug.Po ./$(DEPDIR)/pty-pty.Po \
@AMDEP_TRUE@	./$(DEPDIR)/pty.Plo ./$(DEPDIR)/reaper-debug.Po \
@AMDEP_TRUE@	./$(DEPDIR)/reaper-marshal.Po \
@AMDEP_TRUE@	./$(DEPDIR)/reaper-reaper.Po ./$(DEPDIR)/reaper.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/reflect_text_view-reflect.Po \
@AMDEP_TRUE@	./$(DEPDIR)/reflect_vte-reflect.Po \
@AMDEP_TRUE@	./$(DEPDIR)/reflect_zvt-reflect.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ring-debug.Po ./$(DEPDIR)/ring-ring.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ring.Plo ./$(DEPDIR)/slowcat.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ssfe.Po ./$(DEPDIR)/table-debug.Po \
@AMDEP_TRUE@	./$(DEPDIR)/table-matcher.Po \
@AMDEP_TRUE@	./$(DEPDIR)/table-table.Po \
@AMDEP_TRUE@	./$(DEPDIR)/table-trie.Po ./$(DEPDIR)/table.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/termcap-debug.Po \
@AMDEP_TRUE@	./$(DEPDIR)/termcap-termcap.Po \
@AMDEP_TRUE@	./$(DEPDIR)/termcap.Plo ./$(DEPDIR)/trie-debug.Po \
@AMDEP_TRUE@	./$(DEPDIR)/trie-matcher.Po \
@AMDEP_TRUE@	./$(DEPDIR)/trie-table.Po \
@AMDEP_TRUE@	./$(DEPDIR)/trie-termcap.Po \
@AMDEP_TRUE@	./$(DEPDIR)/trie-trie.Po ./$(DEPDIR)/trie.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/utf8echo-debug.Po \
@AMDEP_TRUE@	./$(DEPDIR)/utf8echo-matcher.Po \
@AMDEP_TRUE@	./$(DEPDIR)/utf8echo-table.Po \
@AMDEP_TRUE@	./$(DEPDIR)/utf8echo-trie.Po \
@AMDEP_TRUE@	./$(DEPDIR)/utf8echo-utf8echo.Po \
@AMDEP_TRUE@	./$(DEPDIR)/utf8mode.Po ./$(DEPDIR)/vte.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/vteaccess.Plo ./$(DEPDIR)/vteapp.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libvte_la_SOURCES) $(EXTRA_libvte_la_SOURCES) \
	$(buffer_SOURCES) $(dumpkeys_SOURCES) $(interpret_SOURCES) \
	$(iso2022_SOURCES) iso8859mode.c $(mev_SOURCES) \
	$(nativeecho_SOURCES) $(pty_SOURCES) $(reaper_SOURCES) \
	$(reflect_text_view_SOURCES) $(reflect_vte_SOURCES) \
	$(reflect_zvt_SOURCES) $(ring_SOURCES) $(slowcat_SOURCES) \
	$(ssfe_SOURCES) $(table_SOURCES) $(termcap_SOURCES) \
	$(trie_SOURCES) $(utf8echo_SOURCES) utf8mode.c $(vte_SOURCES)
HEADERS = $(pkginclude_HEADERS)

DIST_COMMON = $(pkginclude_HEADERS) Makefile.am Makefile.in
SOURCES = $(libvte_la_SOURCES) $(EXTRA_libvte_la_SOURCES) $(buffer_SOURCES) $(dumpkeys_SOURCES) $(interpret_SOURCES) $(iso2022_SOURCES) iso8859mode.c $(mev_SOURCES) $(nativeecho_SOURCES) $(pty_SOURCES) $(reaper_SOURCES) $(reflect_text_view_SOURCES) $(reflect_vte_SOURCES) $(reflect_zvt_SOURCES) $(ring_SOURCES) $(slowcat_SOURCES) $(ssfe_SOURCES) $(table_SOURCES) $(termcap_SOURCES) $(trie_SOURCES) $(utf8echo_SOURCES) utf8mode.c $(vte_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libvte.la: $(libvte_la_OBJECTS) $(libvte_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libvte_la_LDFLAGS) $(libvte_la_OBJECTS) $(libvte_la_LIBADD) $(LIBS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
pkglibPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-pkglibPROGRAMS: $(pkglib_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir)
	@list='$(pkglib_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(pkglibPROGRAMS_INSTALL) $$p $(DESTDIR)$(pkglibdir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(pkglibPROGRAMS_INSTALL) $$p $(DESTDIR)$(pkglibdir)/$$f; \
	  else :; fi; \
	done

uninstall-pkglibPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(pkglibdir)/$$f"; \
	  rm -f $(DESTDIR)$(pkglibdir)/$$f; \
	done

clean-pkglibPROGRAMS:
	@list='$(pkglib_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
buffer-buffer.$(OBJEXT): buffer.c
buffer$(EXEEXT): $(buffer_OBJECTS) $(buffer_DEPENDENCIES) 
	@rm -f buffer$(EXEEXT)
	$(LINK) $(buffer_LDFLAGS) $(buffer_OBJECTS) $(buffer_LDADD) $(LIBS)
dumpkeys$(EXEEXT): $(dumpkeys_OBJECTS) $(dumpkeys_DEPENDENCIES) 
	@rm -f dumpkeys$(EXEEXT)
	$(LINK) $(dumpkeys_LDFLAGS) $(dumpkeys_OBJECTS) $(dumpkeys_LDADD) $(LIBS)
interpret-buffer.$(OBJEXT): buffer.c
interpret-caps.$(OBJEXT): caps.c
interpret-debug.$(OBJEXT): debug.c
interpret-iso2022.$(OBJEXT): iso2022.c
interpret-matcher.$(OBJEXT): matcher.c
interpret-table.$(OBJEXT): table.c
interpret-trie.$(OBJEXT): trie.c
interpret-termcap.$(OBJEXT): termcap.c
interpret-interpret.$(OBJEXT): interpret.c
interpret$(EXEEXT): $(interpret_OBJECTS) $(interpret_DEPENDENCIES) 
	@rm -f interpret$(EXEEXT)
	$(LINK) $(interpret_LDFLAGS) $(interpret_OBJECTS) $(interpret_LDADD) $(LIBS)
iso2022-debug.$(OBJEXT): debug.c
iso2022-iso2022.$(OBJEXT): iso2022.c
iso2022-matcher.$(OBJEXT): matcher.c
iso2022-table.$(OBJEXT): table.c
iso2022-trie.$(OBJEXT): trie.c
iso2022$(EXEEXT): $(iso2022_OBJECTS) $(iso2022_DEPENDENCIES) 
	@rm -f iso2022$(EXEEXT)
	$(LINK) $(iso2022_LDFLAGS) $(iso2022_OBJECTS) $(iso2022_LDADD) $(LIBS)
iso8859mode$(EXEEXT): $(iso8859mode_OBJECTS) $(iso8859mode_DEPENDENCIES) 
	@rm -f iso8859mode$(EXEEXT)
	$(LINK) $(iso8859mode_LDFLAGS) $(iso8859mode_OBJECTS) $(iso8859mode_LDADD) $(LIBS)
mev$(EXEEXT): $(mev_OBJECTS) $(mev_DEPENDENCIES) 
	@rm -f mev$(EXEEXT)
	$(LINK) $(mev_LDFLAGS) $(mev_OBJECTS) $(mev_LDADD) $(LIBS)
nativeecho-nativeecho.$(OBJEXT): nativeecho.c
nativeecho$(EXEEXT): $(nativeecho_OBJECTS) $(nativeecho_DEPENDENCIES) 
	@rm -f nativeecho$(EXEEXT)
	$(LINK) $(nativeecho_LDFLAGS) $(nativeecho_OBJECTS) $(nativeecho_LDADD) $(LIBS)
pty-debug.$(OBJEXT): debug.c
pty-pty.$(OBJEXT): pty.c
pty$(EXEEXT): $(pty_OBJECTS) $(pty_DEPENDENCIES) 
	@rm -f pty$(EXEEXT)
	$(LINK) $(pty_LDFLAGS) $(pty_OBJECTS) $(pty_LDADD) $(LIBS)
reaper-debug.$(OBJEXT): debug.c
reaper-marshal.$(OBJEXT): marshal.c
reaper-reaper.$(OBJEXT): reaper.c
reaper$(EXEEXT): $(reaper_OBJECTS) $(reaper_DEPENDENCIES) 
	@rm -f reaper$(EXEEXT)
	$(LINK) $(reaper_LDFLAGS) $(reaper_OBJECTS) $(reaper_LDADD) $(LIBS)
reflect_text_view-reflect.$(OBJEXT): reflect.c
reflect-text-view$(EXEEXT): $(reflect_text_view_OBJECTS) $(reflect_text_view_DEPENDENCIES) 
	@rm -f reflect-text-view$(EXEEXT)
	$(LINK) $(reflect_text_view_LDFLAGS) $(reflect_text_view_OBJECTS) $(reflect_text_view_LDADD) $(LIBS)
reflect_vte-reflect.$(OBJEXT): reflect.c
reflect-vte$(EXEEXT): $(reflect_vte_OBJECTS) $(reflect_vte_DEPENDENCIES) 
	@rm -f reflect-vte$(EXEEXT)
	$(LINK) $(reflect_vte_LDFLAGS) $(reflect_vte_OBJECTS) $(reflect_vte_LDADD) $(LIBS)
reflect_zvt-reflect.$(OBJEXT): reflect.c
reflect-zvt$(EXEEXT): $(reflect_zvt_OBJECTS) $(reflect_zvt_DEPENDENCIES) 
	@rm -f reflect-zvt$(EXEEXT)
	$(LINK) $(reflect_zvt_LDFLAGS) $(reflect_zvt_OBJECTS) $(reflect_zvt_LDADD) $(LIBS)
ring-debug.$(OBJEXT): debug.c
ring-ring.$(OBJEXT): ring.c
ring$(EXEEXT): $(ring_OBJECTS) $(ring_DEPENDENCIES) 
	@rm -f ring$(EXEEXT)
	$(LINK) $(ring_LDFLAGS) $(ring_OBJECTS) $(ring_LDADD) $(LIBS)
slowcat$(EXEEXT): $(slowcat_OBJECTS) $(slowcat_DEPENDENCIES) 
	@rm -f slowcat$(EXEEXT)
	$(LINK) $(slowcat_LDFLAGS) $(slowcat_OBJECTS) $(slowcat_LDADD) $(LIBS)
ssfe$(EXEEXT): $(ssfe_OBJECTS) $(ssfe_DEPENDENCIES) 
	@rm -f ssfe$(EXEEXT)
	$(LINK) $(ssfe_LDFLAGS) $(ssfe_OBJECTS) $(ssfe_LDADD) $(LIBS)
table-debug.$(OBJEXT): debug.c
table-matcher.$(OBJEXT): matcher.c
table-table.$(OBJEXT): table.c
table-trie.$(OBJEXT): trie.c
table$(EXEEXT): $(table_OBJECTS) $(table_DEPENDENCIES) 
	@rm -f table$(EXEEXT)
	$(LINK) $(table_LDFLAGS) $(table_OBJECTS) $(table_LDADD) $(LIBS)
termcap-debug.$(OBJEXT): debug.c
termcap-termcap.$(OBJEXT): termcap.c
termcap$(EXEEXT): $(termcap_OBJECTS) $(termcap_DEPENDENCIES) 
	@rm -f termcap$(EXEEXT)
	$(LINK) $(termcap_LDFLAGS) $(termcap_OBJECTS) $(termcap_LDADD) $(LIBS)
trie-debug.$(OBJEXT): debug.c
trie-matcher.$(OBJEXT): matcher.c
trie-table.$(OBJEXT): table.c
trie-termcap.$(OBJEXT): termcap.c
trie-trie.$(OBJEXT): trie.c
trie$(EXEEXT): $(trie_OBJECTS) $(trie_DEPENDENCIES) 
	@rm -f trie$(EXEEXT)
	$(LINK) $(trie_LDFLAGS) $(trie_OBJECTS) $(trie_LDADD) $(LIBS)
utf8echo-debug.$(OBJEXT): debug.c
utf8echo-matcher.$(OBJEXT): matcher.c
utf8echo-table.$(OBJEXT): table.c
utf8echo-trie.$(OBJEXT): trie.c
utf8echo-utf8echo.$(OBJEXT): utf8echo.c
utf8echo$(EXEEXT): $(utf8echo_OBJECTS) $(utf8echo_DEPENDENCIES) 
	@rm -f utf8echo$(EXEEXT)
	$(LINK) $(utf8echo_LDFLAGS) $(utf8echo_OBJECTS) $(utf8echo_LDADD) $(LIBS)
utf8mode$(EXEEXT): $(utf8mode_OBJECTS) $(utf8mode_DEPENDENCIES) 
	@rm -f utf8mode$(EXEEXT)
	$(LINK) $(utf8mode_LDFLAGS) $(utf8mode_OBJECTS) $(utf8mode_LDADD) $(LIBS)
vte$(EXEEXT): $(vte_OBJECTS) $(vte_DEPENDENCIES) 
	@rm -f vte$(EXEEXT)
	$(LINK) $(vte_LDFLAGS) $(vte_OBJECTS) $(vte_LDADD) $(LIBS)
pkglibSCRIPT_INSTALL = $(INSTALL_SCRIPT)
install-pkglibSCRIPTS: $(pkglib_SCRIPTS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir)
	@list='$(pkglib_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(pkglibSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(pkglibdir)/$$f"; \
	    $(pkglibSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(pkglibdir)/$$f; \
	  else :; fi; \
	done

uninstall-pkglibSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f $(DESTDIR)$(pkglibdir)/$$f"; \
	  rm -f $(DESTDIR)$(pkglibdir)/$$f; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/buffer-buffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/buffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/caps.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debug.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dumpkeys.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpret-buffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpret-caps.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpret-debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpret-interpret.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpret-iso2022.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpret-matcher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpret-table.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpret-termcap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpret-trie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iso2022-debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iso2022-iso2022.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iso2022-matcher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iso2022-table.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iso2022-trie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iso2022.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iso8859mode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keymap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keysyms.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/marshal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/matcher.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mev.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nativeecho-nativeecho.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pty-debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pty-pty.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pty.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reaper-debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reaper-marshal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reaper-reaper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reaper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reflect_text_view-reflect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reflect_vte-reflect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reflect_zvt-reflect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ring-debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ring-ring.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ring.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/slowcat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ssfe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-matcher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-table.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table-trie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/table.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/termcap-debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/termcap-termcap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/termcap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trie-debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trie-matcher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trie-table.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trie-termcap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trie-trie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trie.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utf8echo-debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utf8echo-matcher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utf8echo-table.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utf8echo-trie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utf8echo-utf8echo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utf8mode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vte.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vteaccess.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vteapp.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

buffer-buffer.o: buffer.c
@AMDEP_TRUE@	source='buffer.c' object='buffer-buffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/buffer-buffer.Po' tmpdepfile='$(DEPDIR)/buffer-buffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_CFLAGS) $(CFLAGS) -c -o buffer-buffer.o `test -f 'buffer.c' || echo '$(srcdir)/'`buffer.c

buffer-buffer.obj: buffer.c
@AMDEP_TRUE@	source='buffer.c' object='buffer-buffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/buffer-buffer.Po' tmpdepfile='$(DEPDIR)/buffer-buffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_CFLAGS) $(CFLAGS) -c -o buffer-buffer.obj `cygpath -w buffer.c`

buffer-buffer.lo: buffer.c
@AMDEP_TRUE@	source='buffer.c' object='buffer-buffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/buffer-buffer.Plo' tmpdepfile='$(DEPDIR)/buffer-buffer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(buffer_CFLAGS) $(CFLAGS) -c -o buffer-buffer.lo `test -f 'buffer.c' || echo '$(srcdir)/'`buffer.c

interpret-buffer.o: buffer.c
@AMDEP_TRUE@	source='buffer.c' object='interpret-buffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-buffer.Po' tmpdepfile='$(DEPDIR)/interpret-buffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-buffer.o `test -f 'buffer.c' || echo '$(srcdir)/'`buffer.c

interpret-buffer.obj: buffer.c
@AMDEP_TRUE@	source='buffer.c' object='interpret-buffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-buffer.Po' tmpdepfile='$(DEPDIR)/interpret-buffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-buffer.obj `cygpath -w buffer.c`

interpret-buffer.lo: buffer.c
@AMDEP_TRUE@	source='buffer.c' object='interpret-buffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-buffer.Plo' tmpdepfile='$(DEPDIR)/interpret-buffer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-buffer.lo `test -f 'buffer.c' || echo '$(srcdir)/'`buffer.c

interpret-caps.o: caps.c
@AMDEP_TRUE@	source='caps.c' object='interpret-caps.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-caps.Po' tmpdepfile='$(DEPDIR)/interpret-caps.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-caps.o `test -f 'caps.c' || echo '$(srcdir)/'`caps.c

interpret-caps.obj: caps.c
@AMDEP_TRUE@	source='caps.c' object='interpret-caps.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-caps.Po' tmpdepfile='$(DEPDIR)/interpret-caps.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-caps.obj `cygpath -w caps.c`

interpret-caps.lo: caps.c
@AMDEP_TRUE@	source='caps.c' object='interpret-caps.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-caps.Plo' tmpdepfile='$(DEPDIR)/interpret-caps.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-caps.lo `test -f 'caps.c' || echo '$(srcdir)/'`caps.c

interpret-debug.o: debug.c
@AMDEP_TRUE@	source='debug.c' object='interpret-debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-debug.Po' tmpdepfile='$(DEPDIR)/interpret-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-debug.o `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

interpret-debug.obj: debug.c
@AMDEP_TRUE@	source='debug.c' object='interpret-debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-debug.Po' tmpdepfile='$(DEPDIR)/interpret-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-debug.obj `cygpath -w debug.c`

interpret-debug.lo: debug.c
@AMDEP_TRUE@	source='debug.c' object='interpret-debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-debug.Plo' tmpdepfile='$(DEPDIR)/interpret-debug.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

interpret-iso2022.o: iso2022.c
@AMDEP_TRUE@	source='iso2022.c' object='interpret-iso2022.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-iso2022.Po' tmpdepfile='$(DEPDIR)/interpret-iso2022.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-iso2022.o `test -f 'iso2022.c' || echo '$(srcdir)/'`iso2022.c

interpret-iso2022.obj: iso2022.c
@AMDEP_TRUE@	source='iso2022.c' object='interpret-iso2022.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-iso2022.Po' tmpdepfile='$(DEPDIR)/interpret-iso2022.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-iso2022.obj `cygpath -w iso2022.c`

interpret-iso2022.lo: iso2022.c
@AMDEP_TRUE@	source='iso2022.c' object='interpret-iso2022.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-iso2022.Plo' tmpdepfile='$(DEPDIR)/interpret-iso2022.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-iso2022.lo `test -f 'iso2022.c' || echo '$(srcdir)/'`iso2022.c

interpret-matcher.o: matcher.c
@AMDEP_TRUE@	source='matcher.c' object='interpret-matcher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-matcher.Po' tmpdepfile='$(DEPDIR)/interpret-matcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-matcher.o `test -f 'matcher.c' || echo '$(srcdir)/'`matcher.c

interpret-matcher.obj: matcher.c
@AMDEP_TRUE@	source='matcher.c' object='interpret-matcher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-matcher.Po' tmpdepfile='$(DEPDIR)/interpret-matcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-matcher.obj `cygpath -w matcher.c`

interpret-matcher.lo: matcher.c
@AMDEP_TRUE@	source='matcher.c' object='interpret-matcher.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-matcher.Plo' tmpdepfile='$(DEPDIR)/interpret-matcher.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-matcher.lo `test -f 'matcher.c' || echo '$(srcdir)/'`matcher.c

interpret-table.o: table.c
@AMDEP_TRUE@	source='table.c' object='interpret-table.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-table.Po' tmpdepfile='$(DEPDIR)/interpret-table.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-table.o `test -f 'table.c' || echo '$(srcdir)/'`table.c

interpret-table.obj: table.c
@AMDEP_TRUE@	source='table.c' object='interpret-table.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-table.Po' tmpdepfile='$(DEPDIR)/interpret-table.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-table.obj `cygpath -w table.c`

interpret-table.lo: table.c
@AMDEP_TRUE@	source='table.c' object='interpret-table.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-table.Plo' tmpdepfile='$(DEPDIR)/interpret-table.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-table.lo `test -f 'table.c' || echo '$(srcdir)/'`table.c

interpret-trie.o: trie.c
@AMDEP_TRUE@	source='trie.c' object='interpret-trie.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-trie.Po' tmpdepfile='$(DEPDIR)/interpret-trie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-trie.o `test -f 'trie.c' || echo '$(srcdir)/'`trie.c

interpret-trie.obj: trie.c
@AMDEP_TRUE@	source='trie.c' object='interpret-trie.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-trie.Po' tmpdepfile='$(DEPDIR)/interpret-trie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-trie.obj `cygpath -w trie.c`

interpret-trie.lo: trie.c
@AMDEP_TRUE@	source='trie.c' object='interpret-trie.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-trie.Plo' tmpdepfile='$(DEPDIR)/interpret-trie.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-trie.lo `test -f 'trie.c' || echo '$(srcdir)/'`trie.c

interpret-termcap.o: termcap.c
@AMDEP_TRUE@	source='termcap.c' object='interpret-termcap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-termcap.Po' tmpdepfile='$(DEPDIR)/interpret-termcap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-termcap.o `test -f 'termcap.c' || echo '$(srcdir)/'`termcap.c

interpret-termcap.obj: termcap.c
@AMDEP_TRUE@	source='termcap.c' object='interpret-termcap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-termcap.Po' tmpdepfile='$(DEPDIR)/interpret-termcap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-termcap.obj `cygpath -w termcap.c`

interpret-termcap.lo: termcap.c
@AMDEP_TRUE@	source='termcap.c' object='interpret-termcap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-termcap.Plo' tmpdepfile='$(DEPDIR)/interpret-termcap.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-termcap.lo `test -f 'termcap.c' || echo '$(srcdir)/'`termcap.c

interpret-interpret.o: interpret.c
@AMDEP_TRUE@	source='interpret.c' object='interpret-interpret.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-interpret.Po' tmpdepfile='$(DEPDIR)/interpret-interpret.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-interpret.o `test -f 'interpret.c' || echo '$(srcdir)/'`interpret.c

interpret-interpret.obj: interpret.c
@AMDEP_TRUE@	source='interpret.c' object='interpret-interpret.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-interpret.Po' tmpdepfile='$(DEPDIR)/interpret-interpret.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-interpret.obj `cygpath -w interpret.c`

interpret-interpret.lo: interpret.c
@AMDEP_TRUE@	source='interpret.c' object='interpret-interpret.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/interpret-interpret.Plo' tmpdepfile='$(DEPDIR)/interpret-interpret.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interpret_CFLAGS) $(CFLAGS) -c -o interpret-interpret.lo `test -f 'interpret.c' || echo '$(srcdir)/'`interpret.c

iso2022-debug.o: debug.c
@AMDEP_TRUE@	source='debug.c' object='iso2022-debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/iso2022-debug.Po' tmpdepfile='$(DEPDIR)/iso2022-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso2022_CFLAGS) $(CFLAGS) -c -o iso2022-debug.o `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

iso2022-debug.obj: debug.c
@AMDEP_TRUE@	source='debug.c' object='iso2022-debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/iso2022-debug.Po' tmpdepfile='$(DEPDIR)/iso2022-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso2022_CFLAGS) $(CFLAGS) -c -o iso2022-debug.obj `cygpath -w debug.c`

iso2022-debug.lo: debug.c
@AMDEP_TRUE@	source='debug.c' object='iso2022-debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/iso2022-debug.Plo' tmpdepfile='$(DEPDIR)/iso2022-debug.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso2022_CFLAGS) $(CFLAGS) -c -o iso2022-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

iso2022-iso2022.o: iso2022.c
@AMDEP_TRUE@	source='iso2022.c' object='iso2022-iso2022.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/iso2022-iso2022.Po' tmpdepfile='$(DEPDIR)/iso2022-iso2022.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso2022_CFLAGS) $(CFLAGS) -c -o iso2022-iso2022.o `test -f 'iso2022.c' || echo '$(srcdir)/'`iso2022.c

iso2022-iso2022.obj: iso2022.c
@AMDEP_TRUE@	source='iso2022.c' object='iso2022-iso2022.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/iso2022-iso2022.Po' tmpdepfile='$(DEPDIR)/iso2022-iso2022.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso2022_CFLAGS) $(CFLAGS) -c -o iso2022-iso2022.obj `cygpath -w iso2022.c`

iso2022-iso2022.lo: iso2022.c
@AMDEP_TRUE@	source='iso2022.c' object='iso2022-iso2022.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/iso2022-iso2022.Plo' tmpdepfile='$(DEPDIR)/iso2022-iso2022.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso2022_CFLAGS) $(CFLAGS) -c -o iso2022-iso2022.lo `test -f 'iso2022.c' || echo '$(srcdir)/'`iso2022.c

iso2022-matcher.o: matcher.c
@AMDEP_TRUE@	source='matcher.c' object='iso2022-matcher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/iso2022-matcher.Po' tmpdepfile='$(DEPDIR)/iso2022-matcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso2022_CFLAGS) $(CFLAGS) -c -o iso2022-matcher.o `test -f 'matcher.c' || echo '$(srcdir)/'`matcher.c

iso2022-matcher.obj: matcher.c
@AMDEP_TRUE@	source='matcher.c' object='iso2022-matcher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/iso2022-matcher.Po' tmpdepfile='$(DEPDIR)/iso2022-matcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso2022_CFLAGS) $(CFLAGS) -c -o iso2022-matcher.obj `cygpath -w matcher.c`

iso2022-matcher.lo: matcher.c
@AMDEP_TRUE@	source='matcher.c' object='iso2022-matcher.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/iso2022-matcher.Plo' tmpdepfile='$(DEPDIR)/iso2022-matcher.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso2022_CFLAGS) $(CFLAGS) -c -o iso2022-matcher.lo `test -f 'matcher.c' || echo '$(srcdir)/'`matcher.c

iso2022-table.o: table.c
@AMDEP_TRUE@	source='table.c' object='iso2022-table.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/iso2022-table.Po' tmpdepfile='$(DEPDIR)/iso2022-table.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso2022_CFLAGS) $(CFLAGS) -c -o iso2022-table.o `test -f 'table.c' || echo '$(srcdir)/'`table.c

iso2022-table.obj: table.c
@AMDEP_TRUE@	source='table.c' object='iso2022-table.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/iso2022-table.Po' tmpdepfile='$(DEPDIR)/iso2022-table.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso2022_CFLAGS) $(CFLAGS) -c -o iso2022-table.obj `cygpath -w table.c`

iso2022-table.lo: table.c
@AMDEP_TRUE@	source='table.c' object='iso2022-table.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/iso2022-table.Plo' tmpdepfile='$(DEPDIR)/iso2022-table.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso2022_CFLAGS) $(CFLAGS) -c -o iso2022-table.lo `test -f 'table.c' || echo '$(srcdir)/'`table.c

iso2022-trie.o: trie.c
@AMDEP_TRUE@	source='trie.c' object='iso2022-trie.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/iso2022-trie.Po' tmpdepfile='$(DEPDIR)/iso2022-trie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso2022_CFLAGS) $(CFLAGS) -c -o iso2022-trie.o `test -f 'trie.c' || echo '$(srcdir)/'`trie.c

iso2022-trie.obj: trie.c
@AMDEP_TRUE@	source='trie.c' object='iso2022-trie.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/iso2022-trie.Po' tmpdepfile='$(DEPDIR)/iso2022-trie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso2022_CFLAGS) $(CFLAGS) -c -o iso2022-trie.obj `cygpath -w trie.c`

iso2022-trie.lo: trie.c
@AMDEP_TRUE@	source='trie.c' object='iso2022-trie.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/iso2022-trie.Plo' tmpdepfile='$(DEPDIR)/iso2022-trie.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(iso2022_CFLAGS) $(CFLAGS) -c -o iso2022-trie.lo `test -f 'trie.c' || echo '$(srcdir)/'`trie.c

nativeecho-nativeecho.o: nativeecho.c
@AMDEP_TRUE@	source='nativeecho.c' object='nativeecho-nativeecho.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/nativeecho-nativeecho.Po' tmpdepfile='$(DEPDIR)/nativeecho-nativeecho.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nativeecho_CFLAGS) $(CFLAGS) -c -o nativeecho-nativeecho.o `test -f 'nativeecho.c' || echo '$(srcdir)/'`nativeecho.c

nativeecho-nativeecho.obj: nativeecho.c
@AMDEP_TRUE@	source='nativeecho.c' object='nativeecho-nativeecho.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/nativeecho-nativeecho.Po' tmpdepfile='$(DEPDIR)/nativeecho-nativeecho.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nativeecho_CFLAGS) $(CFLAGS) -c -o nativeecho-nativeecho.obj `cygpath -w nativeecho.c`

nativeecho-nativeecho.lo: nativeecho.c
@AMDEP_TRUE@	source='nativeecho.c' object='nativeecho-nativeecho.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/nativeecho-nativeecho.Plo' tmpdepfile='$(DEPDIR)/nativeecho-nativeecho.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nativeecho_CFLAGS) $(CFLAGS) -c -o nativeecho-nativeecho.lo `test -f 'nativeecho.c' || echo '$(srcdir)/'`nativeecho.c

pty-debug.o: debug.c
@AMDEP_TRUE@	source='debug.c' object='pty-debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/pty-debug.Po' tmpdepfile='$(DEPDIR)/pty-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pty_CFLAGS) $(CFLAGS) -c -o pty-debug.o `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

pty-debug.obj: debug.c
@AMDEP_TRUE@	source='debug.c' object='pty-debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/pty-debug.Po' tmpdepfile='$(DEPDIR)/pty-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pty_CFLAGS) $(CFLAGS) -c -o pty-debug.obj `cygpath -w debug.c`

pty-debug.lo: debug.c
@AMDEP_TRUE@	source='debug.c' object='pty-debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/pty-debug.Plo' tmpdepfile='$(DEPDIR)/pty-debug.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pty_CFLAGS) $(CFLAGS) -c -o pty-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

pty-pty.o: pty.c
@AMDEP_TRUE@	source='pty.c' object='pty-pty.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/pty-pty.Po' tmpdepfile='$(DEPDIR)/pty-pty.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pty_CFLAGS) $(CFLAGS) -c -o pty-pty.o `test -f 'pty.c' || echo '$(srcdir)/'`pty.c

pty-pty.obj: pty.c
@AMDEP_TRUE@	source='pty.c' object='pty-pty.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/pty-pty.Po' tmpdepfile='$(DEPDIR)/pty-pty.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pty_CFLAGS) $(CFLAGS) -c -o pty-pty.obj `cygpath -w pty.c`

pty-pty.lo: pty.c
@AMDEP_TRUE@	source='pty.c' object='pty-pty.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/pty-pty.Plo' tmpdepfile='$(DEPDIR)/pty-pty.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pty_CFLAGS) $(CFLAGS) -c -o pty-pty.lo `test -f 'pty.c' || echo '$(srcdir)/'`pty.c

reaper-debug.o: debug.c
@AMDEP_TRUE@	source='debug.c' object='reaper-debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reaper-debug.Po' tmpdepfile='$(DEPDIR)/reaper-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reaper_CFLAGS) $(CFLAGS) -c -o reaper-debug.o `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

reaper-debug.obj: debug.c
@AMDEP_TRUE@	source='debug.c' object='reaper-debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reaper-debug.Po' tmpdepfile='$(DEPDIR)/reaper-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reaper_CFLAGS) $(CFLAGS) -c -o reaper-debug.obj `cygpath -w debug.c`

reaper-debug.lo: debug.c
@AMDEP_TRUE@	source='debug.c' object='reaper-debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reaper-debug.Plo' tmpdepfile='$(DEPDIR)/reaper-debug.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reaper_CFLAGS) $(CFLAGS) -c -o reaper-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

reaper-marshal.o: marshal.c
@AMDEP_TRUE@	source='marshal.c' object='reaper-marshal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reaper-marshal.Po' tmpdepfile='$(DEPDIR)/reaper-marshal.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reaper_CFLAGS) $(CFLAGS) -c -o reaper-marshal.o `test -f 'marshal.c' || echo '$(srcdir)/'`marshal.c

reaper-marshal.obj: marshal.c
@AMDEP_TRUE@	source='marshal.c' object='reaper-marshal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reaper-marshal.Po' tmpdepfile='$(DEPDIR)/reaper-marshal.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reaper_CFLAGS) $(CFLAGS) -c -o reaper-marshal.obj `cygpath -w marshal.c`

reaper-marshal.lo: marshal.c
@AMDEP_TRUE@	source='marshal.c' object='reaper-marshal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reaper-marshal.Plo' tmpdepfile='$(DEPDIR)/reaper-marshal.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reaper_CFLAGS) $(CFLAGS) -c -o reaper-marshal.lo `test -f 'marshal.c' || echo '$(srcdir)/'`marshal.c

reaper-reaper.o: reaper.c
@AMDEP_TRUE@	source='reaper.c' object='reaper-reaper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reaper-reaper.Po' tmpdepfile='$(DEPDIR)/reaper-reaper.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reaper_CFLAGS) $(CFLAGS) -c -o reaper-reaper.o `test -f 'reaper.c' || echo '$(srcdir)/'`reaper.c

reaper-reaper.obj: reaper.c
@AMDEP_TRUE@	source='reaper.c' object='reaper-reaper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reaper-reaper.Po' tmpdepfile='$(DEPDIR)/reaper-reaper.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reaper_CFLAGS) $(CFLAGS) -c -o reaper-reaper.obj `cygpath -w reaper.c`

reaper-reaper.lo: reaper.c
@AMDEP_TRUE@	source='reaper.c' object='reaper-reaper.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reaper-reaper.Plo' tmpdepfile='$(DEPDIR)/reaper-reaper.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reaper_CFLAGS) $(CFLAGS) -c -o reaper-reaper.lo `test -f 'reaper.c' || echo '$(srcdir)/'`reaper.c

reflect_text_view-reflect.o: reflect.c
@AMDEP_TRUE@	source='reflect.c' object='reflect_text_view-reflect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reflect_text_view-reflect.Po' tmpdepfile='$(DEPDIR)/reflect_text_view-reflect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reflect_text_view_CFLAGS) $(CFLAGS) -c -o reflect_text_view-reflect.o `test -f 'reflect.c' || echo '$(srcdir)/'`reflect.c

reflect_text_view-reflect.obj: reflect.c
@AMDEP_TRUE@	source='reflect.c' object='reflect_text_view-reflect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reflect_text_view-reflect.Po' tmpdepfile='$(DEPDIR)/reflect_text_view-reflect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reflect_text_view_CFLAGS) $(CFLAGS) -c -o reflect_text_view-reflect.obj `cygpath -w reflect.c`

reflect_text_view-reflect.lo: reflect.c
@AMDEP_TRUE@	source='reflect.c' object='reflect_text_view-reflect.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reflect_text_view-reflect.Plo' tmpdepfile='$(DEPDIR)/reflect_text_view-reflect.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reflect_text_view_CFLAGS) $(CFLAGS) -c -o reflect_text_view-reflect.lo `test -f 'reflect.c' || echo '$(srcdir)/'`reflect.c

reflect_vte-reflect.o: reflect.c
@AMDEP_TRUE@	source='reflect.c' object='reflect_vte-reflect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reflect_vte-reflect.Po' tmpdepfile='$(DEPDIR)/reflect_vte-reflect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reflect_vte_CFLAGS) $(CFLAGS) -c -o reflect_vte-reflect.o `test -f 'reflect.c' || echo '$(srcdir)/'`reflect.c

reflect_vte-reflect.obj: reflect.c
@AMDEP_TRUE@	source='reflect.c' object='reflect_vte-reflect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reflect_vte-reflect.Po' tmpdepfile='$(DEPDIR)/reflect_vte-reflect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reflect_vte_CFLAGS) $(CFLAGS) -c -o reflect_vte-reflect.obj `cygpath -w reflect.c`

reflect_vte-reflect.lo: reflect.c
@AMDEP_TRUE@	source='reflect.c' object='reflect_vte-reflect.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reflect_vte-reflect.Plo' tmpdepfile='$(DEPDIR)/reflect_vte-reflect.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reflect_vte_CFLAGS) $(CFLAGS) -c -o reflect_vte-reflect.lo `test -f 'reflect.c' || echo '$(srcdir)/'`reflect.c

reflect_zvt-reflect.o: reflect.c
@AMDEP_TRUE@	source='reflect.c' object='reflect_zvt-reflect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reflect_zvt-reflect.Po' tmpdepfile='$(DEPDIR)/reflect_zvt-reflect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reflect_zvt_CFLAGS) $(CFLAGS) -c -o reflect_zvt-reflect.o `test -f 'reflect.c' || echo '$(srcdir)/'`reflect.c

reflect_zvt-reflect.obj: reflect.c
@AMDEP_TRUE@	source='reflect.c' object='reflect_zvt-reflect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reflect_zvt-reflect.Po' tmpdepfile='$(DEPDIR)/reflect_zvt-reflect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reflect_zvt_CFLAGS) $(CFLAGS) -c -o reflect_zvt-reflect.obj `cygpath -w reflect.c`

reflect_zvt-reflect.lo: reflect.c
@AMDEP_TRUE@	source='reflect.c' object='reflect_zvt-reflect.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/reflect_zvt-reflect.Plo' tmpdepfile='$(DEPDIR)/reflect_zvt-reflect.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(reflect_zvt_CFLAGS) $(CFLAGS) -c -o reflect_zvt-reflect.lo `test -f 'reflect.c' || echo '$(srcdir)/'`reflect.c

ring-debug.o: debug.c
@AMDEP_TRUE@	source='debug.c' object='ring-debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ring-debug.Po' tmpdepfile='$(DEPDIR)/ring-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ring_CFLAGS) $(CFLAGS) -c -o ring-debug.o `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

ring-debug.obj: debug.c
@AMDEP_TRUE@	source='debug.c' object='ring-debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ring-debug.Po' tmpdepfile='$(DEPDIR)/ring-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ring_CFLAGS) $(CFLAGS) -c -o ring-debug.obj `cygpath -w debug.c`

ring-debug.lo: debug.c
@AMDEP_TRUE@	source='debug.c' object='ring-debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ring-debug.Plo' tmpdepfile='$(DEPDIR)/ring-debug.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ring_CFLAGS) $(CFLAGS) -c -o ring-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

ring-ring.o: ring.c
@AMDEP_TRUE@	source='ring.c' object='ring-ring.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ring-ring.Po' tmpdepfile='$(DEPDIR)/ring-ring.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ring_CFLAGS) $(CFLAGS) -c -o ring-ring.o `test -f 'ring.c' || echo '$(srcdir)/'`ring.c

ring-ring.obj: ring.c
@AMDEP_TRUE@	source='ring.c' object='ring-ring.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ring-ring.Po' tmpdepfile='$(DEPDIR)/ring-ring.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ring_CFLAGS) $(CFLAGS) -c -o ring-ring.obj `cygpath -w ring.c`

ring-ring.lo: ring.c
@AMDEP_TRUE@	source='ring.c' object='ring-ring.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ring-ring.Plo' tmpdepfile='$(DEPDIR)/ring-ring.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ring_CFLAGS) $(CFLAGS) -c -o ring-ring.lo `test -f 'ring.c' || echo '$(srcdir)/'`ring.c

table-debug.o: debug.c
@AMDEP_TRUE@	source='debug.c' object='table-debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/table-debug.Po' tmpdepfile='$(DEPDIR)/table-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(table_CFLAGS) $(CFLAGS) -c -o table-debug.o `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

table-debug.obj: debug.c
@AMDEP_TRUE@	source='debug.c' object='table-debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/table-debug.Po' tmpdepfile='$(DEPDIR)/table-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(table_CFLAGS) $(CFLAGS) -c -o table-debug.obj `cygpath -w debug.c`

table-debug.lo: debug.c
@AMDEP_TRUE@	source='debug.c' object='table-debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/table-debug.Plo' tmpdepfile='$(DEPDIR)/table-debug.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(table_CFLAGS) $(CFLAGS) -c -o table-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

table-matcher.o: matcher.c
@AMDEP_TRUE@	source='matcher.c' object='table-matcher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/table-matcher.Po' tmpdepfile='$(DEPDIR)/table-matcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(table_CFLAGS) $(CFLAGS) -c -o table-matcher.o `test -f 'matcher.c' || echo '$(srcdir)/'`matcher.c

table-matcher.obj: matcher.c
@AMDEP_TRUE@	source='matcher.c' object='table-matcher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/table-matcher.Po' tmpdepfile='$(DEPDIR)/table-matcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(table_CFLAGS) $(CFLAGS) -c -o table-matcher.obj `cygpath -w matcher.c`

table-matcher.lo: matcher.c
@AMDEP_TRUE@	source='matcher.c' object='table-matcher.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/table-matcher.Plo' tmpdepfile='$(DEPDIR)/table-matcher.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(table_CFLAGS) $(CFLAGS) -c -o table-matcher.lo `test -f 'matcher.c' || echo '$(srcdir)/'`matcher.c

table-table.o: table.c
@AMDEP_TRUE@	source='table.c' object='table-table.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/table-table.Po' tmpdepfile='$(DEPDIR)/table-table.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(table_CFLAGS) $(CFLAGS) -c -o table-table.o `test -f 'table.c' || echo '$(srcdir)/'`table.c

table-table.obj: table.c
@AMDEP_TRUE@	source='table.c' object='table-table.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/table-table.Po' tmpdepfile='$(DEPDIR)/table-table.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(table_CFLAGS) $(CFLAGS) -c -o table-table.obj `cygpath -w table.c`

table-table.lo: table.c
@AMDEP_TRUE@	source='table.c' object='table-table.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/table-table.Plo' tmpdepfile='$(DEPDIR)/table-table.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(table_CFLAGS) $(CFLAGS) -c -o table-table.lo `test -f 'table.c' || echo '$(srcdir)/'`table.c

table-trie.o: trie.c
@AMDEP_TRUE@	source='trie.c' object='table-trie.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/table-trie.Po' tmpdepfile='$(DEPDIR)/table-trie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(table_CFLAGS) $(CFLAGS) -c -o table-trie.o `test -f 'trie.c' || echo '$(srcdir)/'`trie.c

table-trie.obj: trie.c
@AMDEP_TRUE@	source='trie.c' object='table-trie.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/table-trie.Po' tmpdepfile='$(DEPDIR)/table-trie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(table_CFLAGS) $(CFLAGS) -c -o table-trie.obj `cygpath -w trie.c`

table-trie.lo: trie.c
@AMDEP_TRUE@	source='trie.c' object='table-trie.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/table-trie.Plo' tmpdepfile='$(DEPDIR)/table-trie.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(table_CFLAGS) $(CFLAGS) -c -o table-trie.lo `test -f 'trie.c' || echo '$(srcdir)/'`trie.c

termcap-debug.o: debug.c
@AMDEP_TRUE@	source='debug.c' object='termcap-debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/termcap-debug.Po' tmpdepfile='$(DEPDIR)/termcap-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(termcap_CFLAGS) $(CFLAGS) -c -o termcap-debug.o `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

termcap-debug.obj: debug.c
@AMDEP_TRUE@	source='debug.c' object='termcap-debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/termcap-debug.Po' tmpdepfile='$(DEPDIR)/termcap-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(termcap_CFLAGS) $(CFLAGS) -c -o termcap-debug.obj `cygpath -w debug.c`

termcap-debug.lo: debug.c
@AMDEP_TRUE@	source='debug.c' object='termcap-debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/termcap-debug.Plo' tmpdepfile='$(DEPDIR)/termcap-debug.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(termcap_CFLAGS) $(CFLAGS) -c -o termcap-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

termcap-termcap.o: termcap.c
@AMDEP_TRUE@	source='termcap.c' object='termcap-termcap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/termcap-termcap.Po' tmpdepfile='$(DEPDIR)/termcap-termcap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(termcap_CFLAGS) $(CFLAGS) -c -o termcap-termcap.o `test -f 'termcap.c' || echo '$(srcdir)/'`termcap.c

termcap-termcap.obj: termcap.c
@AMDEP_TRUE@	source='termcap.c' object='termcap-termcap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/termcap-termcap.Po' tmpdepfile='$(DEPDIR)/termcap-termcap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(termcap_CFLAGS) $(CFLAGS) -c -o termcap-termcap.obj `cygpath -w termcap.c`

termcap-termcap.lo: termcap.c
@AMDEP_TRUE@	source='termcap.c' object='termcap-termcap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/termcap-termcap.Plo' tmpdepfile='$(DEPDIR)/termcap-termcap.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(termcap_CFLAGS) $(CFLAGS) -c -o termcap-termcap.lo `test -f 'termcap.c' || echo '$(srcdir)/'`termcap.c

trie-debug.o: debug.c
@AMDEP_TRUE@	source='debug.c' object='trie-debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/trie-debug.Po' tmpdepfile='$(DEPDIR)/trie-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trie_CFLAGS) $(CFLAGS) -c -o trie-debug.o `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

trie-debug.obj: debug.c
@AMDEP_TRUE@	source='debug.c' object='trie-debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/trie-debug.Po' tmpdepfile='$(DEPDIR)/trie-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trie_CFLAGS) $(CFLAGS) -c -o trie-debug.obj `cygpath -w debug.c`

trie-debug.lo: debug.c
@AMDEP_TRUE@	source='debug.c' object='trie-debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/trie-debug.Plo' tmpdepfile='$(DEPDIR)/trie-debug.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trie_CFLAGS) $(CFLAGS) -c -o trie-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

trie-matcher.o: matcher.c
@AMDEP_TRUE@	source='matcher.c' object='trie-matcher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/trie-matcher.Po' tmpdepfile='$(DEPDIR)/trie-matcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trie_CFLAGS) $(CFLAGS) -c -o trie-matcher.o `test -f 'matcher.c' || echo '$(srcdir)/'`matcher.c

trie-matcher.obj: matcher.c
@AMDEP_TRUE@	source='matcher.c' object='trie-matcher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/trie-matcher.Po' tmpdepfile='$(DEPDIR)/trie-matcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trie_CFLAGS) $(CFLAGS) -c -o trie-matcher.obj `cygpath -w matcher.c`

trie-matcher.lo: matcher.c
@AMDEP_TRUE@	source='matcher.c' object='trie-matcher.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/trie-matcher.Plo' tmpdepfile='$(DEPDIR)/trie-matcher.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trie_CFLAGS) $(CFLAGS) -c -o trie-matcher.lo `test -f 'matcher.c' || echo '$(srcdir)/'`matcher.c

trie-table.o: table.c
@AMDEP_TRUE@	source='table.c' object='trie-table.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/trie-table.Po' tmpdepfile='$(DEPDIR)/trie-table.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trie_CFLAGS) $(CFLAGS) -c -o trie-table.o `test -f 'table.c' || echo '$(srcdir)/'`table.c

trie-table.obj: table.c
@AMDEP_TRUE@	source='table.c' object='trie-table.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/trie-table.Po' tmpdepfile='$(DEPDIR)/trie-table.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trie_CFLAGS) $(CFLAGS) -c -o trie-table.obj `cygpath -w table.c`

trie-table.lo: table.c
@AMDEP_TRUE@	source='table.c' object='trie-table.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/trie-table.Plo' tmpdepfile='$(DEPDIR)/trie-table.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trie_CFLAGS) $(CFLAGS) -c -o trie-table.lo `test -f 'table.c' || echo '$(srcdir)/'`table.c

trie-termcap.o: termcap.c
@AMDEP_TRUE@	source='termcap.c' object='trie-termcap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/trie-termcap.Po' tmpdepfile='$(DEPDIR)/trie-termcap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trie_CFLAGS) $(CFLAGS) -c -o trie-termcap.o `test -f 'termcap.c' || echo '$(srcdir)/'`termcap.c

trie-termcap.obj: termcap.c
@AMDEP_TRUE@	source='termcap.c' object='trie-termcap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/trie-termcap.Po' tmpdepfile='$(DEPDIR)/trie-termcap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trie_CFLAGS) $(CFLAGS) -c -o trie-termcap.obj `cygpath -w termcap.c`

trie-termcap.lo: termcap.c
@AMDEP_TRUE@	source='termcap.c' object='trie-termcap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/trie-termcap.Plo' tmpdepfile='$(DEPDIR)/trie-termcap.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trie_CFLAGS) $(CFLAGS) -c -o trie-termcap.lo `test -f 'termcap.c' || echo '$(srcdir)/'`termcap.c

trie-trie.o: trie.c
@AMDEP_TRUE@	source='trie.c' object='trie-trie.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/trie-trie.Po' tmpdepfile='$(DEPDIR)/trie-trie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trie_CFLAGS) $(CFLAGS) -c -o trie-trie.o `test -f 'trie.c' || echo '$(srcdir)/'`trie.c

trie-trie.obj: trie.c
@AMDEP_TRUE@	source='trie.c' object='trie-trie.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/trie-trie.Po' tmpdepfile='$(DEPDIR)/trie-trie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trie_CFLAGS) $(CFLAGS) -c -o trie-trie.obj `cygpath -w trie.c`

trie-trie.lo: trie.c
@AMDEP_TRUE@	source='trie.c' object='trie-trie.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/trie-trie.Plo' tmpdepfile='$(DEPDIR)/trie-trie.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(trie_CFLAGS) $(CFLAGS) -c -o trie-trie.lo `test -f 'trie.c' || echo '$(srcdir)/'`trie.c

utf8echo-debug.o: debug.c
@AMDEP_TRUE@	source='debug.c' object='utf8echo-debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utf8echo-debug.Po' tmpdepfile='$(DEPDIR)/utf8echo-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utf8echo_CFLAGS) $(CFLAGS) -c -o utf8echo-debug.o `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

utf8echo-debug.obj: debug.c
@AMDEP_TRUE@	source='debug.c' object='utf8echo-debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utf8echo-debug.Po' tmpdepfile='$(DEPDIR)/utf8echo-debug.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utf8echo_CFLAGS) $(CFLAGS) -c -o utf8echo-debug.obj `cygpath -w debug.c`

utf8echo-debug.lo: debug.c
@AMDEP_TRUE@	source='debug.c' object='utf8echo-debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utf8echo-debug.Plo' tmpdepfile='$(DEPDIR)/utf8echo-debug.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utf8echo_CFLAGS) $(CFLAGS) -c -o utf8echo-debug.lo `test -f 'debug.c' || echo '$(srcdir)/'`debug.c

utf8echo-matcher.o: matcher.c
@AMDEP_TRUE@	source='matcher.c' object='utf8echo-matcher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utf8echo-matcher.Po' tmpdepfile='$(DEPDIR)/utf8echo-matcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utf8echo_CFLAGS) $(CFLAGS) -c -o utf8echo-matcher.o `test -f 'matcher.c' || echo '$(srcdir)/'`matcher.c

utf8echo-matcher.obj: matcher.c
@AMDEP_TRUE@	source='matcher.c' object='utf8echo-matcher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utf8echo-matcher.Po' tmpdepfile='$(DEPDIR)/utf8echo-matcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utf8echo_CFLAGS) $(CFLAGS) -c -o utf8echo-matcher.obj `cygpath -w matcher.c`

utf8echo-matcher.lo: matcher.c
@AMDEP_TRUE@	source='matcher.c' object='utf8echo-matcher.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utf8echo-matcher.Plo' tmpdepfile='$(DEPDIR)/utf8echo-matcher.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utf8echo_CFLAGS) $(CFLAGS) -c -o utf8echo-matcher.lo `test -f 'matcher.c' || echo '$(srcdir)/'`matcher.c

utf8echo-table.o: table.c
@AMDEP_TRUE@	source='table.c' object='utf8echo-table.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utf8echo-table.Po' tmpdepfile='$(DEPDIR)/utf8echo-table.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utf8echo_CFLAGS) $(CFLAGS) -c -o utf8echo-table.o `test -f 'table.c' || echo '$(srcdir)/'`table.c

utf8echo-table.obj: table.c
@AMDEP_TRUE@	source='table.c' object='utf8echo-table.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utf8echo-table.Po' tmpdepfile='$(DEPDIR)/utf8echo-table.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utf8echo_CFLAGS) $(CFLAGS) -c -o utf8echo-table.obj `cygpath -w table.c`

utf8echo-table.lo: table.c
@AMDEP_TRUE@	source='table.c' object='utf8echo-table.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utf8echo-table.Plo' tmpdepfile='$(DEPDIR)/utf8echo-table.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utf8echo_CFLAGS) $(CFLAGS) -c -o utf8echo-table.lo `test -f 'table.c' || echo '$(srcdir)/'`table.c

utf8echo-trie.o: trie.c
@AMDEP_TRUE@	source='trie.c' object='utf8echo-trie.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utf8echo-trie.Po' tmpdepfile='$(DEPDIR)/utf8echo-trie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utf8echo_CFLAGS) $(CFLAGS) -c -o utf8echo-trie.o `test -f 'trie.c' || echo '$(srcdir)/'`trie.c

utf8echo-trie.obj: trie.c
@AMDEP_TRUE@	source='trie.c' object='utf8echo-trie.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utf8echo-trie.Po' tmpdepfile='$(DEPDIR)/utf8echo-trie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utf8echo_CFLAGS) $(CFLAGS) -c -o utf8echo-trie.obj `cygpath -w trie.c`

utf8echo-trie.lo: trie.c
@AMDEP_TRUE@	source='trie.c' object='utf8echo-trie.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utf8echo-trie.Plo' tmpdepfile='$(DEPDIR)/utf8echo-trie.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utf8echo_CFLAGS) $(CFLAGS) -c -o utf8echo-trie.lo `test -f 'trie.c' || echo '$(srcdir)/'`trie.c

utf8echo-utf8echo.o: utf8echo.c
@AMDEP_TRUE@	source='utf8echo.c' object='utf8echo-utf8echo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utf8echo-utf8echo.Po' tmpdepfile='$(DEPDIR)/utf8echo-utf8echo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utf8echo_CFLAGS) $(CFLAGS) -c -o utf8echo-utf8echo.o `test -f 'utf8echo.c' || echo '$(srcdir)/'`utf8echo.c

utf8echo-utf8echo.obj: utf8echo.c
@AMDEP_TRUE@	source='utf8echo.c' object='utf8echo-utf8echo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utf8echo-utf8echo.Po' tmpdepfile='$(DEPDIR)/utf8echo-utf8echo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utf8echo_CFLAGS) $(CFLAGS) -c -o utf8echo-utf8echo.obj `cygpath -w utf8echo.c`

utf8echo-utf8echo.lo: utf8echo.c
@AMDEP_TRUE@	source='utf8echo.c' object='utf8echo-utf8echo.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/utf8echo-utf8echo.Plo' tmpdepfile='$(DEPDIR)/utf8echo-utf8echo.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utf8echo_CFLAGS) $(CFLAGS) -c -o utf8echo-utf8echo.lo `test -f 'utf8echo.c' || echo '$(srcdir)/'`utf8echo.c
CCDEPMODE = @CCDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgincludedir)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f"; \
	  $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES


installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(bindir) $(DESTDIR)$(pkglibdir) $(DESTDIR)$(pkglibdir) $(DESTDIR)$(pkgincludedir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstPROGRAMS clean-pkglibPROGRAMS \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES \
	install-pkglibPROGRAMS install-pkglibSCRIPTS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS \
	uninstall-pkglibPROGRAMS uninstall-pkglibSCRIPTS

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstPROGRAMS clean-pkglibPROGRAMS distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-pkgincludeHEADERS install-pkglibPROGRAMS \
	install-pkglibSCRIPTS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS \
	uninstall-pkglibPROGRAMS uninstall-pkglibSCRIPTS


marshal.c marshal.h: marshal.list
	glib-genmarshal --prefix=_vte_marshal --body $^ > marshal.c
	glib-genmarshal --prefix=_vte_marshal --header $^ > marshal.h
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
